{"version":3,"sources":["webpack://[name]/webpack/universalModuleDefinition","webpack://[name]/webpack/bootstrap","webpack://[name]/./node_modules/three/build/three.module.js","webpack://[name]/./src/Core/Geographic/Coordinates.js","webpack://[name]/./src/Renderer/LayeredMaterialConstants.js","webpack://[name]/./node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack://[name]/./node_modules/core-js/modules/_export.js","webpack://[name]/./src/Core/Geographic/Extent.js","webpack://[name]/./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://[name]/./node_modules/@babel/runtime/helpers/createClass.js","webpack://[name]/./node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack://[name]/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","webpack://[name]/./node_modules/@babel/runtime/helpers/inherits.js","webpack://[name]/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://[name]/./src/Provider/Fetcher.js","webpack://[name]/./src/Layer/Layer.js","webpack://[name]/./src/Core/MainLoop.js","webpack://[name]/./node_modules/core-js/modules/_fails.js","webpack://[name]/./src/Renderer/Camera.js","webpack://[name]/./src/Renderer/c3DEngine.js","webpack://[name]/./src/Renderer/ThreeExtended/Feature2Texture.js","webpack://[name]/./src/Parser/textureConverter.js","webpack://[name]/./src/Layer/ColorLayer.js","webpack://[name]/./src/Layer/ElevationLayer.js","webpack://[name]/./src/Parser/VectorTileParser.js","webpack://[name]/./src/Provider/DataSourceProvider.js","webpack://[name]/./src/Provider/TileProvider.js","webpack://[name]/./src/Parser/GLTFLoader.js","webpack://[name]/./src/Parser/LegacyGLTFLoader.js","webpack://[name]/./src/Parser/BatchTableParser.js","webpack://[name]/./src/Parser/B3dmParser.js","webpack://[name]/./src/Parser/PntsParser.js","webpack://[name]/./src/Provider/3dTilesProvider.js","webpack://[name]/./src/Parser/PotreeBinParser.js","webpack://[name]/./src/Parser/PotreeCinParser.js","webpack://[name]/./src/Provider/PointCloudProvider.js","webpack://[name]/./src/Core/Scheduler/Scheduler.js","webpack://[name]/./src/Source/Source.js","webpack://[name]/./src/Provider/URLBuilder.js","webpack://[name]/./src/Source/WMTSSource.js","webpack://[name]/./src/Source/WMSSource.js","webpack://[name]/./src/Source/WFSSource.js","webpack://[name]/./src/Source/TMSSource.js","webpack://[name]/./node_modules/flatqueue/index.mjs","webpack://[name]/./node_modules/flatbush/index.js","webpack://[name]/./src/Source/StaticSource.js","webpack://[name]/./src/Source/FileSource.js","webpack://[name]/./src/Core/View.js","webpack://[name]/./node_modules/core-js/modules/_global.js","webpack://[name]/./node_modules/core-js/modules/_is-object.js","webpack://[name]/./src/Core/Scheduler/CancelledCommandException.js","webpack://[name]/./node_modules/core-js/modules/_an-object.js","webpack://[name]/./node_modules/@babel/runtime/helpers/construct.js","webpack://[name]/./node_modules/core-js/modules/_wks.js","webpack://[name]/./src/Core/System/Capabilities.js","webpack://[name]/./src/utils/Utf8Decoder.js","webpack://[name]/./src/Core/Prefab/Panorama/Constants.js","webpack://[name]/./src/Provider/OGCWebServiceHelper.js","webpack://[name]/./src/Renderer/RendererConstant.js","webpack://[name]/./src/Core/Geographic/Projection.js","webpack://[name]/./src/Core/Scheduler/Cache.js","webpack://[name]/./node_modules/core-js/modules/_object-dp.js","webpack://[name]/./src/Core/Picking.js","webpack://[name]/./src/Renderer/LayeredMaterial.js","webpack://[name]/./src/Renderer/ThreeExtended/OBB.js","webpack://[name]/./node_modules/core-js/modules/_descriptors.js","webpack://[name]/./node_modules/core-js/modules/_core.js","webpack://[name]/./node_modules/core-js/modules/_to-length.js","webpack://[name]/./src/Parser/GeoJsonParser.js","webpack://[name]/./src/Layer/LayerUpdateStrategy.js","webpack://[name]/./node_modules/@babel/runtime/helpers/typeof.js","webpack://[name]/./src/Process/3dTilesProcessing.js","webpack://[name]/./node_modules/proj4/lib/global.js","webpack://[name]/./node_modules/proj4/lib/constants/values.js","webpack://[name]/./node_modules/proj4/lib/constants/PrimeMeridian.js","webpack://[name]/./node_modules/proj4/lib/constants/units.js","webpack://[name]/./node_modules/proj4/lib/match.js","webpack://[name]/./node_modules/proj4/lib/projString.js","webpack://[name]/./node_modules/wkt-parser/parser.js","webpack://[name]/./node_modules/wkt-parser/process.js","webpack://[name]/./node_modules/wkt-parser/index.js","webpack://[name]/./node_modules/proj4/lib/defs.js","webpack://[name]/./node_modules/proj4/lib/parseCode.js","webpack://[name]/./node_modules/proj4/lib/extend.js","webpack://[name]/./node_modules/proj4/lib/common/msfnz.js","webpack://[name]/./node_modules/proj4/lib/common/sign.js","webpack://[name]/./node_modules/proj4/lib/common/adjust_lon.js","webpack://[name]/./node_modules/proj4/lib/common/tsfnz.js","webpack://[name]/./node_modules/proj4/lib/common/phi2z.js","webpack://[name]/./node_modules/proj4/lib/projections/longlat.js","webpack://[name]/./node_modules/proj4/lib/projections.js","webpack://[name]/./node_modules/proj4/lib/projections/merc.js","webpack://[name]/./node_modules/proj4/lib/constants/Ellipsoid.js","webpack://[name]/./node_modules/proj4/lib/constants/Datum.js","webpack://[name]/./node_modules/proj4/lib/datum.js","webpack://[name]/./node_modules/proj4/lib/Proj.js","webpack://[name]/./node_modules/proj4/lib/deriveConstants.js","webpack://[name]/./node_modules/proj4/lib/datum_transform.js","webpack://[name]/./node_modules/proj4/lib/datumUtils.js","webpack://[name]/./node_modules/proj4/lib/adjust_axis.js","webpack://[name]/./node_modules/proj4/lib/common/toPoint.js","webpack://[name]/./node_modules/proj4/lib/checkSanity.js","webpack://[name]/./node_modules/proj4/lib/transform.js","webpack://[name]/./node_modules/proj4/lib/core.js","webpack://[name]/./node_modules/mgrs/mgrs.js","webpack://[name]/./node_modules/proj4/lib/Point.js","webpack://[name]/./node_modules/proj4/lib/common/pj_enfn.js","webpack://[name]/./node_modules/proj4/lib/common/pj_mlfn.js","webpack://[name]/./node_modules/proj4/lib/common/pj_inv_mlfn.js","webpack://[name]/./node_modules/proj4/lib/projections/tmerc.js","webpack://[name]/./node_modules/proj4/lib/common/sinh.js","webpack://[name]/./node_modules/proj4/lib/common/hypot.js","webpack://[name]/./node_modules/proj4/lib/common/asinhy.js","webpack://[name]/./node_modules/proj4/lib/common/log1py.js","webpack://[name]/./node_modules/proj4/lib/common/gatg.js","webpack://[name]/./node_modules/proj4/lib/common/clens.js","webpack://[name]/./node_modules/proj4/lib/common/clens_cmplx.js","webpack://[name]/./node_modules/proj4/lib/common/cosh.js","webpack://[name]/./node_modules/proj4/lib/projections/etmerc.js","webpack://[name]/./node_modules/proj4/lib/common/adjust_zone.js","webpack://[name]/./node_modules/proj4/lib/projections/utm.js","webpack://[name]/./node_modules/proj4/lib/common/srat.js","webpack://[name]/./node_modules/proj4/lib/projections/gauss.js","webpack://[name]/./node_modules/proj4/lib/projections/sterea.js","webpack://[name]/./node_modules/proj4/lib/projections/stere.js","webpack://[name]/./node_modules/proj4/lib/projections/somerc.js","webpack://[name]/./node_modules/proj4/lib/projections/omerc.js","webpack://[name]/./node_modules/proj4/lib/projections/lcc.js","webpack://[name]/./node_modules/proj4/lib/projections/krovak.js","webpack://[name]/./node_modules/proj4/lib/common/mlfn.js","webpack://[name]/./node_modules/proj4/lib/common/e0fn.js","webpack://[name]/./node_modules/proj4/lib/common/e1fn.js","webpack://[name]/./node_modules/proj4/lib/common/e2fn.js","webpack://[name]/./node_modules/proj4/lib/common/e3fn.js","webpack://[name]/./node_modules/proj4/lib/common/gN.js","webpack://[name]/./node_modules/proj4/lib/common/adjust_lat.js","webpack://[name]/./node_modules/proj4/lib/common/imlfn.js","webpack://[name]/./node_modules/proj4/lib/projections/cass.js","webpack://[name]/./node_modules/proj4/lib/common/qsfnz.js","webpack://[name]/./node_modules/proj4/lib/projections/laea.js","webpack://[name]/./node_modules/proj4/lib/common/asinz.js","webpack://[name]/./node_modules/proj4/lib/projections/aea.js","webpack://[name]/./node_modules/proj4/lib/projections/gnom.js","webpack://[name]/./node_modules/proj4/lib/common/iqsfnz.js","webpack://[name]/./node_modules/proj4/lib/projections/cea.js","webpack://[name]/./node_modules/proj4/lib/projections/eqc.js","webpack://[name]/./node_modules/proj4/lib/projections/poly.js","webpack://[name]/./node_modules/proj4/lib/projections/nzmg.js","webpack://[name]/./node_modules/proj4/lib/projections/mill.js","webpack://[name]/./node_modules/proj4/lib/projections/sinu.js","webpack://[name]/./node_modules/proj4/lib/projections/moll.js","webpack://[name]/./node_modules/proj4/lib/projections/eqdc.js","webpack://[name]/./node_modules/proj4/lib/projections/vandg.js","webpack://[name]/./node_modules/proj4/lib/projections/aeqd.js","webpack://[name]/./node_modules/proj4/lib/projections/ortho.js","webpack://[name]/./node_modules/proj4/lib/projections/qsc.js","webpack://[name]/./node_modules/proj4/lib/projections/robin.js","webpack://[name]/./node_modules/proj4/lib/index.js","webpack://[name]/./node_modules/proj4/projs.js","webpack://[name]/./src/Process/ObjectRemovalHelper.js","webpack://[name]/./node_modules/core-js/modules/_redefine.js","webpack://[name]/./node_modules/core-js/modules/_string-html.js","webpack://[name]/./node_modules/core-js/modules/_has.js","webpack://[name]/./node_modules/core-js/modules/_hide.js","webpack://[name]/./node_modules/core-js/modules/_to-iobject.js","webpack://[name]/./node_modules/core-js/modules/_to-object.js","webpack://[name]/./src/Parser/XbilParser.js","webpack://[name]/./src/Process/LayeredMaterialNodeProcessing.js","webpack://[name]/./node_modules/core-js/modules/_strict-method.js","webpack://[name]/./src/Layer/GeometryLayer.js","webpack://[name]/./src/Renderer/PointsMaterial.js","webpack://[name]/./src/Core/TileMesh.js","webpack://[name]/./src/Process/PointCloudProcessing.js","webpack://[name]/./node_modules/core-js/modules/_object-gopd.js","webpack://[name]/./node_modules/core-js/modules/_object-sap.js","webpack://[name]/./node_modules/core-js/modules/_array-methods.js","webpack://[name]/./src/utils/DEMUtils.js","webpack://[name]/./node_modules/core-js/modules/_ctx.js","webpack://[name]/./node_modules/core-js/modules/_a-function.js","webpack://[name]/./node_modules/core-js/modules/_cof.js","webpack://[name]/./node_modules/core-js/modules/_defined.js","webpack://[name]/./node_modules/core-js/modules/_to-integer.js","webpack://[name]/./node_modules/core-js/modules/_typed-array.js","webpack://[name]/./src/Core/Math/Ellipsoid.js","webpack://[name]/./src/Layer/InfoLayer.js","webpack://[name]/./src/Renderer/Shader/ShaderUtils.js","webpack://[name]/./node_modules/@babel/runtime/helpers/get.js","webpack://[name]/./src/Core/TileGeometry.js","webpack://[name]/./src/Parser/convertToTile.js","webpack://[name]/./src/Layer/TiledGeometryLayer.js","webpack://[name]/./src/Layer/LayerUpdateState.js","webpack://[name]/./node_modules/core-js/modules/_to-primitive.js","webpack://[name]/./node_modules/core-js/modules/_meta.js","webpack://[name]/./node_modules/@tweenjs/tween.js/src/Tween.js","webpack://[name]/./node_modules/core-js/modules/_property-desc.js","webpack://[name]/./node_modules/core-js/modules/_uid.js","webpack://[name]/./node_modules/core-js/modules/_library.js","webpack://[name]/./node_modules/core-js/modules/_object-keys.js","webpack://[name]/./node_modules/core-js/modules/_to-absolute-index.js","webpack://[name]/./node_modules/core-js/modules/_object-create.js","webpack://[name]/./node_modules/core-js/modules/_object-gopn.js","webpack://[name]/./node_modules/core-js/modules/_object-gpo.js","webpack://[name]/./src/Core/Prefab/Globe/BuilderEllipsoidTile.js","webpack://[name]/./node_modules/@mapbox/togeojson/togeojson.js","webpack://[name]/./node_modules/core-js/modules/_set-to-string-tag.js","webpack://[name]/./node_modules/core-js/modules/_iterators.js","webpack://[name]/./node_modules/core-js/modules/_add-to-unscopables.js","webpack://[name]/./node_modules/core-js/modules/_set-species.js","webpack://[name]/./node_modules/core-js/modules/_an-instance.js","webpack://[name]/./node_modules/core-js/modules/_redefine-all.js","webpack://[name]/./node_modules/core-js/modules/_validate-collection.js","webpack://[name]/./src/Core/Prefab/Panorama/PanoramaTileBuilder.js","webpack://[name]/./src/Core/Prefab/Panorama/PanoramaLayer.js","webpack://[name]/./src/Core/Prefab/PanoramaView.js","webpack://[name]/(webpack)/buildin/global.js","webpack://[name]/./node_modules/core-js/modules/_iobject.js","webpack://[name]/./node_modules/core-js/modules/_object-pie.js","webpack://[name]/./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack://[name]/./node_modules/@mapbox/vector-tile/lib/vectortilelayer.js","webpack://[name]/./node_modules/@mapbox/vector-tile/lib/vectortilefeature.js","webpack://[name]/./node_modules/@babel/runtime/helpers/slicedToArray.js","webpack://[name]/./node_modules/js-priority-queue/priority-queue.js","webpack://[name]/./node_modules/pbf/index.js","webpack://[name]/./node_modules/@mapbox/vector-tile/index.js","webpack://[name]/./node_modules/text-encoding-utf-8/lib/encoding.lib.mjs","webpack://[name]/./node_modules/core-js/modules/_array-includes.js","webpack://[name]/./node_modules/core-js/modules/_object-gops.js","webpack://[name]/./node_modules/core-js/modules/_classof.js","webpack://[name]/./node_modules/core-js/modules/_string-trim.js","webpack://[name]/./node_modules/core-js/modules/_iter-detect.js","webpack://[name]/./node_modules/core-js/modules/_fix-re-wks.js","webpack://[name]/./node_modules/core-js/modules/_for-of.js","webpack://[name]/./node_modules/core-js/modules/_species-constructor.js","webpack://[name]/./node_modules/core-js/modules/_user-agent.js","webpack://[name]/./node_modules/core-js/modules/_collection.js","webpack://[name]/./node_modules/core-js/modules/_typed.js","webpack://[name]/./node_modules/process/browser.js","webpack://[name]/./node_modules/core-js/modules/_dom-create.js","webpack://[name]/./node_modules/core-js/modules/_shared.js","webpack://[name]/./node_modules/core-js/modules/_wks-ext.js","webpack://[name]/./node_modules/core-js/modules/_shared-key.js","webpack://[name]/./node_modules/core-js/modules/_enum-bug-keys.js","webpack://[name]/./node_modules/core-js/modules/_is-array.js","webpack://[name]/./node_modules/core-js/modules/_html.js","webpack://[name]/./node_modules/core-js/modules/_set-proto.js","webpack://[name]/./node_modules/core-js/modules/_string-ws.js","webpack://[name]/./node_modules/core-js/modules/_inherit-if-required.js","webpack://[name]/./node_modules/core-js/modules/_string-repeat.js","webpack://[name]/./node_modules/core-js/modules/_math-sign.js","webpack://[name]/./node_modules/core-js/modules/_math-expm1.js","webpack://[name]/./node_modules/core-js/modules/_iter-define.js","webpack://[name]/./node_modules/core-js/modules/_string-context.js","webpack://[name]/./node_modules/core-js/modules/_is-regexp.js","webpack://[name]/./node_modules/core-js/modules/_fails-is-regexp.js","webpack://[name]/./node_modules/core-js/modules/_is-array-iter.js","webpack://[name]/./node_modules/core-js/modules/_create-property.js","webpack://[name]/./node_modules/core-js/modules/core.get-iterator-method.js","webpack://[name]/./node_modules/core-js/modules/_array-fill.js","webpack://[name]/./node_modules/core-js/modules/es6.array.iterator.js","webpack://[name]/./node_modules/core-js/modules/_flags.js","webpack://[name]/./node_modules/core-js/modules/_task.js","webpack://[name]/./node_modules/core-js/modules/_typed-buffer.js","webpack://[name]/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://[name]/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://[name]/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://[name]/./node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack://[name]/./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack://[name]/./node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack://[name]/./node_modules/ieee754/index.js","webpack://[name]/./node_modules/@mapbox/vector-tile/lib/vectortile.js","webpack://[name]/./node_modules/@mapbox/point-geometry/index.js","webpack://[name]/./node_modules/@babel/runtime/helpers/superPropBase.js","webpack://[name]/./node_modules/three.meshline/src/THREE.MeshLine.js","webpack://[name]/./node_modules/earcut/src/earcut.js","webpack://[name]/./node_modules/core-js/modules/_ie8-dom-define.js","webpack://[name]/./node_modules/core-js/modules/_wks-define.js","webpack://[name]/./node_modules/core-js/modules/_object-keys-internal.js","webpack://[name]/./node_modules/core-js/modules/_object-dps.js","webpack://[name]/./node_modules/core-js/modules/_object-gopn-ext.js","webpack://[name]/./node_modules/core-js/modules/_object-assign.js","webpack://[name]/./node_modules/core-js/modules/_bind.js","webpack://[name]/./node_modules/core-js/modules/_invoke.js","webpack://[name]/./node_modules/core-js/modules/_parse-int.js","webpack://[name]/./node_modules/core-js/modules/_parse-float.js","webpack://[name]/./node_modules/core-js/modules/_a-number-value.js","webpack://[name]/./node_modules/core-js/modules/_is-integer.js","webpack://[name]/./node_modules/core-js/modules/_math-log1p.js","webpack://[name]/./node_modules/core-js/modules/_string-at.js","webpack://[name]/./node_modules/core-js/modules/_iter-create.js","webpack://[name]/./node_modules/core-js/modules/_iter-call.js","webpack://[name]/./node_modules/core-js/modules/_array-reduce.js","webpack://[name]/./node_modules/core-js/modules/_array-copy-within.js","webpack://[name]/./node_modules/core-js/modules/_iter-step.js","webpack://[name]/./node_modules/core-js/modules/es6.regexp.flags.js","webpack://[name]/./node_modules/core-js/modules/es6.promise.js","webpack://[name]/./node_modules/core-js/modules/_new-promise-capability.js","webpack://[name]/./node_modules/core-js/modules/_promise-resolve.js","webpack://[name]/./node_modules/core-js/modules/_collection-strong.js","webpack://[name]/./node_modules/core-js/modules/_collection-weak.js","webpack://[name]/./node_modules/core-js/modules/_to-index.js","webpack://[name]/./node_modules/core-js/modules/_own-keys.js","webpack://[name]/./node_modules/core-js/modules/_string-pad.js","webpack://[name]/./node_modules/core-js/modules/_object-to-array.js","webpack://[name]/./node_modules/@babel/polyfill/lib/index.js","webpack://[name]/./node_modules/core-js/es6/index.js","webpack://[name]/./node_modules/core-js/modules/es6.symbol.js","webpack://[name]/./node_modules/core-js/modules/_enum-keys.js","webpack://[name]/./node_modules/core-js/modules/es6.object.create.js","webpack://[name]/./node_modules/core-js/modules/es6.object.define-property.js","webpack://[name]/./node_modules/core-js/modules/es6.object.define-properties.js","webpack://[name]/./node_modules/core-js/modules/es6.object.get-own-property-descriptor.js","webpack://[name]/./node_modules/core-js/modules/es6.object.get-prototype-of.js","webpack://[name]/./node_modules/core-js/modules/es6.object.keys.js","webpack://[name]/./node_modules/core-js/modules/es6.object.get-own-property-names.js","webpack://[name]/./node_modules/core-js/modules/es6.object.freeze.js","webpack://[name]/./node_modules/core-js/modules/es6.object.seal.js","webpack://[name]/./node_modules/core-js/modules/es6.object.prevent-extensions.js","webpack://[name]/./node_modules/core-js/modules/es6.object.is-frozen.js","webpack://[name]/./node_modules/core-js/modules/es6.object.is-sealed.js","webpack://[name]/./node_modules/core-js/modules/es6.object.is-extensible.js","webpack://[name]/./node_modules/core-js/modules/es6.object.assign.js","webpack://[name]/./node_modules/core-js/modules/es6.object.is.js","webpack://[name]/./node_modules/core-js/modules/_same-value.js","webpack://[name]/./node_modules/core-js/modules/es6.object.set-prototype-of.js","webpack://[name]/./node_modules/core-js/modules/es6.object.to-string.js","webpack://[name]/./node_modules/core-js/modules/es6.function.bind.js","webpack://[name]/./node_modules/core-js/modules/es6.function.name.js","webpack://[name]/./node_modules/core-js/modules/es6.function.has-instance.js","webpack://[name]/./node_modules/core-js/modules/es6.parse-int.js","webpack://[name]/./node_modules/core-js/modules/es6.parse-float.js","webpack://[name]/./node_modules/core-js/modules/es6.number.constructor.js","webpack://[name]/./node_modules/core-js/modules/es6.number.to-fixed.js","webpack://[name]/./node_modules/core-js/modules/es6.number.to-precision.js","webpack://[name]/./node_modules/core-js/modules/es6.number.epsilon.js","webpack://[name]/./node_modules/core-js/modules/es6.number.is-finite.js","webpack://[name]/./node_modules/core-js/modules/es6.number.is-integer.js","webpack://[name]/./node_modules/core-js/modules/es6.number.is-nan.js","webpack://[name]/./node_modules/core-js/modules/es6.number.is-safe-integer.js","webpack://[name]/./node_modules/core-js/modules/es6.number.max-safe-integer.js","webpack://[name]/./node_modules/core-js/modules/es6.number.min-safe-integer.js","webpack://[name]/./node_modules/core-js/modules/es6.number.parse-float.js","webpack://[name]/./node_modules/core-js/modules/es6.number.parse-int.js","webpack://[name]/./node_modules/core-js/modules/es6.math.acosh.js","webpack://[name]/./node_modules/core-js/modules/es6.math.asinh.js","webpack://[name]/./node_modules/core-js/modules/es6.math.atanh.js","webpack://[name]/./node_modules/core-js/modules/es6.math.cbrt.js","webpack://[name]/./node_modules/core-js/modules/es6.math.clz32.js","webpack://[name]/./node_modules/core-js/modules/es6.math.cosh.js","webpack://[name]/./node_modules/core-js/modules/es6.math.expm1.js","webpack://[name]/./node_modules/core-js/modules/es6.math.fround.js","webpack://[name]/./node_modules/core-js/modules/_math-fround.js","webpack://[name]/./node_modules/core-js/modules/es6.math.hypot.js","webpack://[name]/./node_modules/core-js/modules/es6.math.imul.js","webpack://[name]/./node_modules/core-js/modules/es6.math.log10.js","webpack://[name]/./node_modules/core-js/modules/es6.math.log1p.js","webpack://[name]/./node_modules/core-js/modules/es6.math.log2.js","webpack://[name]/./node_modules/core-js/modules/es6.math.sign.js","webpack://[name]/./node_modules/core-js/modules/es6.math.sinh.js","webpack://[name]/./node_modules/core-js/modules/es6.math.tanh.js","webpack://[name]/./node_modules/core-js/modules/es6.math.trunc.js","webpack://[name]/./node_modules/core-js/modules/es6.string.from-code-point.js","webpack://[name]/./node_modules/core-js/modules/es6.string.raw.js","webpack://[name]/./node_modules/core-js/modules/es6.string.trim.js","webpack://[name]/./node_modules/core-js/modules/es6.string.iterator.js","webpack://[name]/./node_modules/core-js/modules/es6.string.code-point-at.js","webpack://[name]/./node_modules/core-js/modules/es6.string.ends-with.js","webpack://[name]/./node_modules/core-js/modules/es6.string.includes.js","webpack://[name]/./node_modules/core-js/modules/es6.string.repeat.js","webpack://[name]/./node_modules/core-js/modules/es6.string.starts-with.js","webpack://[name]/./node_modules/core-js/modules/es6.string.anchor.js","webpack://[name]/./node_modules/core-js/modules/es6.string.big.js","webpack://[name]/./node_modules/core-js/modules/es6.string.blink.js","webpack://[name]/./node_modules/core-js/modules/es6.string.bold.js","webpack://[name]/./node_modules/core-js/modules/es6.string.fixed.js","webpack://[name]/./node_modules/core-js/modules/es6.string.fontcolor.js","webpack://[name]/./node_modules/core-js/modules/es6.string.fontsize.js","webpack://[name]/./node_modules/core-js/modules/es6.string.italics.js","webpack://[name]/./node_modules/core-js/modules/es6.string.link.js","webpack://[name]/./node_modules/core-js/modules/es6.string.small.js","webpack://[name]/./node_modules/core-js/modules/es6.string.strike.js","webpack://[name]/./node_modules/core-js/modules/es6.string.sub.js","webpack://[name]/./node_modules/core-js/modules/es6.string.sup.js","webpack://[name]/./node_modules/core-js/modules/es6.date.now.js","webpack://[name]/./node_modules/core-js/modules/es6.date.to-json.js","webpack://[name]/./node_modules/core-js/modules/es6.date.to-iso-string.js","webpack://[name]/./node_modules/core-js/modules/_date-to-iso-string.js","webpack://[name]/./node_modules/core-js/modules/es6.date.to-string.js","webpack://[name]/./node_modules/core-js/modules/es6.date.to-primitive.js","webpack://[name]/./node_modules/core-js/modules/_date-to-primitive.js","webpack://[name]/./node_modules/core-js/modules/es6.array.is-array.js","webpack://[name]/./node_modules/core-js/modules/es6.array.from.js","webpack://[name]/./node_modules/core-js/modules/es6.array.of.js","webpack://[name]/./node_modules/core-js/modules/es6.array.join.js","webpack://[name]/./node_modules/core-js/modules/es6.array.slice.js","webpack://[name]/./node_modules/core-js/modules/es6.array.sort.js","webpack://[name]/./node_modules/core-js/modules/es6.array.for-each.js","webpack://[name]/./node_modules/core-js/modules/_array-species-create.js","webpack://[name]/./node_modules/core-js/modules/_array-species-constructor.js","webpack://[name]/./node_modules/core-js/modules/es6.array.map.js","webpack://[name]/./node_modules/core-js/modules/es6.array.filter.js","webpack://[name]/./node_modules/core-js/modules/es6.array.some.js","webpack://[name]/./node_modules/core-js/modules/es6.array.every.js","webpack://[name]/./node_modules/core-js/modules/es6.array.reduce.js","webpack://[name]/./node_modules/core-js/modules/es6.array.reduce-right.js","webpack://[name]/./node_modules/core-js/modules/es6.array.index-of.js","webpack://[name]/./node_modules/core-js/modules/es6.array.last-index-of.js","webpack://[name]/./node_modules/core-js/modules/es6.array.copy-within.js","webpack://[name]/./node_modules/core-js/modules/es6.array.fill.js","webpack://[name]/./node_modules/core-js/modules/es6.array.find.js","webpack://[name]/./node_modules/core-js/modules/es6.array.find-index.js","webpack://[name]/./node_modules/core-js/modules/es6.array.species.js","webpack://[name]/./node_modules/core-js/modules/es6.regexp.constructor.js","webpack://[name]/./node_modules/core-js/modules/es6.regexp.to-string.js","webpack://[name]/./node_modules/core-js/modules/es6.regexp.match.js","webpack://[name]/./node_modules/core-js/modules/es6.regexp.replace.js","webpack://[name]/./node_modules/core-js/modules/es6.regexp.search.js","webpack://[name]/./node_modules/core-js/modules/es6.regexp.split.js","webpack://[name]/./node_modules/core-js/modules/_microtask.js","webpack://[name]/./node_modules/core-js/modules/_perform.js","webpack://[name]/./node_modules/core-js/modules/es6.map.js","webpack://[name]/./node_modules/core-js/modules/es6.set.js","webpack://[name]/./node_modules/core-js/modules/es6.weak-map.js","webpack://[name]/./node_modules/core-js/modules/es6.weak-set.js","webpack://[name]/./node_modules/core-js/modules/es6.typed.array-buffer.js","webpack://[name]/./node_modules/core-js/modules/es6.typed.data-view.js","webpack://[name]/./node_modules/core-js/modules/es6.typed.int8-array.js","webpack://[name]/./node_modules/core-js/modules/es6.typed.uint8-array.js","webpack://[name]/./node_modules/core-js/modules/es6.typed.uint8-clamped-array.js","webpack://[name]/./node_modules/core-js/modules/es6.typed.int16-array.js","webpack://[name]/./node_modules/core-js/modules/es6.typed.uint16-array.js","webpack://[name]/./node_modules/core-js/modules/es6.typed.int32-array.js","webpack://[name]/./node_modules/core-js/modules/es6.typed.uint32-array.js","webpack://[name]/./node_modules/core-js/modules/es6.typed.float32-array.js","webpack://[name]/./node_modules/core-js/modules/es6.typed.float64-array.js","webpack://[name]/./node_modules/core-js/modules/es6.reflect.apply.js","webpack://[name]/./node_modules/core-js/modules/es6.reflect.construct.js","webpack://[name]/./node_modules/core-js/modules/es6.reflect.define-property.js","webpack://[name]/./node_modules/core-js/modules/es6.reflect.delete-property.js","webpack://[name]/./node_modules/core-js/modules/es6.reflect.enumerate.js","webpack://[name]/./node_modules/core-js/modules/es6.reflect.get.js","webpack://[name]/./node_modules/core-js/modules/es6.reflect.get-own-property-descriptor.js","webpack://[name]/./node_modules/core-js/modules/es6.reflect.get-prototype-of.js","webpack://[name]/./node_modules/core-js/modules/es6.reflect.has.js","webpack://[name]/./node_modules/core-js/modules/es6.reflect.is-extensible.js","webpack://[name]/./node_modules/core-js/modules/es6.reflect.own-keys.js","webpack://[name]/./node_modules/core-js/modules/es6.reflect.prevent-extensions.js","webpack://[name]/./node_modules/core-js/modules/es6.reflect.set.js","webpack://[name]/./node_modules/core-js/modules/es6.reflect.set-prototype-of.js","webpack://[name]/./node_modules/core-js/fn/array/includes.js","webpack://[name]/./node_modules/core-js/modules/es7.array.includes.js","webpack://[name]/./node_modules/core-js/fn/string/pad-start.js","webpack://[name]/./node_modules/core-js/modules/es7.string.pad-start.js","webpack://[name]/./node_modules/core-js/fn/string/pad-end.js","webpack://[name]/./node_modules/core-js/modules/es7.string.pad-end.js","webpack://[name]/./node_modules/core-js/fn/symbol/async-iterator.js","webpack://[name]/./node_modules/core-js/modules/es7.symbol.async-iterator.js","webpack://[name]/./node_modules/core-js/fn/object/get-own-property-descriptors.js","webpack://[name]/./node_modules/core-js/modules/es7.object.get-own-property-descriptors.js","webpack://[name]/./node_modules/core-js/fn/object/values.js","webpack://[name]/./node_modules/core-js/modules/es7.object.values.js","webpack://[name]/./node_modules/core-js/fn/object/entries.js","webpack://[name]/./node_modules/core-js/modules/es7.object.entries.js","webpack://[name]/./node_modules/core-js/fn/promise/finally.js","webpack://[name]/./node_modules/core-js/modules/es7.promise.finally.js","webpack://[name]/./node_modules/core-js/web/index.js","webpack://[name]/./node_modules/core-js/modules/web.timers.js","webpack://[name]/./node_modules/core-js/modules/web.immediate.js","webpack://[name]/./node_modules/core-js/modules/web.dom.iterable.js","webpack://[name]/./node_modules/regenerator-runtime/runtime.js","webpack://[name]/./node_modules/url-polyfill/url-polyfill.js","webpack://[name]/./node_modules/whatwg-fetch/fetch.js","webpack://[name]/./src/Renderer/ColorLayersOrdering.js","webpack://[name]/./src/Core/AnimationPlayer.js","webpack://[name]/./src/Renderer/ThreeExtended/StateControl.js","webpack://[name]/./src/utils/CameraUtils.js","webpack://[name]/./src/Renderer/ThreeExtended/GlobeControls.js","webpack://[name]/./src/Core/Prefab/Globe/GlobeLayer.js","webpack://[name]/./src/Core/Prefab/Globe/SkyShader.js","webpack://[name]/./src/Core/Prefab/Globe/Atmosphere.js","webpack://[name]/./src/Core/Geographic/CoordStars.js","webpack://[name]/./src/Core/Prefab/GlobeView.js","webpack://[name]/./src/Core/Prefab/Planar/PlanarTileBuilder.js","webpack://[name]/./src/Core/Prefab/Planar/PlanarLayer.js","webpack://[name]/./src/Core/Prefab/PlanarView.js","webpack://[name]/./src/Parser/GpxParser.js","webpack://[name]/./src/Renderer/OrientedImageCamera.js","webpack://[name]/./src/Parser/CameraCalibrationParser.js","webpack://[name]/./src/Process/FeatureProcessing.js","webpack://[name]/./src/Renderer/ThreeExtended/Feature2Mesh.js","webpack://[name]/./src/Renderer/ThreeExtended/FlyControls.js","webpack://[name]/./src/Renderer/ThreeExtended/FirstPersonControls.js","webpack://[name]/./src/Renderer/ThreeExtended/PlanarControls.js","webpack://[name]/./src/Renderer/ThreeExtended/FeaturesUtils.js","webpack://[name]/./src/utils/OrientationUtils.js","webpack://[name]/./src/Renderer/Shader/ShaderChunk.js","webpack://[name]/./src/MainBundle.js"],"names":["root","factory","exports","module","define","amd","window","webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","oldJsonpFunction","slice","EventDispatcher","__webpack_exports__","WebGLRenderTargetCube","WebGLRenderTarget","WebGLRenderer","ShaderLib","UniformsLib","UniformsUtils","ShaderChunk","FogExp2","Fog","Scene","Sprite","LOD","SkinnedMesh","Skeleton","Bone","Mesh","LineSegments","LineLoop","Line","Points","Group","VideoTexture","DataTexture","DataTexture3D","CompressedTexture","CubeTexture","CanvasTexture","DepthTexture","Texture","CompressedTextureLoader","DataTextureLoader","CubeTextureLoader","TextureLoader","ObjectLoader","MaterialLoader","BufferGeometryLoader","DefaultLoadingManager","LoadingManager","JSONLoader","ImageLoader","ImageBitmapLoader","FontLoader","FileLoader","Loader","LoaderUtils","Cache","AudioLoader","SpotLightShadow","SpotLight","PointLight","RectAreaLight","HemisphereLight","DirectionalLightShadow","DirectionalLight","AmbientLight","LightShadow","Light","StereoCamera","PerspectiveCamera","OrthographicCamera","CubeCamera","ArrayCamera","Camera","AudioListener","PositionalAudio","AudioContext","AudioAnalyser","Audio","VectorKeyframeTrack","StringKeyframeTrack","QuaternionKeyframeTrack","NumberKeyframeTrack","ColorKeyframeTrack","BooleanKeyframeTrack","PropertyMixer","PropertyBinding","KeyframeTrack","AnimationUtils","AnimationObjectGroup","AnimationMixer","AnimationClip","Uniform","InstancedBufferGeometry","BufferGeometry","Geometry","InterleavedBufferAttribute","InstancedInterleavedBuffer","InterleavedBuffer","InstancedBufferAttribute","Face3","Object3D","Raycaster","Layers","Clock","QuaternionLinearInterpolant","LinearInterpolant","DiscreteInterpolant","CubicInterpolant","Interpolant","Triangle","_Math","Spherical","Cylindrical","Plane","Frustum","Sphere","Ray","Matrix4","Matrix3","Box3","Box2","Line3","Euler","Vector4","Vector3","Vector2","Quaternion","Color","ImmediateRenderObject","VertexNormalsHelper","SpotLightHelper","SkeletonHelper","PointLightHelper","RectAreaLightHelper","HemisphereLightHelper","GridHelper","PolarGridHelper","FaceNormalsHelper","DirectionalLightHelper","CameraHelper","BoxHelper","Box3Helper","PlaneHelper","ArrowHelper","AxesHelper","Shape","Path","ShapePath","Font","CurvePath","Curve","ImageUtils","ShapeUtils","WebGLUtils","WireframeGeometry","ParametricGeometry","ParametricBufferGeometry","TetrahedronGeometry","TetrahedronBufferGeometry","OctahedronGeometry","OctahedronBufferGeometry","IcosahedronGeometry","IcosahedronBufferGeometry","DodecahedronGeometry","DodecahedronBufferGeometry","PolyhedronGeometry","PolyhedronBufferGeometry","TubeGeometry","TubeBufferGeometry","TorusKnotGeometry","TorusKnotBufferGeometry","TorusGeometry","TorusBufferGeometry","TextGeometry","TextBufferGeometry","SphereGeometry","SphereBufferGeometry","RingGeometry","RingBufferGeometry","PlaneGeometry","PlaneBufferGeometry","LatheGeometry","LatheBufferGeometry","ShapeGeometry","ShapeBufferGeometry","ExtrudeGeometry","ExtrudeBufferGeometry","EdgesGeometry","ConeGeometry","ConeBufferGeometry","CylinderGeometry","CylinderBufferGeometry","CircleGeometry","CircleBufferGeometry","BoxGeometry","BoxBufferGeometry","ShadowMaterial","SpriteMaterial","RawShaderMaterial","ShaderMaterial","PointsMaterial","MeshPhysicalMaterial","MeshStandardMaterial","MeshPhongMaterial","MeshToonMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshDepthMaterial","MeshDistanceMaterial","MeshBasicMaterial","MeshMatcapMaterial","LineDashedMaterial","LineBasicMaterial","Material","Float64BufferAttribute","Float32BufferAttribute","Uint32BufferAttribute","Int32BufferAttribute","Uint16BufferAttribute","Int16BufferAttribute","Uint8ClampedBufferAttribute","Uint8BufferAttribute","Int8BufferAttribute","BufferAttribute","ArcCurve","CatmullRomCurve3","CubicBezierCurve","CubicBezierCurve3","EllipseCurve","LineCurve","LineCurve3","QuadraticBezierCurve","QuadraticBezierCurve3","SplineCurve","REVISION","MOUSE","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","FrontFaceDirectionCW","FrontFaceDirectionCCW","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","FrontSide","BackSide","DoubleSide","FlatShading","SmoothShading","NoColors","FaceColors","VertexColors","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","Uncharted2ToneMapping","CineonToneMapping","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipMapNearestFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipMapNearestFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","UnsignedInt248Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","RGBEFormat","DepthFormat","DepthStencilFormat","RedFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","GammaEncoding","RGBEEncoding","LogLuvEncoding","RGBM7Encoding","RGBM16Encoding","RGBDEncoding","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","Face4","LineStrip","LinePieces","MeshFaceMaterial","MultiMaterial","PointCloud","Particle","ParticleSystem","PointCloudMaterial","ParticleBasicMaterial","ParticleSystemMaterial","Vertex","DynamicBufferAttribute","Int8Attribute","Uint8Attribute","Uint8ClampedAttribute","Int16Attribute","Uint16Attribute","Int32Attribute","Uint32Attribute","Float32Attribute","Float64Attribute","ClosedSplineCurve3","SplineCurve3","Spline","AxisHelper","BoundingBoxHelper","EdgesHelper","WireframeHelper","XHRLoader","BinaryTextureLoader","GeometryUtils","Projector","CanvasRenderer","SceneUtils","LensFlare","undefined","Number","EPSILON","Math","pow","isInteger","isFinite","floor","sign","x","Function","this","toString","match","assign","target","TypeError","output","index","arguments","source","nextKey","addEventListener","type","listener","_listeners","listeners","indexOf","hasEventListener","removeEventListener","listenerArray","dispatchEvent","event","array","LEFT","MIDDLE","RIGHT","DEG2RAD","PI","RAD2DEG","generateUUID","lut","d0","random","d1","d2","d3","toUpperCase","clamp","min","max","euclideanModulo","mapLinear","a1","a2","b1","b2","lerp","y","smoothstep","smootherstep","randInt","low","high","randFloat","randFloatSpread","range","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","ceil","log","LN2","floorPowerOfTwo","elements","console","error","z","w","_x","_y","_z","_w","defineProperties","width","set","height","isVector2","setScalar","scalar","setX","setY","setComponent","Error","getComponent","clone","constructor","copy","v","add","warn","addVectors","addScalar","a","b","addScaledVector","sub","subVectors","subScalar","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","e","clampScalar","minVal","maxVal","clampLength","round","roundToZero","negate","dot","cross","lengthSq","sqrt","manhattanLength","abs","normalize","angle","atan2","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","cos","sin","isMatrix4","n11","n12","n13","n14","n21","n22","n23","n24","n31","n32","n33","n34","n41","n42","n43","n44","te","identity","me","copyPosition","extractBasis","xAxis","yAxis","zAxis","setFromMatrixColumn","makeBasis","extractRotation","scaleX","scaleY","scaleZ","makeRotationFromEuler","euler","isEuler","f","order","ae","af","be","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","zero","one","q","compose","lookAt","eye","up","crossVectors","multiplyMatrices","premultiply","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","applyToBufferAttribute","count","getZ","applyMatrix4","setXYZ","determinant","transpose","tmp","setPosition","getInverse","throwOnDegenerate","t11","t12","t13","t14","det","msg","detInv","scale","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","theta","makeRotationY","makeRotationZ","makeRotationAxis","axis","tx","ty","makeScale","makeShear","position","quaternion","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","sx","sy","sz","decompose","vector","matrix","invSX","invSY","invSZ","setFromRotationMatrix","makePerspective","left","right","top","bottom","near","far","makeOrthographic","h","slerp","qa","qb","qm","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","onChangeCallback","isQuaternion","setFromEuler","update","c1","c2","c3","s1","s2","s3","setFromAxisAngle","halfAngle","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","setFromUnitVectors","vFrom","vTo","angleTo","acos","rotateTowards","step","inverse","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","onChange","callback","isVector3","setZ","multiplyVectors","applyEuler","applyQuaternion","applyAxisAngle","qx","qy","qz","qw","ix","iy","iz","iw","project","camera","matrixWorldInverse","projectionMatrix","unproject","matrixWorld","transformDirection","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","reflect","normal","dz","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","isMatrix3","setFromMatrix4","g","getNormalMatrix","matrix4","transposeIntoArray","setUvTransform","rotation","cx","cy","rotate","translate","getDataURL","image","canvas","HTMLCanvasElement","document","createElementNS","context","getContext","ImageData","putImageData","drawImage","toDataURL","textureId","mapping","wrapS","wrapT","magFilter","minFilter","format","anisotropy","encoding","uuid","DEFAULT_IMAGE","mipmaps","DEFAULT_MAPPING","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","version","onUpdate","options","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","activeCubeFace","activeMipMapLevel","Infinity","constant","p0","p1","p2","p3","p4","p5","planes","isTexture","updateMatrix","toJSON","meta","isRootObject","textures","metadata","generator","wrap","images","url","Array","isArray","dispose","transformUv","uv","isVector4","setW","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","getW","isWebGLRenderTarget","setSize","isWebGLRenderTargetCube","isDataTexture","isBox3","setFromArray","minX","minY","minZ","maxX","maxY","maxZ","setFromBufferAttribute","setFromPoints","points","makeEmpty","il","expandByPoint","setFromCenterAndSize","size","halfSize","setFromObject","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","expandByScalar","scope","traverse","node","geometry","isGeometry","vertices","isBufferGeometry","attributes","updateMatrixWorld","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","closestPoint","sphere","clampPoint","intersectsPlane","plane","intersectsTriangle","v0","f0","f1","f2","testAxis","extents","triangleNormal","satForAxes","axes","triangle","distanceToPoint","getBoundingSphere","intersect","union","optionalCenter","maxRadiusSq","empty","radiusSum","deltaLengthSq","getBoundingBox","setComponents","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","direction","delta","denominator","start","intersectsLine","startSign","endSign","end","coplanarPoint","m1","optionalNormalMatrix","normalMatrix","referencePoint","frustum","setFromMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","boundingSphere","computeBoundingSphere","intersectsSprite","sprite","negRadius","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_physical_pars_fragment","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars_begin","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normalmap_pars_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","background_frag","background_vert","cube_frag","cube_vert","depth_frag","depth_vert","distanceRGBA_frag","distanceRGBA_vert","equirect_frag","equirect_vert","linedashed_frag","linedashed_vert","meshbasic_frag","meshbasic_vert","meshlambert_frag","meshlambert_vert","meshmatcap_frag","meshmatcap_vert","meshphong_frag","meshphong_vert","meshphysical_frag","meshphysical_vert","normal_frag","normal_vert","points_frag","points_vert","shadow_frag","shadow_vert","sprite_frag","sprite_vert","merge","uniforms","merged","u","uniforms_src","uniforms_dst","parameter_src","isColor","ColorKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","setRGB","setHex","setStyle","hex","setHSL","hue2rgb","style","handleAlpha","string","parseFloat","exec","color","components","parseInt","charAt","copyGammaToLinear","gammaFactor","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","copySRGBToLinear","SRGBToLinear","copyLinearToSRGB","LinearToSRGB","convertSRGBToLinear","convertLinearToSRGB","getHex","getHexString","getHSL","hue","saturation","lightness","getStyle","offsetHSL","hsl","addColors","color1","color2","lerpHSL","hslA","hslB","diffuse","opacity","map","uvTransform","alphaMap","specularmap","specularMap","envmap","envMap","flipEnvMap","reflectivity","refractionRatio","maxMipLevel","aomap","aoMap","aoMapIntensity","lightmap","lightMap","lightMapIntensity","emissivemap","emissiveMap","bumpmap","bumpMap","bumpScale","normalmap","normalMap","normalScale","displacementmap","displacementMap","displacementScale","displacementBias","roughnessmap","roughnessMap","metalnessmap","metalnessMap","gradientmap","gradientMap","fog","fogDensity","fogNear","fogFar","fogColor","lights","ambientLightColor","directionalLights","properties","shadow","shadowBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","distance","coneCos","penumbraCos","decay","spotShadowMap","spotShadowMatrix","pointLights","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","basic","vertexShader","fragmentShader","lambert","emissive","phong","specular","shininess","standard","roughness","metalness","envMapIntensity","matcap","dashed","dashSize","totalSize","depth","background","t2D","cube","tCube","tFlip","equirect","tEquirect","distanceRGBA","referencePosition","nearDistance","farDistance","WebGLAnimation","isAnimating","animationLoop","onAnimationFrame","time","frame","requestAnimationFrame","stop","setAnimationLoop","setContext","WebGLAttributes","gl","buffers","WeakMap","isInterleavedBufferAttribute","remove","deleteBuffer","buffer","delete","bufferType","usage","dynamic","DYNAMIC_DRAW","STATIC_DRAW","createBuffer","bindBuffer","bufferData","onUploadCallback","FLOAT","Float32Array","Float64Array","Uint16Array","UNSIGNED_SHORT","Int16Array","SHORT","Uint32Array","UNSIGNED_INT","Int32Array","INT","Int8Array","BYTE","Uint8Array","UNSIGNED_BYTE","bytesPerElement","BYTES_PER_ELEMENT","updateRange","bufferSubData","subarray","updateBuffer","materialIndex","vertexNormals","vertexColors","_order","DefaultOrder","mask","physical","clearCoat","clearCoatRoughness","RotationOrders","asin","setFromQuaternion","setFromVector3","reorder","newOrder","toVector3","optionalResult","channel","enable","toggle","disable","test","layers","object3DId","parent","children","DefaultUp","modelViewMatrix","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","userData","isObject3D","onBeforeRender","onAfterRender","applyMatrix","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","q1","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","translateX","translateY","translateZ","localToWorld","worldToLocal","updateWorldMatrix","isCamera","getObjectById","id","getObjectByProperty","getObjectByName","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverseVisible","traverseAncestors","force","updateParents","updateChildren","geometries","materials","shapes","serialize","library","element","JSON","stringify","isMesh","isLine","isPoints","parameters","shape","material","uuids","extractFromCache","cache","values","recursive","parse","child","geometryId","colors","faces","faceVertexUvs","morphTargets","morphNormals","skinWeights","skinIndices","lineDistances","boundingBox","elementsNeedUpdate","verticesNeedUpdate","uvsNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","lineDistancesNeedUpdate","groupsNeedUpdate","itemSize","normalized","Uint8ClampedArray","DirectGeometry","normals","uvs","uvs2","groups","arrayMax","face","jl","computeBoundingBox","obj","fromBufferGeometry","indices","positions","uv2","tempNormals","tempUVs","tempUVs2","addFace","group","computeFaceNormals","cb","ab","fl","vA","vB","vC","computeVertexNormals","areaWeighted","vl","computeFlatVertexNormals","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","dstNormalsFace","dstNormalsVertex","faceNormal","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","uvs1","colors1","colors2","vertexCopy","faceCopy","faceVertexNormals","faceVertexColors","uvCopy","mergeMesh","mesh","mergeVertices","verticesMap","unique","changes","precision","faceIndicesToRemove","idx","diff","sortFacesByMaterialIndex","_id","sort","newUvs1","newUvs2","vertex","normalsHash","colorsHash","uvsHash","hasFaceVertexUv","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceType","setBit","getUvIndex","getNormalIndex","getColorIndex","enabled","hash","k","kl","uvsCopy","morphTarget","morphNormal","srcVertexNormal","destVertexNormal","isBufferAttribute","setArray","setDynamic","copyAt","index1","index2","copyArray","copyColorsArray","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","setXY","setXYZW","onUpload","computeGroups","fromGeometry","morphTargetsPosition","hasFaceVertexUv2","morphTargetsLength","morphTargetsNormal","morphNormalsLength","hasSkinIndices","hasSkinWeights","vertexUvs","bufferGeometryId","morphAttributes","drawRange","widthSegments","heightSegments","depthSegments","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","addGroup","setIndex","addAttribute","width_half","height_half","segment_width","segment_height","getIndex","getAttribute","removeAttribute","clearGroups","setDrawRange","needsUpdate","updateFromObject","direct","__directGeometry","lineDistance","fromDirectGeometry","isNaN","pA","pB","pC","normalizeNormals","attributeArray1","attribute2","attributeArray2","toNonIndexed","geometry2","array2","keys","morphAttribute","materialId","blending","side","flatShading","transparent","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaTest","premultipliedAlpha","overdraw","defines","linewidth","wireframe","wireframeLinewidth","clipping","skinning","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","setValues","origin","combine","wireframeLinecap","wireframeLinejoin","drawMode","updateMorphTargets","absNumericalSort","isMaterial","onBeforeCompile","newValue","currentValue","isRoot","emissiveIntensity","normalMapType","sizeAttenuation","gapSize","srcPlanes","dstPlanes","isShaderMaterial","ray","at","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","segCenter","segDir","optionalPointOnRay","optionalPointOnSegment","s0","sqrDist","extDet","segExtent","a01","b0","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","edge1","edge2","backfaceCulling","DdN","DdQxE2","DdE1xQ","QdN","getNormal","targetLengthSq","getBarycoord","dot00","dot01","dot02","dot11","dot12","denom","invDenom","getUV","barycoord","uv1","uv3","setFromPointsAndIndices","i0","i1","i2","getArea","getMidpoint","getPlane","vab","vac","vbc","vap","vbp","vcp","d4","vc","d5","d6","vb","va","isMeshBasicMaterial","setDrawMode","morphTargetInfluences","morphTargetDictionary","ml","String","inverseMatrix","tempA","tempB","tempC","uvA","uvB","uvC","intersectionPoint","intersectionPointWorld","checkIntersection","raycaster","checkBufferGeometryIntersection","intersection","intersects","groupMaterial","faceIndex","fvA","fvB","fvC","isMultiMaterial","faceMaterial","morphInfluences","tl","influence","targets","uvs_f","isCubeTexture","isDataTexture3D","emptyTexture","emptyTexture3d","emptyCubeTexture","UniformContainer","seq","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","renderer","allocTextureUnit","setValue1f","uniform1f","addr","setValue1i","uniform1i","setValue2fv","uniform2f","uniform2fv","setValue3fv","uniform3f","uniform3fv","setValue4fv","uniform4f","uniform4fv","setValue2fm","uniformMatrix2fv","setValue3fm","uniformMatrix3fv","setValue4fm","uniformMatrix4fv","setValueT1","unit","setTexture2D","setValueT3D1","setTexture3D","setValueT6","setTextureCube","setValue2iv","uniform2iv","setValue3iv","uniform3iv","setValue4iv","uniform4iv","setValue1fv","uniform1fv","setValue1iv","uniform1iv","setValueV2a","updateCache","setValueV3a","setValueV4a","setValueM2a","setValueM3a","setValueM4a","setValueT1a","units","setValueT6a","SingleUniform","activeInfo","setValue","getSingularSetter","PureArrayUniform","getPureArraySetter","StructuredUniform","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","matchEnd","idIsIndex","subscript","next","WebGLUniforms","program","getProgramParameter","ACTIVE_UNIFORMS","info","getActiveUniform","getUniformLocation","WebGLShader","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","VERTEX_SHADER","lines","split","join","addLineNumbers","setOptional","upload","seqWithValue","programIdCount","getEncodingComponents","getTexelDecodingFunction","functionName","filterEmptyLine","replaceLightNums","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","parseIncludes","include","unrollLoops","snippet","unroll","WebGLProgram","code","capabilities","shadowMapTypeDefine","shadowMapType","envMapTypeDefine","envMapModeDefine","envMapBlendingDefine","prefixVertex","prefixFragment","gammaFactorDefine","customExtensions","isWebGL2","rendererExtensions","envMapCubeUV","objectSpaceNormalMap","logarithmicDepthBuffer","filter","generateExtensions","customDefines","chunks","generateDefines","createProgram","isRawShaderMaterial","supportsVertexTextures","maxBones","useFog","fogExp","useVertexTexture","doubleSided","flipSided","shadowMapEnabled","physicallyCorrectLights","toneMapping","toneMappingName","getToneMappingFunction","outputEncoding","mapEncoding","matcapEncoding","envMapEncoding","emissiveMapEncoding","getTexelEncodingFunction","depthPacking","isGLSL3ShaderMaterial","versionRegex","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","FRAGMENT_SHADER","attachShader","bindAttribLocation","linkProgram","cachedUniforms","cachedAttributes","programLog","getProgramInfoLog","trim","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","getError","VALIDATE_STATUS","diagnostics","prefix","deleteShader","getUniforms","getAttributes","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","fetchAttributeLocations","destroy","deleteProgram","usedTimes","WebGLPrograms","programs","shaderIDs","parameterNames","getTextureEncodingFromMap","gammaOverrideLinear","getParameters","shadows","nClipPlanes","nClipIntersection","shaderID","isSkinnedMesh","bones","skeleton","floatVertexTextures","nVertexUniforms","maxVertexUniforms","nVertexMatrices","allocateBones","getMaxPrecision","currentRenderTarget","getRenderTarget","vertexTextures","gammaOutput","gammaInput","envMapMode","isFogExp2","maxMorphTargets","maxMorphNormals","directional","spot","rectArea","hemi","shadowMap","getProgramCode","acquireProgram","pl","programInfo","releaseProgram","pop","painterSortStable","reversePainterSortStable","WebGLRenderLists","lists","scene","list","renderItems","renderItemsIndex","opaque","init","renderItem","WebGLLights","light","halfWidth","halfHeight","state","stateID","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","shadowsLength","ambient","vector3","matrix42","setup","viewMatrix","intensity","isAmbientLight","isDirectionalLight","bias","mapSize","isSpotLight","penumbra","isRectAreaLight","isPointLight","isHemisphereLight","WebGLRenderState","lightsArray","shadowsArray","setupLights","pushLight","pushShadow","shadowLight","WebGLShadowMap","_renderer","_objects","maxTextureSize","_frustum","_projScreenMatrix","_shadowMapSize","_maxShadowMapSize","_lookTarget","_lightPositionWorld","_MorphingFlag","_SkinningFlag","_NumberOfMaterialVariants","_depthMaterials","_distanceMaterials","_materialCache","1","2","cubeDirections","cubeUps","cube2DViewPorts","useMorphing","useSkinning","depthMaterial","distanceMaterial","getDepthMaterial","lightPositionWorld","materialVariants","customMaterial","customDepthMaterial","customDistanceMaterial","variantIndex","localClippingEnabled","keyA","keyB","materialsForVariant","cachedMaterial","isMeshDistanceMaterial","renderObject","shadowCamera","renderBufferDirect","autoUpdate","render","faceCount","_gl","_state","BLEND","setClear","setTest","setScissorTest","vpWidth","vpHeight","pars","updateProjectionMatrix","isSpotLightShadow","shadowMatrix","setRenderTarget","clear","vpDimensions","WebGLTextures","utils","_canvas","_videoTextures","clampToMaxSize","maxSize","textureNeedsGenerateMipmaps","generateMipmap","__maxMipLevel","LOG2E","getInternalFormat","glFormat","glType","RED","R32F","HALF_FLOAT","R16F","R8","RGB","RGB32F","RGB16F","RGB8","RGBA","RGBA32F","RGBA16F","RGBA8","filterFallback","NEAREST","LINEAR","onTextureDispose","textureProperties","__image__webglTextureCube","deleteTexture","__webglInit","__webglTexture","deallocateTexture","isVideoTexture","memory","onRenderTargetDispose","renderTarget","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","deallocateRenderTarget","slot","updateVideoTexture","__version","complete","uploadTexture","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","setTextureParameters","textureType","isPowerOfTwoImage","extension","texParameteri","TEXTURE_WRAP_S","convert","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","CLAMP_TO_EDGE","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","getMaxAnisotropy","TEXTURE_3D","createTexture","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","textureNeedsPowerOfTwo","HTMLImageElement","ImageBitmap","makePowerOfTwo","glInternalFormat","mipmap","isDepthTexture","DEPTH_COMPONENT","DEPTH_COMPONENT32F","DEPTH_COMPONENT16","DEPTH_STENCIL","texImage2D","isCompressedTexture","getCompressedTextureFormats","compressedTexImage2D","texImage3D","setupFrameBufferTexture","framebuffer","attachment","textureTarget","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","RGBA4","setupDepthRenderbuffer","isCube","webglDepthTexture","setupDepthTexture","createRenderbuffer","TEXTURE_CUBE_MAP","isCompressed","cubeImage","maxCubemapSize","TEXTURE_CUBE_MAP_POSITIVE_X","setTextureCubeDynamic","setupRenderTarget","isTargetPowerOfTwo","createFramebuffer","COLOR_ATTACHMENT0","updateRenderTargetMipmap","webglTexture","REPEAT","MIRRORED_REPEAT","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","HALF_FLOAT_OES","ALPHA","LUMINANCE","LUMINANCE_ALPHA","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","ZERO","ONE","SRC_COLOR","ONE_MINUS_SRC_COLOR","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","DST_ALPHA","ONE_MINUS_DST_ALPHA","DST_COLOR","ONE_MINUS_DST_COLOR","SRC_ALPHA_SATURATE","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","MIN","MAX","MIN_EXT","MAX_EXT","UNSIGNED_INT_24_8","UNSIGNED_INT_24_8_WEBGL","projectionMatrixInverse","fov","aspect","zoom","focus","view","filmGauge","filmOffset","cameras","WebVRManager","device","frameData","poseTarget","controllers","standingMatrix","standingMatrixInverse","frameOfReferenceType","VRFrameData","onVRDisplayPresentChange","tempQuaternion","tempPosition","cameraL","bounds","cameraR","currentSize","currentPixelRatio","cameraVR","isPresenting","eyeParameters","getEyeParameters","renderWidth","renderHeight","getPixelRatio","setDrawingBufferSize","animation","triggers","findGamepad","gamepads","navigator","getGamepads","gamepad","startsWith","getController","controller","getDevice","setDevice","setFrameOfReferenceType","setPoseTarget","getCamera","userHeight","depthNear","depthFar","getFrameData","stageParameters","sittingToStandingTransform","pose","poseObject","orientation","leftViewMatrix","rightViewMatrix","leftProjectionMatrix","rightProjectionMatrix","getLayers","layer","leftBounds","rightBounds","hasPosition","buttonId","buttons","pressed","updateControllers","getStandingMatrix","submitFrame","_context","_alpha","_depth","_stencil","stencil","_antialias","antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","currentRenderList","currentRenderState","domElement","autoClear","autoClearColor","autoClearDepth","autoClearStencil","sortObjects","toneMappingExposure","toneMappingWhitePoint","objects","programCache","renderLists","renderStates","morphtargets","bufferRenderer","indexedBufferRenderer","_this","_isContextLost","_framebuffer","_currentRenderTarget","_currentFramebuffer","_currentMaterialId","_currentGeometryProgram","_currentCamera","_currentArrayCamera","_currentViewport","_currentScissor","_currentScissorTest","_usedTextureUnits","_width","_height","_pixelRatio","_viewport","_scissor","_scissorTest","_clipping","globalState","numGlobalPlanes","renderingShadows","viewNormalMatrix","uniform","resetGlobalState","numPlanes","numIntersection","projectPlanes","skipTransform","nPlanes","dstArray","flatSize","i4","enableLocalClipping","beginShadows","endShadows","setState","fromCache","nGlobal","lGlobal","clippingState","_clippingEnabled","_localClippingEnabled","_vector3","getTargetPixelRatio","contextAttributes","onContextLost","onContextRestore","getShaderPrecisionFormat","rangeMin","rangeMax","message","initGLContext","getExtension","maxAnisotropy","HIGH_FLOAT","MEDIUM_FLOAT","WebGL2RenderingContext","maxPrecision","maxTextures","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","MAX_VERTEX_ATTRIBS","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","floatFragmentTextures","MAX_TEXTURE_MAX_ANISOTROPY_EXT","colorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","clearColor","reset","currentDepthMask","currentDepthFunc","currentDepthClear","DEPTH_TEST","depthMask","setFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","clearDepth","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","stencilFunc","stencilRef","setOp","stencilFail","stencilZFail","stencilZPass","stencilOp","clearStencil","maxVertexAttributes","newAttributes","enabledAttributes","attributeDivisors","enabledCapabilities","compressedTextureFormats","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","MAX_COMBINED_TEXTURE_IMAGE_UNITS","lineWidthAvailable","glVersion","VERSION","currentTextureSlot","currentBoundTextures","currentScissor","currentViewport","emptyTextures","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","setBlending","blendEquationSeparate","blendFuncSeparate","blendFunc","setFlipSided","frontFace","CW","CCW","setCullFace","cullFace","CULL_FACE","BACK","FRONT","FRONT_AND_BACK","setPolygonOffset","factor","POLYGON_OFFSET_FILL","webglSlot","initAttributes","enableAttribute","disableUnusedAttributes","disableVertexAttribArray","formats","COMPRESSED_TEXTURE_FORMATS","useProgram","setMaterial","frontFaceCW","setLineWidth","lineWidth","SCISSOR_TEST","webglType","boundTexture","calls","triangles","autoReset","instanceCount","TRIANGLES","TRIANGLE_STRIP","TRIANGLE_FAN","LINES","LINE_STRIP","LINE_LOOP","POINTS","wireframeAttributes","onGeometryDispose","buffergeometry","_bufferGeometry","geometryAttributes","ELEMENT_ARRAY_BUFFER","ARRAY_BUFFER","getWireframeAttribute","geometryIndex","updateList","influencesList","objectInfluences","influences","renderState","planeMesh","boxMesh","clearAlpha","getClearColor","setClearColor","getClearAlpha","setClearAlpha","renderList","forceClear","setMode","drawArrays","renderInstances","maxInstancedCount","drawElements","vr","session","frameOfReference","inputSources","onSessionEvent","inputSource","onSessionEnd","setFramebuffer","updateCamera","XRDevice","setCompatibleXRDevice","setSession","baseLayer","XRWebGLLayer","requestFrameOfReference","then","getInputSources","onAnimationFrameCallback","getDevicePose","views","getViewport","getViewMatrix","inputPose","getInputPose","targetRay","transformMatrix","pointerMatrix","THREE","preventDefault","onMaterialDispose","releaseMaterialProgramReference","deallocateMaterial","getContextAttributes","forceContextLoss","loseContext","forceContextRestore","restoreContext","setPixelRatio","updateStyle","setViewport","getDrawingBufferSize","pixelRatio","getCurrentViewport","setScissor","boolean","bits","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","renderBufferImmediate","hasPositions","hasNormals","hasUvs","hasColors","programAttributes","positionArray","vertexAttribPointer","normalArray","uvArray","colorArray","setProgram","updateBuffers","rangeFactor","isInstancedBufferGeometry","materialDefaultAttributeValues","programAttribute","geometryAttribute","stride","isInstancedInterleavedBuffer","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","setupVertexAttributes","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","compile","isLight","initMaterial","renderObjects","overrideMaterial","isArrayCamera","camera2","isImmediateRenderObject","renderObjectImmediate","materialProperties","lightsHash","lightsStateHash","programChange","numSupportedMorphTargets","numSupportedMorphNormals","progUniforms","uniformsList","useCache","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","isMeshPhongMaterial","isMeshStandardMaterial","uCamPos","cameraPosition","isMeshLambertMaterial","boneTexture","boneMatrices","boneTextureSize","markUniformsLightsNeedsUpdate","isFog","density","refreshUniformsFog","refreshUniformsCommon","refreshUniformsLambert","isMeshToonMaterial","refreshUniformsPhong","refreshUniformsToon","isMeshPhysicalMaterial","refreshUniformsStandard","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","isMeshDepthMaterial","refreshUniformsDepth","refreshUniformsDistance","isMeshNormalMaterial","refreshUniformsNormal","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","ltc_1","LTC_1","ltc_2","LTC_2","uvScaleMap","projectObject","opaqueObjects","transparentObjects","textureUnit","warned","setTexture","readRenderTargetPixels","restore","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","IMPLEMENTATION_COLOR_READ_TYPE","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","copyFramebufferToTexture","level","copyTexImage2D","copyTextureToTexture","srcTexture","dstTexture","texSubImage2D","interleavedBuffer","levels","boneInverses","calculateInverses","bindMode","bindMatrix","bindMatrixInverse","initBones","normalizeSkinWeights","linecap","linejoin","video","ol","edge","edges","func","slices","stacks","pu","pv","sliceCount","detail","vertexBuffer","uvBuffer","subdivideFace","cols","aj","bj","rows","pushVertex","getVertexByIndex","correctUV","azimuth","inclination","subdivide","appplyRadius","centroid","azi","correctUVs","correctSeam","generateUVs","tubularSegments","radialSegments","closed","taper","bufferGeometry","tangents","binormals","frames","computeFrenetFrames","P","generateSegment","getPointAt","N","B","generateIndices","generateBufferData","tube","heightScale","P1","P2","T","calculatePositionOnCurve","cu","su","quOverP","cs","arc","isGroup","isPerspectiveCamera","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","getEffectiveFOV","getFilmWidth","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","skew","isInterleavedBuffer","intersectPoint","worldScale","mvPosition","alignedPosition","rotatedPosition","viewWorldMatrix","transformVertex","vertexPosition","addLevel","getObjectForDistance","matrixPosition","bone","isBone","offsetMatrix","identityMatrix","getBoneByName","gbone","pos","rotq","scl","sw","vec","skinWeight","computeLineDistances","positionAttribute","linePrecision","localPrecision","localPrecisionSq","vStart","vEnd","interSegment","interRay","nbVertices","threshold","params","localThreshold","localThresholdSq","testPoint","rayPointDistanceSq","distanceToRay","readyState","HAVE_CURRENT_DATA","isCanvasTexture","Earcut","holeIndices","dim","invSize","hasHoles","outerLen","outerNode","linkedList","queue","steiner","getLeftmost","compareX","eliminateHole","filterPoints","eliminateHoles","earcutLinked","clockwise","last","sum","signedArea","insertNode","removeNode","again","area","prev","ear","pass","zOrder","prevZ","nextZ","tail","numMerges","pSize","qSize","inSize","sortLinked","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","locallyInside","isValidDiagonal","splitPolygon","hole","hx","hy","mx","my","tanMin","findHoleBridge","leftmost","px","py","intersectsPolygon","inside","middleInside","q2","Node","an","bp","contour","isClockWise","pts","triangulateShape","holes","removeDupEndPts","addContour","holeIndex","forEach","verticesArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","amount","extrudePts","splineTube","binormal","position2","ahole","hl","extrudeByPath","getSpacedPoints","shapePoints","extractPoints","reverse","concat","scalePt2","pt","bs","vert","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","sf","v_trans_lensq","direction_eq","contourMovements","oneHoleMovements","holesMovements","verticesMovements","sidewalls","layeroffset","sl","slen1","slen2","f4","f3","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","buildLidFaces","buildSideFaces","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","text","font","isFont","generateShapes","phiStart","phiLength","thetaStart","thetaLength","thetaEnd","grid","verticesRow","innerRadius","outerRadius","thetaSegments","phiSegments","segment","radiusStep","thetaSegmentLevel","segments","base","inverseSegments","n1","n2","shapeHole","indexOffset","shapeVertices","shapeHoles","toJSON$1","thresholdAngle","thresholdDot","sourceVertices","face1","face2","radiusTop","radiusBottom","openEnded","indexArray","generateCap","centerIndexStart","centerIndexEnd","cosTheta","sinTheta","slope","indexRow","generateTorso","Geometries","freeze","STANDARD","PHYSICAL","TOON","MATCAP","createElement","fillStyle","fillRect","Materials","files","file","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","transform","loading","manager","_parser","arcLengthDivisions","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","aRadius","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","t2","calc","load","cached","setTimeout","dataUriRegexResult","mimeType","isBase64","decodeURIComponent","atob","response","responseType","toLowerCase","charCodeAt","Blob","parser","DOMParser","parseFromString","request","XMLHttpRequest","header","open","callbacks","status","withCredentials","overrideMimeType","requestHeader","setRequestHeader","send","setPath","setResponseType","setWithCredentials","setMimeType","loader","loadTexture","texDatas","loaded","mipmapCount","isCubemap","texData","crossOrigin","onImageLoad","onImageError","substr","src","setCrossOrigin","urls","isJPEG","search","getPoint","optionalTarget","getUtoTmapping","getPoints","divisions","getLength","lengths","getLengths","cacheArcLengths","current","updateArcLengths","targetArcLength","arcLengths","comparison","lengthBefore","getTangent","pt1","getTangentAt","mat","MAX_VALUE","tz","fromJSON","json","isEllipseCurve","twoPi","deltaAngle","samePoints","isArcCurve","pz","curveType","CatmullRom","QuadraticBezier","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","CubicBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","v3","isCatmullRomCurve3","intPoint","weight","isCubicBezierCurve","isCubicBezierCurve3","isLineCurve","isLineCurve3","isQuadraticBezierCurve","isQuadraticBezierCurve3","isSplineCurve","Curves","curves","autoClose","currentPoint","power","curve","closePath","startPoint","endPoint","curveLengths","getCurveLengths","segmentLength","lens","cacheLengths","sums","resolution","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","absarc","absellipse","ellipse","firstPoint","lastPoint","getPointsHoles","holesPts","isOrthographicCamera","zoomW","zoomH","scaleW","scaleH","arraySlice","from","to","isTypedArray","convertArray","forceClone","ArrayBuffer","isView","DataView","getKeyframeOrder","times","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","parameterPositions","sampleValues","sampleSize","resultBuffer","_cachedIndex","valueSize","_weightPrev","_offsetPrev","_weightNext","_offsetNext","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","duration","tracks","resetDuration","parseKeyframeTrack","trackType","typeName","getTrackTypeForValueTypeName","evaluate","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","beforeStart_","mid","intervalChanged_","interpolate_","settings","DefaultSettings_","getSettings_","copySampleValue_","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o1","o0","oP","oN","wP","wN","ppp","sP","sN","offset1","offset0","weight1","weight0","track","getInterpolation","ValueTypeName","InterpolantFactoryMethodDiscrete","getValueSize","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","createInterpolant","timeOffset","timeScale","startTime","endTime","nKeys","validate","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","offsetP","offsetN","readOffset","writeOffset","jsonTracks","frameTime","fps","clip","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","animations","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","setTextures","getTexture","shading","typedArray","TYPED_ARRAYS","drawcalls","offsets","Handlers","handlers","regex","onLoadStart","onLoadProgress","onLoadComplete","initMaterials","texturePath","createMaterial","BlendingMode","textureLoader","materialLoader","fullPath","mapDiffuseRepeat","mapDiffuseOffset","mapDiffuseWrap","mapDiffuseAnisotropy","mapEmissiveRepeat","mapEmissiveOffset","mapEmissiveWrap","mapEmissiveAnisotropy","mapLightRepeat","mapLightOffset","mapLightWrap","mapLightAnisotropy","mapAORepeat","mapAOOffset","mapAOWrap","mapAOAnisotropy","mapBumpRepeat","mapBumpOffset","mapBumpWrap","mapBumpAnisotropy","mapNormalRepeat","mapNormalOffset","mapNormalWrap","mapNormalAnisotropy","mapSpecularRepeat","mapSpecularOffset","mapSpecularWrap","mapSpecularAnisotropy","mapMetalnessRepeat","mapMetalnessOffset","mapMetalnessWrap","mapMetalnessAnisotropy","mapRoughnessRepeat","mapRoughnessOffset","mapRoughnessWrap","mapRoughnessAnisotropy","mapAlphaRepeat","mapAlphaOffset","mapAlphaWrap","mapAlphaAnisotropy","decodeText","TextDecoder","decode","fromCharCode","escape","extractUrlBase","lastIndexOf","setResourcePath","resourcePath","isBitSet","fi","zLength","colorIndex","normalIndex","uvIndex","isQuad","hasMaterial","faceA","faceB","uvLayer","nUvLayers","parseModel","influencesPerVertex","parseSkin","dstVertices","srcVertices","morphColors","parseMorphing","outputAnimations","morphAnimationClips","parseAnimations","substring","setTexturePath","parseShape","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","geometryLoader","bufferGeometryLoader","details","geometryShapes","loadImage","currentUrl","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","createImageBitmap","fetch","subPaths","currentPath","createPath","char","glyph","glyphs","cpx","cpy","cpx1","cpy1","cpx2","cpy2","outline","_cachedOutline","ha","setOptions","res","blob","imageBitmap","catch","toShapes","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","tmpPoints","tmpHoles","betterShapeHoles","newShapes","newShapeHoles","mainIdx","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","froms","tos","paths","chars","line_height","yMax","yMin","underlineThickness","ret","createPaths","webkitAudioContext","eyeSep","cubeResolution","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","gain","createGain","connect","destination","getInput","autoplay","loop","playbackRate","isPlaying","hasPlaybackControl","sourceType","filters","panner","createPanner","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getOutput","binding","mixFunction","_slerp","_select","_lerp","_mixBufferRegion","cumulativeWeight","useCount","referenceCount","bufferCopy","decodeAudioData","audioBuffer","instance","eyeRight","eyeLeft","xmin","xmax","eyeSepOnProjection","ymax","removeFilter","disconnect","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","setValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setBuffer","play","createBufferSource","onended","onEnded","pause","getFilters","setFilters","setPlaybackRate","getPlaybackRate","getLoop","setLoop","getVolume","setVolume","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","getFrequencyData","getByteFrequencyData","getAverageFrequency","accumulate","accuIndex","currentWeight","mix","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","lineGeometry","coneGeometry","Composite","targetGroup","optionalParsedPath","parsedPath","parseTrackName","_targetGroup","_bindings","subscribe_","rootNode","findNode","nodeName","nCachedObjects_","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","total","inUse","bindingsPerObject","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","interpolant","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_root","_initMemoryManager","_accuIndex","ascSort","intersectObject","autoStart","oldTime","elapsedTime","running","nNormals","objGeometry","cone","getBoneList","boneList","sphereSize","radials","circles","lightPlane","targetLine","pointMap","colorFrustum","colorCone","colorUp","colorTarget","colorCross","addLine","addPoint","headLength","headWidth","setDirection","firstValidIndex","bindings","unbind","isAnimationObjectGroup","sanitizeNodeName","reservedRe","RegExp","wordChar","wordCharOrDot","directoryRe","nodeRe","objectRe","propertyRe","trackRe","supportedObjectNames","matches","results","objectName","objectIndex","propertyIndex","lastDot","searchNodeSubtree","childNode","subTreeNode","_getValue_unavailable","_setValue_unavailable","BindingType","Direct","EntireArray","ArrayElement","HasFromToArray","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","GetterByBindingType","resolvedProperty","SetterByBindingTypeAndVersioning","targetObject","dest","targetArray","sourceArray","nodeProperty","versioning","bindingType","_getValue_unbound","_setValue_unbound","nObjects","nCachedObjects","indicesByUUID","parsedPaths","nBindings","knownObject","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","now","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_update","deltaTime","timeDirection","timeRunning","_updateTimeScale","clipTime","_updateTime","_updateWeight","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","remove_empty_map","_","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","setFromCamera","coords","intersectObjects","performance","Date","getElapsedTime","getDelta","newTime","other","makeSafe","setFromCartesianCoords","distanceSq","closestPointToPointParameter","startP","startEnd","clampToLine","startEnd2","objPos","objNorm","coneLength","coneWidth","boneMatrix","matrixWorldInv","setPoint","setColor","construct","createPointsGeometry","createGeometry","createSpacedPointsGeometry","fromPoints","initFromArray","getControlPointsArray","reparametrizeByArcLength","setColors","isIntersectionBox","isIntersectionSphere","random16","nearestPowerOfTwo","nextPowerOfTwo","flattenToArrayOffset","multiplyVector3","multiplyVector3Array","applyToBuffer","applyToVector3Array","extractPosition","getPosition","multiplyToArray","multiplyVector4","rotateAxis","crossVector","rotateByAxis","makeFrustum","isIntersectionLine","isIntersectionPlane","barycoordFromPoint","midpoint","extractAllPoints","extrude","makeGeometry","fromAttribute","distanceToManhattan","lengthManhattan","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","applyProjection","computeTangents","getChildByName","renderDepth","getWorldRotation","eulerOrder","useQuaternion","setLens","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","copyIndicesArray","addIndex","addDrawCall","clearDrawCalls","computeOffsets","getArrays","addShapeList","wrapAround","wrapRGB","metal","clearTarget","animate","getCurrentRenderTarget","getPrecision","resetGLState","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","addPrePlugin","addPostPlugin","updateShadowMap","setFaceCulling","shadowMapCullFace","renderReverseSided","renderSingleSided","standing","getData","updateCubeMap","geometry1","projectVector","unprojectVector","pickingRay","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","createMultiMaterialObject","detach","attach","proj4","defs","projectionCache","ellipsoidSizes","ellipsoid","Ellipsoid","UNIT","DEGREE","METER","crsToUnit","crs","projunit","_unitFromProj4Unit","reasonnableEpsilonForCRS","is4326","_crsToUnitWithError","assertCrsIsValid","crsIsGeographic","crsIsGeocentric","_assertIsGeographic","_assertIsGeocentric","instanceProj4","crsIn","crsOut","cartesian","Coordinates","_values","_len","coordinates","_key","_normalNeedsUpdate","_normal","configurable","coord","geodeticSurfaceNormalCartographic","geodeticSurfaceNormal","planarNormal","computeGeodesicNormal","_len2","_key2","_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1___default","_babel_runtime_helpers_construct__WEBPACK_IMPORTED_MODULE_0___default","longitude","latitude","altitude","setAltitude","xyz","as","coordsIn","newCrs","cartographicToCartesian","cartesianToCartographic","val0","val1","forward","_convert","offsetInExtent","extent","dimension","east","west","north","south","originX","originY","C","EPSG_4326","_len3","args","_key3","l_ELEVATION","l_COLOR","EMPTY_TEXTURE_ZOOM","self","ReferenceError","global","core","hide","redefine","ctx","$export","own","out","exp","IS_FORCED","F","IS_GLOBAL","G","IS_STATIC","S","IS_PROTO","IS_BIND","expProto","U","W","R","CARDINAL","WEST","EAST","SOUTH","NORTH","Extent","_crs","isTiledCrs","row","col","cardinal","sizeX","sizeY","nbCol","sizeRow","Yn","Ys","Projection","YToWGS84","nbRow","cardinals","offsetToParent","diffLevel","invDiff","dimensions","isPointInside","epsilon","isInside","offsetScale","bbox","intersectsExtent","_this2","we","sn","fromBox3","extentParent","levelParent","separator","subdivision","Constructor","_defineProperties","props","descriptor","writable","protoProps","staticProps","_getPrototypeOf","setPrototypeOf","getPrototypeOf","__proto__","_typeof","assertThisInitialized","subClass","superClass","arrayWithoutHoles","iterableToArray","nonIterableSpread","arr","three__WEBPACK_IMPORTED_MODULE_0__","checkResponse","ok","arrayBuffer","xml","rej","promise","Promise","resolve","reject","textureFloat","getTextureFloat","Layer","config","_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default","_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default","_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5___default","updateStrategy","STRATEGY_MIN_NETWORK_TRAFFIC","mimetype","defineLayerProperty","InfoLayer","defaultValue","existing","getOwnPropertyDescriptor","previous","new","ImageryLayers","moveLayerToIndex","newIndex","imageryLayers","oldIndex","sequence","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","done","imagery","err","return","moveLayerDown","moveLayerUp","getColorLayersIdOrderedBySequence","RENDERING_PAUSED","MAIN_LOOP_EVENTS","_Layer_Layer__WEBPACK_IMPORTED_MODULE_1__","_Core_Scheduler_Cache__WEBPACK_IMPORTED_MODULE_2__","UPDATE_START","BEFORE_CAMERA_UPDATE","AFTER_CAMERA_UPDATE","BEFORE_LAYER_UPDATE","AFTER_LAYER_UPDATE","BEFORE_RENDER","AFTER_RENDER","UPDATE_END","MainLoop","scheduler","engine","renderingState","needsRedraw","gfxEngine","_updateLoopRestarted","updateElements","geometryLayer","_step2","newElementsToUpdate","getObjectToUpdateForAttachedLayers","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step3","_iterator2","attachedLayers","attachedLayer","ready","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step4","_iterator3","filterChangeSources","updateSources","fullUpdate","filtered","Set","scheduleViewUpdate","forceRedraw","timestamp","dt","parentLayer","getParentLayer","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step5","_iterator4","frozen","execFrameRequesters","srcs","preUpdate","postUpdate","_lastTimestamp","_executeFrameRequestersRemovals","willRedraw","_changeSources","getWindowSize","oldAutoUpdate","camera3D","commandsWaitingExecutionCount","_renderView","flush","renderView","_viewMatrix","ratio","halfH","resize","box3","ndcBox3","isBox3Visible","box3SizeOnScreen","isSphereVisible","atLeastOneInFrontOfNearPlane","projectBox3PointsInCameraSpace","adjustAltitudeToAvoidCollisionWithLayer","elevationLayer","minDistanceCollision","camLocation","elevationUnderCamera","DEMUtils","getElevationValueAt","referenceCrs","notifyChange","c3DEngine","rendererOrDiv","NOIE","Capabilities","isInternetExplorer","gLDebug","viewerDiv","clientWidth","clientHeight","positionBuffer","_nextThreejsLayer","fullSizeRenderTarget","onWindowResize","ex","fontFamily","fontSize","fontWeight","textAlign","padding","margin","innerHTML","WebGLRenderingContext","appendChild","tabIndex","updateCapabilities","devicePixelRatio","getRenderer","renderViewToBuffer","zone","renderViewToRenderTarget","pixelBuffer","bufferToImage","imgData","getImageData","Image","getUniqueThreejsLayer","depthRGBA","depthBufferRGBAValueToOrthoZ","depthBufferRGBA","isLogDepthBufferSupported","gl_FragDepthEXT","unpack1K","logDepthBufFC","gl_FragCoord_Z","_moveTo","_lineTo","drawPolygon","_drawPolygon","beginPath","indice","stroke","strokeStyle","strokeWidth","globalAlpha","strokeOpacity","fill","fillOpacity","drawPoint","drawFeature","feature","gStyle","Feature2Texture","collection","sizeTexture","backgroundColor","globalCompositeOperation","features","textureLayer","textureConverter","extentDestination","isFeature","backgroundLayer","paint","extentTexture","projection","parsedData","textureColorLayer","ColorLayer","classCallCheck_default","possibleConstructorReturn_default","getPrototypeOf_default","noTextureParentOutsideLimit","protocol","updateLayeredMaterialNodeImagery","ElevationLayer","updateLayeredMaterialNodeElevation","ring","VectorTileFeature","types","ox","oy","toGeoJSON","loadGeometry","rings","polygon","ccw","polygons","classifyRings","VectorTileParser","vectorTile","VectorTile","Protobuf","extentSource","geojson","layer_id","vt_layer","GeoJsonParser","filteringExtent","withNormal","withAltitude","mergeFeatures","buildExtent","readPBF","supportedFetchers","Map","Fetcher","supportedParsers","isValidData","validFn","handlingError","FetchAndConvertSourceData","networkOptions","fetcher","fetchData","fetchedData","DataSourceProvider","executeCommand","command","promises","requester","extentsSource","extentsDestination","CancelledCommandException","extSource","extDest","urlFromExtent","validedParsedData","tag","convertedSourceData","POLICIES","TEXTURE","all","TileProvider","Parser_GLTFLoader","GLTFLoader","dracoLoader","_onError","gltf","setDRACOLoader","content","BINARY_EXTENSION_HEADER_MAGIC","EXTENSIONS","KHR_BINARY_GLTF","body","headerView","BINARY_EXTENSION_HEADER_LENGTH","magic","getUint32","chunkView","chunkIndex","byteLength","chunkLength","chunkType","BINARY_EXTENSION_CHUNK_TYPES","contentArray","BIN","byteOffset","asset","extensionsUsed","extensionName","extensionsRequired","KHR_LIGHTS_PUNCTUAL","GLTFLightsExtension","KHR_MATERIALS_UNLIT","GLTFMaterialsUnlitExtension","KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS","GLTFMaterialsPbrSpecularGlossinessExtension","KHR_DRACO_MESH_COMPRESSION","GLTFDracoMeshCompressionExtension","GLTFParser","scenes","glTF","addUnknownExtensionsToUserData","MSFT_TEXTURE_DDS","lightDefs","loadLight","lightIndex","lightNode","lightDef","innerConeAngle","outerConeAngle","getMaterialType","extendParams","materialParams","metallicRoughness","pbrMetallicRoughness","baseColorFactor","baseColorTexture","assignTexture","specularGlossinessParams","pbrSpecularGlossiness","specularMapParsFragmentChunk","glossinessMapParsFragmentChunk","specularMapFragmentChunk","glossinessMapFragmentChunk","lightPhysicalFragmentChunk","glossiness","glossinessMap","diffuseFactor","diffuseTexture","glossinessFactor","specularFactor","specularGlossinessTexture","specGlossIndex","isGLTFSpecularGlossinessMaterial","cloneMaterial","refreshUniforms","USE_GLOSSINESSMAP","USE_ROUGHNESSMAP","GLTFCubicSplineInterpolant","decodePrimitive","primitive","bufferViewIndex","bufferView","gltfAttributeMap","threeAttributeMap","attributeNormalizedMap","attributeTypeMap","attributeName","ATTRIBUTES","accessorDef","accessors","componentType","WEBGL_COMPONENT_TYPES","getDependency","decodeDracoFile","stride3","td","m0","WEBGL_CONSTANTS","5120","5121","5122","5123","5125","5126","WEBGL_FILTERS","9728","9729","9984","9985","9986","9987","WEBGL_WRAPPINGS","33071","33648","10497","WEBGL_TYPE_SIZES","SCALAR","VEC2","VEC3","VEC4","MAT2","MAT3","MAT4","POSITION","NORMAL","TEXCOORD_0","TEXCOORD0","TEXCOORD","TEXCOORD_1","COLOR_0","COLOR0","COLOR","WEIGHTS_0","WEIGHT","JOINTS_0","JOINT","_BATCHID","PATH_PROPERTIES","translation","weights","INTERPOLATION","CUBICSPLINE","STEP","ALPHA_MODES","MIME_TYPE_FORMATS","image/png","image/jpeg","knownExtensions","objectDef","gltfExtensions","assignExtrasToUserData","gltfDef","extras","typeof_default","meshDef","targetNames","isPrimitiveEqual","isObjectEqual","isArrayEqual","getCachedGeometry","newPrimitive","cloneBufferAttribute","removeAll","primitiveCache","multiplePrimitivesCache","multiPassGeometryCache","fileLoader","addPrimitiveAttributes","primitiveDef","assignAttributeAccessor","accessorIndex","accessor","gltfAttributeName","threeAttributeName","hasMorphPosition","hasMorphNormal","pendingPositionAccessors","pendingNormalAccessors","morphPositions","normalAttribute","addMorphTargets","markDefs","getMultiDependencies","dependencies","nodeDefs","nodes","skinDefs","skins","meshDefs","meshes","meshReferences","meshUses","skinIndex","skinLength","joints","nodeIndex","nodeLength","nodeDef","skin","cacheKey","dependency","loadScene","loadNode","loadMesh","loadAccessor","loadBufferView","loadBuffer","loadMaterial","loadSkin","loadAnimation","loadCamera","getDependencies","def","bufferIndex","bufferDef","uri","bufferViewDef","bufferViews","sparse","pendingBufferViews","bufferAttribute","TypedArray","elementBytes","byteStride","ibCacheKey","ib","itemSizeIndices","TypedArrayIndices","byteOffsetIndices","byteOffsetValues","sparseIndices","sparseValues","textureIndex","URL","webkitURL","textureDef","textureExtensions","sourceURI","isObjectURL","createObjectURL","ddsLoader","revokeObjectURL","sampler","samplers","textureName","materialType","materialDef","materialExtensions","sgExtension","kmuExtension","metallicFactor","roughnessFactor","metallicRoughnessTexture","alphaMode","alphaCutoff","normalTexture","occlusionTexture","strength","emissiveFactor","emissiveTexture","loadGeometries","primitives","originalPrimitives","isMultiPass","primitive0","targets0","isMultiPassGeometry","geometryPromise","baseGeometry","getCachedMultiPassGeometry","pendingIndices","meshIndex","originalMaterials","useVertexColors","useFlatShading","useMorphTargets","useMorphNormals","pointsMaterial","lineMaterial","cameraIndex","cameraDef","yfov","aspectRatio","znear","zfar","xmag","ymag","skinDef","skinEntry","inverseBindMatrices","animationIndex","animationDef","pendingNodes","pendingInputAccessors","pendingOutputAccessors","pendingSamplers","pendingTargets","channels","input","inputAccessors","outputAccessors","inputAccessor","outputAccessor","TypedKeyframeTrack","targetName","isInterpolantFactoryMethodGLTFCubicSpline","instanceNum","buildNodeHierachy","nodeId","parentObject","pendingJoints","jointNodes","jointNode","sceneIndex","sceneDef","nodeIds","Parser_LegacyGLTFLoader","LegacyGLTFLoader","GLTFShader","targetNode","allNodes","boundUniforms","uniformId","semantic","sourceNodeRef","sourceNode","_m4","BINARY_EXTENSION_HEADER_DEFAULTS","GLTFBinaryExtension","KHR_MATERIALS_COMMON","lightId","lightParams","timeEnd","Shaders","boundUniform","m3","m4v","mi","Animations","contentFormat","contentLength","loadShader","loadTextureSourceUri","stringData","btoa","FLOAT_MAT3","FLOAT_MAT4","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","SAMPLER_2D","WEBGL_TYPE","35675","35676","35664","35665","35666","35678","WEBGL_TEXTURE_FORMATS","6406","6407","6408","6409","6410","WEBGL_TEXTURE_DATATYPES","32819","32820","33635","WEBGL_SIDES","1028","1029","WEBGL_DEPTH_FUNCS","512","513","514","515","516","517","518","519","WEBGL_BLEND_EQUATIONS","32774","32778","32779","WEBGL_BLEND_FUNCS","768","769","770","771","772","773","774","775","776","STATES_ENABLES","2884","2929","3042","3089","32823","32926","_each","thisObj","fns","DeferredShaderMaterial","isDeferredShaderMaterial","originalUniform","_withDependencies","_dependencies","fnName","fn","loadShaders","shaders","shaderText","loadBuffers","loadBufferViews","arraybuffer","loadAccessors","loadTextures","sourceUri","_texture","internalFormat","loadMaterials","khr_material","materialValues","technique","transparency","techniques","attributeId","pname","atype","param","shaderParams","shaderAttributes","shaderParam","regEx","replaceTHREEShaderAttributes","ptype","pcount","uvalue","usemantic","unode","FLOAT_MAT2","m4","states","enables","functions","enableCullFace","enableDepthTest","enableBlend","reflective","bump","emission","_material","loadMeshes","attributeEntry","meshNode","loadCameras","perspective","_camera","orthographic","innerWidth","innerHeight","loadSkins","bindShapeMatrix","jointNames","loadAnimations","animationId","channelId","loadNodes","_node","jointName","__nodes","meshId","childrenId","originalMaterial","originalGeometry","originalUserData","originalName","getJointNode","jointId","buildBoneGraph","parentJson","boneJson","loadScenes","_scene","gltfShader","BatchTableParser","utf8Decoder","matrixChangeUpVectorZtoY","matrixChangeUpVectorZtoX","glTFLoader","legacyGLTFLoader","filterUnsupportedSemantics","supported","names","_i","B3dmParser","gltfUpAxis","urlBase","b3dmHeader","FTJSONLength","FTBinaryLength","BTJSONLength","BTBinaryLength","sizeBegin","onload","CESIUM_RTC","applyOptionalCesiumRTC","overrideMaterials","doNotPatchMaterial","shaderUtils","patchMaterialForLogDepthSupport","gltfBuffer","batchTable","PntsParser","pntsHeader","lengthFeature","subArrayJson","parseJSON","POINTS_LENGTH","byteOffsetPos","byteOffsetCol","POSITION_QUANTIZED","RGB565","NORMAL_OCT16P","BATCH_ID","RTC_CENTER","parseFeatureBinary","pnts","getBox","volume","inverseTileTransform","region","OBB","extentToOBB","b3dmToMesh","object3d","pntsParse","_3dTilesProvider","preprocessDataLayer","pre3dTilesUpdate","process3dTilesNode","sseThreshold","cleanupDelay","_cleanableTiles","tileset","urlPrefix","tileIndex","baseURL","counter","recurse","_worldFromLocalTransform","viewerRequestVolume","boundingVolume","tileId","extendTileset","isTileset","init3dTilesLayer","tile","geometricError","refine","additiveRefinement","configureTile","setLayer","threejsLayer","supportedFormats","b3dm","newPrefix","POINT_ATTTRIBUTES","POSITION_CARTESIAN","numElements","arrayType","COLOR_PACKED","INTENSITY","numByte","CLASSIFICATION","NORMAL_SPHEREMAPPED","NORMAL_OCT16","potreeName","_arr","attr","byteSize","_loop","PotreeBinParser","pointAttributes","pointByteSize","numPoints","elemOffset","attrOffset","arrayLength","arrayOffset","elemIdx","PotreeCinParser","getFloat32","createChildAABB","aabb","childIndex","dHalfLength","xHalfLength","yHalfLength","zHalfLength","cmin","cmax","parseOctree","hierarchyStepSize","baseurl","fetchOptions","stack","childrenBitField","getUint8","snode","childname","myname","item","nextuuid","parseMetadata","customBinFormat","isFromPotreeConverter","find","elem","octreeDir","table","supportsProgressiveDisplay","PointCloudProvider","bboxes","octreeDepthLimit","pointBudget","pointSize","MODE","PointCloudProcessing","pickObjectsAt","mouse","Picking","pickPointsAt","lx","ly","lz","ux","uy","uz","ymin","zmin","zmax","computeBbox","findChildrenByName","charIndex","isLeaf","ids","baseId","addPickingAttribute","tightbbox","queueOrdering","cmp","priority","_instanciateQueue","st","storages","PriorityQueue","comparator","accumulator","counters","executing","executed","failed","cancelled","execute","cmd","provider","Scheduler","defaultQueue","hostQueues","providers","maxCommandsPerHost","initDefaultProviders","addProtocolProvider","$3dTilesProvider","runCommand","executingCounterUpToDate","getProtocolProvider","redraw","deQueue","_this3","host","location","has","commandsRunningCount","resetCommandsCount","selected","drawNextLayer","dequeue","earlyDropFunction","Source","attribution","construct_default","toConsumableArray_default","extentInsideLimit","URLBuilder","toFixed","bboxInUnit","axisOrder","WMTSSource","tileMatrixSet","tileMatrixSetLimits","arrayLimits","maxZoom","minTileRow","maxTileRow","minTileCol","maxTileCol","WMSSource","heightMapWidth","crsPropName","localExtent","WFSSource","getCapUrl","errorElem","querySelector","errorCode","errorMessage","textContent","TMSSource","FlatQueue","[object Object]","parentValue","halfLength","bestIndex","bestValue","rightValue","ARRAY_TYPES","flatbush_Flatbush","versionAndType","nodeSize","numItems","ArrayType","numNodes","_levelBounds","IndexArrayType","arrayTypeIndex","nodesByteSize","_boxes","_indices","_pos","hilbertValues","hilbert","boxes","pivot","swap","nodeMinX","nodeMinY","nodeMaxX","nodeMaxY","filterFn","maxResults","maxDistSquared","upperBound","axisDist","dist","peek","peekValue","temp","A","D","StaticSource","whenReady","href","_spatialIndex","flatbush","finish","buildUrl","assertThisInitialized_default","headers","selection","getSourceExtents","urlTexture","currentSrc","candidates","_selectImagesFromSpatialIndex","entry","fileParser","parsedFile","trimmedText","documentElement","tagName","togeojson","kml","gpx","bound","getElementsByTagName","getExtentFromGpxFile","FileSource","toTexture","dataExtent","supportedSource","VIEW_EVENTS","LAYERS_INITIALIZED","View","mainLoop","scene3D","_frameRequesters","_layers","newSize","_delayedFrameRequesterRemoval","_allLayersAreReadyCallback","every","removeFrameRequester","_syncGeometryLayerVisibility","_preprocessLayer","GeometryLayer","_createLayerFromConfig","providerPreprocessing","addLayer","layerColors","countColorLayersTextures","getMaxColorSamplerUnitsCount","addFrameRequester","changeSource","attached","when","frameRequester","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_iterator5","toDelete","updateLoopRestarted","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","_eventCoords","layerIdToLayer","layerId","lookup","eventToViewCoords","touchIdx","touches","br","getBoundingClientRect","clientX","clientY","eventToNormalizedCoords","viewToNormalizedCoords","viewCoords","normalizedToViewCoords","ndcCoords","mouseOrEvt","where","sources","Event","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","sp","readDepthBuffer","currentWireframe","tileLayer","currentOpacity","currentVisibility","level0Nodes","pushRenderState","RendererConstant","DEPTH","screen","getPickingPositionFromDepth","viewPaused","_fullSizeDepthBuffer","__g","it","isObject","_construct","Parent","Class","Reflect","sham","Proxy","isNativeReflectConstruct","store","uid","USE_SYMBOL","logDepthBufferSupported","maxTexturesUnits","_WebGLShader","isFirefox","userAgent","documentMode","getMaxTextureUnitsCount","text_encoding_utf_8__WEBPACK_IMPORTED_MODULE_0__","TextDecoderPolyfill","CYLINDRICAL","SPHERICAL","SIZE_TEXTURE_TILE","_Core_Geographic_Projection__WEBPACK_IMPORTED_MODULE_0__","_Core_Geographic_Extent__WEBPACK_IMPORTED_MODULE_1__","tileCoord","computeTileMatrixSetCoordinates","wmtsCoords","WGS84G","WGS84toWMTS","getCoordWMTS_WGS84","computeTMSCoordinates","layerDimension","tileCount","log2","FINAL","ID","_Coordinates__WEBPACK_IMPORTED_MODULE_1__","_Extent__WEBPACK_IMPORTED_MODULE_2__","PI_OV_FOUR","PI_OV_TWO","INV_TWO_PI","LOG_TWO","WGS84LatitudeClamp","WGS84ToY","MathExt","cWMTS","maxRow","wmtsBox","minRow","minCol","WMTS_WGS84ToWMTS_PM","nY","uX","uY","UnitaryToLongitudeWGS84","UnitaryToLatitudeWGS84","INFINITE","ELEVATION","stat","hit","miss","lastTimeUsed","lifetime","before","after","anObject","IE8_DOM_DEFINE","toPrimitive","dP","O","Attributes","_TileMesh__WEBPACK_IMPORTED_MODULE_1__","_Renderer_RendererConstant__WEBPACK_IMPORTED_MODULE_2__","_Renderer_LayeredMaterial__WEBPACK_IMPORTED_MODULE_3__","hideEverythingElse","traversePickingCircle","prevSq","sq","sqx","findLayerInParent","pickTilesAt","_view","_ids","undoHide","unpack","screenCoordsToNodeId","extractResult","TileMesh","enablePicking","objId","pixels","clearR","clearG","clearB","inter","vector4","UnpackDownscale","bitSh","fillArray","remp","moveElementArray","maxSamplersColorCount","samplersElevationCount","maxSamplerUnitsCount","LayeredMaterial","nbSamplers","TEX_UNITS","useRgbaTextureElevation","useColorTextureElevation","COLOR_TEXTURE_ELEVATION","MIN_ELEVATION","colorTextureElevationMinZ","MAX_ELEVATION","colorTextureElevationMaxZ","DATA_TEXTURE_ELEVATION","ShaderUtils","loadedTexturesCount","paramLayers","layerTexturesCount","dTextures_00","dTextures_01","visibility","colorLayersCount","offsetScale_L00","offsetScale_L01","lightPosition","distanceFog","lightingEnabled","noTextureColor","colorLayersId","USE_LOGDEPTHBUF","USE_LOGDEPTHBUF_EXT","setSequence","sequenceLayer","offsetLayer","offsetTexture","originalOffsets","originalTextures","indexOfColorLayer","texturesCount","oldOffset","getTextureOffsetByLayerIndex","setTextureOffsetByLayerIndex","getColorLayersCount","removeColorLayer","layerIndex","getTextureCountByLayerIndex","removedTexturesLayer","loadedTexturesLayerCount","reduce","setLayerTextures","pitchs","elevationlayerId","_setTexture","slotOffset","setLayerVisibility","layerType","setColorLayerParameters","pushLayer","setLayerUV","setLayerFx","fx","setLayerOpacity","setLayerTexturesCount","getLayerTextureOffset","setLightingOn","idUV","getLayerUV","getLoadedTexturesCount","isColorLayerDownscaled","getColorLayerLevelById","colorLayerId","isColorLayerLoaded","getLayerTextures","getElevationLayerLevel","setUuid","setFogDistance","setSelected","isElevationLayerLoaded","builder","BuilderEllipsoidTile","box3D","natBox","topPointsWorld","cOBB","_babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_4___default","toPoints","localSpherePosition","minHeight","maxHeight","obb","_builder$computeShara","computeSharableExtent","sharableExtent","TileGeometry","disableSkirt","updateZ","__e","toInteger","_Core_Geographic_Coordinates__WEBPACK_IMPORTED_MODULE_0__","coordIn","coordOut","readCoordinates","cOut","pair","geodesicNormal","firstPtIsOut","aCoords","first","GeometryToCoordinates","lineString","multi","keyProperties","readFeature","featureMerge","jsonType","mergeType","readGeometry","mergeExtent","mergesType","readFeatures","featuresMerge","_i2","_i3","epsgIdx","codeStart","readCRS","STRATEGY_GROUP","STRATEGY_PROGRESSIVE","STRATEGY_DICHOTOMY","chooseNextLevelToFetch","_Renderer_LayeredMaterialConstants__WEBPACK_IMPORTED_MODULE_0__","_dichotomy","nodeLevel","currentLevel","strategy","nextLevelToFetch","failureParams","targetLevel","val","_group","increment","_progressive","pendingSubdivision","_minimizeNetworkTraffic","_typeof2","requestNewTile","getChildTiles","subdivideNode","cullingTest","overrideMatrixWorld","tmpMatrix","isVisible","boundingVolumeToExtent","_subdivideNodeAdditive","_ret2","childrenTiles","_loop2","_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_1___default","_subdivideNodeSubstractive","tmpBox3","tmpSphere","$3dTilesCulling","tileMatrixWorld","nodeViewer","worldCoordinateCenter","cleanup3dTileset","canCleanCompletely","_cleanupObject3D","_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default","tiles","hypotenuse","radAngle","HYFOV","preSSE","cleanableSince","elt","boundingVolumeBox","boundingVolumeSphere","setDisplayed","display","markForDeletion","subdivisionTest","$3dTilesSubdivisionControl","returnValue","computeNodeSSE","PJD_3PARAM","PJD_7PARAM","PJD_WGS84","PJD_NODATUM","SEC_TO_RAD","HALF_PI","SIXTH","RA4","RA6","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","PrimeMeridian_exports","greenwich","lisbon","paris","bogota","madrid","rome","bern","jakarta","ferro","brussels","stockholm","athens","oslo","ft","to_meter","us-ft","ignoredChar","testkey","lkey","projString","defData","paramName","paramVal","paramOutname","paramObj","proj","datum","rf","lat_0","lat0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","lonc","longc","x_0","y_0","k_0","k0","r_a","R_A","utmSouth","towgs84","datum_params","from_greenwich","pm","nadgrids","datumCode","txt","Parser","NEUTRAL","whitespace","latin","keyword","endThings","digets","place","currentObject","mapit","unshift","thing","newObj","sExpr","readCharicter","neutral","quoted","afterquote","number","word","afterItem","newObjects","wkt_parser_D2R","d2r","wkt_parser","wkt","lisp","projName","local","PROJECTION","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","ellps","TOWGS84","outName","inName","rename","cleanWKT","that","EPSG","ESRI","IAU2000","WGS84","GOOGLE","lib_defs","codeWords","codes","parseCode","testObj","testDef","some","testWKT","auth","checkMercator","maybeProjStr","ext","checkProjStr","testProj","extend","msfnz","eccent","sinphi","cosphi","con","adjust_lon","tsfnz","com","phi2z","ts","dphi","eccnth","projs","es","lon","lat","projections_names","projStore","projections","Ellipsoid_exports","MERIT","ellipseName","SGS85","GRS80","IAU76","airy","APL4","NWL9D","mod_airy","andrae","aust_SA","GRS67","bessel","bess_nam","clrk66","clrk80","clrk58","CPM","delmbr","engelis","evrst30","evrst48","evrst56","evrst69","evrstSS","fschr60","fschr60m","fschr68","helmert","hough","intl","kaula","lerch","mprts","new_intl","plessis","krass","SEasia","walbeck","WGS60","WGS66","WGS7","Datum_exports","wgs84","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","lib_datum","ep2","datum_type","srsCode","ourProj","datumDef","sphere_","deriveConstants_sphere","ecc","eccentricity","datumObj","Proj","checkParams","datum_transform","compareDatums","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","geodeticToGeocentric","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricToWgs84","x_tmp","y_tmp","z_tmp","geocentricFromWgs84","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","X","Y","Z","geocentricToGeodetic","adjust_axis","denorm","xin","yin","zin","toPoint","checkSanity","checkCoord","num","checkNotWGS","core_wgs84","transformer","transformedArray","checkProj","oProj","fromProj","toProj","single","NUM_100K_SETS","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","mgrs_A","I","mgrs_V","mgrs_Z","mgrs","mgrs_forward","UTMtoLL","mgrs_toPoint","ll","accuracy","utm","seasting","easting","snorthing","northing","zoneNumber","zoneLetter","setParm","get100kSetForZone","setColumn","setRow","column","parm","colOrigin","rowOrigin","colInt","rowInt","rollover","getLetter100kID","get100kID","encode","M","LongOriginRad","ZoneNumber","Lat","Long","LatRad","LongRad","UTMEasting","UTMNorthing","LetterDesignator","getLetterDesignator","LLtoUTM","deg","rad","N1","T1","C1","R1","LongOrigin","mu","phi1Rad","e1","topRight","mgrsString","testChar","hunK","sb","east100k","curCol","eastingValue","rewindMarker","getEastingFromChar","north100k","curRow","northingValue","getNorthingFromChar","getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","Point","fromMGRS","mgrsStr","toMGRS","lib_Point","C08","pj_enfn","en","pj_mlfn","sphi","cphi","pj_inv_mlfn","arg","tmerc","ml0","delta_lon","sin_phi","cos_phi","al","als","tq","tan_phi","ds","sinh","hypot","asinhy","log1py","gatg","cos_2B","h1","h2","clens","arg_r","hr","hr1","hr2","clens_cmplx","arg_i","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","cosh_arg_i","cosh","hi1","hi","etmerc","cgb","cbg","utg","gtu","np","Qn","Zb","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","adjust_zone","dependsOn","srat","esinp","gauss_MAX_ITER","gauss","rc","phic0","ratexp","K","sterea","sinc0","cosc0","R2","title","sinc","cosc","cosl","rho","stere","coslat0","sinlat0","cons","ms1","X0","ssfn_","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","NaN","Chi","phit","eccen","somerc","phy0","lambda0","sinPhy0","semiMajorAxis","flattening","e2","k1","k2","k3","Sa1","Sa2","rotI","rotB","lambda","phy","prevPhy","iteration","omerc","no_off","no_rot","bl","dl","el","dlon12","dlon10","gamma0","uc","us","vs","ql","ul","POSITIVE_INFINITY","qp","tp","vp","lcc","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","rh1","krovak","s45","s90","fi0","alfa","uq","u0","n0","ro0","gfi","deltav","eps","ro","czech","fi1","mlfn","e0","e3","e0fn","e1fn","e2fn","e3fn","gN","adjust_lat","imlfn","cass","lam","nl","asq","cl","dd","ml1","phi1","nl1","rl1","tl1","dsq","qsfnz","P00","P01","P02","P10","P11","P20","laea","S_POLE","N_POLE","EQUIT","OBLIQ","mmf","apa","APA","authset","rq","xmf","ymf","sinb1","cosb1","sinph0","cosph0","coslam","sinlam","sinb","cosb","phi0","cCe","sCe","cosz","sinz","beta","authlat","asinz","aea","sin_po","cos_po","qs1","qs2","t3","qs0","ns0","qs","phi1z","eccnts","gnom","sin_p14","cos_p14","infinity_dist","coslon","iqsfnz","cea","eqc","dlat","poly_MAX_ITER","poly","tanphi","mln","mlnp","ma","nzmg","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_im1","delta_x","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","mill","sinu_MAX_ITER","sinu","C_y","C_x","V","moll","delta_theta","eqdc","ml2","vandg","sinth","costh","gsq","msq","xys","th1","aeqd","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","H","GH","Hs","kp","cos_c","s4","cosAz","Ee","ortho","FACE_ENUM","TOP","BOTTOM","AREA_ENUM","AREA_0","AREA_1","AREA_2","AREA_3","qsc_fwd_equat_face_theta","qsc_shift_lon_origin","slon","qsc","one_minus_f","one_minus_f_squared","sinlon","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","COEFS_X","COEFS_Y","FXC","FYC","RC1","NODES","poly3_val","coefs","poly3_der","robin","f_df","max_err","iters","upd","newton_rapshon","defaultDatum","proj4_package","proj4_projs","cleanup","removeChildren","toRemove","removeChildrenAndCleanup","removeChildrenAndCleanupRecursively","SRC","$toString","TPL","inspectSource","safe","isFunction","fails","defined","quot","createHTML","NAME","createDesc","IObject","computeMinMaxElevation","pitch","xs","ys","inc","pit","MAX_RETRY","getSourceExtent","findAncestorFromLevel","getIndiceWithPitch","currentY","newX","newY","nodeCommandQueuePriorityFunction","isDisplayed","refinementCommandCancellationFn","getCoordsForSource","layerUpdateState","LayerUpdateState","extentsInsideLimit","noMoreUpdatePossible","initNodeImageryTexturesFromParent","minLevel","canTryUpdate","canTileTextureBeImproved","getZoomForLayer","newTry","success","definitiveError","errorCount","failure","secondsUntilNextTry","currentElevation","elevation","_computeMinMaxElevati","setTextureElevation","initNodeElevationTextureFromParent","nodeExtent","terrain","noDataValue","tData","checkNodeElevationTextureValidity","textureParent","insertSignificantValuesFromParent","_computeMinMaxElevati2","method","changeOpacity","defaultPickingRadius","PointsVS","PointsFS","overlayColor","picking","pickingMode","updateUniforms","_Renderer_RendererConstant__WEBPACK_IMPORTED_MODULE_1__","_Provider_OGCWebServiceHelper__WEBPACK_IMPORTED_MODULE_2__","_Geographic_Coordinates__WEBPACK_IMPORTED_MODULE_3__","rotationAutoUpdate","updateGeometricError","applyChangeState","changeState","show","setVisibility","DEPTH_MODE","MATTE_ID_MODE","oldState","setFog","select","setBBoxZ","idLayer","changeSequenceLayers","OGCWebServiceHelper","PM","findCommonAncestor","parentAtLevel","_Core_Scheduler_CancelledCommandException__WEBPACK_IMPORTED_MODULE_1__","computeScreenSpaceError","pointSpacing","spacing","onScreenSpacing","notVisibleSince","sse","changeSources","commonAncestorName","onPointsCreated","displayedCount","reduction","limitHit","pIE","toIObject","gOPD","KEY","toObject","toLength","asc","TYPE","$create","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","NO_HOLES","$this","callbackfn","PRECISE_READ_Z","tileAt","_readTextureValueAt","minx","miny","maxx","maxy","dw","dh","materialOptions","_convertUVtoTextureCoords","u1","u2","wu","wv","_readTextureValueWithBilinearFiltering","vertexU","vertexV","_readTextureValueAt2","_readTextureValueAt3","_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default","z11","z21","z12","z22","zu1","zu2","_readZFast","_readTextureValueNearestFiltering","_readZ","placeObjectOnGround","objectCRS","tileHint","modifyGeometry","matrices","worldFromLocal","localFromWorld","_updateVector3","FAST_READ_Z","bary","coord1","coord2","tileWithValidElevationTexture","stepsUpInHierarchy","tileDimensions","tileOwnerDimensions","modulo","lu","lv","tri","z3","_readZCorrect","vecCRS","aFunction","LIBRARY","$typed","$buffer","anInstance","propertyDesc","redefineAll","toIndex","toAbsoluteIndex","classof","isArrayIter","gOPN","getIterFn","wks","createArrayMethod","createArrayIncludes","speciesConstructor","ArrayIterators","Iterators","$iterDetect","setSpecies","arrayFill","arrayCopyWithin","$DP","$GOPD","RangeError","ArrayProto","$ArrayBuffer","$DataView","arrayForEach","arrayFilter","arraySome","arrayEvery","arrayFind","arrayFindIndex","arrayIncludes","arrayIndexOf","arrayValues","arrayKeys","arrayEntries","entries","arrayLastIndexOf","arrayReduce","arrayReduceRight","reduceRight","arrayJoin","arraySort","arrayToString","arrayToLocaleString","toLocaleString","ITERATOR","TAG","TYPED_CONSTRUCTOR","DEF_CONSTRUCTOR","ALL_CONSTRUCTORS","CONSTR","TYPED_ARRAY","TYPED","VIEW","$map","allocate","LITTLE_ENDIAN","FORCED_SET","toOffset","BYTES","speciesFromList","fromList","addGetter","internal","_d","$from","aLen","mapfn","iterFn","$of","TO_LOCALE_BUG","$toLocaleString","proto","copyWithin","predicate","findIndex","searchElement","includes","middle","comparefn","begin","$begin","$slice","$set","arrayLike","$iterators","isTAIndex","$getDesc","$setDesc","desc","$TypedArrayPrototype$","wrapper","CLAMPED","GETTER","SETTER","Base","TAC","FORCED","ABV","TypedArrayPrototype","addElement","setter","$offset","$length","klass","$len","$nativeIterator","CORRECT_ITER_NAME","$iterator","of","_Geographic_Coordinates__WEBPACK_IMPORTED_MODULE_1__","rayon_1","rayon_2","rayon_3","_radiiSquared","_oneOverRadiiSquared","coordCarto","cosLatitude","gamma","rsqXY","cosu","cartographicToCartesianArray","coordCartoArray","cartesianArray","O_C","computeDistance","coordCarto1","coordCarto2","longitude1","latitude1","longitude2","latitude2","distRad","latMoy","_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_4___default","InfoTiledGeometryLayer","_InfoLayer","tiledGeometryLayer","_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1___default","_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2___default","displayed","_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default","_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_5___default","rePosition","reMain","re","superPropBase","_get","receiver","Center","bufferAttribs","computeBuffers","outBuffers","nSeg","nVertex","cachedBuffers","mustBuildIndexAndWGS84","uvwgs84","idVertex","skirt","skirtEnd","Prepare","UV_WGS84","UV_PM","getUV_PM","vProjecte","uv_pm","id_m3","uProjecte","VertexPosition","projected","VertexNormal","quatNormalToZ","bufferize","idVertex2","v4","iStart","segmentSize","buildIndexSkirt","buildUVSkirt","id2_m3","idf","convertToTile","paramsGeometry","_count","pTrans","lighting","TiledGeometryLayer","schemeTile","level0s","level0","colorLayers","elevationLayers","maxElevationLevel","commonAncestor","ObjectRemovalHelper","culling","requestChildrenUpdate","hasEnoughTexturesToSubdivide","fogDistance","_this4","inError","UPDATE_STATE","IDLE","PENDING","ERROR","DEFINITIVE_ERROR","FINISHED","PAUSE_BETWEEN_ERRORS","lastErrorTimestamp","definitive","valueOf","META","setDesc","isExtensible","FREEZE","preventExtensions","setMeta","NEED","fastKey","getWeak","onFreeze","process","__WEBPACK_AMD_DEFINE_RESULT__","_Group","_tweens","_tweensAddedDuringUpdate","getAll","tweenId","tween","getId","preserve","tweenIds","TWEEN","_isPlaying","_nextId","nextId","hrtime","getTime","Tween","_object","_valuesStart","_valuesEnd","_valuesStartRepeat","_duration","_repeat","_repeatDelayTime","_yoyo","_reversed","_delayTime","_easingFunction","Easing","Linear","_interpolationFunction","Interpolation","_chainedTweens","_onStartCallback","_onStartCallbackFired","_onUpdateCallback","_onCompleteCallback","_onStopCallback","stopChainedTweens","numChainedTweens","delay","repeatDelay","yoyo","easing","eas","chain","onComplete","onStop","elapsed","Quadratic","In","Out","InOut","Cubic","Quartic","Quintic","Sinusoidal","Exponential","Circular","Elastic","Back","Bounce","Utils","Bezier","pw","bn","Bernstein","fc","Factorial","bitmap","$keys","enumBugKeys","dPs","IE_PROTO","Empty","createDict","iframeDocument","iframe","contentWindow","write","lt","close","Properties","hiddenKeys","getOwnPropertyNames","ObjectProto","_Geographic_Projection__WEBPACK_IMPORTED_MODULE_2__","_Renderer_ThreeExtended_OBB__WEBPACK_IMPORTED_MODULE_3__","_Geographic_Extent__WEBPACK_IMPORTED_MODULE_4__","axisZ","axisY","WGS84ToOneSubY","st1","deltaUV1","quatToAlignLongitude","quatToAlignLatitude","sizeLongitude","rotLon","rotLat","serializer","removeSpace","trimSpace","splitSpace","okhash","attrf","get1","numarray","nodeVal","norm","getMulti","coordPair","ele","heartRate","xml2str","str","serializeToString","XMLSerializer","browser","doc","gj","styleIndex","styleByHash","styleMapIndex","geotypes","placemarks","styles","styleMaps","pairs","pairsMap","getPlacemark","kmlColor","gxCoord","gxCoords","elems","timeElems","geomsAndTimes","geomNode","geomNodes","geoms","coordTimes","address","styleUrl","description","timeSpan","timeStamp","extendedData","lineStyle","polyStyle","styleHash","styleMapHash","timespan","linestyles","polystyles","pcolor","popacity","datas","simpleDatas","routes","waypoints","getTrack","getRoute","pointname","heartRates","getProperties","getLineStyle","prop","links","link","UNSCOPABLES","DESCRIPTORS","SPECIES","forbiddenField","_t","PanoramaTileBuilder","ProjectionType","projectionType","axisX","textureSize","PanoramaLayer","quality","maxSubdivisionLevel","onScreen","boost","createPanoramaLayer","PanoramaView","eval","cof","propertyIsEnumerable","_setPrototypeOf","VectorTileLayer","pbf","_pbf","_keys","_features","readFields","readLayer","readVarint","readString","readFloat","readDouble","readVarint64","readSVarint","readBoolean","readValueMessage","_geometry","readTag","cmdLen","arrayWithHoles","iterableToArrayLimit","nonIterableRest","require","_dereq_","AbstractPriorityQueue","ArrayStrategy","BHeapStrategy","BinaryHeapStrategy","hasProp","__super__","ctor","./PriorityQueue/AbstractPriorityQueue","./PriorityQueue/ArrayStrategy","./PriorityQueue/BHeapStrategy","./PriorityQueue/BinaryHeapStrategy","ref","priv","initialValues","3","binarySearchForIndexReversed","4","ref1","pageSize","_shift","_emptyMemoryPageTemplate","_memory","_mask","_write","_bubbleUp","_read","_bubbleDown","page","compare","indexInPage","parentIndex","childIndex1","childIndex2","childValue1","childValue2","5","_heapify","minIndex","Pbf","ieee754","buf","Varint","Fixed64","Bytes","Fixed32","readPackedEnd","toNum","isSigned","makeRoomForExtraLength","startPos","extraLen","realloc","writePackedVarint","writeVarint","writePackedSVarint","writeSVarint","writePackedFloat","writeFloat","writePackedDouble","writeDouble","writePackedBoolean","writeBoolean","writePackedFixed32","writeFixed32","writePackedSFixed32","writeSFixed32","writePackedFixed64","writeFixed64","writePackedSFixed64","writeSFixed64","readUInt32","writeInt32","readInt32","readField","skip","readMessage","readFixed32","readSFixed32","readFixed64","readSFixed64","read","readVarintRemainder","Boolean","b3","bytesPerSequence","readUtf8","readBytes","readPackedVarint","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","writeTag","writeBigVarintLow","lsb","writeBigVarintHigh","writeBigVarint","writeString","lead","writeUtf8","writeBytes","writeRawMessage","writeMessage","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","inRange","ToDictionary","end_of_stream","Stream","tokens","endOfStream","prepend","token","finished","decoderError","fatal","opt_code_point","DEFAULT_ENCODING","_streaming","_BOMseen","_decoder","_fatal","_ignoreBOM","bytes","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","handler","stream","bite","code_point","input_stream","code_points","cp","codePointsToString","IS_INCLUDES","fromIndex","getOwnPropertySymbols","ARG","tryGet","callee","spaces","space","ltrim","rtrim","exporter","ALIAS","FORCE","SAFE_CLOSING","riter","skipClosing","SYMBOL","strfn","rxfn","BREAK","RETURN","iterable","forOf","setToStringTag","inheritIfRequired","methods","IS_WEAK","ADDER","fixMethod","HASNT_CHAINING","THROWS_ON_PRIMITIVES","ACCEPT_ITERABLES","BUGGY_ZERO","$instance","getConstructor","setStrong","Typed","TypedArrayConstructors","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","clearTimeout","currentQueue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","noop","nextTick","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","cwd","chdir","umask","is","copyright","shared","check","buggy","$expm1","expm1","$iterCreate","BUGGY","returnThis","DEFAULT","IS_SET","IteratorPrototype","getMethod","kind","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","isRegExp","searchString","MATCH","$defineProperty","getIteratorMethod","endPos","addToUnscopables","iterated","_k","Arguments","ignoreCase","multiline","unicode","sticky","defer","port","invoke","html","cel","setTask","setImmediate","clearTask","clearImmediate","MessageChannel","Dispatch","port2","port1","onmessage","postMessage","importScripts","removeChild","PROTOTYPE","WRONG_INDEX","BaseBuffer","$BUFFER","$LENGTH","$OFFSET","packIEEE754","mLen","nBytes","eLen","eMax","eBias","rt","unpackIEEE754","nBits","unpackI32","packI8","packI16","packI32","packF64","packF32","isLittleEndian","intIndex","_b","pack","conversion","ArrayBufferProto","$setInt8","setInt8","getInt8","setUint8","bufferLength","getInt16","getUint16","getInt32","getFloat64","setInt16","setUint16","setInt32","setUint32","setFloat32","setFloat64","arr2","_n","_e","_s","isLE","readTile","_add","_sub","multByPoint","_multByPoint","divByPoint","_divByPoint","mult","_mult","div","_div","_rotate","_rotateAround","matMult","_matMult","_unit","perp","_perp","_round","mag","distSqr","angleWith","angleWithSep","MeshLine","indices_array","widthCallback","memcpy","MeshLineMaterial","useMap","useAlphaMap","dashArray","dashOffset","dashRatio","useDash","setGeometry","compareV3","aa","copyV3","advance","earcut","default","deviation","polygonArea","trianglesArea","wksExt","$Symbol","getKeys","windowNames","getWindowNames","gOPS","$assign","getSymbols","isEnum","factories","partArgs","un","$parseInt","$trim","ws","radix","$parseFloat","log1p","TO_STRING","memo","isRight","flags","Internal","newGenericPromiseCapability","OwnPromiseCapability","Wrapper","task","microtask","newPromiseCapabilityModule","perform","promiseResolve","v8","$Promise","isNode","newPromiseCapability","USE_NATIVE","FakePromise","PromiseRejectionEvent","isThenable","notify","isReject","_c","_v","reaction","exited","fail","domain","_h","onHandleUnhandled","enter","exit","onUnhandled","unhandled","isUnhandled","onunhandledrejection","reason","_a","onrejectionhandled","$reject","$resolve","executor","onFulfilled","onRejected","capability","$$reject","remaining","$index","alreadyCalled","race","$$resolve","promiseCapability","$iterDefine","SIZE","getEntry","_f","_l","$has","uncaughtFrozenStore","UncaughtFrozenStore","findUncaughtFrozen","ufstore","ownKeys","maxLength","fillString","stringLength","fillStr","intMaxLength","fillLen","stringFiller","isEntries","_babelPolyfill","$fails","wksDefine","enumKeys","_create","gOPNExt","$JSON","_stringify","HIDDEN","TO_PRIMITIVE","SymbolRegistry","AllSymbols","OPSymbols","QObject","findChild","setSymbolDesc","protoDesc","sym","isSymbol","$defineProperties","$propertyIsEnumerable","E","$getOwnPropertyDescriptor","$getOwnPropertyNames","$getOwnPropertySymbols","IS_OP","es6Symbols","wellKnownSymbols","for","keyFor","useSetter","useSimple","replacer","$replacer","symbols","$getPrototypeOf","$freeze","$seal","$preventExtensions","$isFrozen","$isSealed","$isExtensible","FProto","nameRE","HAS_INSTANCE","FunctionProto","$Number","BROKEN_COF","TRIM","toNumber","argument","third","maxCode","digits","aNumberValue","$toFixed","numToString","acc","fractionDigits","$toPrecision","toPrecision","_isFinite","isSafeInteger","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","$acosh","acosh","$asinh","asinh","$atanh","atanh","cbrt","clz32","fround","EPSILON32","MAX32","MIN32","$abs","$sign","roundTiesToEven","value1","value2","larg","$imul","imul","xn","yn","xl","yl","log10","LOG10E","tanh","trunc","$fromCodePoint","fromCodePoint","raw","callSite","tpl","$at","codePointAt","$endsWith","endsWith","endPosition","$startsWith","toISOString","$toISOString","getUTCFullYear","getUTCMilliseconds","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","DateProto","hint","createProperty","upTo","cloned","$sort","$forEach","STRICT","original","$filter","$some","$every","$reduce","$indexOf","NEGATIVE_ZERO","$find","forced","$flags","$RegExp","re1","re2","CORRECT_NEW","tiRE","piRE","fiU","proxy","$match","regexp","REPLACE","$replace","searchValue","replaceValue","SEARCH","$search","SPLIT","$split","_split","$push","NPCG","limit","separator2","lastLength","lastLastIndex","splitLimit","separatorCopy","macrotask","Observer","MutationObserver","WebKitMutationObserver","head","standalone","createTextNode","observe","characterData","strong","InternalMap","each","weak","$WeakMap","$isView","fin","viewS","viewT","rApply","fApply","thisArgument","argumentsList","L","rConstruct","NEW_TARGET_BUG","ARGS_BUG","Target","newTarget","$args","propertyKey","deleteProperty","Enumerate","enumerate","getProto","existingDescriptor","ownDesc","setProto","$includes","padStart","$pad","padEnd","getOwnPropertyDescriptors","getDesc","$values","finally","onFinally","MSIE","boundArgs","setInterval","$task","TO_STRING_TAG","ArrayValues","DOMIterables","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList","collections","explicit","Collection","Op","hasOwn","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","inModule","runtime","regeneratorRuntime","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","NativeIteratorPrototype","Gp","GeneratorFunctionPrototype","Generator","GeneratorFunction","displayName","isGeneratorFunction","genFun","mark","awrap","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","tryLocsList","Context","skipTempReset","sent","_sent","delegate","tryEntries","resetTryEntry","rootRecord","completion","rval","dispatchException","exception","handle","loc","caught","record","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","abrupt","finallyEntry","afterLoc","thrown","delegateYield","resultName","nextLoc","protoGenerator","_invoke","doneResult","delegateResult","maybeInvokeDelegate","tryCatch","makeInvokeMethod","previousPromise","callInvokeWithMethodAndArg","unwrapped","pushTryEntry","locs","iteratorMethod","iteratorSupported","checkIfIteratorIsSupported","createIterator","items","serializeParam","encodeURIComponent","deserializeParam","URLSearchParams","_fromString","append","_entries","thisArg","searchArray","polyfillURLSearchParams","pathname","searchParams","checkIfURLIsSupported","_URL","baseElement","implementation","createHTMLDocument","anchorElement","enableSearchUpdate","enableSearchParamsUpdate","methodName","_anchorElement","linkURLWithAnchorAttribute","_updateSearchParams","expectedPort","http:","https:","ftp:","addPortToOrigin","hostname","password","username","polyfillURL","getOrigin","Headers","Request","Response","DOMException","support","formData","viewClasses","isArrayBufferView","normalizeName","normalizeValue","iteratorFor","consumed","bodyUsed","fileReaderReady","reader","onerror","readBlobAsArrayBuffer","FileReader","readAsArrayBuffer","bufferClone","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","isDataView","_bodyArrayBuffer","rejected","readAsText","readBlobAsText","readArrayBufferAsText","oldValue","credentials","signal","upcased","normalizeMethod","referrer","form","bodyInit","statusText","redirectStatuses","redirect","aborted","xhr","abortXhr","abort","rawHeaders","parseHeaders","getAllResponseHeaders","responseURL","responseText","ontimeout","onabort","onreadystatechange","polyfill","updateLayersOrdering","cO","ColorLayersOrdering","previousSequence","PLAYER_STATE","STOP","PLAY","END","PAUSE","resetTimer","player","clearInterval","waitTimer","keyframe","finishAnimation","isEnded","AnimationPlayer","waitingFrame","resolveWait","timew","Animation","CONTROL_KEYS","UP","SPACE","SHIFT","CTRL","StateControl","NONE","ORBIT","mouseButton","keyboard","finger","DOLLY","PAN","MOVE_GLOBE","PANORAMIC","SELECT","_arr2","targetPosition","targetCoord","rigs","wrapTo180","getGroundTargetFromCamera","pickedPosition","getLookAtFromMath","CameraRig","seaLevel","targetWorldPosition","removeProxy","rig","proxyProperty","setTargetFromCoordinate","cosPlanXY","tilt","heading","setFromPositions","_this5","setfromCamera","tweenGroup","copyObject3D","deferred","addPlaceTargetOnGround","applyParams","animationFrameRequester","applyTransformToCamera","anim","removePlaceTargetOnGround","_this6","startAltitude","placeTargetOnGround","getRig","CameraUtils","defaultStopPlaceOnGroundAtEnd","getTransformCameraLookingAtTarget","getParams","transformCameraToLookAtTarget","setProxy","animateCameraToLookAtTarget","_this7","stopPlaceOnGroundAtEnd","sequenceAnimationsToLookAtTarget","_this8","funcs","getDiffParams","second","EPS","rotateStart","rotateEnd","rotateDelta","spherical","sphericalDelta","orbitScale","panStart","panEnd","panDelta","panOffset","dollyStart","dollyEnd","dollyDelta","moveAroundGlobe","cameraTarget","positionObject","newPosition","_handlerMouseMove","_handlerMouseUp","currentKey","lastTimeMouseMove","enableAnimation","dampingFactor","dampingMove","animationDampingMove","animationDampingOrbital","panVector","lastPosition","lastQuaternion","pickSphere","pickingPoint","enableTargetHelper","helpers","CONTROL_EVENTS","PAN_CHANGED","ORIENTATION_CHANGED","RANGE_CHANGED","CAMERA_TARGET_CHANGED","GlobeControls","targetCoordinate","globeRadius","getStates","isPaused","zoomSpeed","minDistance","minZoom","rotateSpeed","keyPanSpeed","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","handleCollision","enableKeys","enableDamping","startEvent","endEvent","getDollyScale","rotateLeft","rotateUp","panLeft","panUp","_mouseToPan","deltaX","deltaY","gfx","targetDistance","getCameraTargetPosition","dollyIn","dollyScale","dollyOut","quaterPano","quaterAxis","minDistanceZ","getMinDistanceCameraBoundingSphereObbsUp","sphereCamera","isSphereAboveXYBox","lastNormalizedIntersection","normalizedIntersection","dynamicRadius","slowdownLimit","contraryLimit","slowdownZone","slowdownFactor","contraryPhi","contraryFactor","isStopped","playLater","updateHelper","helper","onMouseMove","onMouseUp","updateTarget","onMouseDown","inputToState","button","selectNodeAt","_onEndingMove","onMouseWheel","stopPropagation","wheelDelta","previousRange","getRange","newRange","onKeyUp","onKeyDown","keyCode","onTouchStart","touchToState","pageX","pageY","onTouchMove","onTouchEnd","_handlingEvent","lookAtCoordinate","layerTHREEjs","setTilt","isAnimated","setHeading","setRange","getTilt","getHeading","pan","pVector","getCameraOrientation","getCameraCoordinate","getCameraTargetGeoPosition","getLookAtCoordinate","setAnimationEnabled","isAnimationEnabled","getZoom","computeTileZoomFromDistanceCamera","setZoom","getScale","pixelsToMeters","pixelPitch","pixelsToDegrees","chord","metersToPixels","setScale","setCameraTargetGeoPosition","computeDistanceCameraFromTileZoom","getRangeFromScale","minTilt","maxTilt","setCameraTargetGeoPositionAdvanced","setOrbitalPosition","pickGeoPosition","windowCoords","worldToScaledEllipsoid","magnitudeSquared","cullingVector","subdivisionVector","boundingSphereCenter","subdivisionRatio","GlobeLayer","minSubdivisionLevel","sseSubdivisionThreshold","maxDeltaElevation","maxDeltaElevationLevel","canvasSize","hypothenuse","get_default","occupancy","vtMagnitudeSquared","preSinus","sinus","skyShader","luminance","turbidity","reileigh","mieCoefficient","mieDirectionalG","sunPosition","Sky","skyUniforms","skyMat","skyGeo","skyMesh","LIGHTING_POSITION","Atmosphere","realistic","uniformsOut","atmoIN","screenSize","GlowVS","GlowFS","uniformsIn","materialAtmoIn","atmosphereIN","_initRealisticLighning","atmosphere","uniformsSky","v3LightPosition","v3InvWavelength","fCameraHeight","fCameraHeight2","fInnerRadius","fInnerRadius2","fOuterRadius","fOuterRadius2","fKrESun","fKmESun","fKr4PI","fKm4PI","fScale","fScaleDepth","fScaleOverScaleDepth","g2","nSamples","fSamples","tDisplacement","tSkyboxDiffuse","fNightScale","ground","sky","skyDome","effectController","setRealisticOn","bool","updateLightingPos","CoordStars","getSunPosition","date","toJulian","toDays","getSolarMeanAnomaly","getEclipticLongitude","getEquationOfCenter","getDeclination","getRightAscension","lw","getSiderealTime","EclipticLongitude","declinaison","ascension","SiderealTime","dec","getAltitude","getAzimuth","getSunPositionInScene","GLOBE_VIEW_EVENTS","GLOBE_INITIALIZED","LAYER_ADDED","LAYER_REMOVED","COLOR_LAYERS_ORDER_CHANGED","createGlobeLayer","GlobeView","positionCamera","sun","atmosphereLayer","positionTargetCamera","noControls","controls","mfogDistance","_renderState","coordCam","coordGeoCam","skyBaseColor","colorSky","spaceColor","colorLayerCount","layerPromise","removeLayer","picked","selectedId","setRealisticLightingOn","coSun","lightingPos","updateMaterialUniform","setLightingPos","uniformName","PlanarTileBuilder","PlanarLayer","maxLevel","createPlanarLayer","PlanarView","_gGpxToWTrackPointsArray","gpxXML","_gpxPtToCartesian","nodeValue","childNodes","geometryPoint","materialPoint","getDistance","updatePointScale","updatePath","_gpxToMesh","enablePin","gpxMesh","trackPts","trackSegs","_gGpxToWTrackSegmentsArray","masterObject","pathMesh","_gpxToWTrackPointsMesh","wayPts","_gpxToWayPointsArray","_gpxToWayPointsMesh","GpxParser","XMLDocument","OrientedImageCamera","focal","textureAspect","setMatrix3","matrix3","CameraCalibrationParser","calibration","rotationInverse","distortion","pps","polynom","poly357","l1l2","etats","parseCalibration","FeatureProcessing","extentDest","isApplied","minAltitude","assignLayer","onMeshCreated","applyOffset","offsetAltitude","SyntaxError","getProperty","randomColor","fillColorArray","coordinatesToVertices","ptsIn","offsetOut","countIn","startIn","fnAltitude","endIn","addExtrudedPolygonSideFaces","startIndice","pointMaterial","featureToMesh","geom","featureToPoint","countIndices","featureToLine","totalVertices","lastIndice","colorTop","startTop","geomVertices","holesOffsets","featureToExtrudedPolygon","featureToPolygon","Feature2Mesh","featuresToThree","MOVEMENTS","38","40","37","39","33","noSpeed","34","wheelup","oneshot","wheeldown","onDocumentMouseUp","_isMouseDown","onDocumentMouseWheel","moves","_camera3D","FlyControls","moveSpeed","_onMouseDownMouseX","_onMouseDownMouseY","bindedPM","pxToAngleRatio","move","focusOnMouseOver","focusOnClick","limitRotation","rot","verticalFOV","applyRotation","moveCameraVerticalPlanar","moveCameraVerticalGlobe","FirstPersonControls","panoramaRatio","snapshot","disableEventListeners","moveCameraVertical","preserveRotationOnX","_stateOnMouseDown","mouseButtons","LEFTCLICK","MIDDLECLICK","RIGHTCLICK","STATE","DRAG","ROTATE","TRAVEL","vectorZero","PlanarControls","enableRotation","maxPanSpeed","minPanSpeed","zoomTravelTime","zoomInFactor","zoomOutFactor","maxAltitude","groundLevel","autoTravelTimeMin","autoTravelTimeMax","autoTravelTimeDist","smartZoomHeightMin","smartZoomHeightMax","instantTravel","minZenithAngle","maxZenithAngle","focusOnMouseClick","startPosition","startQuaternion","mousePosition","lastMousePosition","deltaMousePosition","dragStart","dragEnd","dragDelta","centerPoint","travelEndPos","travelStartPos","travelStartRot","travelEndRot","travelAlpha","travelDuration","travelUseRotation","travelUseSmooth","_handlerOnKeyDown","goToTopView","goToStartView","initiateSmartZoom","_handlerOnMouseDown","updateMousePositionAndDelta","ctrlKey","initiateRotation","initiateDrag","initiatePan","updateMouseCursorType","_handlerOnMouseUp","_handlerOnMouseMove","_handlerOnMouseWheel","initiateZoom","handleTravel","handleDragMovement","handleRotation","handlePanMovement","getWorldPointAtScreenXY","getWorldPointFromMathPlaneAtScreenXY","distToGround","panSpeed","newAltitude","quat","thetaDelta","phiDelta","pointUnderCursor","newPos","initiateTravel","targetHeight","moveTarget","targetPos","travelTime","targetOrientation","useSmooth","normalizedDistance","angularDifference","endTravel","smooth","topViewPos","targetQuat","posXY","addInputListeners","removeInputListeners","cursor","isFeatureSingleGeometryUnderCoordinate","coordinate","linePoints","x21","y21","pointIsOverLine","polygonPoints","xi","yi","xj","yj","pointIsInsidePolygon","squaredEpsilon","xP","yP","getClosestPoint","isFeatureUnderCoordinate","featCoord","under","FeaturesUtils","filterFeaturesUnderCoordinate","quaternionENUFromGeodesicNormal","ENUQuat","OrientationUtils","localQuaternionFromAttitude","attitude","roll","quaternionFromRollPitchHeading","omega","kappa","quaternionFromOmegaPhiKappa","globeQuaternionFromAttitude","quaternionFromAttitude","needsENUFromGeodesicNormal","pitUV","precision_qualifier","install","three_module","lib","LayerUpdateStrategy","Prefab_GlobeView","Prefab_PlanarView","Constants","_3dTilesProcessing","LayeredMaterialNodeProcessing","Renderer_OrientedImageCamera","ThreeExtended_FlyControls","ThreeExtended_FirstPersonControls","ThreeExtended_PlanarControls","Shader_ShaderChunk"],"mappings":"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,yBACA,sBACA,qBACA,iCACA,GACA,oBACA,uBACA,2BACA,GACA,qCACA,GACA,6BACA,uBACA,2BACA,kBACA,GACA,IACA,GACA,gBACA,GACA,kDACA,2EACA,GACA,uCACA,gBACA,GACA,mDACA,sDACA,gDACA,4CACA,GACA,oDACA,2CACA,2CACA,GACA,2DACA,sDACA,GACA,oCACA,uCACA,QACA,GACA,gBACA,mEACA,wEACA,aACA,qDACA,qDACA,0CACA,GACA,+CACA,8CACA,6EACA,GACA,QACA,GACA,2EACA,2CACA,0BACA,wBACA,GACA,qDACA,qCACA,GACA,mCACA,GACA,KAoFAunB,KAAA,QACAtnB,gBAlFA,kDACA,2BACA,GACA,yBACA,8BACA,wBACA,6BACA,yBACA,2BACA,4BACA,2BACA,4BACA,2BACA,uBACA,GACA,oBACA,uBACA,2BACA,GACA,gBACA,GACA,uBACA,8DACA,4EACA,qCACA,2BACA,yFACA,QACA,wBACA,qDACA,KAoDAsnB,KAAA,UAyBA,cAtBAxd,EAAA+oC,iBACA/oC,EAAAlO,WACAkO,EAAA81L,cACA91L,EAAAhO,gBACAgO,EAAA+1L,mBACA/1L,EAAAnQ,aACAmQ,EAAAnO,eACAmO,EAAAs1D,kBACAt1D,EAAA6P,uBACA7P,EAAA/1B,YACA+1B,EAAA91B,WACA81B,EAAAg2L,iBACAh2L,EAAAi2L,kBACAj2L,EAAAk2L,iBACAl2L,EAAAgjI,kBACAhjI,EAAA6N,iBACA7N,EAAArsB,OAEAusB,EAAAhoC,KAAA,mBAEAgoC,EAAA4O,UAAA9O,GAEAE,EA1ZAu1L,EAAAj7O,UAAA47O,YAAA,SAAA5kN,EAAA31B,GAOA,GALAyb,KAAAq+N,cAAA95O,EAEAyb,KAAAorC,aACAprC,KAAAw2J,YAEAt8I,aAAA67D,EAAAxqF,SACA,QAAAzH,EAAA,EAAiBA,EAAAo2B,EAAAsH,SAAA1+B,OAAuBgB,IAAA,CACxC,IAAA4hB,EAAAwU,EAAAsH,SAAA19B,GACAS,EAAAT,EAAAo2B,EAAAsH,SAAA1+B,OACAkd,KAAAorC,UAAApo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","file":"itowns.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"itowns\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"itowns\"] = factory();\n\telse\n\t\troot[\"itowns\"] = factory();\n})(window, function() {\nreturn "," \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp_name_\"] = window[\"webpackJsonp_name_\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([325]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","// Polyfills\n\nif ( Number.EPSILON === undefined ) {\n\n\tNumber.EPSILON = Math.pow( 2, - 52 );\n\n}\n\nif ( Number.isInteger === undefined ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\n\n\tNumber.isInteger = function ( value ) {\n\n\t\treturn typeof value === 'number' && isFinite( value ) && Math.floor( value ) === value;\n\n\t};\n\n}\n\n//\n\nif ( Math.sign === undefined ) {\n\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n\n\tMath.sign = function ( x ) {\n\n\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\n\n\t};\n\n}\n\nif ( 'name' in Function.prototype === false ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n\n\tObject.defineProperty( Function.prototype, 'name', {\n\n\t\tget: function () {\n\n\t\t\treturn this.toString().match( /^\\s*function\\s*([^\\(\\s]*)/ )[ 1 ];\n\n\t\t}\n\n\t} );\n\n}\n\nif ( Object.assign === undefined ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\n\t( function () {\n\n\t\tObject.assign = function ( target ) {\n\n\t\t\tif ( target === undefined || target === null ) {\n\n\t\t\t\tthrow new TypeError( 'Cannot convert undefined or null to object' );\n\n\t\t\t}\n\n\t\t\tvar output = Object( target );\n\n\t\t\tfor ( var index = 1; index < arguments.length; index ++ ) {\n\n\t\t\t\tvar source = arguments[ index ];\n\n\t\t\t\tif ( source !== undefined && source !== null ) {\n\n\t\t\t\t\tfor ( var nextKey in source ) {\n\n\t\t\t\t\t\tif ( Object.prototype.hasOwnProperty.call( source, nextKey ) ) {\n\n\t\t\t\t\t\t\toutput[ nextKey ] = source[ nextKey ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn output;\n\n\t\t};\n\n\t} )();\n\n}\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nfunction EventDispatcher() {}\n\nObject.assign( EventDispatcher.prototype, {\n\n\taddEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tvar listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t},\n\n\thasEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tvar listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t},\n\n\tremoveEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tvar listeners = this._listeners;\n\t\tvar listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tvar index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tdispatchEvent: function ( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tvar listeners = this._listeners;\n\t\tvar listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\tvar array = listenerArray.slice( 0 );\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n} );\n\nvar REVISION = '97';\nvar MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\nvar CullFaceNone = 0;\nvar CullFaceBack = 1;\nvar CullFaceFront = 2;\nvar CullFaceFrontBack = 3;\nvar FrontFaceDirectionCW = 0;\nvar FrontFaceDirectionCCW = 1;\nvar BasicShadowMap = 0;\nvar PCFShadowMap = 1;\nvar PCFSoftShadowMap = 2;\nvar FrontSide = 0;\nvar BackSide = 1;\nvar DoubleSide = 2;\nvar FlatShading = 1;\nvar SmoothShading = 2;\nvar NoColors = 0;\nvar FaceColors = 1;\nvar VertexColors = 2;\nvar NoBlending = 0;\nvar NormalBlending = 1;\nvar AdditiveBlending = 2;\nvar SubtractiveBlending = 3;\nvar MultiplyBlending = 4;\nvar CustomBlending = 5;\nvar AddEquation = 100;\nvar SubtractEquation = 101;\nvar ReverseSubtractEquation = 102;\nvar MinEquation = 103;\nvar MaxEquation = 104;\nvar ZeroFactor = 200;\nvar OneFactor = 201;\nvar SrcColorFactor = 202;\nvar OneMinusSrcColorFactor = 203;\nvar SrcAlphaFactor = 204;\nvar OneMinusSrcAlphaFactor = 205;\nvar DstAlphaFactor = 206;\nvar OneMinusDstAlphaFactor = 207;\nvar DstColorFactor = 208;\nvar OneMinusDstColorFactor = 209;\nvar SrcAlphaSaturateFactor = 210;\nvar NeverDepth = 0;\nvar AlwaysDepth = 1;\nvar LessDepth = 2;\nvar LessEqualDepth = 3;\nvar EqualDepth = 4;\nvar GreaterEqualDepth = 5;\nvar GreaterDepth = 6;\nvar NotEqualDepth = 7;\nvar MultiplyOperation = 0;\nvar MixOperation = 1;\nvar AddOperation = 2;\nvar NoToneMapping = 0;\nvar LinearToneMapping = 1;\nvar ReinhardToneMapping = 2;\nvar Uncharted2ToneMapping = 3;\nvar CineonToneMapping = 4;\nvar UVMapping = 300;\nvar CubeReflectionMapping = 301;\nvar CubeRefractionMapping = 302;\nvar EquirectangularReflectionMapping = 303;\nvar EquirectangularRefractionMapping = 304;\nvar SphericalReflectionMapping = 305;\nvar CubeUVReflectionMapping = 306;\nvar CubeUVRefractionMapping = 307;\nvar RepeatWrapping = 1000;\nvar ClampToEdgeWrapping = 1001;\nvar MirroredRepeatWrapping = 1002;\nvar NearestFilter = 1003;\nvar NearestMipMapNearestFilter = 1004;\nvar NearestMipMapLinearFilter = 1005;\nvar LinearFilter = 1006;\nvar LinearMipMapNearestFilter = 1007;\nvar LinearMipMapLinearFilter = 1008;\nvar UnsignedByteType = 1009;\nvar ByteType = 1010;\nvar ShortType = 1011;\nvar UnsignedShortType = 1012;\nvar IntType = 1013;\nvar UnsignedIntType = 1014;\nvar FloatType = 1015;\nvar HalfFloatType = 1016;\nvar UnsignedShort4444Type = 1017;\nvar UnsignedShort5551Type = 1018;\nvar UnsignedShort565Type = 1019;\nvar UnsignedInt248Type = 1020;\nvar AlphaFormat = 1021;\nvar RGBFormat = 1022;\nvar RGBAFormat = 1023;\nvar LuminanceFormat = 1024;\nvar LuminanceAlphaFormat = 1025;\nvar RGBEFormat = RGBAFormat;\nvar DepthFormat = 1026;\nvar DepthStencilFormat = 1027;\nvar RedFormat = 1028;\nvar RGB_S3TC_DXT1_Format = 33776;\nvar RGBA_S3TC_DXT1_Format = 33777;\nvar RGBA_S3TC_DXT3_Format = 33778;\nvar RGBA_S3TC_DXT5_Format = 33779;\nvar RGB_PVRTC_4BPPV1_Format = 35840;\nvar RGB_PVRTC_2BPPV1_Format = 35841;\nvar RGBA_PVRTC_4BPPV1_Format = 35842;\nvar RGBA_PVRTC_2BPPV1_Format = 35843;\nvar RGB_ETC1_Format = 36196;\nvar RGBA_ASTC_4x4_Format = 37808;\nvar RGBA_ASTC_5x4_Format = 37809;\nvar RGBA_ASTC_5x5_Format = 37810;\nvar RGBA_ASTC_6x5_Format = 37811;\nvar RGBA_ASTC_6x6_Format = 37812;\nvar RGBA_ASTC_8x5_Format = 37813;\nvar RGBA_ASTC_8x6_Format = 37814;\nvar RGBA_ASTC_8x8_Format = 37815;\nvar RGBA_ASTC_10x5_Format = 37816;\nvar RGBA_ASTC_10x6_Format = 37817;\nvar RGBA_ASTC_10x8_Format = 37818;\nvar RGBA_ASTC_10x10_Format = 37819;\nvar RGBA_ASTC_12x10_Format = 37820;\nvar RGBA_ASTC_12x12_Format = 37821;\nvar LoopOnce = 2200;\nvar LoopRepeat = 2201;\nvar LoopPingPong = 2202;\nvar InterpolateDiscrete = 2300;\nvar InterpolateLinear = 2301;\nvar InterpolateSmooth = 2302;\nvar ZeroCurvatureEnding = 2400;\nvar ZeroSlopeEnding = 2401;\nvar WrapAroundEnding = 2402;\nvar TrianglesDrawMode = 0;\nvar TriangleStripDrawMode = 1;\nvar TriangleFanDrawMode = 2;\nvar LinearEncoding = 3000;\nvar sRGBEncoding = 3001;\nvar GammaEncoding = 3007;\nvar RGBEEncoding = 3002;\nvar LogLuvEncoding = 3003;\nvar RGBM7Encoding = 3004;\nvar RGBM16Encoding = 3005;\nvar RGBDEncoding = 3006;\nvar BasicDepthPacking = 3200;\nvar RGBADepthPacking = 3201;\nvar TangentSpaceNormalMap = 0;\nvar ObjectSpaceNormalMap = 1;\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar _Math = {\n\n\tDEG2RAD: Math.PI / 180,\n\tRAD2DEG: 180 / Math.PI,\n\n\tgenerateUUID: ( function () {\n\n\t\t// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n\n\t\tvar lut = [];\n\n\t\tfor ( var i = 0; i < 256; i ++ ) {\n\n\t\t\tlut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );\n\n\t\t}\n\n\t\treturn function generateUUID() {\n\n\t\t\tvar d0 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d1 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d2 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d3 = Math.random() * 0xffffffff | 0;\n\t\t\tvar uuid = lut[ d0 & 0xff ] + lut[ d0 >> 8 & 0xff ] + lut[ d0 >> 16 & 0xff ] + lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t\tlut[ d1 & 0xff ] + lut[ d1 >> 8 & 0xff ] + '-' + lut[ d1 >> 16 & 0x0f | 0x40 ] + lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t\tlut[ d2 & 0x3f | 0x80 ] + lut[ d2 >> 8 & 0xff ] + '-' + lut[ d2 >> 16 & 0xff ] + lut[ d2 >> 24 & 0xff ] +\n\t\t\t\tlut[ d3 & 0xff ] + lut[ d3 >> 8 & 0xff ] + lut[ d3 >> 16 & 0xff ] + lut[ d3 >> 24 & 0xff ];\n\n\t\t\t// .toUpperCase() here flattens concatenated strings to save heap memory space.\n\t\t\treturn uuid.toUpperCase();\n\n\t\t};\n\n\t} )(),\n\n\tclamp: function ( value, min, max ) {\n\n\t\treturn Math.max( min, Math.min( max, value ) );\n\n\t},\n\n\t// compute euclidian modulo of m % n\n\t// https://en.wikipedia.org/wiki/Modulo_operation\n\n\teuclideanModulo: function ( n, m ) {\n\n\t\treturn ( ( n % m ) + m ) % m;\n\n\t},\n\n\t// Linear mapping from range <a1, a2> to range <b1, b2>\n\n\tmapLinear: function ( x, a1, a2, b1, b2 ) {\n\n\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n\t},\n\n\t// https://en.wikipedia.org/wiki/Linear_interpolation\n\n\tlerp: function ( x, y, t ) {\n\n\t\treturn ( 1 - t ) * x + t * y;\n\n\t},\n\n\t// http://en.wikipedia.org/wiki/Smoothstep\n\n\tsmoothstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * ( 3 - 2 * x );\n\n\t},\n\n\tsmootherstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n\t},\n\n\t// Random integer from <low, high> interval\n\n\trandInt: function ( low, high ) {\n\n\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n\t},\n\n\t// Random float from <low, high> interval\n\n\trandFloat: function ( low, high ) {\n\n\t\treturn low + Math.random() * ( high - low );\n\n\t},\n\n\t// Random float from <-range/2, range/2> interval\n\n\trandFloatSpread: function ( range ) {\n\n\t\treturn range * ( 0.5 - Math.random() );\n\n\t},\n\n\tdegToRad: function ( degrees ) {\n\n\t\treturn degrees * _Math.DEG2RAD;\n\n\t},\n\n\tradToDeg: function ( radians ) {\n\n\t\treturn radians * _Math.RAD2DEG;\n\n\t},\n\n\tisPowerOfTwo: function ( value ) {\n\n\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n\t},\n\n\tceilPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n\t},\n\n\tfloorPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author philogb / http://blog.thejit.org/\n * @author egraether / http://egraether.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\nfunction Vector2( x, y ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\n}\n\nObject.defineProperties( Vector2.prototype, {\n\n\t\"width\": {\n\n\t\tget: function () {\n\n\t\t\treturn this.x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.x = value;\n\n\t\t}\n\n\t},\n\n\t\"height\": {\n\n\t\tget: function () {\n\n\t\t\treturn this.y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.y = value;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Vector2.prototype, {\n\n\tisVector2: true,\n\n\tset: function ( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tdivide: function ( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tvar x = this.x, y = this.y;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min = new Vector2();\n\t\tvar max = new Vector2();\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tmin.set( minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t},\n\n\tcross: function ( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tangle: function () {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tvar angle = Math.atan2( this.y, this.x );\n\n\t\tif ( angle < 0 ) angle += 2 * Math.PI;\n\n\t\treturn angle;\n\n\t},\n\n\tdistanceTo: function ( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t},\n\n\tdistanceToSquared: function ( v ) {\n\n\t\tvar dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t},\n\n\tmanhattanDistanceTo: function ( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t},\n\n\trotateAround: function ( center, angle ) {\n\n\t\tvar c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tvar x = this.x - center.x;\n\t\tvar y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author jordi_ros / http://plattsoft.com\n * @author D1plo1d / http://github.com/D1plo1d\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author timknip / http://www.floorplanner.com/\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Matrix4() {\n\n\tthis.elements = [\n\n\t\t1, 0, 0, 0,\n\t\t0, 1, 0, 0,\n\t\t0, 0, 1, 0,\n\t\t0, 0, 0, 1\n\n\t];\n\n\tif ( arguments.length > 0 ) {\n\n\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t}\n\n}\n\nObject.assign( Matrix4.prototype, {\n\n\tisMatrix4: true,\n\n\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t},\n\n\tidentity: function () {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t},\n\n\tcopy: function ( m ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t},\n\n\tcopyPosition: function ( m ) {\n\n\t\tvar te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\textractBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t},\n\n\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\textractRotation: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function extractRotation( m ) {\n\n\t\t\t// this method does not support reflection matrices\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = m.elements;\n\n\t\t\tvar scaleX = 1 / v1.setFromMatrixColumn( m, 0 ).length();\n\t\t\tvar scaleY = 1 / v1.setFromMatrixColumn( m, 1 ).length();\n\t\t\tvar scaleZ = 1 / v1.setFromMatrixColumn( m, 2 ).length();\n\n\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\t\tte[ 3 ] = 0;\n\n\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\t\tte[ 7 ] = 0;\n\n\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\t\tte[ 11 ] = 0;\n\n\t\t\tte[ 12 ] = 0;\n\t\t\tte[ 13 ] = 0;\n\t\t\tte[ 14 ] = 0;\n\t\t\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmakeRotationFromEuler: function ( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tvar te = this.elements;\n\n\t\tvar x = euler.x, y = euler.y, z = euler.z;\n\t\tvar a = Math.cos( x ), b = Math.sin( x );\n\t\tvar c = Math.cos( y ), d = Math.sin( y );\n\t\tvar e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationFromQuaternion: function () {\n\n\t\tvar zero = new Vector3( 0, 0, 0 );\n\t\tvar one = new Vector3( 1, 1, 1 );\n\n\t\treturn function makeRotationFromQuaternion( q ) {\n\n\t\t\treturn this.compose( zero, q, one );\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar x = new Vector3();\n\t\tvar y = new Vector3();\n\t\tvar z = new Vector3();\n\n\t\treturn function lookAt( eye, target, up ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tz.subVectors( eye, target );\n\n\t\t\tif ( z.lengthSq() === 0 ) {\n\n\t\t\t\t// eye and target are in the same position\n\n\t\t\t\tz.z = 1;\n\n\t\t\t}\n\n\t\t\tz.normalize();\n\t\t\tx.crossVectors( up, z );\n\n\t\t\tif ( x.lengthSq() === 0 ) {\n\n\t\t\t\t// up and z are parallel\n\n\t\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t\tz.x += 0.0001;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz.z += 0.0001;\n\n\t\t\t\t}\n\n\t\t\t\tz.normalize();\n\t\t\t\tx.crossVectors( up, z );\n\n\t\t\t}\n\n\t\t\tx.normalize();\n\t\t\ty.crossVectors( z, x );\n\n\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\n\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\n\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmultiply: function ( m, n ) {\n\n\t\tif ( n !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t}\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t},\n\n\tpremultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t},\n\n\tmultiplyMatrices: function ( a, b ) {\n\n\t\tvar ae = a.elements;\n\t\tvar be = b.elements;\n\t\tvar te = this.elements;\n\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t},\n\n\tapplyToBufferAttribute: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function applyToBufferAttribute( attribute ) {\n\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\tv1.x = attribute.getX( i );\n\t\t\t\tv1.y = attribute.getY( i );\n\t\t\t\tv1.z = attribute.getZ( i );\n\n\t\t\t\tv1.applyMatrix4( this );\n\n\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\n\n\t\t\t}\n\n\t\t\treturn attribute;\n\n\t\t};\n\n\t}(),\n\n\tdeterminant: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t},\n\n\ttranspose: function () {\n\n\t\tvar te = this.elements;\n\t\tvar tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t},\n\n\tsetPosition: function ( v ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 12 ] = v.x;\n\t\tte[ 13 ] = v.y;\n\t\tte[ 14 ] = v.z;\n\n\t\treturn this;\n\n\t},\n\n\tgetInverse: function ( m, throwOnDegenerate ) {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tvar te = this.elements,\n\t\t\tme = m.elements,\n\n\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],\n\t\t\tn12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],\n\t\t\tn13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],\n\t\t\tn14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tvar det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) {\n\n\t\t\tvar msg = \"THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0\";\n\n\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\tthrow new Error( msg );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( msg );\n\n\t\t\t}\n\n\t\t\treturn this.identity();\n\n\t\t}\n\n\t\tvar detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t},\n\n\tscale: function ( v ) {\n\n\t\tvar te = this.elements;\n\t\tvar x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t},\n\n\tgetMaxScaleOnAxis: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t},\n\n\tmakeTranslation: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, x,\n\t\t\t0, 1, 0, y,\n\t\t\t0, 0, 1, z,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationX: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationY: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationZ: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationAxis: function ( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tvar c = Math.cos( angle );\n\t\tvar s = Math.sin( angle );\n\t\tvar t = 1 - c;\n\t\tvar x = axis.x, y = axis.y, z = axis.z;\n\t\tvar tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\t return this;\n\n\t},\n\n\tmakeScale: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeShear: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, y, z, 0,\n\t\t\tx, 1, z, 0,\n\t\t\tx, y, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tcompose: function ( position, quaternion, scale ) {\n\n\t\tvar te = this.elements;\n\n\t\tvar x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tvar x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tvar sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t        te[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t        te[ 1 ] = ( xy + wz ) * sx;\n\t        te[ 2 ] = ( xz - wy ) * sx;\n\t        te[ 3 ] = 0;\n\n\t        te[ 4 ] = ( xy - wz ) * sy;\n\t        te[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t        te[ 6 ] = ( yz + wx ) * sy;\n\t        te[ 7 ] = 0;\n\n\t        te[ 8 ] = ( xz + wy ) * sz;\n\t        te[ 9 ] = ( yz - wx ) * sz;\n\t        te[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t        te[ 11 ] = 0;\n\n\t        te[ 12 ] = position.x;\n\t        te[ 13 ] = position.y;\n\t        te[ 14 ] = position.z;\n\t        te[ 15 ] = 1;\n\n\t        return this;\n\n\t},\n\n\tdecompose: function () {\n\n\t\tvar vector = new Vector3();\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function decompose( position, quaternion, scale ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t\t// if determine is negative, we need to invert one scale\n\t\t\tvar det = this.determinant();\n\t\t\tif ( det < 0 ) sx = - sx;\n\n\t\t\tposition.x = te[ 12 ];\n\t\t\tposition.y = te[ 13 ];\n\t\t\tposition.z = te[ 14 ];\n\n\t\t\t// scale the rotation part\n\t\t\tmatrix.copy( this );\n\n\t\t\tvar invSX = 1 / sx;\n\t\t\tvar invSY = 1 / sy;\n\t\t\tvar invSZ = 1 / sz;\n\n\t\t\tmatrix.elements[ 0 ] *= invSX;\n\t\t\tmatrix.elements[ 1 ] *= invSX;\n\t\t\tmatrix.elements[ 2 ] *= invSX;\n\n\t\t\tmatrix.elements[ 4 ] *= invSY;\n\t\t\tmatrix.elements[ 5 ] *= invSY;\n\t\t\tmatrix.elements[ 6 ] *= invSY;\n\n\t\t\tmatrix.elements[ 8 ] *= invSZ;\n\t\t\tmatrix.elements[ 9 ] *= invSZ;\n\t\t\tmatrix.elements[ 10 ] *= invSZ;\n\n\t\t\tquaternion.setFromRotationMatrix( matrix );\n\n\t\t\tscale.x = sx;\n\t\t\tscale.y = sy;\n\t\t\tscale.z = sz;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmakePerspective: function ( left, right, top, bottom, near, far ) {\n\n\t\tif ( far === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\n\n\t\t}\n\n\t\tvar te = this.elements;\n\t\tvar x = 2 * near / ( right - left );\n\t\tvar y = 2 * near / ( top - bottom );\n\n\t\tvar a = ( right + left ) / ( right - left );\n\t\tvar b = ( top + bottom ) / ( top - bottom );\n\t\tvar c = - ( far + near ) / ( far - near );\n\t\tvar d = - 2 * far * near / ( far - near );\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t},\n\n\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\n\n\t\tvar te = this.elements;\n\t\tvar w = 1.0 / ( right - left );\n\t\tvar h = 1.0 / ( top - bottom );\n\t\tvar p = 1.0 / ( far - near );\n\n\t\tvar x = ( right + left ) * w;\n\t\tvar y = ( top + bottom ) * h;\n\t\tvar z = ( far + near ) * p;\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( matrix ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = matrix.elements;\n\n\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nfunction Quaternion( x, y, z, w ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._w = ( w !== undefined ) ? w : 1;\n\n}\n\nObject.assign( Quaternion, {\n\n\tslerp: function ( qa, qb, qm, t ) {\n\n\t\treturn qm.copy( qa ).slerp( qb, t );\n\n\t},\n\n\tslerpFlat: function ( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tvar x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ],\n\n\t\t\tx1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tvar s = 1 - t,\n\n\t\t\t\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tvar sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tvar tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n} );\n\nObject.defineProperties( Quaternion.prototype, {\n\n\tx: {\n\n\t\tget: function () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\ty: {\n\n\t\tget: function () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tz: {\n\n\t\tget: function () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tw: {\n\n\t\tget: function () {\n\n\t\t\treturn this._w;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._w = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Quaternion.prototype, {\n\n\tisQuaternion: true,\n\n\tset: function ( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t},\n\n\tcopy: function ( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromEuler: function ( euler, update ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tvar x = euler._x, y = euler._y, z = euler._z, order = euler.order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tvar cos = Math.cos;\n\t\tvar sin = Math.sin;\n\n\t\tvar c1 = cos( x / 2 );\n\t\tvar c2 = cos( y / 2 );\n\t\tvar c3 = cos( z / 2 );\n\n\t\tvar s1 = sin( x / 2 );\n\t\tvar s2 = sin( y / 2 );\n\t\tvar s3 = sin( z / 2 );\n\n\t\tif ( order === 'XYZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( order === 'YZX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'XZY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t}\n\n\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromAxisAngle: function ( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33,\n\t\t\ts;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromUnitVectors: function () {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tvar v1 = new Vector3();\n\t\tvar r;\n\n\t\tvar EPS = 0.000001;\n\n\t\treturn function setFromUnitVectors( vFrom, vTo ) {\n\n\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\n\t\t\tr = vFrom.dot( vTo ) + 1;\n\n\t\t\tif ( r < EPS ) {\n\n\t\t\t\tr = 0;\n\n\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\t\tv1.set( - vFrom.y, vFrom.x, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv1.set( 0, - vFrom.z, vFrom.y );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tv1.crossVectors( vFrom, vTo );\n\n\t\t\t}\n\n\t\t\tthis._x = v1.x;\n\t\t\tthis._y = v1.y;\n\t\t\tthis._z = v1.z;\n\t\t\tthis._w = r;\n\n\t\t\treturn this.normalize();\n\n\t\t};\n\n\t}(),\n\n\tangleTo: function ( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( _Math.clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t},\n\n\trotateTowards: function ( q, step ) {\n\n\t\tvar angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tvar t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t},\n\n\tinverse: function () {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t},\n\n\tconjugate: function () {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t},\n\n\tnormalize: function () {\n\n\t\tvar l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( q, p ) {\n\n\t\tif ( p !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t}\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t},\n\n\tpremultiply: function ( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t},\n\n\tmultiplyQuaternions: function ( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tslerp: function ( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tvar s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\treturn this.normalize();\n\n\t\t}\n\n\t\tvar sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t},\n\n\tonChange: function ( callback ) {\n\n\t\tthis.onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tonChangeCallback: function () {}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Vector3( x, y, z ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\tthis.z = z || 0;\n\n}\n\nObject.assign( Vector3.prototype, {\n\n\tisVector3: true,\n\n\tset: function ( x, y, z ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t}\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyVectors: function ( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyEuler: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function applyEuler( euler ) {\n\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\treturn this.applyQuaternion( quaternion.setFromEuler( euler ) );\n\n\t\t};\n\n\t}(),\n\n\tapplyAxisAngle: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function applyAxisAngle( axis, angle ) {\n\n\t\t\treturn this.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\n\n\t\t};\n\n\t}(),\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tvar w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t},\n\n\tapplyQuaternion: function ( q ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tvar ix = qw * x + qy * z - qz * y;\n\t\tvar iy = qw * y + qz * x - qx * z;\n\t\tvar iz = qw * z + qx * y - qy * x;\n\t\tvar iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t},\n\n\tproject: function ( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t},\n\n\tunproject: function () {\n\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function unproject( camera ) {\n\n\t\t\treturn this.applyMatrix4( matrix.getInverse( camera.projectionMatrix ) ).applyMatrix4( camera.matrixWorld );\n\n\t\t};\n\n\t}(),\n\n\ttransformDirection: function ( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t},\n\n\tdivide: function ( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min = new Vector3();\n\t\tvar max = new Vector3();\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tmin.set( minVal, minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t},\n\n\t// TODO lengthSquared?\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tcross: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\treturn this.crossVectors( v, w );\n\n\t\t}\n\n\t\treturn this.crossVectors( this, v );\n\n\t},\n\n\tcrossVectors: function ( a, b ) {\n\n\t\tvar ax = a.x, ay = a.y, az = a.z;\n\t\tvar bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t},\n\n\tprojectOnVector: function ( vector ) {\n\n\t\tvar scalar = vector.dot( this ) / vector.lengthSq();\n\n\t\treturn this.copy( vector ).multiplyScalar( scalar );\n\n\t},\n\n\tprojectOnPlane: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function projectOnPlane( planeNormal ) {\n\n\t\t\tv1.copy( this ).projectOnVector( planeNormal );\n\n\t\t\treturn this.sub( v1 );\n\n\t\t};\n\n\t}(),\n\n\treflect: function () {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function reflect( normal ) {\n\n\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t\t};\n\n\t}(),\n\n\tangleTo: function ( v ) {\n\n\t\tvar theta = this.dot( v ) / ( Math.sqrt( this.lengthSq() * v.lengthSq() ) );\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( _Math.clamp( theta, - 1, 1 ) );\n\n\t},\n\n\tdistanceTo: function ( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t},\n\n\tdistanceToSquared: function ( v ) {\n\n\t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t},\n\n\tmanhattanDistanceTo: function ( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t},\n\n\tsetFromSpherical: function ( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t},\n\n\tsetFromSphericalCoords: function ( radius, phi, theta ) {\n\n\t\tvar sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCylindrical: function ( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t},\n\n\tsetFromCylindricalCoords: function ( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixPosition: function ( m ) {\n\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixScale: function ( m ) {\n\n\t\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixColumn: function ( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n * @author tschw\n */\n\nfunction Matrix3() {\n\n\tthis.elements = [\n\n\t\t1, 0, 0,\n\t\t0, 1, 0,\n\t\t0, 0, 1\n\n\t];\n\n\tif ( arguments.length > 0 ) {\n\n\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n\n\t}\n\n}\n\nObject.assign( Matrix3.prototype, {\n\n\tisMatrix3: true,\n\n\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t},\n\n\tidentity: function () {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t},\n\n\tcopy: function ( m ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrix4: function ( m ) {\n\n\t\tvar me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tapplyToBufferAttribute: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function applyToBufferAttribute( attribute ) {\n\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\tv1.x = attribute.getX( i );\n\t\t\t\tv1.y = attribute.getY( i );\n\t\t\t\tv1.z = attribute.getZ( i );\n\n\t\t\t\tv1.applyMatrix3( this );\n\n\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\n\n\t\t\t}\n\n\t\t\treturn attribute;\n\n\t\t};\n\n\t}(),\n\n\tmultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t},\n\n\tpremultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t},\n\n\tmultiplyMatrices: function ( a, b ) {\n\n\t\tvar ae = a.elements;\n\t\tvar be = b.elements;\n\t\tvar te = this.elements;\n\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tvar b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tvar b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tvar b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t},\n\n\tdeterminant: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t},\n\n\tgetInverse: function ( matrix, throwOnDegenerate ) {\n\n\t\tif ( matrix && matrix.isMatrix4 ) {\n\n\t\t\tconsole.error( \"THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.\" );\n\n\t\t}\n\n\t\tvar me = matrix.elements,\n\t\t\tte = this.elements,\n\n\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ],\n\t\t\tn12 = me[ 3 ], n22 = me[ 4 ], n32 = me[ 5 ],\n\t\t\tn13 = me[ 6 ], n23 = me[ 7 ], n33 = me[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) {\n\n\t\t\tvar msg = \"THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0\";\n\n\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\tthrow new Error( msg );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( msg );\n\n\t\t\t}\n\n\t\t\treturn this.identity();\n\n\t\t}\n\n\t\tvar detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t},\n\n\ttranspose: function () {\n\n\t\tvar tmp, m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t},\n\n\tgetNormalMatrix: function ( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).getInverse( this ).transpose();\n\n\t},\n\n\ttransposeIntoArray: function ( r ) {\n\n\t\tvar m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetUvTransform: function ( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tvar c = Math.cos( rotation );\n\t\tvar s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t},\n\n\tscale: function ( sx, sy ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx;\n\t\tte[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy;\n\n\t\treturn this;\n\n\t},\n\n\trotate: function ( theta ) {\n\n\t\tvar c = Math.cos( theta );\n\t\tvar s = Math.sin( theta );\n\n\t\tvar te = this.elements;\n\n\t\tvar a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ];\n\t\tvar a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ];\n\n\t\tte[ 0 ] = c * a11 + s * a21;\n\t\tte[ 3 ] = c * a12 + s * a22;\n\t\tte[ 6 ] = c * a13 + s * a23;\n\n\t\tte[ 1 ] = - s * a11 + c * a21;\n\t\tte[ 4 ] = - s * a12 + c * a22;\n\t\tte[ 7 ] = - s * a13 + c * a23;\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( tx, ty ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] += tx * te[ 2 ]; te[ 3 ] += tx * te[ 5 ]; te[ 6 ] += tx * te[ 8 ];\n\t\tte[ 1 ] += ty * te[ 2 ]; te[ 4 ] += ty * te[ 5 ]; te[ 7 ] += ty * te[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( matrix ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = matrix.elements;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n */\n\nvar ImageUtils = {\n\n\tgetDataURL: function ( image ) {\n\n\t\tvar canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tcanvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\tcanvas.width = image.width;\n\t\t\tcanvas.height = image.height;\n\n\t\t\tvar context = canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n */\n\nvar textureId = 0;\n\nfunction Texture( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\n\tthis.image = image !== undefined ? image : Texture.DEFAULT_IMAGE;\n\tthis.mipmaps = [];\n\n\tthis.mapping = mapping !== undefined ? mapping : Texture.DEFAULT_MAPPING;\n\n\tthis.wrapS = wrapS !== undefined ? wrapS : ClampToEdgeWrapping;\n\tthis.wrapT = wrapT !== undefined ? wrapT : ClampToEdgeWrapping;\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : LinearMipMapLinearFilter;\n\n\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\n\n\tthis.format = format !== undefined ? format : RGBAFormat;\n\tthis.type = type !== undefined ? type : UnsignedByteType;\n\n\tthis.offset = new Vector2( 0, 0 );\n\tthis.repeat = new Vector2( 1, 1 );\n\tthis.center = new Vector2( 0, 0 );\n\tthis.rotation = 0;\n\n\tthis.matrixAutoUpdate = true;\n\tthis.matrix = new Matrix3();\n\n\tthis.generateMipmaps = true;\n\tthis.premultiplyAlpha = false;\n\tthis.flipY = true;\n\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t//\n\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t// update.  You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\tthis.encoding = encoding !== undefined ? encoding : LinearEncoding;\n\n\tthis.version = 0;\n\tthis.onUpdate = null;\n\n}\n\nTexture.DEFAULT_IMAGE = undefined;\nTexture.DEFAULT_MAPPING = UVMapping;\n\nTexture.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Texture,\n\n\tisTexture: true,\n\n\tupdateMatrix: function () {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.image = source.image;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.encoding = source.encoding;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tvar output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\tmapping: this.mapping,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY\n\n\t\t};\n\n\t\tif ( this.image !== undefined ) {\n\n\t\t\t// TODO: Move to THREE.Image\n\n\t\t\tvar image = this.image;\n\n\t\t\tif ( image.uuid === undefined ) {\n\n\t\t\t\timage.uuid = _Math.generateUUID(); // UGH\n\n\t\t\t}\n\n\t\t\tif ( ! isRootObject && meta.images[ image.uuid ] === undefined ) {\n\n\t\t\t\tvar url;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\t// process array of images e.g. CubeTexture\n\n\t\t\t\t\turl = [];\n\n\t\t\t\t\tfor ( var i = 0, l = image.length; i < l; i ++ ) {\n\n\t\t\t\t\t\turl.push( ImageUtils.getDataURL( image[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// process single image\n\n\t\t\t\t\turl = ImageUtils.getDataURL( image );\n\n\t\t\t\t}\n\n\t\t\t\tmeta.images[ image.uuid ] = {\n\t\t\t\t\tuuid: image.uuid,\n\t\t\t\t\turl: url\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\toutput.image = image.uuid;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t},\n\n\ttransformUv: function ( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n} );\n\nObject.defineProperty( Texture.prototype, \"needsUpdate\", {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Vector4( x, y, z, w ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\tthis.z = z || 0;\n\tthis.w = ( w !== undefined ) ? w : 1;\n\n}\n\nObject.assign( Vector4.prototype, {\n\n\tisVector4: true,\n\n\tset: function ( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetW: function ( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tsetAxisAngleFromQuaternion: function ( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tvar s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetAxisAngleFromRotationMatrix: function ( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar angle, x, y, z,\t\t// variables for result\n\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tvar xx = ( m11 + 1 ) / 2;\n\t\t\tvar yy = ( m22 + 1 ) / 2;\n\t\t\tvar zz = ( m33 + 1 ) / 2;\n\t\t\tvar xy = ( m12 + m21 ) / 4;\n\t\t\tvar xz = ( m13 + m31 ) / 4;\n\t\t\tvar yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t                   ( m13 - m31 ) * ( m13 - m31 ) +\n\t\t                   ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min, max;\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tif ( min === undefined ) {\n\n\t\t\t\tmin = new Vector4();\n\t\t\t\tmax = new Vector4();\n\n\t\t\t}\n\n\t\t\tmin.set( minVal, minVal, minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author szimek / https://github.com/szimek/\n * @author alteredq / http://alteredqualia.com/\n * @author Marius Kintel / https://github.com/kintel\n */\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nfunction WebGLRenderTarget( width, height, options ) {\n\n\tthis.width = width;\n\tthis.height = height;\n\n\tthis.scissor = new Vector4( 0, 0, width, height );\n\tthis.scissorTest = false;\n\n\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\toptions = options || {};\n\n\tif ( options.minFilter === undefined ) options.minFilter = LinearFilter;\n\n\tthis.texture = new Texture( undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : true;\n\n\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\n\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n}\n\nWebGLRenderTarget.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: WebGLRenderTarget,\n\n\tisWebGLRenderTarget: true,\n\n\tsetSize: function ( width, height ) {\n\n\t\tif ( this.width !== width || this.height !== height ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\tthis.depthTexture = source.depthTexture;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com\n */\n\nfunction WebGLRenderTargetCube( width, height, options ) {\n\n\tWebGLRenderTarget.call( this, width, height, options );\n\n\tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\n\tthis.activeMipMapLevel = 0;\n\n}\n\nWebGLRenderTargetCube.prototype = Object.create( WebGLRenderTarget.prototype );\nWebGLRenderTargetCube.prototype.constructor = WebGLRenderTargetCube;\n\nWebGLRenderTargetCube.prototype.isWebGLRenderTargetCube = true;\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction DataTexture( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.image = { data: data, width: width, height: height };\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\tthis.generateMipmaps = false;\n\tthis.flipY = false;\n\tthis.unpackAlignment = 1;\n\n}\n\nDataTexture.prototype = Object.create( Texture.prototype );\nDataTexture.prototype.constructor = DataTexture;\n\nDataTexture.prototype.isDataTexture = true;\n\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Box3( min, max ) {\n\n\tthis.min = ( min !== undefined ) ? min : new Vector3( + Infinity, + Infinity, + Infinity );\n\tthis.max = ( max !== undefined ) ? max : new Vector3( - Infinity, - Infinity, - Infinity );\n\n}\n\nObject.assign( Box3.prototype, {\n\n\tisBox3: true,\n\n\tset: function ( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromArray: function ( array ) {\n\n\t\tvar minX = + Infinity;\n\t\tvar minY = + Infinity;\n\t\tvar minZ = + Infinity;\n\n\t\tvar maxX = - Infinity;\n\t\tvar maxY = - Infinity;\n\t\tvar maxZ = - Infinity;\n\n\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\tvar x = array[ i ];\n\t\t\tvar y = array[ i + 1 ];\n\t\t\tvar z = array[ i + 2 ];\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromBufferAttribute: function ( attribute ) {\n\n\t\tvar minX = + Infinity;\n\t\tvar minY = + Infinity;\n\t\tvar minZ = + Infinity;\n\n\t\tvar maxX = - Infinity;\n\t\tvar maxY = - Infinity;\n\t\tvar maxZ = - Infinity;\n\n\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\tvar x = attribute.getX( i );\n\t\t\tvar y = attribute.getY( i );\n\t\t\tvar z = attribute.getZ( i );\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCenterAndSize: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\n\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetFromObject: function ( object ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tmakeEmpty: function () {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t},\n\n\tisEmpty: function () {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getCenter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t},\n\n\tgetSize: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getSize() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t},\n\n\texpandByPoint: function ( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t},\n\n\texpandByVector: function ( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t},\n\n\texpandByScalar: function ( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t},\n\n\texpandByObject: function () {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tvar scope, i, l;\n\n\t\tvar v1 = new Vector3();\n\n\t\tfunction traverse( node ) {\n\n\t\t\tvar geometry = node.geometry;\n\n\t\t\tif ( geometry !== undefined ) {\n\n\t\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\t\tfor ( i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tv1.copy( vertices[ i ] );\n\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( geometry.isBufferGeometry ) {\n\n\t\t\t\t\tvar attribute = geometry.attributes.position;\n\n\t\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\t\tfor ( i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tv1.fromBufferAttribute( attribute, i ).applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn function expandByObject( object ) {\n\n\t\t\tscope = this;\n\n\t\t\tobject.updateMatrixWorld( true );\n\n\t\t\tobject.traverse( traverse );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t},\n\n\tcontainsBox: function ( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t},\n\n\tgetParameter: function ( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getParameter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t},\n\n\tintersectsSphere: ( function () {\n\n\t\tvar closestPoint = new Vector3();\n\n\t\treturn function intersectsSphere( sphere ) {\n\n\t\t\t// Find the point on the AABB closest to the sphere center.\n\t\t\tthis.clampPoint( sphere.center, closestPoint );\n\n\t\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\t\treturn closestPoint.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t\t};\n\n\t} )(),\n\n\tintersectsPlane: function ( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tvar min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t},\n\n\tintersectsTriangle: ( function () {\n\n\t\t// triangle centered vertices\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\t// triangle edge vectors\n\t\tvar f0 = new Vector3();\n\t\tvar f1 = new Vector3();\n\t\tvar f2 = new Vector3();\n\n\t\tvar testAxis = new Vector3();\n\n\t\tvar center = new Vector3();\n\t\tvar extents = new Vector3();\n\n\t\tvar triangleNormal = new Vector3();\n\n\t\tfunction satForAxes( axes ) {\n\n\t\t\tvar i, j;\n\n\t\t\tfor ( i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t\t\ttestAxis.fromArray( axes, i );\n\t\t\t\t// project the aabb onto the seperating axis\n\t\t\t\tvar r = extents.x * Math.abs( testAxis.x ) + extents.y * Math.abs( testAxis.y ) + extents.z * Math.abs( testAxis.z );\n\t\t\t\t// project all 3 vertices of the triangle onto the seperating axis\n\t\t\t\tvar p0 = v0.dot( testAxis );\n\t\t\t\tvar p1 = v1.dot( testAxis );\n\t\t\t\tvar p2 = v2.dot( testAxis );\n\t\t\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\t\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t\t\t// the axis is seperating and we can exit\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn function intersectsTriangle( triangle ) {\n\n\t\t\tif ( this.isEmpty() ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// compute box center and extents\n\t\t\tthis.getCenter( center );\n\t\t\textents.subVectors( this.max, center );\n\n\t\t\t// translate triangle to aabb origin\n\t\t\tv0.subVectors( triangle.a, center );\n\t\t\tv1.subVectors( triangle.b, center );\n\t\t\tv2.subVectors( triangle.c, center );\n\n\t\t\t// compute edge vectors for triangle\n\t\t\tf0.subVectors( v1, v0 );\n\t\t\tf1.subVectors( v2, v1 );\n\t\t\tf2.subVectors( v0, v2 );\n\n\t\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\t\tvar axes = [\n\t\t\t\t0, - f0.z, f0.y, 0, - f1.z, f1.y, 0, - f2.z, f2.y,\n\t\t\t\tf0.z, 0, - f0.x, f1.z, 0, - f1.x, f2.z, 0, - f2.x,\n\t\t\t\t- f0.y, f0.x, 0, - f1.y, f1.x, 0, - f2.y, f2.x, 0\n\t\t\t];\n\t\t\tif ( ! satForAxes( axes ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// test 3 face normals from the aabb\n\t\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\t\tif ( ! satForAxes( axes ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// finally testing the face normal of the triangle\n\t\t\t// use already existing triangle edge vectors here\n\t\t\ttriangleNormal.crossVectors( f0, f1 );\n\t\t\taxes = [ triangleNormal.x, triangleNormal.y, triangleNormal.z ];\n\t\t\treturn satForAxes( axes );\n\n\t\t};\n\n\t} )(),\n\n\tclampPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t},\n\n\tdistanceToPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function distanceToPoint( point ) {\n\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t};\n\n\t}(),\n\n\tgetBoundingSphere: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function getBoundingSphere( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Box3: .getBoundingSphere() target is now required' );\n\t\t\t\ttarget = new Sphere();\n\n\t\t\t}\n\n\t\t\tthis.getCenter( target.center );\n\n\t\t\ttarget.radius = this.getSize( v1 ).length() * 0.5;\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}(),\n\n\tintersect: function ( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t},\n\n\tunion: function ( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function () {\n\n\t\tvar points = [\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3()\n\t\t];\n\n\t\treturn function applyMatrix4( matrix ) {\n\n\t\t\t// transform of empty box is an empty box.\n\t\t\tif ( this.isEmpty() ) return this;\n\n\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t\tpoints[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t\tpoints[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t\tpoints[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t\tpoints[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t\tpoints[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t\tpoints[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t\tpoints[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t\tpoints[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Sphere( center, radius ) {\n\n\tthis.center = ( center !== undefined ) ? center : new Vector3();\n\tthis.radius = ( radius !== undefined ) ? radius : 0;\n\n}\n\nObject.assign( Sphere.prototype, {\n\n\tset: function ( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function () {\n\n\t\tvar box = new Box3();\n\n\t\treturn function setFromPoints( points, optionalCenter ) {\n\n\t\t\tvar center = this.center;\n\n\t\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\t\tcenter.copy( optionalCenter );\n\n\t\t\t} else {\n\n\t\t\t\tbox.setFromPoints( points ).getCenter( center );\n\n\t\t\t}\n\n\t\t\tvar maxRadiusSq = 0;\n\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t\t}\n\n\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t},\n\n\tempty: function () {\n\n\t\treturn ( this.radius <= 0 );\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\tvar radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t},\n\n\tintersectsPlane: function ( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t},\n\n\tclampPoint: function ( point, target ) {\n\n\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t},\n\n\tgetBoundingBox: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .getBoundingBox() target is now required' );\n\t\t\ttarget = new Box3();\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Plane( normal, constant ) {\n\n\t// normal is assumed to be normalized\n\n\tthis.normal = ( normal !== undefined ) ? normal : new Vector3( 1, 0, 0 );\n\tthis.constant = ( constant !== undefined ) ? constant : 0;\n\n}\n\nObject.assign( Plane.prototype, {\n\n\tset: function ( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponents: function ( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCoplanarPoints: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function setFromCoplanarPoints( a, b, c ) {\n\n\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\n\n\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t},\n\n\tnormalize: function () {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tvar inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t},\n\n\tdistanceToSphere: function ( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t},\n\n\tprojectPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .projectPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\n\n\t},\n\n\tintersectLine: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function intersectLine( line, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Plane: .intersectLine() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tvar direction = line.delta( v1 );\n\n\t\t\tvar denominator = this.normal.dot( direction );\n\n\t\t\tif ( denominator === 0 ) {\n\n\t\t\t\t// line is coplanar, return origin\n\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\t\treturn target.copy( line.start );\n\n\t\t\t\t}\n\n\t\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn target.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t\t};\n\n\t}(),\n\n\tintersectsLine: function ( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tvar startSign = this.distanceToPoint( line.start );\n\t\tvar endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t},\n\n\tcoplanarPoint: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .coplanarPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t},\n\n\tapplyMatrix4: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar m1 = new Matrix3();\n\n\t\treturn function applyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\n\n\t\t\tvar referencePoint = this.coplanarPoint( v1 ).applyMatrix4( matrix );\n\n\t\t\tvar normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / http://clara.io\n */\n\nfunction Frustum( p0, p1, p2, p3, p4, p5 ) {\n\n\tthis.planes = [\n\n\t\t( p0 !== undefined ) ? p0 : new Plane(),\n\t\t( p1 !== undefined ) ? p1 : new Plane(),\n\t\t( p2 !== undefined ) ? p2 : new Plane(),\n\t\t( p3 !== undefined ) ? p3 : new Plane(),\n\t\t( p4 !== undefined ) ? p4 : new Plane(),\n\t\t( p5 !== undefined ) ? p5 : new Plane()\n\n\t];\n\n}\n\nObject.assign( Frustum.prototype, {\n\n\tset: function ( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tvar planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( frustum ) {\n\n\t\tvar planes = this.planes;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrix: function ( m ) {\n\n\t\tvar planes = this.planes;\n\t\tvar me = m.elements;\n\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\treturn this;\n\n\t},\n\n\tintersectsObject: function () {\n\n\t\tvar sphere = new Sphere();\n\n\t\treturn function intersectsObject( object ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null )\n\t\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere )\n\t\t\t\t.applyMatrix4( object.matrixWorld );\n\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSprite: function () {\n\n\t\tvar sphere = new Sphere();\n\n\t\treturn function intersectsSprite( sprite ) {\n\n\t\t\tsphere.center.set( 0, 0, 0 );\n\t\t\tsphere.radius = 0.7071067811865476;\n\t\t\tsphere.applyMatrix4( sprite.matrixWorld );\n\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\tvar planes = this.planes;\n\t\tvar center = sphere.center;\n\t\tvar negRadius = - sphere.radius;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tvar distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tintersectsBox: function () {\n\n\t\tvar p = new Vector3();\n\n\t\treturn function intersectsBox( box ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tvar plane = planes[ i ];\n\n\t\t\t\t// corner at max distance\n\n\t\t\t\tp.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t\tp.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t\tp.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\t\tif ( plane.distanceToPoint( p ) < 0 ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function ( point ) {\n\n\t\tvar planes = this.planes;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n} );\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\\n\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\\n\";\n\nvar alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\\n\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\\n\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar begin_vertex = \"\\nvec3 transformed = vec3( position );\\n\";\n\nvar beginnormal_vertex = \"\\nvec3 objectNormal = vec3( normal );\\n\";\n\nvar bsdfs = \"float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\tif( cutoffDistance > 0.0 ) {\\n\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t}\\n\\treturn distanceFalloff;\\n#else\\n\\tif( cutoffDistance > 0.0 ) {\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t}\\n\\treturn 1.0;\\n#endif\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE  = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\n\\treturn specularColor * AB.x + AB.y;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\\n\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\\n\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\t#if ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\\n\\t\\tvarying vec3 vViewPosition;\\n\\t#endif\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\\n\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n\";\n\nvar color_fragment = \"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\\n\";\n\nvar color_pars_vertex = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define PI_HALF 1.5707963267949\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\n\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\\tvec3 absDirection = abs(direction);\\n\\tint face = -1;\\n\\tif( absDirection.x > absDirection.z ) {\\n\\t\\tif(absDirection.x > absDirection.y )\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\telse {\\n\\t\\tif(absDirection.z > absDirection.y )\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\\tfloat dxRoughness = dFdx(roughness);\\n\\tfloat dyRoughness = dFdy(roughness);\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\\tfloat mipLevel = 0.5 * log2(d);\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\\tbool bRes = mipLevel == 0.0;\\n\\tscale =  bRes && (scale < a) ? a : scale;\\n\\tvec3 r;\\n\\tvec2 offset;\\n\\tint face = getFaceFromDirection(direction);\\n\\tfloat rcpPowScale = 1.0 / powScale;\\n\\tif( face == 0) {\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 1) {\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 2) {\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 3) {\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse if( face == 4) {\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse {\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\tr = normalize(r);\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\\tvec2 base = offset + vec2( texelOffset );\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV( sampler2D envMap, vec3 reflectedDirection, float roughness ) {\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\\tfloat r1 = floor(roughnessVal);\\n\\tfloat r2 = r1 + 1.0;\\n\\tfloat t = fract(roughnessVal);\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\\tfloat s = mipInfo.y;\\n\\tfloat level0 = mipInfo.x;\\n\\tfloat level1 = level0 + 1.0;\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\\tvec4 result = mix(color10, color20, t);\\n\\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\\n\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = normalMatrix * objectNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\\n\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\\n\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\\n\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\\n\";\n\nvar encodings_fragment = \"  gl_FragColor = linearToOutputTexel( gl_FragColor );\\n\";\n\nvar encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat D = max( maxRange / maxRGB, 1.0 );\\n\\tD = min( floor( D ) / 255.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n\\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\n\\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract( Le );\\n\\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\n\\treturn vec4( max( vRGB, 0.0 ), 1.0 );\\n}\\n\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\\n\";\n\nvar envmap_pars_fragment = \"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\\tuniform float reflectivity;\\n\\tuniform float envMapIntensity;\\n#endif\\n#ifdef USE_ENVMAP\\n\\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\tuniform float flipEnvMap;\\n\\tuniform int maxMipLevel;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\\n\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\\n\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\n\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tfogDepth = -mvPosition.z;\\n#endif\\n\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float fogDepth;\\n#endif\\n\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\\n\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\\n\";\n\nvar gradientmap_pars_fragment = \"#ifdef TOON\\n\\tuniform sampler2D gradientMap;\\n\\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\t\\tfloat dotNL = dot( normal, lightDirection );\\n\\t\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t\\t#ifdef USE_GRADIENTMAP\\n\\t\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\\n\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\nvar lights_pars_begin = \"uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t\\tfloat shadowCameraNear;\\n\\t\\tfloat shadowCameraFar;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\\n\";\n\nvar envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, queryVec, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent ));\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\\n\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\\n\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifdef TOON\\n\\t\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#else\\n\\t\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\t\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#endif\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\\n\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.clearCoat = saturate( clearCoat );\\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\\n#endif\\n\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoat;\\n\\t\\tfloat clearCoatRoughness;\\n\\t#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos - halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n\\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifndef STANDARD\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\tfloat dotNL = dotNV;\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\\n\";\n\nvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearCoatRadiance = vec3( 0.0 );\\n#endif\\n\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tirradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), maxMipLevel );\\n\\t#ifndef STANDARD\\n\\t\\tclearCoatRadiance += getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), maxMipLevel );\\n\\t#endif\\n#endif\\n\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\\n#endif\\n\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n#endif\\n\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\\n\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t#else\\n\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\tgl_Position.z *= gl_Position.w;\\n\\t#endif\\n#endif\\n\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\\n\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n\";\n\nvar map_particle_fragment = \"#ifdef USE_MAP\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n\";\n\nvar map_particle_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform mat3 uvTransform;\\n\\tuniform sampler2D map;\\n#endif\\n\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\\n\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\\n\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\\n\";\n\nvar normal_fragment_begin = \"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n#endif\\n\";\n\nvar normal_fragment_maps = \"#ifdef USE_NORMALMAP\\n\\t#ifdef OBJECTSPACE_NORMALMAP\\n\\t\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\t#ifdef FLIP_SIDED\\n\\t\\t\\tnormal = - normal;\\n\\t\\t#endif\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t#endif\\n\\t\\tnormal = normalize( normalMatrix * normal );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\\n\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n\\t#ifdef OBJECTSPACE_NORMALMAP\\n\\t\\tuniform mat3 normalMatrix;\\n\\t#else\\n\\t\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\t\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\t\\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\\n\\t\\t\\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\\n\\t\\t\\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\\n\\t\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\t\\tmapN.xy *= normalScale;\\n\\t\\t\\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t\\treturn normalize( tsn * mapN );\\n\\t\\t}\\n\\t#endif\\n#endif\\n\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\\n\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\\n\";\n\nvar project_vertex = \"vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\ngl_Position = projectionMatrix * mvPosition;\\n\";\n\nvar dithering_fragment = \"#if defined( DITHERING )\\n  gl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\\n\";\n\nvar dithering_pars_fragment = \"#if defined( DITHERING )\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\\n\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\\n\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / size;\\n\\t\\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\n\\t\\tfloat a = mix( lb, lt, f.y );\\n\\t\\tfloat b = mix( rb, rt, f.y );\\n\\t\\tfloat c = mix( a, b, f.x );\\n\\t\\treturn c;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\nvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n#endif\\n\";\n\nvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n#endif\\n\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\\n\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\\n\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\\n\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n#endif\\n\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\\n\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n\\t#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\n\";\n\nvar uv_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\\n\";\n\nvar uv_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n\nvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = uv2;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\\n\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n#endif\\n\";\n\nvar background_frag = \"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tgl_FragColor = texture2D( t2D, vUv );\\n}\\n\";\n\nvar background_vert = \"varying vec2 vUv;\\nvoid main() {\\n\\tvUv = uv;\\n\\tgl_Position = vec4( position, 1.0 );\\n\\tgl_Position.z = 1.0;\\n}\\n\";\n\nvar cube_frag = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldPosition;\\nvoid main() {\\n\\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\\n\\tgl_FragColor.a *= opacity;\\n}\\n\";\n\nvar cube_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\\n\";\n\nvar depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\\t#endif\\n}\\n\";\n\nvar depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\";\n\nvar distanceRGBA_frag = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\\n\";\n\nvar distanceRGBA_vert = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\\n\";\n\nvar equirect_frag = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldPosition );\\n\\tvec2 sampleUV;\\n\\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n}\\n\";\n\nvar equirect_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\\n\";\n\nvar linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\nvar meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshmatcap_frag = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\tmatcapColor = matcapTexelToLinear( matcapColor );\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar meshmatcap_vert = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#ifndef FLAT_SHADED\\n\\t\\tvNormal = normalize( transformedNormal );\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\\n\";\n\nvar meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\nvar meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshphysical_frag = \"#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifndef STANDARD\\n\\tuniform float clearCoat;\\n\\tuniform float clearCoatRoughness;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\nvar meshphysical_vert = \"#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar normal_frag = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\\n\";\n\nvar normal_vert = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\\n\";\n\nvar points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar shadow_frag = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar shadow_vert = \"#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar sprite_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar sprite_vert = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar ShaderChunk = {\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tencodings_fragment: encodings_fragment,\n\tencodings_pars_fragment: encodings_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_vertex: lights_lambert_vertex,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tuv2_pars_fragment: uv2_pars_fragment,\n\tuv2_pars_vertex: uv2_pars_vertex,\n\tuv2_vertex: uv2_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_frag: background_frag,\n\tbackground_vert: background_vert,\n\tcube_frag: cube_frag,\n\tcube_vert: cube_vert,\n\tdepth_frag: depth_frag,\n\tdepth_vert: depth_vert,\n\tdistanceRGBA_frag: distanceRGBA_frag,\n\tdistanceRGBA_vert: distanceRGBA_vert,\n\tequirect_frag: equirect_frag,\n\tequirect_vert: equirect_vert,\n\tlinedashed_frag: linedashed_frag,\n\tlinedashed_vert: linedashed_vert,\n\tmeshbasic_frag: meshbasic_frag,\n\tmeshbasic_vert: meshbasic_vert,\n\tmeshlambert_frag: meshlambert_frag,\n\tmeshlambert_vert: meshlambert_vert,\n\tmeshmatcap_frag: meshmatcap_frag,\n\tmeshmatcap_vert: meshmatcap_vert,\n\tmeshphong_frag: meshphong_frag,\n\tmeshphong_vert: meshphong_vert,\n\tmeshphysical_frag: meshphysical_frag,\n\tmeshphysical_vert: meshphysical_vert,\n\tnormal_frag: normal_frag,\n\tnormal_vert: normal_vert,\n\tpoints_frag: points_frag,\n\tpoints_vert: points_vert,\n\tshadow_frag: shadow_frag,\n\tshadow_vert: shadow_vert,\n\tsprite_frag: sprite_frag,\n\tsprite_vert: sprite_vert\n};\n\n/**\n * Uniform Utilities\n */\n\nvar UniformsUtils = {\n\n\tmerge: function ( uniforms ) {\n\n\t\tvar merged = {};\n\n\t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\n\n\t\t\tvar tmp = this.clone( uniforms[ u ] );\n\n\t\t\tfor ( var p in tmp ) {\n\n\t\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn merged;\n\n\t},\n\n\tclone: function ( uniforms_src ) {\n\n\t\tvar uniforms_dst = {};\n\n\t\tfor ( var u in uniforms_src ) {\n\n\t\t\tuniforms_dst[ u ] = {};\n\n\t\t\tfor ( var p in uniforms_src[ u ] ) {\n\n\t\t\t\tvar parameter_src = uniforms_src[ u ][ p ];\n\n\t\t\t\tif ( parameter_src && ( parameter_src.isColor ||\n\t\t\t\t\tparameter_src.isMatrix3 || parameter_src.isMatrix4 ||\n\t\t\t\t\tparameter_src.isVector2 || parameter_src.isVector3 || parameter_src.isVector4 ||\n\t\t\t\t\tparameter_src.isTexture ) ) {\n\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.clone();\n\n\t\t\t\t} else if ( Array.isArray( parameter_src ) ) {\n\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.slice();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn uniforms_dst;\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nfunction Color( r, g, b ) {\n\n\tif ( g === undefined && b === undefined ) {\n\n\t\t// r is THREE.Color, hex or string\n\t\treturn this.set( r );\n\n\t}\n\n\treturn this.setRGB( r, g, b );\n\n}\n\nObject.assign( Color.prototype, {\n\n\tisColor: true,\n\n\tr: 1, g: 1, b: 1,\n\n\tset: function ( value ) {\n\n\t\tif ( value && value.isColor ) {\n\n\t\t\tthis.copy( value );\n\n\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\tthis.setHex( value );\n\n\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\tthis.setStyle( value );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetHex: function ( hex ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\treturn this;\n\n\t},\n\n\tsetRGB: function ( r, g, b ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\treturn this;\n\n\t},\n\n\tsetHSL: function () {\n\n\t\tfunction hue2rgb( p, q, t ) {\n\n\t\t\tif ( t < 0 ) t += 1;\n\t\t\tif ( t > 1 ) t -= 1;\n\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\t\t\tif ( t < 1 / 2 ) return q;\n\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\t\t\treturn p;\n\n\t\t}\n\n\t\treturn function setHSL( h, s, l ) {\n\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\t\th = _Math.euclideanModulo( h, 1 );\n\t\t\ts = _Math.clamp( s, 0, 1 );\n\t\t\tl = _Math.clamp( l, 0, 1 );\n\n\t\t\tif ( s === 0 ) {\n\n\t\t\t\tthis.r = this.g = this.b = l;\n\n\t\t\t} else {\n\n\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\t\tvar q = ( 2 * l ) - p;\n\n\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetStyle: function ( style ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar m;\n\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tvar color;\n\t\t\tvar name = m[ 1 ];\n\t\t\tvar components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this.setHSL( h, s, l );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tvar hex = m[ 1 ];\n\t\t\tvar size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( style && style.length > 0 ) {\n\n\t\t\t// color keywords\n\t\t\tvar hex = ColorKeywords[ style ];\n\n\t\t\tif ( hex !== undefined ) {\n\n\t\t\t\t// red\n\t\t\t\tthis.setHex( hex );\n\n\t\t\t} else {\n\n\t\t\t\t// unknown color\n\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t},\n\n\tcopy: function ( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t},\n\n\tcopyGammaToLinear: function ( color, gammaFactor ) {\n\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\tthis.r = Math.pow( color.r, gammaFactor );\n\t\tthis.g = Math.pow( color.g, gammaFactor );\n\t\tthis.b = Math.pow( color.b, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tcopyLinearToGamma: function ( color, gammaFactor ) {\n\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\n\n\t\tthis.r = Math.pow( color.r, safeInverse );\n\t\tthis.g = Math.pow( color.g, safeInverse );\n\t\tthis.b = Math.pow( color.b, safeInverse );\n\n\t\treturn this;\n\n\t},\n\n\tconvertGammaToLinear: function ( gammaFactor ) {\n\n\t\tthis.copyGammaToLinear( this, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tconvertLinearToGamma: function ( gammaFactor ) {\n\n\t\tthis.copyLinearToGamma( this, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tcopySRGBToLinear: function () {\n\n\t\tfunction SRGBToLinear( c ) {\n\n\t\t\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n\t\t}\n\n\t\treturn function copySRGBToLinear( color ) {\n\n\t\t\tthis.r = SRGBToLinear( color.r );\n\t\t\tthis.g = SRGBToLinear( color.g );\n\t\t\tthis.b = SRGBToLinear( color.b );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tcopyLinearToSRGB: function () {\n\n\t\tfunction LinearToSRGB( c ) {\n\n\t\t\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n\t\t}\n\n\t\treturn function copyLinearToSRGB( color ) {\n\n\t\t\tthis.r = LinearToSRGB( color.r );\n\t\t\tthis.g = LinearToSRGB( color.g );\n\t\t\tthis.b = LinearToSRGB( color.b );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tconvertSRGBToLinear: function () {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t},\n\n\tconvertLinearToSRGB: function () {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t},\n\n\tgetHex: function () {\n\n\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\n\n\t},\n\n\tgetHexString: function () {\n\n\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\n\n\t},\n\n\tgetHSL: function ( target ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Color: .getHSL() target is now required' );\n\t\t\ttarget = { h: 0, s: 0, l: 0 };\n\n\t\t}\n\n\t\tvar r = this.r, g = this.g, b = this.b;\n\n\t\tvar max = Math.max( r, g, b );\n\t\tvar min = Math.min( r, g, b );\n\n\t\tvar hue, saturation;\n\t\tvar lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tvar delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t},\n\n\tgetStyle: function () {\n\n\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\n\n\t},\n\n\toffsetHSL: function () {\n\n\t\tvar hsl = {};\n\n\t\treturn function ( h, s, l ) {\n\n\t\t\tthis.getHSL( hsl );\n\n\t\t\thsl.h += h; hsl.s += s; hsl.l += l;\n\n\t\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tadd: function ( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t},\n\n\taddColors: function ( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t},\n\n\tlerp: function ( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpHSL: function () {\n\n\t\tvar hslA = { h: 0, s: 0, l: 0 };\n\t\tvar hslB = { h: 0, s: 0, l: 0 };\n\n\t\treturn function lerpHSL( color, alpha ) {\n\n\t\t\tthis.getHSL( hslA );\n\t\t\tcolor.getHSL( hslB );\n\n\t\t\tvar h = _Math.lerp( hslA.h, hslB.h, alpha );\n\t\t\tvar s = _Math.lerp( hslA.s, hslB.s, alpha );\n\t\t\tvar l = _Math.lerp( hslA.l, hslB.l, alpha );\n\n\t\t\tthis.setHSL( h, s, l );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tequals: function ( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\treturn this.getHex();\n\n\t}\n\n} );\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nvar UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() },\n\n\t\talphaMap: { value: null },\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 },\n\t\trefractionRatio: { value: 0.98 },\n\t\tmaxMipLevel: { value: 0 }\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalScale: { value: new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotShadowMap: { value: [] },\n\t\tspotShadowMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t}\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n */\n\nvar ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 0.5 },\n\t\t\t\tmetalness: { value: 0.5 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.normal_vert,\n\t\tfragmentShader: ShaderChunk.normal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tt2D: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\t/* -------------------------------------------------------------------------\n\t//\tCube map shader\n\t ------------------------------------------------------------------------- */\n\n\tcube: {\n\n\t\tuniforms: {\n\t\t\ttCube: { value: null },\n\t\t\ttFlip: { value: - 1 },\n\t\t\topacity: { value: 1.0 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: UniformsUtils.merge( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearCoat: { value: 0 },\n\t\t\tclearCoatRoughness: { value: 0 }\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLAnimation() {\n\n\tvar context = null;\n\tvar isAnimating = false;\n\tvar animationLoop = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tif ( isAnimating === false ) return;\n\n\t\tanimationLoop( time, frame );\n\n\t\tcontext.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\tcontext.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLAttributes( gl ) {\n\n\tvar buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tvar array = attribute.array;\n\t\tvar usage = attribute.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\n\n\t\tvar buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tvar type = gl.FLOAT;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = gl.FLOAT;\n\n\t\t} else if ( array instanceof Float64Array ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.' );\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\ttype = gl.UNSIGNED_SHORT;\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = gl.SHORT;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = gl.UNSIGNED_INT;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = gl.INT;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = gl.BYTE;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tvar array = attribute.array;\n\t\tvar updateRange = attribute.updateRange;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( attribute.dynamic === false ) {\n\n\t\t\tgl.bufferData( bufferType, array, gl.STATIC_DRAW );\n\n\t\t} else if ( updateRange.count === - 1 ) {\n\n\t\t\t// Not using update ranges\n\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else if ( updateRange.count === 0 ) {\n\n\t\t\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\n\n\t\t} else {\n\n\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tvar data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tvar data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Face3( a, b, c, normal, color, materialIndex ) {\n\n\tthis.a = a;\n\tthis.b = b;\n\tthis.c = c;\n\n\tthis.normal = ( normal && normal.isVector3 ) ? normal : new Vector3();\n\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\n\n\tthis.color = ( color && color.isColor ) ? color : new Color();\n\tthis.vertexColors = Array.isArray( color ) ? color : [];\n\n\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\n\n}\n\nObject.assign( Face3.prototype, {\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.a = source.a;\n\t\tthis.b = source.b;\n\t\tthis.c = source.c;\n\n\t\tthis.normal.copy( source.normal );\n\t\tthis.color.copy( source.color );\n\n\t\tthis.materialIndex = source.materialIndex;\n\n\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\n\n\t\t}\n\n\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\n\n\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nfunction Euler( x, y, z, order ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._order = order || Euler.DefaultOrder;\n\n}\n\nEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\nEuler.DefaultOrder = 'XYZ';\n\nObject.defineProperties( Euler.prototype, {\n\n\tx: {\n\n\t\tget: function () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\ty: {\n\n\t\tget: function () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tz: {\n\n\t\tget: function () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\torder: {\n\n\t\tget: function () {\n\n\t\t\treturn this._order;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._order = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Euler.prototype, {\n\n\tisEuler: true,\n\n\tset: function ( x, y, z, order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order || this._order;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t},\n\n\tcopy: function ( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m, order, update ) {\n\n\t\tvar clamp = _Math.clamp;\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements;\n\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\torder = order || this._order;\n\n\t\tif ( order === 'XYZ' ) {\n\n\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\tthis._z = 0;\n\n\t\t\t}\n\n\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\n\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\tthis._z = 0;\n\n\t\t\t}\n\n\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\n\n\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._y = 0;\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'YZX' ) {\n\n\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'XZY' ) {\n\n\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\tthis._y = 0;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromQuaternion: function () {\n\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function setFromQuaternion( q, order, update ) {\n\n\t\t\tmatrix.makeRotationFromQuaternion( q );\n\n\t\t\treturn this.setFromRotationMatrix( matrix, order, update );\n\n\t\t};\n\n\t}(),\n\n\tsetFromVector3: function ( v, order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order || this._order );\n\n\t},\n\n\treorder: function () {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\tvar q = new Quaternion();\n\n\t\treturn function reorder( newOrder ) {\n\n\t\t\tq.setFromEuler( this );\n\n\t\t\treturn this.setFromQuaternion( q, newOrder );\n\n\t\t};\n\n\t}(),\n\n\tequals: function ( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t},\n\n\tfromArray: function ( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t},\n\n\ttoVector3: function ( optionalResult ) {\n\n\t\tif ( optionalResult ) {\n\n\t\t\treturn optionalResult.set( this._x, this._y, this._z );\n\n\t\t} else {\n\n\t\t\treturn new Vector3( this._x, this._y, this._z );\n\n\t\t}\n\n\t},\n\n\tonChange: function ( callback ) {\n\n\t\tthis.onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tonChangeCallback: function () {}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Layers() {\n\n\tthis.mask = 1 | 0;\n\n}\n\nObject.assign( Layers.prototype, {\n\n\tset: function ( channel ) {\n\n\t\tthis.mask = 1 << channel | 0;\n\n\t},\n\n\tenable: function ( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t},\n\n\ttoggle: function ( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t},\n\n\tdisable: function ( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t},\n\n\ttest: function ( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author elephantatwork / www.elephantatwork.ch\n */\n\nvar object3DId = 0;\n\nfunction Object3D() {\n\n\tObject.defineProperty( this, 'id', { value: object3DId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Object3D';\n\n\tthis.parent = null;\n\tthis.children = [];\n\n\tthis.up = Object3D.DefaultUp.clone();\n\n\tvar position = new Vector3();\n\tvar rotation = new Euler();\n\tvar quaternion = new Quaternion();\n\tvar scale = new Vector3( 1, 1, 1 );\n\n\tfunction onRotationChange() {\n\n\t\tquaternion.setFromEuler( rotation, false );\n\n\t}\n\n\tfunction onQuaternionChange() {\n\n\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t}\n\n\trotation.onChange( onRotationChange );\n\tquaternion.onChange( onQuaternionChange );\n\n\tObject.defineProperties( this, {\n\t\tposition: {\n\t\t\tenumerable: true,\n\t\t\tvalue: position\n\t\t},\n\t\trotation: {\n\t\t\tenumerable: true,\n\t\t\tvalue: rotation\n\t\t},\n\t\tquaternion: {\n\t\t\tenumerable: true,\n\t\t\tvalue: quaternion\n\t\t},\n\t\tscale: {\n\t\t\tenumerable: true,\n\t\t\tvalue: scale\n\t\t},\n\t\tmodelViewMatrix: {\n\t\t\tvalue: new Matrix4()\n\t\t},\n\t\tnormalMatrix: {\n\t\t\tvalue: new Matrix3()\n\t\t}\n\t} );\n\n\tthis.matrix = new Matrix4();\n\tthis.matrixWorld = new Matrix4();\n\n\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\tthis.matrixWorldNeedsUpdate = false;\n\n\tthis.layers = new Layers();\n\tthis.visible = true;\n\n\tthis.castShadow = false;\n\tthis.receiveShadow = false;\n\n\tthis.frustumCulled = true;\n\tthis.renderOrder = 0;\n\n\tthis.userData = {};\n\n}\n\nObject3D.DefaultUp = new Vector3( 0, 1, 0 );\nObject3D.DefaultMatrixAutoUpdate = true;\n\nObject3D.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Object3D,\n\n\tisObject3D: true,\n\n\tonBeforeRender: function () {},\n\tonAfterRender: function () {},\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t},\n\n\tapplyQuaternion: function ( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t},\n\n\tsetRotationFromAxisAngle: function ( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t},\n\n\tsetRotationFromEuler: function ( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t},\n\n\tsetRotationFromMatrix: function ( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t},\n\n\tsetRotationFromQuaternion: function ( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t},\n\n\trotateOnAxis: function () {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\tvar q1 = new Quaternion();\n\n\t\treturn function rotateOnAxis( axis, angle ) {\n\n\t\t\tq1.setFromAxisAngle( axis, angle );\n\n\t\t\tthis.quaternion.multiply( q1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateOnWorldAxis: function () {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\tvar q1 = new Quaternion();\n\n\t\treturn function rotateOnWorldAxis( axis, angle ) {\n\n\t\t\tq1.setFromAxisAngle( axis, angle );\n\n\t\t\tthis.quaternion.premultiply( q1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateX: function () {\n\n\t\tvar v1 = new Vector3( 1, 0, 0 );\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\tvar v1 = new Vector3( 0, 1, 0 );\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\tvar v1 = new Vector3( 0, 0, 1 );\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\ttranslateOnAxis: function () {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function translateOnAxis( axis, distance ) {\n\n\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslateX: function () {\n\n\t\tvar v1 = new Vector3( 1, 0, 0 );\n\n\t\treturn function translateX( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\ttranslateY: function () {\n\n\t\tvar v1 = new Vector3( 0, 1, 0 );\n\n\t\treturn function translateY( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\ttranslateZ: function () {\n\n\t\tvar v1 = new Vector3( 0, 0, 1 );\n\n\t\treturn function translateZ( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\tlocalToWorld: function ( vector ) {\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t},\n\n\tworldToLocal: function () {\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function worldToLocal( vector ) {\n\n\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tvar q1 = new Quaternion();\n\t\tvar m1 = new Matrix4();\n\t\tvar target = new Vector3();\n\t\tvar position = new Vector3();\n\n\t\treturn function lookAt( x, y, z ) {\n\n\t\t\tif ( x.isVector3 ) {\n\n\t\t\t\ttarget.copy( x );\n\n\t\t\t} else {\n\n\t\t\t\ttarget.set( x, y, z );\n\n\t\t\t}\n\n\t\t\tvar parent = this.parent;\n\n\t\t\tthis.updateWorldMatrix( true, false );\n\n\t\t\tposition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tif ( this.isCamera ) {\n\n\t\t\t\tm1.lookAt( position, target, this.up );\n\n\t\t\t} else {\n\n\t\t\t\tm1.lookAt( target, position, this.up );\n\n\t\t\t}\n\n\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\n\n\t\t\tif ( parent ) {\n\n\t\t\t\tm1.extractRotation( parent.matrixWorld );\n\t\t\t\tq1.setFromRotationMatrix( m1 );\n\t\t\t\tthis.quaternion.premultiply( q1.inverse() );\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\tadd: function ( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( ( object && object.isObject3D ) ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tobject.dispatchEvent( { type: 'added' } );\n\n\t\t\tthis.children.push( object );\n\n\t\t} else {\n\n\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tremove: function ( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\n\t\t\tobject.dispatchEvent( { type: 'removed' } );\n\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetObjectById: function ( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t},\n\n\tgetObjectByName: function ( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t},\n\n\tgetObjectByProperty: function ( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tvar child = this.children[ i ];\n\t\t\tvar object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t},\n\n\tgetWorldPosition: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldPosition() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t},\n\n\tgetWorldQuaternion: function () {\n\n\t\tvar position = new Vector3();\n\t\tvar scale = new Vector3();\n\n\t\treturn function getWorldQuaternion( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldQuaternion() target is now required' );\n\t\t\t\ttarget = new Quaternion();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.matrixWorld.decompose( position, target, scale );\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}(),\n\n\tgetWorldScale: function () {\n\n\t\tvar position = new Vector3();\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function getWorldScale( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldScale() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.matrixWorld.decompose( position, quaternion, target );\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}(),\n\n\tgetWorldDirection: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldDirection() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\tvar e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t},\n\n\traycast: function () {},\n\n\ttraverse: function ( callback ) {\n\n\t\tcallback( this );\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t},\n\n\ttraverseVisible: function ( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t},\n\n\ttraverseAncestors: function ( callback ) {\n\n\t\tvar parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t},\n\n\tupdateMatrix: function () {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].updateMatrixWorld( force );\n\n\t\t}\n\n\t},\n\n\tupdateWorldMatrix: function ( updateParents, updateChildren ) {\n\n\t\tvar parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.parent === null ) {\n\n\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t} else {\n\n\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t}\n\n\t\t// update children\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tvar children = this.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateWorldMatrix( false, true );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tvar output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tvar object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tvar parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tvar shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tvar shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tvar uuids = [];\n\n\t\t\t\tfor ( var i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tvar geometries = extractFromCache( meta.geometries );\n\t\t\tvar materials = extractFromCache( meta.materials );\n\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\tvar images = extractFromCache( meta.images );\n\t\t\tvar shapes = extractFromCache( meta.shapes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tvar values = [];\n\t\t\tfor ( var key in cache ) {\n\n\t\t\t\tvar data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\t\t\treturn values;\n\n\t\t}\n\n\t},\n\n\tclone: function ( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t},\n\n\tcopy: function ( source, recursive ) {\n\n\t\tif ( recursive === undefined ) recursive = true;\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tvar child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author bhouston / http://clara.io\n */\n\nvar geometryId = 0; // Geometry uses even numbers as Id\n\nfunction Geometry() {\n\n\tObject.defineProperty( this, 'id', { value: geometryId += 2 } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Geometry';\n\n\tthis.vertices = [];\n\tthis.colors = [];\n\tthis.faces = [];\n\tthis.faceVertexUvs = [[]];\n\n\tthis.morphTargets = [];\n\tthis.morphNormals = [];\n\n\tthis.skinWeights = [];\n\tthis.skinIndices = [];\n\n\tthis.lineDistances = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\t// update flags\n\n\tthis.elementsNeedUpdate = false;\n\tthis.verticesNeedUpdate = false;\n\tthis.uvsNeedUpdate = false;\n\tthis.normalsNeedUpdate = false;\n\tthis.colorsNeedUpdate = false;\n\tthis.lineDistancesNeedUpdate = false;\n\tthis.groupsNeedUpdate = false;\n\n}\n\nGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Geometry,\n\n\tisGeometry: true,\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\tvar vertex = this.vertices[ i ];\n\t\t\tvertex.applyMatrix4( matrix );\n\n\t\t}\n\n\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\tvar face = this.faces[ i ];\n\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.verticesNeedUpdate = true;\n\t\tthis.normalsNeedUpdate = true;\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function () {\n\n\t\t// rotate geometry around world x-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\tm1.makeRotationX( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\t// rotate geometry around world y-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\tm1.makeRotationY( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\t// rotate geometry around world z-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\tm1.makeRotationZ( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function () {\n\n\t\t// translate geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function translate( x, y, z ) {\n\n\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tscale: function () {\n\n\t\t// scale geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function scale( x, y, z ) {\n\n\t\t\tm1.makeScale( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar obj = new Object3D();\n\n\t\treturn function lookAt( vector ) {\n\n\t\t\tobj.lookAt( vector );\n\n\t\t\tobj.updateMatrix();\n\n\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t};\n\n\t}(),\n\n\tfromBufferGeometry: function ( geometry ) {\n\n\t\tvar scope = this;\n\n\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\n\t\tvar attributes = geometry.attributes;\n\n\t\tvar positions = attributes.position.array;\n\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\n\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\n\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\n\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\n\n\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\n\n\t\tvar tempNormals = [];\n\t\tvar tempUVs = [];\n\t\tvar tempUVs2 = [];\n\n\t\tfor ( var i = 0, j = 0; i < positions.length; i += 3, j += 2 ) {\n\n\t\t\tscope.vertices.push( new Vector3( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] ) );\n\n\t\t\tif ( normals !== undefined ) {\n\n\t\t\t\ttempNormals.push( new Vector3( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] ) );\n\n\t\t\t}\n\n\t\t\tif ( colors !== undefined ) {\n\n\t\t\t\tscope.colors.push( new Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );\n\n\t\t\t}\n\n\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\ttempUVs.push( new Vector2( uvs[ j ], uvs[ j + 1 ] ) );\n\n\t\t\t}\n\n\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\ttempUVs2.push( new Vector2( uvs2[ j ], uvs2[ j + 1 ] ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction addFace( a, b, c, materialIndex ) {\n\n\t\t\tvar vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];\n\t\t\tvar vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];\n\n\t\t\tvar face = new Face3( a, b, c, vertexNormals, vertexColors, materialIndex );\n\n\t\t\tscope.faces.push( face );\n\n\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ tempUVs[ a ].clone(), tempUVs[ b ].clone(), tempUVs[ c ].clone() ] );\n\n\t\t\t}\n\n\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\tscope.faceVertexUvs[ 1 ].push( [ tempUVs2[ a ].clone(), tempUVs2[ b ].clone(), tempUVs2[ c ].clone() ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar groups = geometry.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\n\n\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\tvar start = group.start;\n\t\t\t\tvar count = group.count;\n\n\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ], group.materialIndex );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\taddFace( j, j + 1, j + 2, group.materialIndex );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfor ( var i = 0; i < positions.length / 3; i += 3 ) {\n\n\t\t\t\t\taddFace( i, i + 1, i + 2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.computeFaceNormals();\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcenter: function () {\n\n\t\tvar offset = new Vector3();\n\n\t\treturn function center() {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tthis.boundingBox.getCenter( offset ).negate();\n\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tnormalize: function () {\n\n\t\tthis.computeBoundingSphere();\n\n\t\tvar center = this.boundingSphere.center;\n\t\tvar radius = this.boundingSphere.radius;\n\n\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\n\n\t\tvar matrix = new Matrix4();\n\t\tmatrix.set(\n\t\t\ts, 0, 0, - s * center.x,\n\t\t\t0, s, 0, - s * center.y,\n\t\t\t0, 0, s, - s * center.z,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\tthis.applyMatrix( matrix );\n\n\t\treturn this;\n\n\t},\n\n\tcomputeFaceNormals: function () {\n\n\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tvar face = this.faces[ f ];\n\n\t\t\tvar vA = this.vertices[ face.a ];\n\t\t\tvar vB = this.vertices[ face.b ];\n\t\t\tvar vC = this.vertices[ face.c ];\n\n\t\t\tcb.subVectors( vC, vB );\n\t\t\tab.subVectors( vA, vB );\n\t\t\tcb.cross( ab );\n\n\t\t\tcb.normalize();\n\n\t\t\tface.normal.copy( cb );\n\n\t\t}\n\n\t},\n\n\tcomputeVertexNormals: function ( areaWeighted ) {\n\n\t\tif ( areaWeighted === undefined ) areaWeighted = true;\n\n\t\tvar v, vl, f, fl, face, vertices;\n\n\t\tvertices = new Array( this.vertices.length );\n\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\tvertices[ v ] = new Vector3();\n\n\t\t}\n\n\t\tif ( areaWeighted ) {\n\n\t\t\t// vertex normals weighted by triangle areas\n\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\n\n\t\t\tvar vA, vB, vC;\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvA = this.vertices[ face.a ];\n\t\t\t\tvB = this.vertices[ face.b ];\n\t\t\t\tvC = this.vertices[ face.c ];\n\n\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\tcb.cross( ab );\n\n\t\t\t\tvertices[ face.a ].add( cb );\n\t\t\t\tvertices[ face.b ].add( cb );\n\t\t\t\tvertices[ face.c ].add( cb );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.computeFaceNormals();\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvertices[ face.a ].add( face.normal );\n\t\t\t\tvertices[ face.b ].add( face.normal );\n\t\t\t\tvertices[ face.c ].add( face.normal );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\tvertices[ v ].normalize();\n\n\t\t}\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\n\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\n\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\n\n\t\t\t} else {\n\n\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\n\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\n\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.faces.length > 0 ) {\n\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t}\n\n\t},\n\n\tcomputeFlatVertexNormals: function () {\n\n\t\tvar f, fl, face;\n\n\t\tthis.computeFaceNormals();\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tvertexNormals[ 0 ].copy( face.normal );\n\t\t\t\tvertexNormals[ 1 ].copy( face.normal );\n\t\t\t\tvertexNormals[ 2 ].copy( face.normal );\n\n\t\t\t} else {\n\n\t\t\t\tvertexNormals[ 0 ] = face.normal.clone();\n\t\t\t\tvertexNormals[ 1 ] = face.normal.clone();\n\t\t\t\tvertexNormals[ 2 ] = face.normal.clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.faces.length > 0 ) {\n\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t}\n\n\t},\n\n\tcomputeMorphNormals: function () {\n\n\t\tvar i, il, f, fl, face;\n\n\t\t// save original normals\n\t\t// - create temp variables on first access\n\t\t//   otherwise just copy (for faster repeated calls)\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tif ( ! face.__originalFaceNormal ) {\n\n\t\t\t\tface.__originalFaceNormal = face.normal.clone();\n\n\t\t\t} else {\n\n\t\t\t\tface.__originalFaceNormal.copy( face.normal );\n\n\t\t\t}\n\n\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\n\n\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\n\n\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// use temp geometry to compute face and vertex normals for each morph\n\n\t\tvar tmpGeo = new Geometry();\n\t\ttmpGeo.faces = this.faces;\n\n\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\n\n\t\t\t// create on first access\n\n\t\t\tif ( ! this.morphNormals[ i ] ) {\n\n\t\t\t\tthis.morphNormals[ i ] = {};\n\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\n\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\n\n\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\n\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\n\n\t\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tfaceNormal = new Vector3();\n\t\t\t\t\tvertexNormals = { a: new Vector3(), b: new Vector3(), c: new Vector3() };\n\n\t\t\t\t\tdstNormalsFace.push( faceNormal );\n\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar morphNormals = this.morphNormals[ i ];\n\n\t\t\t// set vertices to morph target\n\n\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\n\n\t\t\t// compute morph normals\n\n\t\t\ttmpGeo.computeFaceNormals();\n\t\t\ttmpGeo.computeVertexNormals();\n\n\t\t\t// store morph normals\n\n\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\n\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\n\n\t\t\t\tfaceNormal.copy( face.normal );\n\n\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\n\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\n\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// restore original normals\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tface.normal = face.__originalFaceNormal;\n\t\t\tface.vertexNormals = face.__originalVertexNormals;\n\n\t\t}\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.setFromPoints( this.vertices );\n\n\t},\n\n\tcomputeBoundingSphere: function () {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.setFromPoints( this.vertices );\n\n\t},\n\n\tmerge: function ( geometry, matrix, materialIndexOffset ) {\n\n\t\tif ( ! ( geometry && geometry.isGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar normalMatrix,\n\t\t\tvertexOffset = this.vertices.length,\n\t\t\tvertices1 = this.vertices,\n\t\t\tvertices2 = geometry.vertices,\n\t\t\tfaces1 = this.faces,\n\t\t\tfaces2 = geometry.faces,\n\t\t\tuvs1 = this.faceVertexUvs[ 0 ],\n\t\t\tuvs2 = geometry.faceVertexUvs[ 0 ],\n\t\t\tcolors1 = this.colors,\n\t\t\tcolors2 = geometry.colors;\n\n\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\n\n\t\tif ( matrix !== undefined ) {\n\n\t\t\tnormalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t}\n\n\t\t// vertices\n\n\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\n\n\t\t\tvar vertex = vertices2[ i ];\n\n\t\t\tvar vertexCopy = vertex.clone();\n\n\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\n\n\t\t\tvertices1.push( vertexCopy );\n\n\t\t}\n\n\t\t// colors\n\n\t\tfor ( var i = 0, il = colors2.length; i < il; i ++ ) {\n\n\t\t\tcolors1.push( colors2[ i ].clone() );\n\n\t\t}\n\n\t\t// faces\n\n\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\n\n\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\n\t\t\t\tfaceVertexNormals = face.vertexNormals,\n\t\t\t\tfaceVertexColors = face.vertexColors;\n\n\t\t\tfaceCopy = new Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\n\t\t\tfaceCopy.normal.copy( face.normal );\n\n\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\tnormal = faceVertexNormals[ j ].clone();\n\n\t\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t}\n\n\t\t\t\tfaceCopy.vertexNormals.push( normal );\n\n\t\t\t}\n\n\t\t\tfaceCopy.color.copy( face.color );\n\n\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\n\n\t\t\t\tcolor = faceVertexColors[ j ];\n\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\n\n\t\t\t}\n\n\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n\n\t\t\tfaces1.push( faceCopy );\n\n\t\t}\n\n\t\t// uvs\n\n\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\n\n\t\t\tvar uv = uvs2[ i ], uvCopy = [];\n\n\t\t\tif ( uv === undefined ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\n\n\t\t\t\tuvCopy.push( uv[ j ].clone() );\n\n\t\t\t}\n\n\t\t\tuvs1.push( uvCopy );\n\n\t\t}\n\n\t},\n\n\tmergeMesh: function ( mesh ) {\n\n\t\tif ( ! ( mesh && mesh.isMesh ) ) {\n\n\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( mesh.matrixAutoUpdate ) mesh.updateMatrix();\n\n\t\tthis.merge( mesh.geometry, mesh.matrix );\n\n\t},\n\n\t/*\n\t * Checks for duplicate vertices with hashmap.\n\t * Duplicated vertices are removed\n\t * and faces' vertices are updated.\n\t */\n\n\tmergeVertices: function () {\n\n\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n\t\tvar unique = [], changes = [];\n\n\t\tvar v, key;\n\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n\t\tvar precision = Math.pow( 10, precisionPoints );\n\t\tvar i, il, face;\n\t\tvar indices, j, jl;\n\n\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\tv = this.vertices[ i ];\n\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\n\n\t\t\tif ( verticesMap[ key ] === undefined ) {\n\n\t\t\t\tverticesMap[ key ] = i;\n\t\t\t\tunique.push( this.vertices[ i ] );\n\t\t\t\tchanges[ i ] = unique.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// if faces are completely degenerate after merging vertices, we\n\t\t// have to remove them from the geometry.\n\t\tvar faceIndicesToRemove = [];\n\n\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\tface = this.faces[ i ];\n\n\t\t\tface.a = changes[ face.a ];\n\t\t\tface.b = changes[ face.b ];\n\t\t\tface.c = changes[ face.c ];\n\n\t\t\tindices = [ face.a, face.b, face.c ];\n\n\t\t\t// if any duplicate vertices are found in a Face3\n\t\t\t// we have to remove the face as nothing can be saved\n\t\t\tfor ( var n = 0; n < 3; n ++ ) {\n\n\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\n\n\t\t\t\t\tfaceIndicesToRemove.push( i );\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\n\n\t\t\tvar idx = faceIndicesToRemove[ i ];\n\n\t\t\tthis.faces.splice( idx, 1 );\n\n\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Use unique set of vertices\n\n\t\tvar diff = this.vertices.length - unique.length;\n\t\tthis.vertices = unique;\n\t\treturn diff;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.vertices = [];\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tthis.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsortFacesByMaterialIndex: function () {\n\n\t\tvar faces = this.faces;\n\t\tvar length = faces.length;\n\n\t\t// tag faces\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tfaces[ i ]._id = i;\n\n\t\t}\n\n\t\t// sort faces\n\n\t\tfunction materialIndexSort( a, b ) {\n\n\t\t\treturn a.materialIndex - b.materialIndex;\n\n\t\t}\n\n\t\tfaces.sort( materialIndexSort );\n\n\t\t// sort uvs\n\n\t\tvar uvs1 = this.faceVertexUvs[ 0 ];\n\t\tvar uvs2 = this.faceVertexUvs[ 1 ];\n\n\t\tvar newUvs1, newUvs2;\n\n\t\tif ( uvs1 && uvs1.length === length ) newUvs1 = [];\n\t\tif ( uvs2 && uvs2.length === length ) newUvs2 = [];\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar id = faces[ i ]._id;\n\n\t\t\tif ( newUvs1 ) newUvs1.push( uvs1[ id ] );\n\t\t\tif ( newUvs2 ) newUvs2.push( uvs2[ id ] );\n\n\t\t}\n\n\t\tif ( newUvs1 ) this.faceVertexUvs[ 0 ] = newUvs1;\n\t\tif ( newUvs2 ) this.faceVertexUvs[ 1 ] = newUvs2;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Geometry',\n\t\t\t\tgenerator: 'Geometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Geometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tvar vertices = [];\n\n\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\n\n\t\t\tvar vertex = this.vertices[ i ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tvar faces = [];\n\t\tvar normals = [];\n\t\tvar normalsHash = {};\n\t\tvar colors = [];\n\t\tvar colorsHash = {};\n\t\tvar uvs = [];\n\t\tvar uvsHash = {};\n\n\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\n\n\t\t\tvar face = this.faces[ i ];\n\n\t\t\tvar hasMaterial = true;\n\t\t\tvar hasFaceUv = false; // deprecated\n\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\n\t\t\tvar hasFaceNormal = face.normal.length() > 0;\n\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\n\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\n\n\t\t\tvar faceType = 0;\n\n\t\t\tfaceType = setBit( faceType, 0, 0 ); // isQuad\n\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\n\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\n\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\n\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\n\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\n\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\n\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\n\n\t\t\tfaces.push( faceType );\n\t\t\tfaces.push( face.a, face.b, face.c );\n\t\t\tfaces.push( face.materialIndex );\n\n\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\tfaces.push( getColorIndex( face.color ) );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\n\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\n\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setBit( value, position, enabled ) {\n\n\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\n\n\t\t}\n\n\t\tfunction getNormalIndex( normal ) {\n\n\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n\n\t\t\tif ( normalsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn normalsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tnormalsHash[ hash ] = normals.length / 3;\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\treturn normalsHash[ hash ];\n\n\t\t}\n\n\t\tfunction getColorIndex( color ) {\n\n\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\n\n\t\t\tif ( colorsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn colorsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tcolorsHash[ hash ] = colors.length;\n\t\t\tcolors.push( color.getHex() );\n\n\t\t\treturn colorsHash[ hash ];\n\n\t\t}\n\n\t\tfunction getUvIndex( uv ) {\n\n\t\t\tvar hash = uv.x.toString() + uv.y.toString();\n\n\t\t\tif ( uvsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn uvsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tuvsHash[ hash ] = uvs.length / 2;\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\treturn uvsHash[ hash ];\n\n\t\t}\n\n\t\tdata.data = {};\n\n\t\tdata.data.vertices = vertices;\n\t\tdata.data.normals = normals;\n\t\tif ( colors.length > 0 ) data.data.colors = colors;\n\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\n\t\tdata.data.faces = faces;\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\t/*\n\t\t // Handle primitives\n\n\t\t var parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t var values = [];\n\n\t\t for ( var key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */\n\n\t\treturn new Geometry().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tvar i, il, j, jl, k, kl;\n\n\t\t// reset\n\n\t\tthis.vertices = [];\n\t\tthis.colors = [];\n\t\tthis.faces = [];\n\t\tthis.faceVertexUvs = [[]];\n\t\tthis.morphTargets = [];\n\t\tthis.morphNormals = [];\n\t\tthis.skinWeights = [];\n\t\tthis.skinIndices = [];\n\t\tthis.lineDistances = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// vertices\n\n\t\tvar vertices = source.vertices;\n\n\t\tfor ( i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\tthis.vertices.push( vertices[ i ].clone() );\n\n\t\t}\n\n\t\t// colors\n\n\t\tvar colors = source.colors;\n\n\t\tfor ( i = 0, il = colors.length; i < il; i ++ ) {\n\n\t\t\tthis.colors.push( colors[ i ].clone() );\n\n\t\t}\n\n\t\t// faces\n\n\t\tvar faces = source.faces;\n\n\t\tfor ( i = 0, il = faces.length; i < il; i ++ ) {\n\n\t\t\tthis.faces.push( faces[ i ].clone() );\n\n\t\t}\n\n\t\t// face vertex uvs\n\n\t\tfor ( i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\n\n\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\n\n\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\n\n\t\t\t\tthis.faceVertexUvs[ i ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\n\n\t\t\t\tfor ( k = 0, kl = uvs.length; k < kl; k ++ ) {\n\n\t\t\t\t\tvar uv = uvs[ k ];\n\n\t\t\t\t\tuvsCopy.push( uv.clone() );\n\n\t\t\t\t}\n\n\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tvar morphTargets = source.morphTargets;\n\n\t\tfor ( i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tvar morphTarget = {};\n\t\t\tmorphTarget.name = morphTargets[ i ].name;\n\n\t\t\t// vertices\n\n\t\t\tif ( morphTargets[ i ].vertices !== undefined ) {\n\n\t\t\t\tmorphTarget.vertices = [];\n\n\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].vertices.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphTarget.vertices.push( morphTargets[ i ].vertices[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// normals\n\n\t\t\tif ( morphTargets[ i ].normals !== undefined ) {\n\n\t\t\t\tmorphTarget.normals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].normals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphTarget.normals.push( morphTargets[ i ].normals[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.push( morphTarget );\n\n\t\t}\n\n\t\t// morph normals\n\n\t\tvar morphNormals = source.morphNormals;\n\n\t\tfor ( i = 0, il = morphNormals.length; i < il; i ++ ) {\n\n\t\t\tvar morphNormal = {};\n\n\t\t\t// vertex normals\n\n\t\t\tif ( morphNormals[ i ].vertexNormals !== undefined ) {\n\n\t\t\t\tmorphNormal.vertexNormals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar srcVertexNormal = morphNormals[ i ].vertexNormals[ j ];\n\t\t\t\t\tvar destVertexNormal = {};\n\n\t\t\t\t\tdestVertexNormal.a = srcVertexNormal.a.clone();\n\t\t\t\t\tdestVertexNormal.b = srcVertexNormal.b.clone();\n\t\t\t\t\tdestVertexNormal.c = srcVertexNormal.c.clone();\n\n\t\t\t\t\tmorphNormal.vertexNormals.push( destVertexNormal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// face normals\n\n\t\t\tif ( morphNormals[ i ].faceNormals !== undefined ) {\n\n\t\t\t\tmorphNormal.faceNormals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].faceNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphNormal.faceNormals.push( morphNormals[ i ].faceNormals[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.morphNormals.push( morphNormal );\n\n\t\t}\n\n\t\t// skin weights\n\n\t\tvar skinWeights = source.skinWeights;\n\n\t\tfor ( i = 0, il = skinWeights.length; i < il; i ++ ) {\n\n\t\t\tthis.skinWeights.push( skinWeights[ i ].clone() );\n\n\t\t}\n\n\t\t// skin indices\n\n\t\tvar skinIndices = source.skinIndices;\n\n\t\tfor ( i = 0, il = skinIndices.length; i < il; i ++ ) {\n\n\t\t\tthis.skinIndices.push( skinIndices[ i ].clone() );\n\n\t\t}\n\n\t\t// line distances\n\n\t\tvar lineDistances = source.lineDistances;\n\n\t\tfor ( i = 0, il = lineDistances.length; i < il; i ++ ) {\n\n\t\t\tthis.lineDistances.push( lineDistances[ i ] );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tvar boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tvar boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// update flags\n\n\t\tthis.elementsNeedUpdate = source.elementsNeedUpdate;\n\t\tthis.verticesNeedUpdate = source.verticesNeedUpdate;\n\t\tthis.uvsNeedUpdate = source.uvsNeedUpdate;\n\t\tthis.normalsNeedUpdate = source.normalsNeedUpdate;\n\t\tthis.colorsNeedUpdate = source.colorsNeedUpdate;\n\t\tthis.lineDistancesNeedUpdate = source.lineDistancesNeedUpdate;\n\t\tthis.groupsNeedUpdate = source.groupsNeedUpdate;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction BufferAttribute( array, itemSize, normalized ) {\n\n\tif ( Array.isArray( array ) ) {\n\n\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t}\n\n\tthis.name = '';\n\n\tthis.array = array;\n\tthis.itemSize = itemSize;\n\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\tthis.normalized = normalized === true;\n\n\tthis.dynamic = false;\n\tthis.updateRange = { offset: 0, count: - 1 };\n\n\tthis.version = 0;\n\n}\n\nObject.defineProperty( BufferAttribute.prototype, 'needsUpdate', {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\nObject.assign( BufferAttribute.prototype, {\n\n\tisBufferAttribute: true,\n\n\tonUploadCallback: function () {},\n\n\tsetArray: function ( array ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.count = array !== undefined ? array.length / this.itemSize : 0;\n\t\tthis.array = array;\n\n\t\treturn this;\n\n\t},\n\n\tsetDynamic: function ( value ) {\n\n\t\tthis.dynamic = value;\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.dynamic = source.dynamic;\n\n\t\treturn this;\n\n\t},\n\n\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyArray: function ( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t},\n\n\tcopyColorsArray: function ( colors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\n\n\t\t\tvar color = colors[ i ];\n\n\t\t\tif ( color === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\n\t\t\t\tcolor = new Color();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = color.r;\n\t\t\tarray[ offset ++ ] = color.g;\n\t\t\tarray[ offset ++ ] = color.b;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector2sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector2();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector3sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector3();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector4sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector4();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\t\t\tarray[ offset ++ ] = vector.w;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tset: function ( value, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t},\n\n\tgetX: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize ];\n\n\t},\n\n\tsetX: function ( index, x ) {\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t},\n\n\tgetY: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 1 ];\n\n\t},\n\n\tsetY: function ( index, y ) {\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tgetZ: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 2 ];\n\n\t},\n\n\tsetZ: function ( index, z ) {\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tgetW: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 3 ];\n\n\t},\n\n\tsetW: function ( index, w ) {\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetXY: function ( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZ: function ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tonUpload: function ( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n} );\n\n//\n\nfunction Int8BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int8Array( array ), itemSize, normalized );\n\n}\n\nInt8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt8BufferAttribute.prototype.constructor = Int8BufferAttribute;\n\n\nfunction Uint8BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint8Array( array ), itemSize, normalized );\n\n}\n\nUint8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint8BufferAttribute.prototype.constructor = Uint8BufferAttribute;\n\n\nfunction Uint8ClampedBufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint8ClampedArray( array ), itemSize, normalized );\n\n}\n\nUint8ClampedBufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint8ClampedBufferAttribute.prototype.constructor = Uint8ClampedBufferAttribute;\n\n\nfunction Int16BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int16Array( array ), itemSize, normalized );\n\n}\n\nInt16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt16BufferAttribute.prototype.constructor = Int16BufferAttribute;\n\n\nfunction Uint16BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint16Array( array ), itemSize, normalized );\n\n}\n\nUint16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint16BufferAttribute.prototype.constructor = Uint16BufferAttribute;\n\n\nfunction Int32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int32Array( array ), itemSize, normalized );\n\n}\n\nInt32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt32BufferAttribute.prototype.constructor = Int32BufferAttribute;\n\n\nfunction Uint32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint32Array( array ), itemSize, normalized );\n\n}\n\nUint32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint32BufferAttribute.prototype.constructor = Uint32BufferAttribute;\n\n\nfunction Float32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Float32Array( array ), itemSize, normalized );\n\n}\n\nFloat32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nFloat32BufferAttribute.prototype.constructor = Float32BufferAttribute;\n\n\nfunction Float64BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Float64Array( array ), itemSize, normalized );\n\n}\n\nFloat64BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nFloat64BufferAttribute.prototype.constructor = Float64BufferAttribute;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction DirectGeometry() {\n\n\tthis.vertices = [];\n\tthis.normals = [];\n\tthis.colors = [];\n\tthis.uvs = [];\n\tthis.uvs2 = [];\n\n\tthis.groups = [];\n\n\tthis.morphTargets = {};\n\n\tthis.skinWeights = [];\n\tthis.skinIndices = [];\n\n\t// this.lineDistances = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\t// update flags\n\n\tthis.verticesNeedUpdate = false;\n\tthis.normalsNeedUpdate = false;\n\tthis.colorsNeedUpdate = false;\n\tthis.uvsNeedUpdate = false;\n\tthis.groupsNeedUpdate = false;\n\n}\n\nObject.assign( DirectGeometry.prototype, {\n\n\tcomputeGroups: function ( geometry ) {\n\n\t\tvar group;\n\t\tvar groups = [];\n\t\tvar materialIndex = undefined;\n\n\t\tvar faces = geometry.faces;\n\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\t// materials\n\n\t\t\tif ( face.materialIndex !== materialIndex ) {\n\n\t\t\t\tmaterialIndex = face.materialIndex;\n\n\t\t\t\tif ( group !== undefined ) {\n\n\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\t\tgroups.push( group );\n\n\t\t\t\t}\n\n\t\t\t\tgroup = {\n\t\t\t\t\tstart: i * 3,\n\t\t\t\t\tmaterialIndex: materialIndex\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( group !== undefined ) {\n\n\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\tgroups.push( group );\n\n\t\t}\n\n\t\tthis.groups = groups;\n\n\t},\n\n\tfromGeometry: function ( geometry ) {\n\n\t\tvar faces = geometry.faces;\n\t\tvar vertices = geometry.vertices;\n\t\tvar faceVertexUvs = geometry.faceVertexUvs;\n\n\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\n\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\n\n\t\t// morphs\n\n\t\tvar morphTargets = geometry.morphTargets;\n\t\tvar morphTargetsLength = morphTargets.length;\n\n\t\tvar morphTargetsPosition;\n\n\t\tif ( morphTargetsLength > 0 ) {\n\n\t\t\tmorphTargetsPosition = [];\n\n\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\n\n\t\t\t\tmorphTargetsPosition[ i ] = {\n\t\t\t\t\tname: morphTargets[ i ].name,\n\t\t\t\t \tdata: []\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.position = morphTargetsPosition;\n\n\t\t}\n\n\t\tvar morphNormals = geometry.morphNormals;\n\t\tvar morphNormalsLength = morphNormals.length;\n\n\t\tvar morphTargetsNormal;\n\n\t\tif ( morphNormalsLength > 0 ) {\n\n\t\t\tmorphTargetsNormal = [];\n\n\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\n\n\t\t\t\tmorphTargetsNormal[ i ] = {\n\t\t\t\t\tname: morphNormals[ i ].name,\n\t\t\t\t \tdata: []\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.normal = morphTargetsNormal;\n\n\t\t}\n\n\t\t// skins\n\n\t\tvar skinIndices = geometry.skinIndices;\n\t\tvar skinWeights = geometry.skinWeights;\n\n\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\n\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\n\n\t\t//\n\n\t\tif ( vertices.length > 0 && faces.length === 0 ) {\n\n\t\t\tconsole.error( 'THREE.DirectGeometry: Faceless geometries are not supported.' );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\n\n\t\t\t} else {\n\n\t\t\t\tvar normal = face.normal;\n\n\t\t\t\tthis.normals.push( normal, normal, normal );\n\n\t\t\t}\n\n\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\tif ( vertexColors.length === 3 ) {\n\n\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\n\n\t\t\t} else {\n\n\t\t\t\tvar color = face.color;\n\n\t\t\t\tthis.colors.push( color, color, color );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexUv === true ) {\n\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\n\n\t\t\t\t\tthis.uvs.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexUv2 === true ) {\n\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\n\n\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\n\n\t\t\t\t\tthis.uvs2.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// morphs\n\n\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\n\n\t\t\t\tmorphTargetsPosition[ j ].data.push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\n\n\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\n\n\t\t\t\tmorphTargetsNormal[ j ].data.push( morphNormal.a, morphNormal.b, morphNormal.c );\n\n\t\t\t}\n\n\t\t\t// skins\n\n\t\t\tif ( hasSkinIndices ) {\n\n\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\n\n\t\t\t}\n\n\t\t\tif ( hasSkinWeights ) {\n\n\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.computeGroups( geometry );\n\n\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction arrayMax( array ) {\n\n\tif ( array.length === 0 ) return - Infinity;\n\n\tvar max = array[ 0 ];\n\n\tfor ( var i = 1, l = array.length; i < l; ++ i ) {\n\n\t\tif ( array[ i ] > max ) max = array[ i ];\n\n\t}\n\n\treturn max;\n\n}\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar bufferGeometryId = 1; // BufferGeometry uses odd numbers as Id\n\nfunction BufferGeometry() {\n\n\tObject.defineProperty( this, 'id', { value: bufferGeometryId += 2 } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'BufferGeometry';\n\n\tthis.index = null;\n\tthis.attributes = {};\n\n\tthis.morphAttributes = {};\n\n\tthis.groups = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\tthis.drawRange = { start: 0, count: Infinity };\n\n\tthis.userData = {};\n\n}\n\nBufferGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: BufferGeometry,\n\n\tisBufferGeometry: true,\n\n\tgetIndex: function () {\n\n\t\treturn this.index;\n\n\t},\n\n\tsetIndex: function ( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayMax( index ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t},\n\n\taddAttribute: function ( name, attribute ) {\n\n\t\tif ( ! ( attribute && attribute.isBufferAttribute ) && ! ( attribute && attribute.isInterleavedBufferAttribute ) ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\n\n\t\t\treturn this.addAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\n\n\t\t}\n\n\t\tif ( name === 'index' ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\n\t\t\tthis.setIndex( attribute );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t},\n\n\tgetAttribute: function ( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t},\n\n\tremoveAttribute: function ( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t},\n\n\taddGroup: function ( start, count, materialIndex ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\n\n\t\t} );\n\n\t},\n\n\tclearGroups: function () {\n\n\t\tthis.groups = [];\n\n\t},\n\n\tsetDrawRange: function ( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t},\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tvar position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tmatrix.applyToBufferAttribute( position );\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tvar normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormalMatrix.applyToBufferAttribute( normal );\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function () {\n\n\t\t// rotate geometry around world x-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\tm1.makeRotationX( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\t// rotate geometry around world y-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\tm1.makeRotationY( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\t// rotate geometry around world z-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\tm1.makeRotationZ( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function () {\n\n\t\t// translate geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function translate( x, y, z ) {\n\n\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tscale: function () {\n\n\t\t// scale geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function scale( x, y, z ) {\n\n\t\t\tm1.makeScale( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar obj = new Object3D();\n\n\t\treturn function lookAt( vector ) {\n\n\t\t\tobj.lookAt( vector );\n\n\t\t\tobj.updateMatrix();\n\n\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t};\n\n\t}(),\n\n\tcenter: function () {\n\n\t\tvar offset = new Vector3();\n\n\t\treturn function center() {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tthis.boundingBox.getCenter( offset ).negate();\n\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetFromObject: function ( object ) {\n\n\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( object.isPoints || object.isLine ) {\n\n\t\t\tvar positions = new Float32BufferAttribute( geometry.vertices.length * 3, 3 );\n\t\t\tvar colors = new Float32BufferAttribute( geometry.colors.length * 3, 3 );\n\n\t\t\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\n\t\t\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\n\n\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\n\n\t\t\t\tvar lineDistances = new Float32BufferAttribute( geometry.lineDistances.length, 1 );\n\n\t\t\t\tthis.addAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t} else if ( object.isMesh ) {\n\n\t\t\tif ( geometry && geometry.isGeometry ) {\n\n\t\t\t\tthis.fromGeometry( geometry );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tvar position = [];\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t},\n\n\tupdateFromObject: function ( object ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tvar direct = geometry.__directGeometry;\n\n\t\t\tif ( geometry.elementsNeedUpdate === true ) {\n\n\t\t\t\tdirect = undefined;\n\t\t\t\tgeometry.elementsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( direct === undefined ) {\n\n\t\t\t\treturn this.fromGeometry( geometry );\n\n\t\t\t}\n\n\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\t\tgeometry.verticesNeedUpdate = false;\n\t\t\tgeometry.normalsNeedUpdate = false;\n\t\t\tgeometry.colorsNeedUpdate = false;\n\t\t\tgeometry.uvsNeedUpdate = false;\n\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t\tgeometry = direct;\n\n\t\t}\n\n\t\tvar attribute;\n\n\t\tif ( geometry.verticesNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.position;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.verticesNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.normalsNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.normal;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector3sArray( geometry.normals );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.normalsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.colorsNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.color;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyColorsArray( geometry.colors );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.colorsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.uvsNeedUpdate ) {\n\n\t\t\tattribute = this.attributes.uv;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector2sArray( geometry.uvs );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.uvsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.lineDistancesNeedUpdate ) {\n\n\t\t\tattribute = this.attributes.lineDistance;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyArray( geometry.lineDistances );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.lineDistancesNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.groupsNeedUpdate ) {\n\n\t\t\tgeometry.computeGroups( object.geometry );\n\t\t\tthis.groups = geometry.groups;\n\n\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tfromGeometry: function ( geometry ) {\n\n\t\tgeometry.__directGeometry = new DirectGeometry().fromGeometry( geometry );\n\n\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\n\n\t},\n\n\tfromDirectGeometry: function ( geometry ) {\n\n\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\n\t\tthis.addAttribute( 'position', new BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\n\n\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\n\t\t\tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\n\n\t\t}\n\n\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\n\t\t\tthis.addAttribute( 'color', new BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\n\n\t\t}\n\n\t\tif ( geometry.uvs.length > 0 ) {\n\n\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\n\t\t\tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\n\n\t\t}\n\n\t\tif ( geometry.uvs2.length > 0 ) {\n\n\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\n\t\t\tthis.addAttribute( 'uv2', new BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\n\n\t\t}\n\n\t\t// groups\n\n\t\tthis.groups = geometry.groups;\n\n\t\t// morphs\n\n\t\tfor ( var name in geometry.morphTargets ) {\n\n\t\t\tvar array = [];\n\t\t\tvar morphTargets = geometry.morphTargets[ name ];\n\n\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ i ];\n\n\t\t\t\tvar attribute = new Float32BufferAttribute( morphTarget.data.length * 3, 3 );\n\t\t\t\tattribute.name = morphTarget.name;\n\n\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget.data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\t// skinning\n\n\t\tif ( geometry.skinIndices.length > 0 ) {\n\n\t\t\tvar skinIndices = new Float32BufferAttribute( geometry.skinIndices.length * 4, 4 );\n\t\t\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\n\n\t\t}\n\n\t\tif ( geometry.skinWeights.length > 0 ) {\n\n\t\t\tvar skinWeights = new Float32BufferAttribute( geometry.skinWeights.length * 4, 4 );\n\t\t\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tvar position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t},\n\n\tcomputeBoundingSphere: function () {\n\n\t\tvar box = new Box3();\n\t\tvar vector = new Vector3();\n\n\t\treturn function computeBoundingSphere() {\n\n\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t\t}\n\n\t\t\tvar position = this.attributes.position;\n\n\t\t\tif ( position ) {\n\n\t\t\t\tvar center = this.boundingSphere.center;\n\n\t\t\t\tbox.setFromBufferAttribute( position );\n\t\t\t\tbox.getCenter( center );\n\n\t\t\t\t// hoping to find a boundingSphere with a radius smaller than the\n\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\t\tvar maxRadiusSq = 0;\n\n\t\t\t\tfor ( var i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t\tvector.x = position.getX( i );\n\t\t\t\t\tvector.y = position.getY( i );\n\t\t\t\t\tvector.z = position.getZ( i );\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n\t\t\t\t}\n\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\tcomputeFaceNormals: function () {\n\n\t\t// backwards compatibility\n\n\t},\n\n\tcomputeVertexNormals: function () {\n\n\t\tvar index = this.index;\n\t\tvar attributes = this.attributes;\n\n\t\tif ( attributes.position ) {\n\n\t\t\tvar positions = attributes.position.array;\n\n\t\t\tif ( attributes.normal === undefined ) {\n\n\t\t\t\tthis.addAttribute( 'normal', new BufferAttribute( new Float32Array( positions.length ), 3 ) );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tvar array = attributes.normal.array;\n\n\t\t\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t\t\tarray[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar normals = attributes.normal.array;\n\n\t\t\tvar vA, vB, vC;\n\t\t\tvar pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tvar indices = index.array;\n\n\t\t\t\tfor ( var i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tvA = indices[ i + 0 ] * 3;\n\t\t\t\t\tvB = indices[ i + 1 ] * 3;\n\t\t\t\t\tvC = indices[ i + 2 ] * 3;\n\n\t\t\t\t\tpA.fromArray( positions, vA );\n\t\t\t\t\tpB.fromArray( positions, vB );\n\t\t\t\t\tpC.fromArray( positions, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormals[ vA ] += cb.x;\n\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\n\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\n\n\t\t\t\t\tnormals[ vB ] += cb.x;\n\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\n\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\n\n\t\t\t\t\tnormals[ vC ] += cb.x;\n\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\n\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\n\n\t\t\t\t\tpA.fromArray( positions, i );\n\t\t\t\t\tpB.fromArray( positions, i + 3 );\n\t\t\t\t\tpC.fromArray( positions, i + 6 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormals[ i ] = cb.x;\n\t\t\t\t\tnormals[ i + 1 ] = cb.y;\n\t\t\t\t\tnormals[ i + 2 ] = cb.z;\n\n\t\t\t\t\tnormals[ i + 3 ] = cb.x;\n\t\t\t\t\tnormals[ i + 4 ] = cb.y;\n\t\t\t\t\tnormals[ i + 5 ] = cb.z;\n\n\t\t\t\t\tnormals[ i + 6 ] = cb.x;\n\t\t\t\t\tnormals[ i + 7 ] = cb.y;\n\t\t\t\t\tnormals[ i + 8 ] = cb.z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tattributes.normal.needsUpdate = true;\n\n\t\t}\n\n\t},\n\n\tmerge: function ( geometry, offset ) {\n\n\t\tif ( ! ( geometry && geometry.isBufferGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( offset === undefined ) {\n\n\t\t\toffset = 0;\n\n\t\t\tconsole.warn(\n\t\t\t\t'THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. '\n\t\t\t\t+ 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.'\n\t\t\t);\n\n\t\t}\n\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\n\n\t\t\tvar attribute1 = attributes[ key ];\n\t\t\tvar attributeArray1 = attribute1.array;\n\n\t\t\tvar attribute2 = geometry.attributes[ key ];\n\t\t\tvar attributeArray2 = attribute2.array;\n\n\t\t\tvar attributeSize = attribute2.itemSize;\n\n\t\t\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\n\n\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tnormalizeNormals: function () {\n\n\t\tvar vector = new Vector3();\n\n\t\treturn function normalizeNormals() {\n\n\t\t\tvar normals = this.attributes.normal;\n\n\t\t\tfor ( var i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t\tvector.x = normals.getX( i );\n\t\t\t\tvector.y = normals.getY( i );\n\t\t\t\tvector.z = normals.getZ( i );\n\n\t\t\t\tvector.normalize();\n\n\t\t\t\tnormals.setXYZ( i, vector.x, vector.y, vector.z );\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\ttoNonIndexed: function () {\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar geometry2 = new BufferGeometry();\n\n\t\tvar indices = this.index.array;\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var name in attributes ) {\n\n\t\t\tvar attribute = attributes[ name ];\n\n\t\t\tvar array = attribute.array;\n\t\t\tvar itemSize = attribute.itemSize;\n\n\t\t\tvar array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tvar index = 0, index2 = 0;\n\n\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\tfor ( var j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeometry2.addAttribute( name, new BufferAttribute( array2, itemSize ) );\n\n\t\t}\n\n\t\tvar groups = this.groups;\n\n\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tvar group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tdata.data = { attributes: {} };\n\n\t\tvar index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tvar array = Array.prototype.slice.call( index.array );\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: array\n\t\t\t};\n\n\t\t}\n\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tvar attribute = attributes[ key ];\n\n\t\t\tvar array = Array.prototype.slice.call( attribute.array );\n\n\t\t\tdata.data.attributes[ key ] = {\n\t\t\t\titemSize: attribute.itemSize,\n\t\t\t\ttype: attribute.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: attribute.normalized\n\t\t\t};\n\n\t\t}\n\n\t\tvar groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tvar boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\t/*\n\t\t // Handle primitives\n\n\t\t var parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t var values = [];\n\n\t\t for ( var key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */\n\n\t\treturn new BufferGeometry().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tvar name, i, l;\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tvar index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone() );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tvar attributes = source.attributes;\n\n\t\tfor ( name in attributes ) {\n\n\t\t\tvar attribute = attributes[ name ];\n\t\t\tthis.addAttribute( name, attribute.clone() );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tvar morphAttributes = source.morphAttributes;\n\n\t\tfor ( name in morphAttributes ) {\n\n\t\t\tvar array = [];\n\t\t\tvar morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone() );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\t// groups\n\n\t\tvar groups = source.groups;\n\n\t\tfor ( i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tvar group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tvar boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tvar boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// BoxGeometry\n\nfunction BoxGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'BoxGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\tdepth: depth,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tdepthSegments: depthSegments\n\t};\n\n\tthis.fromBufferGeometry( new BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );\n\tthis.mergeVertices();\n\n}\n\nBoxGeometry.prototype = Object.create( Geometry.prototype );\nBoxGeometry.prototype.constructor = BoxGeometry;\n\n// BoxBufferGeometry\n\nfunction BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'BoxBufferGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\tdepth: depth,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tdepthSegments: depthSegments\n\t};\n\n\tvar scope = this;\n\n\twidth = width || 1;\n\theight = height || 1;\n\tdepth = depth || 1;\n\n\t// segments\n\n\twidthSegments = Math.floor( widthSegments ) || 1;\n\theightSegments = Math.floor( heightSegments ) || 1;\n\tdepthSegments = Math.floor( depthSegments ) || 1;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar numberOfVertices = 0;\n\tvar groupStart = 0;\n\n\t// build each side of the box geometry\n\n\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\tvar segmentWidth = width / gridX;\n\t\tvar segmentHeight = height / gridY;\n\n\t\tvar widthHalf = width / 2;\n\t\tvar heightHalf = height / 2;\n\t\tvar depthHalf = depth / 2;\n\n\t\tvar gridX1 = gridX + 1;\n\t\tvar gridY1 = gridY + 1;\n\n\t\tvar vertexCounter = 0;\n\t\tvar groupCount = 0;\n\n\t\tvar ix, iy;\n\n\t\tvar vector = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tvar y = iy * segmentHeight - heightHalf;\n\n\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tvar x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t// set values to correct vector component\n\n\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t// set values to correct vector component\n\n\t\t\t\tvector[ u ] = 0;\n\t\t\t\tvector[ v ] = 0;\n\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t// uvs\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t// counters\n\n\t\t\t\tvertexCounter += 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\t// 1. you need three indices to draw a single face\n\t\t// 2. a single segment consists of two faces\n\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tvar a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\tvar b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\tvar c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tvar d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t// increase counter\n\n\t\t\t\tgroupCount += 6;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t\t// update total number of vertices\n\n\t\tnumberOfVertices += vertexCounter;\n\n\t}\n\n}\n\nBoxBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nBoxBufferGeometry.prototype.constructor = BoxBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// PlaneGeometry\n\nfunction PlaneGeometry( width, height, widthSegments, heightSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'PlaneGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments\n\t};\n\n\tthis.fromBufferGeometry( new PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\n\tthis.mergeVertices();\n\n}\n\nPlaneGeometry.prototype = Object.create( Geometry.prototype );\nPlaneGeometry.prototype.constructor = PlaneGeometry;\n\n// PlaneBufferGeometry\n\nfunction PlaneBufferGeometry( width, height, widthSegments, heightSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'PlaneBufferGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments\n\t};\n\n\twidth = width || 1;\n\theight = height || 1;\n\n\tvar width_half = width / 2;\n\tvar height_half = height / 2;\n\n\tvar gridX = Math.floor( widthSegments ) || 1;\n\tvar gridY = Math.floor( heightSegments ) || 1;\n\n\tvar gridX1 = gridX + 1;\n\tvar gridY1 = gridY + 1;\n\n\tvar segment_width = width / gridX;\n\tvar segment_height = height / gridY;\n\n\tvar ix, iy;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// generate vertices, normals and uvs\n\n\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\tvar y = iy * segment_height - height_half;\n\n\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\tvar x = ix * segment_width - width_half;\n\n\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\tuvs.push( ix / gridX );\n\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t}\n\n\t}\n\n\t// indices\n\n\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\tvar a = ix + gridX1 * iy;\n\t\t\tvar b = ix + gridX1 * ( iy + 1 );\n\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nPlaneBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nPlaneBufferGeometry.prototype.constructor = PlaneBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar materialId = 0;\n\nfunction Material() {\n\n\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Material';\n\n\tthis.fog = true;\n\tthis.lights = true;\n\n\tthis.blending = NormalBlending;\n\tthis.side = FrontSide;\n\tthis.flatShading = false;\n\tthis.vertexColors = NoColors; // THREE.NoColors, THREE.VertexColors, THREE.FaceColors\n\n\tthis.opacity = 1;\n\tthis.transparent = false;\n\n\tthis.blendSrc = SrcAlphaFactor;\n\tthis.blendDst = OneMinusSrcAlphaFactor;\n\tthis.blendEquation = AddEquation;\n\tthis.blendSrcAlpha = null;\n\tthis.blendDstAlpha = null;\n\tthis.blendEquationAlpha = null;\n\n\tthis.depthFunc = LessEqualDepth;\n\tthis.depthTest = true;\n\tthis.depthWrite = true;\n\n\tthis.clippingPlanes = null;\n\tthis.clipIntersection = false;\n\tthis.clipShadows = false;\n\n\tthis.shadowSide = null;\n\n\tthis.colorWrite = true;\n\n\tthis.precision = null; // override the renderer's default precision for this material\n\n\tthis.polygonOffset = false;\n\tthis.polygonOffsetFactor = 0;\n\tthis.polygonOffsetUnits = 0;\n\n\tthis.dithering = false;\n\n\tthis.alphaTest = 0;\n\tthis.premultipliedAlpha = false;\n\n\tthis.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\n\n\tthis.visible = true;\n\n\tthis.userData = {};\n\n\tthis.needsUpdate = true;\n\n}\n\nMaterial.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Material,\n\n\tisMaterial: true,\n\n\tonBeforeCompile: function () {},\n\n\tsetValues: function ( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( var key in values ) {\n\n\t\t\tvar newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// for backward compatability if shading is set in the constructor\n\t\t\tif ( key === 'shading' ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t\tthis.flatShading = ( newValue === FlatShading ) ? true : false;\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tvar currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else if ( key === 'overdraw' ) {\n\n\t\t\t\t// ensure overdraw is backwards-compatible with legacy boolean type\n\t\t\t\tthis[ key ] = Number( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar isRoot = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRoot ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearCoat !== undefined ) data.clearCoat = this.clearCoat;\n\t\tif ( this.clearCoatRoughness !== undefined ) data.clearCoatRoughness = this.clearCoatRoughness;\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\t\tif ( this.lightMap && this.lightMap.isTexture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\t\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\n\t\t}\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors !== NoColors ) data.vertexColors = this.vertexColors;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\tdata.depthFunc = this.depthFunc;\n\t\tdata.depthTest = this.depthTest;\n\t\tdata.depthWrite = this.depthWrite;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.morphTargets === true ) data.morphTargets = true;\n\t\tif ( this.skinning === true ) data.skinning = true;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tvar values = [];\n\n\t\t\tfor ( var key in cache ) {\n\n\t\t\t\tvar data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRoot ) {\n\n\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\tvar images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.flatShading = source.flatShading;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\tthis.overdraw = source.overdraw;\n\n\t\tthis.visible = source.visible;\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.clipShadows = source.clipShadows;\n\t\tthis.clipIntersection = source.clipIntersection;\n\n\t\tvar srcPlanes = source.clippingPlanes,\n\t\t\tdstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tvar n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( var i = 0; i !== n; ++ i )\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  defines: { \"label\" : \"value\" },\n *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n *\n *  fragmentShader: <string>,\n *  vertexShader: <string>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  lights: <bool>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction ShaderMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'ShaderMaterial';\n\n\tthis.defines = {};\n\tthis.uniforms = {};\n\n\tthis.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\n\tthis.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\n\n\tthis.linewidth = 1;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false; // set to use scene fog\n\tthis.lights = false; // set to use scene lights\n\tthis.clipping = false; // set to use user-defined clipping planes\n\n\tthis.skinning = false; // set to use skinning attribute streams\n\tthis.morphTargets = false; // set to use morph targets\n\tthis.morphNormals = false; // set to use morph normals\n\n\tthis.extensions = {\n\t\tderivatives: false, // set to use derivatives\n\t\tfragDepth: false, // set to use fragment depth values\n\t\tdrawBuffers: false, // set to use draw buffers\n\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t};\n\n\t// When rendered geometry doesn't include these attributes but the material does,\n\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\tthis.defaultAttributeValues = {\n\t\t'color': [ 1, 1, 1 ],\n\t\t'uv': [ 0, 0 ],\n\t\t'uv2': [ 0, 0 ]\n\t};\n\n\tthis.index0AttributeName = undefined;\n\tthis.uniformsNeedUpdate = false;\n\n\tif ( parameters !== undefined ) {\n\n\t\tif ( parameters.attributes !== undefined ) {\n\n\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n}\n\nShaderMaterial.prototype = Object.create( Material.prototype );\nShaderMaterial.prototype.constructor = ShaderMaterial;\n\nShaderMaterial.prototype.isShaderMaterial = true;\n\nShaderMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.fragmentShader = source.fragmentShader;\n\tthis.vertexShader = source.vertexShader;\n\n\tthis.uniforms = UniformsUtils.clone( source.uniforms );\n\n\tthis.defines = Object.assign( {}, source.defines );\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\tthis.lights = source.lights;\n\tthis.clipping = source.clipping;\n\n\tthis.skinning = source.skinning;\n\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\tthis.extensions = source.extensions;\n\n\treturn this;\n\n};\n\nShaderMaterial.prototype.toJSON = function ( meta ) {\n\n\tvar data = Material.prototype.toJSON.call( this, meta );\n\n\tdata.uniforms = {};\n\n\tfor ( var name in this.uniforms ) {\n\n\t\tvar uniform = this.uniforms[ name ];\n\t\tvar value = uniform.value;\n\n\t\tif ( value.isTexture ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 't',\n\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t};\n\n\t\t} else if ( value.isColor ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'c',\n\t\t\t\tvalue: value.getHex()\n\t\t\t};\n\n\t\t} else if ( value.isVector2 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'v2',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else if ( value.isVector3 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'v3',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else if ( value.isVector4 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'v4',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else if ( value.isMatrix4 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'm4',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\tvalue: value\n\t\t\t};\n\n\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t}\n\n\t}\n\n\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\tdata.vertexShader = this.vertexShader;\n\tdata.fragmentShader = this.fragmentShader;\n\n\treturn data;\n\n};\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Ray( origin, direction ) {\n\n\tthis.origin = ( origin !== undefined ) ? origin : new Vector3();\n\tthis.direction = ( direction !== undefined ) ? direction : new Vector3();\n\n}\n\nObject.assign( Ray.prototype, {\n\n\tset: function ( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t},\n\n\tat: function ( t, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .at() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t},\n\n\tlookAt: function ( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t},\n\n\trecast: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function recast( t ) {\n\n\t\t\tthis.origin.copy( this.at( t, v1 ) );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclosestPointToPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tvar directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t},\n\n\tdistanceSqToPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function distanceSqToPoint( point ) {\n\n\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t\t// point behind the ray\n\n\t\t\tif ( directionDistance < 0 ) {\n\n\t\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t\t}\n\n\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\t\treturn v1.distanceToSquared( point );\n\n\t\t};\n\n\t}(),\n\n\tdistanceSqToSegment: function () {\n\n\t\tvar segCenter = new Vector3();\n\t\tvar segDir = new Vector3();\n\t\tvar diff = new Vector3();\n\n\t\treturn function distanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t\t// It returns the min distance between the ray and the segment\n\t\t\t// defined by v0 and v1\n\t\t\t// It can also set two optional targets :\n\t\t\t// - The closest point on the ray\n\t\t\t// - The closest point on the segment\n\n\t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\n\t\t\tdiff.copy( this.origin ).sub( segCenter );\n\n\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\t\tvar a01 = - this.direction.dot( segDir );\n\t\t\tvar b0 = diff.dot( this.direction );\n\t\t\tvar b1 = - diff.dot( segDir );\n\t\t\tvar c = diff.lengthSq();\n\t\t\tvar det = Math.abs( 1 - a01 * a01 );\n\t\t\tvar s0, s1, sqrDist, extDet;\n\n\t\t\tif ( det > 0 ) {\n\n\t\t\t\t// The ray and segment are not parallel.\n\n\t\t\t\ts0 = a01 * b1 - b0;\n\t\t\t\ts1 = a01 * b0 - b1;\n\t\t\t\textDet = segExtent * det;\n\n\t\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\t\tvar invDet = 1 / det;\n\t\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 5\n\n\t\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t\t// region 4\n\n\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 3\n\n\t\t\t\t\t\ts0 = 0;\n\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 2\n\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Ray and segment are parallel.\n\n\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t}\n\n\t\t\tif ( optionalPointOnRay ) {\n\n\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t\t}\n\n\t\t\tif ( optionalPointOnSegment ) {\n\n\t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\n\n\t\t\t}\n\n\t\t\treturn sqrDist;\n\n\t\t};\n\n\t}(),\n\n\tintersectSphere: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function intersectSphere( sphere, target ) {\n\n\t\t\tv1.subVectors( sphere.center, this.origin );\n\t\t\tvar tca = v1.dot( this.direction );\n\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\n\t\t\tvar radius2 = sphere.radius * sphere.radius;\n\n\t\t\tif ( d2 > radius2 ) return null;\n\n\t\t\tvar thc = Math.sqrt( radius2 - d2 );\n\n\t\t\t// t0 = first intersect point - entrance on front of sphere\n\t\t\tvar t0 = tca - thc;\n\n\t\t\t// t1 = second intersect point - exit point on back of sphere\n\t\t\tvar t1 = tca + thc;\n\n\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n\t\t\t// test to see if t0 is behind the ray:\n\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t\t// in order to always return an intersect point that is in front of the ray.\n\t\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\t\treturn this.at( t0, target );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t},\n\n\tdistanceToPlane: function ( plane ) {\n\n\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t},\n\n\tintersectPlane: function ( plane, target ) {\n\n\t\tvar t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t},\n\n\tintersectsPlane: function ( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tvar distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t},\n\n\tintersectBox: function ( box, target ) {\n\n\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tvar invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tvar origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t},\n\n\tintersectsBox: ( function () {\n\n\t\tvar v = new Vector3();\n\n\t\treturn function intersectsBox( box ) {\n\n\t\t\treturn this.intersectBox( box, v ) !== null;\n\n\t\t};\n\n\t} )(),\n\n\tintersectTriangle: function () {\n\n\t\t// Compute the offset origin, edges, and normal.\n\t\tvar diff = new Vector3();\n\t\tvar edge1 = new Vector3();\n\t\tvar edge2 = new Vector3();\n\t\tvar normal = new Vector3();\n\n\t\treturn function intersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t\tedge1.subVectors( b, a );\n\t\t\tedge2.subVectors( c, a );\n\t\t\tnormal.crossVectors( edge1, edge2 );\n\n\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\t\tvar DdN = this.direction.dot( normal );\n\t\t\tvar sign;\n\n\t\t\tif ( DdN > 0 ) {\n\n\t\t\t\tif ( backfaceCulling ) return null;\n\t\t\t\tsign = 1;\n\n\t\t\t} else if ( DdN < 0 ) {\n\n\t\t\t\tsign = - 1;\n\t\t\t\tDdN = - DdN;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tdiff.subVectors( this.origin, a );\n\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\n\n\t\t\t// b1 < 0, no intersection\n\t\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\n\n\t\t\t// b2 < 0, no intersection\n\t\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// b1+b2 > 1, no intersection\n\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// Line intersects triangle, check if ray does.\n\t\t\tvar QdN = - sign * diff.dot( normal );\n\n\t\t\t// t < 0, no intersection\n\t\t\tif ( QdN < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// Ray intersects triangle.\n\t\t\treturn this.at( QdN / DdN, target );\n\n\t\t};\n\n\t}(),\n\n\tapplyMatrix4: function ( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Triangle( a, b, c ) {\n\n\tthis.a = ( a !== undefined ) ? a : new Vector3();\n\tthis.b = ( b !== undefined ) ? b : new Vector3();\n\tthis.c = ( c !== undefined ) ? c : new Vector3();\n\n}\n\nObject.assign( Triangle, {\n\n\tgetNormal: function () {\n\n\t\tvar v0 = new Vector3();\n\n\t\treturn function getNormal( a, b, c, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getNormal() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\ttarget.subVectors( c, b );\n\t\t\tv0.subVectors( a, b );\n\t\t\ttarget.cross( v0 );\n\n\t\t\tvar targetLengthSq = target.lengthSq();\n\t\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t\t}\n\n\t\t\treturn target.set( 0, 0, 0 );\n\n\t\t};\n\n\t}(),\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tgetBarycoord: function () {\n\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function getBarycoord( point, a, b, c, target ) {\n\n\t\t\tv0.subVectors( c, a );\n\t\t\tv1.subVectors( b, a );\n\t\t\tv2.subVectors( point, a );\n\n\t\t\tvar dot00 = v0.dot( v0 );\n\t\t\tvar dot01 = v0.dot( v1 );\n\t\t\tvar dot02 = v0.dot( v2 );\n\t\t\tvar dot11 = v1.dot( v1 );\n\t\t\tvar dot12 = v1.dot( v2 );\n\n\t\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getBarycoord() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\t// collinear or singular triangle\n\t\t\tif ( denom === 0 ) {\n\n\t\t\t\t// arbitrary location outside of triangle?\n\t\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t\t}\n\n\t\t\tvar invDenom = 1 / denom;\n\t\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t\t// barycentric coordinates must always sum to 1\n\t\t\treturn target.set( 1 - u - v, v, u );\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function containsPoint( point, a, b, c ) {\n\n\t\t\tTriangle.getBarycoord( point, a, b, c, v1 );\n\n\t\t\treturn ( v1.x >= 0 ) && ( v1.y >= 0 ) && ( ( v1.x + v1.y ) <= 1 );\n\n\t\t};\n\n\t}(),\n\n\tgetUV: function () {\n\n\t\tvar barycoord = new Vector3();\n\n\t\treturn function getUV( point, p1, p2, p3, uv1, uv2, uv3, target ) {\n\n\t\t\tthis.getBarycoord( point, p1, p2, p3, barycoord );\n\n\t\t\ttarget.set( 0, 0 );\n\t\t\ttarget.addScaledVector( uv1, barycoord.x );\n\t\t\ttarget.addScaledVector( uv2, barycoord.y );\n\t\t\ttarget.addScaledVector( uv3, barycoord.z );\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}()\n\n} );\n\nObject.assign( Triangle.prototype, {\n\n\tset: function ( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t},\n\n\tgetArea: function () {\n\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\n\t\treturn function getArea() {\n\n\t\t\tv0.subVectors( this.c, this.b );\n\t\t\tv1.subVectors( this.a, this.b );\n\n\t\t\treturn v0.cross( v1 ).length() * 0.5;\n\n\t\t};\n\n\t}(),\n\n\tgetMidpoint: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getMidpoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t},\n\n\tgetNormal: function ( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t},\n\n\tgetPlane: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getPlane() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t},\n\n\tgetBarycoord: function ( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t},\n\n\tgetUV: function ( point, uv1, uv2, uv3, result ) {\n\n\t\treturn Triangle.getUV( point, this.a, this.b, this.c, uv1, uv2, uv3, result );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t},\n\n\tclosestPointToPoint: function () {\n\n\t\tvar vab = new Vector3();\n\t\tvar vac = new Vector3();\n\t\tvar vbc = new Vector3();\n\t\tvar vap = new Vector3();\n\t\tvar vbp = new Vector3();\n\t\tvar vcp = new Vector3();\n\n\t\treturn function closestPointToPoint( p, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .closestPointToPoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tvar a = this.a, b = this.b, c = this.c;\n\t\t\tvar v, w;\n\n\t\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t\tvab.subVectors( b, a );\n\t\t\tvac.subVectors( c, a );\n\t\t\tvap.subVectors( p, a );\n\t\t\tvar d1 = vab.dot( vap );\n\t\t\tvar d2 = vac.dot( vap );\n\t\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\t\treturn target.copy( a );\n\n\t\t\t}\n\n\t\t\tvbp.subVectors( p, b );\n\t\t\tvar d3 = vab.dot( vbp );\n\t\t\tvar d4 = vac.dot( vbp );\n\t\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\t\treturn target.copy( b );\n\n\t\t\t}\n\n\t\t\tvar vc = d1 * d4 - d3 * d2;\n\t\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\t\treturn target.copy( a ).addScaledVector( vab, v );\n\n\t\t\t}\n\n\t\t\tvcp.subVectors( p, c );\n\t\t\tvar d5 = vab.dot( vcp );\n\t\t\tvar d6 = vac.dot( vcp );\n\t\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\t\treturn target.copy( c );\n\n\t\t\t}\n\n\t\t\tvar vb = d5 * d2 - d1 * d6;\n\t\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\t\treturn target.copy( a ).addScaledVector( vac, w );\n\n\t\t\t}\n\n\t\t\tvar va = d3 * d6 - d5 * d4;\n\t\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t\tvbc.subVectors( c, b );\n\t\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\t\treturn target.copy( b ).addScaledVector( vbc, w ); // edge region of BC\n\n\t\t\t}\n\n\t\t\t// face region\n\t\t\tvar denom = 1 / ( va + vb + vc );\n\t\t\t// u = va * denom\n\t\t\tv = vb * denom;\n\t\t\tw = vc * denom;\n\t\t\treturn target.copy( a ).addScaledVector( vab, v ).addScaledVector( vac, w );\n\n\t\t};\n\n\t}(),\n\n\tequals: function ( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>\n * }\n */\n\nfunction MeshBasicMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshBasicMaterial';\n\n\tthis.color = new Color( 0xffffff ); // emissive\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshBasicMaterial.prototype = Object.create( Material.prototype );\nMeshBasicMaterial.prototype.constructor = MeshBasicMaterial;\n\nMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\nMeshBasicMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author jonobr1 / http://jonobr1.com/\n */\n\nfunction Mesh( geometry, material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Mesh';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new MeshBasicMaterial( { color: Math.random() * 0xffffff } );\n\n\tthis.drawMode = TrianglesDrawMode;\n\n\tthis.updateMorphTargets();\n\n}\n\nMesh.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Mesh,\n\n\tisMesh: true,\n\n\tsetDrawMode: function ( value ) {\n\n\t\tthis.drawMode = value;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.drawMode = source.drawMode;\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tupdateMorphTargets: function () {\n\n\t\tvar geometry = this.geometry;\n\t\tvar m, ml, name;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tvar morphAttributes = geometry.morphAttributes;\n\t\t\tvar keys = Object.keys( morphAttributes );\n\n\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\tvar morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tname = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar morphTargets = geometry.morphTargets;\n\n\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( m = 0, ml = morphTargets.length; m < ml; m ++ ) {\n\n\t\t\t\t\tname = morphTargets[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\tvar vA = new Vector3();\n\t\tvar vB = new Vector3();\n\t\tvar vC = new Vector3();\n\n\t\tvar tempA = new Vector3();\n\t\tvar tempB = new Vector3();\n\t\tvar tempC = new Vector3();\n\n\t\tvar uvA = new Vector2();\n\t\tvar uvB = new Vector2();\n\t\tvar uvC = new Vector2();\n\n\t\tvar intersectionPoint = new Vector3();\n\t\tvar intersectionPointWorld = new Vector3();\n\n\t\tfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\t\t\tvar intersect;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t\t\t} else {\n\n\t\t\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\n\n\t\t\t}\n\n\t\t\tif ( intersect === null ) return null;\n\n\t\t\tintersectionPointWorld.copy( point );\n\t\t\tintersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\n\n\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\t\t\treturn {\n\t\t\t\tdistance: distance,\n\t\t\t\tpoint: intersectionPointWorld.clone(),\n\t\t\t\tobject: object\n\t\t\t};\n\n\t\t}\n\n\t\tfunction checkBufferGeometryIntersection( object, material, raycaster, ray, position, uv, a, b, c ) {\n\n\t\t\tvA.fromBufferAttribute( position, a );\n\t\t\tvB.fromBufferAttribute( position, b );\n\t\t\tvC.fromBufferAttribute( position, c );\n\n\t\t\tvar intersection = checkIntersection( object, material, raycaster, ray, vA, vB, vC, intersectionPoint );\n\n\t\t\tif ( intersection ) {\n\n\t\t\t\tif ( uv ) {\n\n\t\t\t\t\tuvA.fromBufferAttribute( uv, a );\n\t\t\t\t\tuvB.fromBufferAttribute( uv, b );\n\t\t\t\t\tuvC.fromBufferAttribute( uv, c );\n\n\t\t\t\t\tintersection.uv = Triangle.getUV( intersectionPoint, vA, vB, vC, uvA, uvB, uvC, new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t\tvar face = new Face3( a, b, c );\n\t\t\t\tTriangle.getNormal( vA, vB, vC, face.normal );\n\n\t\t\t\tintersection.face = face;\n\n\t\t\t}\n\n\t\t\treturn intersection;\n\n\t\t}\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar material = this.material;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\tif ( material === undefined ) return;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\t// Check boundingBox before continuing\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tif ( ray.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t\t}\n\n\t\t\tvar intersection;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar a, b, c;\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar position = geometry.attributes.position;\n\t\t\t\tvar uv = geometry.attributes.uv;\n\t\t\t\tvar groups = geometry.groups;\n\t\t\t\tvar drawRange = geometry.drawRange;\n\t\t\t\tvar i, j, il, jl;\n\t\t\t\tvar group, groupMaterial;\n\t\t\t\tvar start, end;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t// indexed buffer geometry\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tgroup = groups[ i ];\n\t\t\t\t\t\t\tgroupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\t\ta = index.getX( j );\n\t\t\t\t\t\t\t\tb = index.getX( j + 1 );\n\t\t\t\t\t\t\t\tc = index.getX( j + 2 );\n\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\t\t\t\tend = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\t\ta = index.getX( i );\n\t\t\t\t\t\t\tb = index.getX( i + 1 );\n\t\t\t\t\t\t\tc = index.getX( i + 2 );\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( position !== undefined ) {\n\n\t\t\t\t\t// non-indexed buffer geometry\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tgroup = groups[ i ];\n\t\t\t\t\t\t\tgroupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\t\ta = j;\n\t\t\t\t\t\t\t\tb = j + 1;\n\t\t\t\t\t\t\t\tc = j + 2;\n\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\t\t\t\tend = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\t\ta = i;\n\t\t\t\t\t\t\tb = i + 1;\n\t\t\t\t\t\t\tc = i + 2;\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar fvA, fvB, fvC;\n\t\t\t\tvar isMultiMaterial = Array.isArray( material );\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar faces = geometry.faces;\n\t\t\t\tvar uvs;\n\n\t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\n\t\t\t\tif ( faceVertexUvs.length > 0 ) uvs = faceVertexUvs;\n\n\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tvar face = faces[ f ];\n\t\t\t\t\tvar faceMaterial = isMultiMaterial ? material[ face.materialIndex ] : material;\n\n\t\t\t\t\tif ( faceMaterial === undefined ) continue;\n\n\t\t\t\t\tfvA = vertices[ face.a ];\n\t\t\t\t\tfvB = vertices[ face.b ];\n\t\t\t\t\tfvC = vertices[ face.c ];\n\n\t\t\t\t\tif ( faceMaterial.morphTargets === true ) {\n\n\t\t\t\t\t\tvar morphTargets = geometry.morphTargets;\n\t\t\t\t\t\tvar morphInfluences = this.morphTargetInfluences;\n\n\t\t\t\t\t\tvA.set( 0, 0, 0 );\n\t\t\t\t\t\tvB.set( 0, 0, 0 );\n\t\t\t\t\t\tvC.set( 0, 0, 0 );\n\n\t\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\n\n\t\t\t\t\t\t\tvar influence = morphInfluences[ t ];\n\n\t\t\t\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t\t\t\tvar targets = morphTargets[ t ].vertices;\n\n\t\t\t\t\t\t\tvA.addScaledVector( tempA.subVectors( targets[ face.a ], fvA ), influence );\n\t\t\t\t\t\t\tvB.addScaledVector( tempB.subVectors( targets[ face.b ], fvB ), influence );\n\t\t\t\t\t\t\tvC.addScaledVector( tempC.subVectors( targets[ face.c ], fvC ), influence );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvA.add( fvA );\n\t\t\t\t\t\tvB.add( fvB );\n\t\t\t\t\t\tvC.add( fvC );\n\n\t\t\t\t\t\tfvA = vA;\n\t\t\t\t\t\tfvB = vB;\n\t\t\t\t\t\tfvC = vC;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tintersection = checkIntersection( this, faceMaterial, raycaster, ray, fvA, fvB, fvC, intersectionPoint );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tif ( uvs && uvs[ f ] ) {\n\n\t\t\t\t\t\t\tvar uvs_f = uvs[ f ];\n\t\t\t\t\t\t\tuvA.copy( uvs_f[ 0 ] );\n\t\t\t\t\t\t\tuvB.copy( uvs_f[ 1 ] );\n\t\t\t\t\t\t\tuvC.copy( uvs_f[ 2 ] );\n\n\t\t\t\t\t\t\tintersection.uv = Triangle.getUV( intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC, new Vector2() );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tintersection.face = face;\n\t\t\t\t\t\tintersection.faceIndex = f;\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLBackground( renderer, state, objects, premultipliedAlpha ) {\n\n\tvar clearColor = new Color( 0x000000 );\n\tvar clearAlpha = 0;\n\n\tvar planeMesh;\n\tvar boxMesh;\n\n\tfunction render( renderList, scene, camera, forceClear ) {\n\n\t\tvar background = scene.background;\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && background.isCubeTexture ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxBufferGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tuniforms: UniformsUtils.clone( ShaderLib.cube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: true,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.removeAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.removeAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.tCube.value = background;\n\n\t\t\trenderList.push( boxMesh, boxMesh.geometry, boxMesh.material, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneBufferGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tuniforms: UniformsUtils.clone( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: true,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.removeAttribute( 'normal' );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\n\t\t\trenderList.push( planeMesh, planeMesh.geometry, planeMesh.material, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tstate.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha !== undefined ? alpha : 1;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tvar mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode );\n\n\t}\n\n\tfunction renderInstances( geometry, start, count ) {\n\n\t\tvar extension;\n\n\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\textension = gl;\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ capabilities.isWebGL2 ? 'drawArraysInstanced' : 'drawArraysInstancedANGLE' ]( mode, start, count, geometry.maxInstancedCount );\n\n\t\tinfo.update( count, mode, geometry.maxInstancedCount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tvar maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tvar isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext;\n\n\tvar precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tvar maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tvar logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\tvar maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\tvar maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\tvar maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\tvar maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tvar maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\tvar maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\tvar maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\tvar vertexTextures = maxVertexTextures > 0;\n\tvar floatFragmentTextures = isWebGL2 || !! extensions.get( 'OES_texture_float' );\n\tvar floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\treturn {\n\n\t\tisWebGL2: isWebGL2,\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures\n\n\t};\n\n}\n\n/**\n * @author tschw\n */\n\nfunction WebGLClipping() {\n\n\tvar scope = this,\n\n\t\tglobalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false,\n\n\t\tplane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping, camera ) {\n\n\t\tvar enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\t\tresetGlobalState();\n\n\t};\n\n\tthis.setState = function ( planes, clipIntersection, clipShadows, camera, cache, fromCache ) {\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4,\n\n\t\t\t\tdstArray = cache.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, fromCache );\n\n\t\t\tfor ( var i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tcache.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tvar nPlanes = planes !== null ? planes.length : 0,\n\t\t\tdstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tvar flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLExtensions( gl ) {\n\n\tvar extensions = {};\n\n\treturn {\n\n\t\tget: function ( name ) {\n\n\t\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\t\treturn extensions[ name ];\n\n\t\t\t}\n\n\t\t\tvar extension;\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\textension = gl.getExtension( name );\n\n\t\t\t}\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\textensions[ name ] = extension;\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLGeometries( gl, attributes, info ) {\n\n\tvar geometries = {};\n\tvar wireframeAttributes = {};\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tvar geometry = event.target;\n\t\tvar buffergeometry = geometries[ geometry.id ];\n\n\t\tif ( buffergeometry.index !== null ) {\n\n\t\t\tattributes.remove( buffergeometry.index );\n\n\t\t}\n\n\t\tfor ( var name in buffergeometry.attributes ) {\n\n\t\t\tattributes.remove( buffergeometry.attributes[ name ] );\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tvar attribute = wireframeAttributes[ buffergeometry.id ];\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\tdelete wireframeAttributes[ buffergeometry.id ];\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tvar buffergeometry = geometries[ geometry.id ];\n\n\t\tif ( buffergeometry ) return buffergeometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tbuffergeometry = geometry;\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tif ( geometry._bufferGeometry === undefined ) {\n\n\t\t\t\tgeometry._bufferGeometry = new BufferGeometry().setFromObject( object );\n\n\t\t\t}\n\n\t\t\tbuffergeometry = geometry._bufferGeometry;\n\n\t\t}\n\n\t\tgeometries[ geometry.id ] = buffergeometry;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tvar index = geometry.index;\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t}\n\n\t\tfor ( var name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tvar morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( var name in morphAttributes ) {\n\n\t\t\tvar array = morphAttributes[ name ];\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tvar attribute = wireframeAttributes[ geometry.id ];\n\n\t\tif ( attribute ) return attribute;\n\n\t\tvar indices = [];\n\n\t\tvar geometryIndex = geometry.index;\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\t// console.time( 'wireframe' );\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tvar array = geometryIndex.array;\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tvar a = array[ i + 0 ];\n\t\t\t\tvar b = array[ i + 1 ];\n\t\t\t\tvar c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar array = geometryAttributes.position.array;\n\n\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tvar a = i + 0;\n\t\t\t\tvar b = i + 1;\n\t\t\t\tvar c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// console.timeEnd( 'wireframe' );\n\n\t\tattribute = new ( arrayMax( indices ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\n\t\tattributes.update( attribute, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\twireframeAttributes[ geometry.id ] = attribute;\n\n\t\treturn attribute;\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tvar mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tvar type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode );\n\n\t}\n\n\tfunction renderInstances( geometry, start, count ) {\n\n\t\tvar extension;\n\n\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\textension = gl;\n\n\t\t} else {\n\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ capabilities.isWebGL2 ? 'drawElementsInstanced' : 'drawElementsInstancedANGLE' ]( mode, count, type, start * bytesPerElement, geometry.maxInstancedCount );\n\n\t\tinfo.update( count, mode, geometry.maxInstancedCount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WebGLInfo( gl ) {\n\n\tvar memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tvar render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\tinstanceCount = instanceCount || 1;\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase gl.TRIANGLES:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.TRIANGLE_STRIP:\n\t\t\tcase gl.TRIANGLE_FAN:\n\t\t\t\trender.triangles += instanceCount * ( count - 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINES:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_STRIP:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_LOOP:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase gl.POINTS:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.frame ++;\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction WebGLMorphtargets( gl ) {\n\n\tvar influencesList = {};\n\tvar morphInfluences = new Float32Array( 8 );\n\n\tfunction update( object, geometry, material, program ) {\n\n\t\tvar objectInfluences = object.morphTargetInfluences;\n\n\t\tvar length = objectInfluences.length;\n\n\t\tvar influences = influencesList[ geometry.id ];\n\n\t\tif ( influences === undefined ) {\n\n\t\t\t// initialise list\n\n\t\t\tinfluences = [];\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t}\n\n\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t}\n\n\t\tvar morphTargets = material.morphTargets && geometry.morphAttributes.position;\n\t\tvar morphNormals = material.morphNormals && geometry.morphAttributes.normal;\n\n\t\t// Remove current morphAttributes\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tif ( influence[ 1 ] !== 0 ) {\n\n\t\t\t\tif ( morphTargets ) geometry.removeAttribute( 'morphTarget' + i );\n\t\t\t\tif ( morphNormals ) geometry.removeAttribute( 'morphNormal' + i );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Collect influences\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tinfluence[ 0 ] = i;\n\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t}\n\n\t\tinfluences.sort( absNumericalSort );\n\n\t\t// Add morphAttributes\n\n\t\tfor ( var i = 0; i < 8; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tif ( influence ) {\n\n\t\t\t\tvar index = influence[ 0 ];\n\t\t\t\tvar value = influence[ 1 ];\n\n\t\t\t\tif ( value ) {\n\n\t\t\t\t\tif ( morphTargets ) geometry.addAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\t\t\t\t\tif ( morphNormals ) geometry.addAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t}\n\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLObjects( geometries, info ) {\n\n\tvar updateList = {};\n\n\tfunction update( object ) {\n\n\t\tvar frame = info.render.frame;\n\n\t\tvar geometry = object.geometry;\n\t\tvar buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateList[ buffergeometry.id ] !== frame ) {\n\n\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\tbuffergeometry.updateFromObject( object );\n\n\t\t\t}\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateList[ buffergeometry.id ] = frame;\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction CubeTexture( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\timages = images !== undefined ? images : [];\n\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\tTexture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.flipY = false;\n\n}\n\nCubeTexture.prototype = Object.create( Texture.prototype );\nCubeTexture.prototype.constructor = CubeTexture;\n\nCubeTexture.prototype.isCubeTexture = true;\n\nObject.defineProperty( CubeTexture.prototype, 'images', {\n\n\tget: function () {\n\n\t\treturn this.image;\n\n\t},\n\n\tset: function ( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n} );\n\n/**\n * @author Artur Trzesiok\n */\n\nfunction DataTexture3D( data, width, height, depth ) {\n\n\t// We're going to add .setXXX() methods for setting properties later.\n\t// Users can still set in DataTexture3D directly.\n\t//\n\t//\tvar texture = new THREE.DataTexture3D( data, width, height, depth );\n\t// \ttexture.anisotropy = 16;\n\t//\n\t// See #14839\n\n\tTexture.call( this, null );\n\n\tthis.image = { data: data, width: width, height: height, depth: depth };\n\n\tthis.magFilter = NearestFilter;\n\tthis.minFilter = NearestFilter;\n\n\tthis.generateMipmaps = false;\n\tthis.flipY = false;\n\n}\n\nDataTexture3D.prototype = Object.create( Texture.prototype );\nDataTexture3D.prototype.constructor = DataTexture3D;\nDataTexture3D.prototype.isDataTexture3D = true;\n\n/**\n * @author tschw\n * @author Mugen87 / https://github.com/Mugen87\n * @author mrdoob / http://mrdoob.com/\n *\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program, renderer )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [renderer] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'renderer' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (renderer factorizations):\n *\n * .upload( gl, seq, values, renderer )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (renderer factorizations):\n *\n * .setValue( gl, name, value )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .set( gl, obj, prop )\n *\n * \t\tsets uniform from object and property with same name than uniform\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\nvar emptyTexture = new Texture();\nvar emptyTexture3d = new DataTexture3D();\nvar emptyCubeTexture = new CubeTexture();\n\n// --- Base for inner nodes (including the root) ---\n\nfunction UniformContainer() {\n\n\tthis.seq = [];\n\tthis.map = {};\n\n}\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nvar arrayCacheF32 = [];\nvar arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nvar mat4array = new Float32Array( 16 );\nvar mat3array = new Float32Array( 9 );\nvar mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tvar firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tvar n = nBlocks * blockSize,\n\t\tr = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( var i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( var i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( var i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( renderer, n ) {\n\n\tvar r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( var i = 0; i !== n; ++ i )\n\t\tr[ i ] = renderer.allocTextureUnit();\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValue1f( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\nfunction setValue1i( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValue2fv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValue3fv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValue4fv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or MatrixN)\n\nfunction setValue2fm( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValue3fm( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValue4fm( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, renderer ) {\n\n\tvar cache = this.cache;\n\tvar unit = renderer.allocTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\trenderer.setTexture2D( v || emptyTexture, unit );\n\n}\n\nfunction setValueT3D1( gl, v, renderer ) {\n\n\tvar cache = this.cache;\n\tvar unit = renderer.allocTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\trenderer.setTexture3D( v || emptyTexture3d, unit );\n\n}\n\nfunction setValueT6( gl, v, renderer ) {\n\n\tvar cache = this.cache;\n\tvar unit = renderer.allocTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\trenderer.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\n// Integer / Boolean vectors or arrays thereof (always flat arrays)\n\nfunction setValue2iv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform2iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValue3iv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform3iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValue4iv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform4iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValue1f; // FLOAT\n\t\tcase 0x8b50: return setValue2fv; // _VEC2\n\t\tcase 0x8b51: return setValue3fv; // _VEC3\n\t\tcase 0x8b52: return setValue4fv; // _VEC4\n\n\t\tcase 0x8b5a: return setValue2fm; // _MAT2\n\t\tcase 0x8b5b: return setValue3fm; // _MAT3\n\t\tcase 0x8b5c: return setValue4fm; // _MAT4\n\n\t\tcase 0x8b5e: case 0x8d66: return setValueT1; // SAMPLER_2D, SAMPLER_EXTERNAL_OES\n\t\tcase 0x8B5F: return setValueT3D1; // SAMPLER_3D\n\t\tcase 0x8b60: return setValueT6; // SAMPLER_CUBE\n\n\t\tcase 0x1404: case 0x8b56: return setValue1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\n\t}\n\n}\n\n// Array of scalars\n\nfunction setValue1fv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform1fv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\nfunction setValue1iv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform1iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n// Array of vectors (flat or from THREE classes)\n\nfunction setValueV2a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 2 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniform2fv( this.addr, data );\n\n\tthis.updateCache( data );\n\n}\n\nfunction setValueV3a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 3 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniform3fv( this.addr, data );\n\n\tthis.updateCache( data );\n\n}\n\nfunction setValueV4a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 4 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniform4fv( this.addr, data );\n\n\tthis.updateCache( data );\n\n}\n\n// Array of matrices (flat or from THREE clases)\n\nfunction setValueM2a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 4 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n\tthis.updateCache( data );\n\n}\n\nfunction setValueM3a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 9 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n\tthis.updateCache( data );\n\n}\n\nfunction setValueM4a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 16 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n\tthis.updateCache( data );\n\n}\n\n// Array of textures (2D / Cube)\n\nfunction setValueT1a( gl, v, renderer ) {\n\n\tvar cache = this.cache;\n\tvar n = v.length;\n\n\tvar units = allocTexUnits( renderer, n );\n\n\tif ( arraysEqual( cache, units ) === false ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\trenderer.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6a( gl, v, renderer ) {\n\n\tvar cache = this.cache;\n\tvar n = v.length;\n\n\tvar units = allocTexUnits( renderer, n );\n\n\tif ( arraysEqual( cache, units ) === false ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\trenderer.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValue1fv; // FLOAT\n\t\tcase 0x8b50: return setValueV2a; // _VEC2\n\t\tcase 0x8b51: return setValueV3a; // _VEC3\n\t\tcase 0x8b52: return setValueV4a; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2a; // _MAT2\n\t\tcase 0x8b5b: return setValueM3a; // _MAT3\n\t\tcase 0x8b5c: return setValueM4a; // _MAT4\n\n\t\tcase 0x8b5e: return setValueT1a; // SAMPLER_2D\n\t\tcase 0x8b60: return setValueT6a; // SAMPLER_CUBE\n\n\t\tcase 0x1404: case 0x8b56: return setValue1iv; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nfunction SingleUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nfunction PureArrayUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.size = activeInfo.size;\n\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nPureArrayUniform.prototype.updateCache = function ( data ) {\n\n\tvar cache = this.cache;\n\n\tif ( data instanceof Float32Array && cache.length !== data.length ) {\n\n\t\tthis.cache = new Float32Array( data.length );\n\n\t}\n\n\tcopyArray( cache, data );\n\n};\n\nfunction StructuredUniform( id ) {\n\n\tthis.id = id;\n\n\tUniformContainer.call( this ); // mix-in\n\n}\n\nStructuredUniform.prototype.setValue = function ( gl, value, renderer ) {\n\n\tvar seq = this.seq;\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ];\n\t\tu.setValue( gl, value[ u.id ], renderer );\n\n\t}\n\n};\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nvar RePathPart = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tvar path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tvar match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex,\n\n\t\t\tid = match[ 1 ],\n\t\t\tidIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tvar map = container.map, next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nfunction WebGLUniforms( gl, program, renderer ) {\n\n\tUniformContainer.call( this );\n\n\tthis.renderer = renderer;\n\n\tvar n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\tfor ( var i = 0; i < n; ++ i ) {\n\n\t\tvar info = gl.getActiveUniform( program, i ),\n\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\tparseUniform( info, addr, this );\n\n\t}\n\n}\n\nWebGLUniforms.prototype.setValue = function ( gl, name, value ) {\n\n\tvar u = this.map[ name ];\n\n\tif ( u !== undefined ) u.setValue( gl, value, this.renderer );\n\n};\n\nWebGLUniforms.prototype.setOptional = function ( gl, object, name ) {\n\n\tvar v = object[ name ];\n\n\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n};\n\n\n// Static interface\n\nWebGLUniforms.upload = function ( gl, seq, values, renderer ) {\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ],\n\t\t\tv = values[ u.id ];\n\n\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\tu.setValue( gl, v.value, renderer );\n\n\t\t}\n\n\t}\n\n};\n\nWebGLUniforms.seqWithValue = function ( seq, values ) {\n\n\tvar r = [];\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ];\n\t\tif ( u.id in values ) r.push( u );\n\n\t}\n\n\treturn r;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction addLineNumbers( string ) {\n\n\tvar lines = string.split( '\\n' );\n\n\tfor ( var i = 0; i < lines.length; i ++ ) {\n\n\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\n\n\t}\n\n\treturn lines.join( '\\n' );\n\n}\n\nfunction WebGLShader( gl, type, string ) {\n\n\tvar shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\tif ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {\n\n\t\tconsole.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\n\n\t}\n\n\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\n\n\t\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\n\n\t}\n\n\t// --enable-privileged-webgl-extension\n\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\treturn shader;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar programIdCount = 0;\n\nfunction getEncodingComponents( encoding ) {\n\n\tswitch ( encoding ) {\n\n\t\tcase LinearEncoding:\n\t\t\treturn [ 'Linear', '( value )' ];\n\t\tcase sRGBEncoding:\n\t\t\treturn [ 'sRGB', '( value )' ];\n\t\tcase RGBEEncoding:\n\t\t\treturn [ 'RGBE', '( value )' ];\n\t\tcase RGBM7Encoding:\n\t\t\treturn [ 'RGBM', '( value, 7.0 )' ];\n\t\tcase RGBM16Encoding:\n\t\t\treturn [ 'RGBM', '( value, 16.0 )' ];\n\t\tcase RGBDEncoding:\n\t\t\treturn [ 'RGBD', '( value, 256.0 )' ];\n\t\tcase GammaEncoding:\n\t\t\treturn [ 'Gamma', '( value, float( GAMMA_FACTOR ) )' ];\n\t\tdefault:\n\t\t\tthrow new Error( 'unsupported encoding: ' + encoding );\n\n\t}\n\n}\n\nfunction getTexelDecodingFunction( functionName, encoding ) {\n\n\tvar components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return ' + components[ 0 ] + 'ToLinear' + components[ 1 ] + '; }';\n\n}\n\nfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\tvar components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tvar toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase Uncharted2ToneMapping:\n\t\t\ttoneMappingName = 'Uncharted2';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tthrow new Error( 'unsupported toneMapping: ' + toneMapping );\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( extensions, parameters, rendererExtensions ) {\n\n\textensions = extensions || {};\n\n\tvar chunks = [\n\t\t( extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || ( parameters.normalMap && ! parameters.objectSpaceNormalMap ) || parameters.flatShading ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( extensions.fragDepth || parameters.logarithmicDepthBuffer ) && rendererExtensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( extensions.drawBuffers ) && rendererExtensions.get( 'WEBGL_draw_buffers' ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( extensions.shaderTextureLOD || parameters.envMap ) && rendererExtensions.get( 'EXT_shader_texture_lod' ) ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tvar chunks = [];\n\n\tfor ( var name in defines ) {\n\n\t\tvar value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tvar attributes = {};\n\n\tvar n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\tfor ( var i = 0; i < n; i ++ ) {\n\n\t\tvar info = gl.getActiveAttrib( program, i );\n\t\tvar name = info.name;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = gl.getAttribLocation( program, name );\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\nfunction parseIncludes( string ) {\n\n\tvar pattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\n\tfunction replace( match, include ) {\n\n\t\tvar replace = ShaderChunk[ include ];\n\n\t\tif ( replace === undefined ) {\n\n\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t}\n\n\t\treturn parseIncludes( replace );\n\n\t}\n\n\treturn string.replace( pattern, replace );\n\n}\n\nfunction unrollLoops( string ) {\n\n\tvar pattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n\n\tfunction replace( match, start, end, snippet ) {\n\n\t\tvar unroll = '';\n\n\t\tfor ( var i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\t\tunroll += snippet.replace( /\\[ i \\]/g, '[ ' + i + ' ]' );\n\n\t\t}\n\n\t\treturn unroll;\n\n\t}\n\n\treturn string.replace( pattern, replace );\n\n}\n\nfunction WebGLProgram( renderer, extensions, code, material, shader, parameters, capabilities ) {\n\n\tvar gl = renderer.context;\n\n\tvar defines = material.defines;\n\n\tvar vertexShader = shader.vertexShader;\n\tvar fragmentShader = shader.fragmentShader;\n\n\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t}\n\n\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t\tcase EquirectangularReflectionMapping:\n\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\n\t\t\t\tbreak;\n\n\t\t\tcase SphericalReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\tcase CubeRefractionMapping:\n\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tswitch ( material.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\n\n\t// console.log( 'building new program ' );\n\n\t//\n\n\tvar customExtensions = capabilities.isWebGL2 ? '' : generateExtensions( material.extensions, parameters, extensions );\n\n\tvar customDefines = generateDefines( defines );\n\n\t//\n\n\tvar program = gl.createProgram();\n\n\tvar prefixVertex, prefixFragment;\n\n\tif ( material.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t'#define SHADER_NAME ' + shader.name,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t'#define MAX_BONES ' + parameters.maxBones,\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\tparameters.logarithmicDepthBuffer && ( capabilities.isWebGL2 || extensions.get( 'EXT_frag_depth' ) ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_COLOR',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_MORPHTARGETS',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t'#define SHADER_NAME ' + shader.name,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest + ( parameters.alphaTest % 1 ? '' : '.0' ) : '', // add '.0' if integer\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\tparameters.logarithmicDepthBuffer && ( capabilities.isWebGL2 || extensions.get( 'EXT_frag_depth' ) ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\tparameters.envMap && ( capabilities.isWebGL2 || extensions.get( 'EXT_shader_texture_lod' ) ) ? '#define TEXTURE_LOD_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\n\t\t\t( parameters.outputEncoding || parameters.mapEncoding || parameters.matcapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ) ?\n\t\t\t\tShaderChunk[ 'encodings_pars_fragment' ] : '', // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tparameters.mapEncoding ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\n\t\t\tparameters.matcapEncoding ? getTexelDecodingFunction( 'matcapTexelToLinear', parameters.matcapEncoding ) : '',\n\t\t\tparameters.envMapEncoding ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\n\t\t\tparameters.emissiveMapEncoding ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\n\t\t\tparameters.outputEncoding ? getTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ) : '',\n\n\t\t\tparameters.depthPacking ? '#define DEPTH_PACKING ' + material.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = parseIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = parseIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( capabilities.isWebGL2 && ! material.isRawShaderMaterial ) {\n\n\t\tvar isGLSL3ShaderMaterial = false;\n\n\t\tvar versionRegex = /^\\s*#version\\s+300\\s+es\\s*\\n/;\n\n\t\tif ( material.isShaderMaterial &&\n\t\t\tvertexShader.match( versionRegex ) !== null &&\n\t\t\tfragmentShader.match( versionRegex ) !== null ) {\n\n\t\t\tisGLSL3ShaderMaterial = true;\n\n\t\t\tvertexShader = vertexShader.replace( versionRegex, '' );\n\t\t\tfragmentShader = fragmentShader.replace( versionRegex, '' );\n\n\t\t}\n\n\t\t// GLSL 3.0 conversion\n\t\tprefixVertex = [\n\t\t\t'#version 300 es\\n',\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'#version 300 es\\n',\n\t\t\t'#define varying in',\n\t\t\tisGLSL3ShaderMaterial ? '' : 'out highp vec4 pc_fragColor;',\n\t\t\tisGLSL3ShaderMaterial ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tvar vertexGlsl = prefixVertex + vertexShader;\n\tvar fragmentGlsl = prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tvar glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\tvar glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( material.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\tvar programLog = gl.getProgramInfoLog( program ).trim();\n\tvar vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\tvar runnable = true;\n\tvar haveDiagnostics = true;\n\n\t// console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );\n\t// console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );\n\n\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\trunnable = false;\n\n\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\n\n\t} else if ( programLog !== '' ) {\n\n\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\n\n\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\thaveDiagnostics = false;\n\n\t}\n\n\tif ( haveDiagnostics ) {\n\n\t\tthis.diagnostics = {\n\n\t\t\trunnable: runnable,\n\t\t\tmaterial: material,\n\n\t\t\tprogramLog: programLog,\n\n\t\t\tvertexShader: {\n\n\t\t\t\tlog: vertexLog,\n\t\t\t\tprefix: prefixVertex\n\n\t\t\t},\n\n\t\t\tfragmentShader: {\n\n\t\t\t\tlog: fragmentLog,\n\t\t\t\tprefix: prefixFragment\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// clean up\n\n\tgl.deleteShader( glVertexShader );\n\tgl.deleteShader( glFragmentShader );\n\n\t// set up caching for uniform locations\n\n\tvar cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\tcachedUniforms = new WebGLUniforms( gl, program, renderer );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tvar cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t// DEPRECATED\n\n\tObject.defineProperties( this, {\n\n\t\tuniforms: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\n\t\t\t\treturn this.getUniforms();\n\n\t\t\t}\n\t\t},\n\n\t\tattributes: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\n\t\t\t\treturn this.getAttributes();\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\n\t//\n\n\tthis.name = shader.name;\n\tthis.id = programIdCount ++;\n\tthis.code = code;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLPrograms( renderer, extensions, capabilities ) {\n\n\tvar programs = [];\n\n\tvar shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'phong',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tvar parameterNames = [\n\t\t\"precision\", \"supportsVertexTextures\", \"map\", \"mapEncoding\", \"matcapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\",\n\t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"objectSpaceNormalMap\", \"displacementMap\", \"specularMap\",\n\t\t\"roughnessMap\", \"metalnessMap\", \"gradientMap\",\n\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\",\n\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\n\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\n\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\",\n\t\t\"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\", \"numRectAreaLights\",\n\t\t\"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights',\n\t\t\"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"numClipIntersection\", \"depthPacking\", \"dithering\"\n\t];\n\n\n\tfunction allocateBones( object ) {\n\n\t\tvar skeleton = object.skeleton;\n\t\tvar bones = skeleton.bones;\n\n\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\treturn 1024;\n\n\t\t} else {\n\n\t\t\t// default for when object is not specified\n\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\n\t\t\t//\n\t\t\t//  - leave some extra space for other uniforms\n\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\n\t\t\t//    (up to 54 should be safe)\n\n\t\t\tvar nVertexUniforms = capabilities.maxVertexUniforms;\n\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\n\n\t\t\tvar maxBones = Math.min( nVertexMatrices, bones.length );\n\n\t\t\tif ( maxBones < bones.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.' );\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\treturn maxBones;\n\n\t\t}\n\n\t}\n\n\tfunction getTextureEncodingFromMap( map, gammaOverrideLinear ) {\n\n\t\tvar encoding;\n\n\t\tif ( ! map ) {\n\n\t\t\tencoding = LinearEncoding;\n\n\t\t} else if ( map.isTexture ) {\n\n\t\t\tencoding = map.encoding;\n\n\t\t} else if ( map.isWebGLRenderTarget ) {\n\n\t\t\tconsole.warn( \"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\tencoding = map.texture.encoding;\n\n\t\t}\n\n\t\t// add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\n\t\tif ( encoding === LinearEncoding && gammaOverrideLinear ) {\n\n\t\t\tencoding = GammaEncoding;\n\n\t\t}\n\n\t\treturn encoding;\n\n\t}\n\n\tthis.getParameters = function ( material, lights, shadows, fog, nClipPlanes, nClipIntersection, object ) {\n\n\t\tvar shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tvar maxBones = object.isSkinnedMesh ? allocateBones( object ) : 0;\n\t\tvar precision = capabilities.precision;\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\tvar parameters = {\n\n\t\t\tshaderID: shaderID,\n\n\t\t\tprecision: precision,\n\t\t\tsupportsVertexTextures: capabilities.vertexTextures,\n\t\t\toutputEncoding: getTextureEncodingFromMap( ( ! currentRenderTarget ) ? null : currentRenderTarget.texture, renderer.gammaOutput ),\n\t\t\tmap: !! material.map,\n\t\t\tmapEncoding: getTextureEncodingFromMap( material.map, renderer.gammaInput ),\n\t\t\tmatcap: !! material.matcap,\n\t\t\tmatcapEncoding: getTextureEncodingFromMap( material.matcap, renderer.gammaInput ),\n\t\t\tenvMap: !! material.envMap,\n\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\n\t\t\tenvMapEncoding: getTextureEncodingFromMap( material.envMap, renderer.gammaInput ),\n\t\t\tenvMapCubeUV: ( !! material.envMap ) && ( ( material.envMap.mapping === CubeUVReflectionMapping ) || ( material.envMap.mapping === CubeUVRefractionMapping ) ),\n\t\t\tlightMap: !! material.lightMap,\n\t\t\taoMap: !! material.aoMap,\n\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap, renderer.gammaInput ),\n\t\t\tbumpMap: !! material.bumpMap,\n\t\t\tnormalMap: !! material.normalMap,\n\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\tspecularMap: !! material.specularMap,\n\t\t\talphaMap: !! material.alphaMap,\n\n\t\t\tgradientMap: !! material.gradientMap,\n\n\t\t\tcombine: material.combine,\n\n\t\t\tvertexColors: material.vertexColors,\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog,\n\t\t\tfogExp: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: material.flatShading,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\n\n\t\t\tskinning: material.skinning && maxBones > 0,\n\t\t\tmaxBones: maxBones,\n\t\t\tuseVertexTexture: capabilities.floatVertexTextures,\n\n\t\t\tmorphTargets: material.morphTargets,\n\t\t\tmorphNormals: material.morphNormals,\n\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\n\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumClippingPlanes: nClipPlanes,\n\t\t\tnumClipIntersection: nClipIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: renderer.toneMapping,\n\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\talphaTest: material.alphaTest,\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false\n\n\t\t};\n\n\t\treturn parameters;\n\n\t};\n\n\tthis.getProgramCode = function ( material, parameters ) {\n\n\t\tvar array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( material.fragmentShader );\n\t\t\tarray.push( material.vertexShader );\n\n\t\t}\n\n\t\tif ( material.defines !== undefined ) {\n\n\t\t\tfor ( var name in material.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( material.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\n\n\t\t\tarray.push( parameters[ parameterNames[ i ] ] );\n\n\t\t}\n\n\t\tarray.push( material.onBeforeCompile.toString() );\n\n\t\tarray.push( renderer.gammaOutput );\n\n\t\treturn array.join();\n\n\t};\n\n\tthis.acquireProgram = function ( material, shader, parameters, code ) {\n\n\t\tvar program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tvar programInfo = programs[ p ];\n\n\t\t\tif ( programInfo.code === code ) {\n\n\t\t\t\tprogram = programInfo;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, extensions, code, material, shader, parameters, capabilities );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t};\n\n\tthis.releaseProgram = function ( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tvar i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t};\n\n\t// Exposed for resource monitoring & error feedback via renderer.info:\n\tthis.programs = programs;\n\n}\n\n/**\n * @author fordacious / fordacious.github.io\n */\n\nfunction WebGLProperties() {\n\n\tvar properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tvar map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.program && b.program && a.program !== b.program ) {\n\n\t\treturn a.program.id - b.program.id;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList() {\n\n\tvar renderItems = [];\n\tvar renderItemsIndex = 0;\n\n\tvar opaque = [];\n\tvar transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction push( object, geometry, material, z, group ) {\n\n\t\tvar renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tprogram: material.program,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.program = material.program;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\n\t\t( material.transparent === true ? transparent : opaque ).push( renderItem );\n\n\t\trenderItemsIndex ++;\n\n\t}\n\n\tfunction sort() {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( painterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( reversePainterSortStable );\n\n\t}\n\n\treturn {\n\t\topaque: opaque,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tvar lists = {};\n\n\tfunction get( scene, camera ) {\n\n\t\tvar hash = scene.id + ',' + camera.id;\n\t\tvar list = lists[ hash ];\n\n\t\tif ( list === undefined ) {\n\n\t\t\t// console.log( 'THREE.WebGLRenderLists:', hash );\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists[ hash ] = list;\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = {};\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction UniformsCache() {\n\n\tvar lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tvar uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nvar count = 0;\n\nfunction WebGLLights() {\n\n\tvar cache = new UniformsCache();\n\n\tvar state = {\n\n\t\tid: count ++,\n\n\t\thash: {\n\t\t\tstateID: - 1,\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\t\t\tshadowsLength: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tdirectional: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotShadowMap: [],\n\t\tspotShadowMatrix: [],\n\t\trectArea: [],\n\t\tpoint: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: []\n\n\t};\n\n\tvar vector3 = new Vector3();\n\tvar matrix4 = new Matrix4();\n\tvar matrix42 = new Matrix4();\n\n\tfunction setup( lights, shadows, camera ) {\n\n\t\tvar r = 0, g = 0, b = 0;\n\n\t\tvar directionalLength = 0;\n\t\tvar pointLength = 0;\n\t\tvar spotLength = 0;\n\t\tvar rectAreaLength = 0;\n\t\tvar hemiLength = 0;\n\n\t\tvar viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( var i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tvar light = lights[ i ];\n\n\t\t\tvar color = light.color;\n\t\t\tvar intensity = light.intensity;\n\t\t\tvar distance = light.distance;\n\n\t\t\tvar shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity;\n\t\t\t\tg += color.g * intensity;\n\t\t\t\tb += color.b * intensity;\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\t\t\t\tstate.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\t// (a) intensity is the total visible light emitted\n\t\t\t\t//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n\n\t\t\t\t// (b) intensity is the brightness of the light\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\t// TODO (abelnation): RectAreaLight distance?\n\t\t\t\t// uniforms.distance = distance;\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tuniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tuniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t}\n\n\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\t\t\t\tuniforms.direction.normalize();\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tstate.directional.length = directionalLength;\n\t\tstate.spot.length = spotLength;\n\t\tstate.rectArea.length = rectAreaLength;\n\t\tstate.point.length = pointLength;\n\t\tstate.hemi.length = hemiLength;\n\n\t\tstate.hash.stateID = state.id;\n\t\tstate.hash.directionalLength = directionalLength;\n\t\tstate.hash.pointLength = pointLength;\n\t\tstate.hash.spotLength = spotLength;\n\t\tstate.hash.rectAreaLength = rectAreaLength;\n\t\tstate.hash.hemiLength = hemiLength;\n\t\tstate.hash.shadowsLength = shadows.length;\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tstate: state\n\t};\n\n}\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WebGLRenderState() {\n\n\tvar lights = new WebGLLights();\n\n\tvar lightsArray = [];\n\tvar shadowsArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights( camera ) {\n\n\t\tlights.setup( lightsArray, shadowsArray, camera );\n\n\t}\n\n\tvar state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates() {\n\n\tvar renderStates = {};\n\n\tfunction get( scene, camera ) {\n\n\t\tvar renderState;\n\n\t\tif ( renderStates[ scene.id ] === undefined ) {\n\n\t\t\trenderState = new WebGLRenderState();\n\t\t\trenderStates[ scene.id ] = {};\n\t\t\trenderStates[ scene.id ][ camera.id ] = renderState;\n\n\t\t} else {\n\n\t\t\tif ( renderStates[ scene.id ][ camera.id ] === undefined ) {\n\n\t\t\t\trenderState = new WebGLRenderState();\n\t\t\t\trenderStates[ scene.id ][ camera.id ] = renderState;\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStates[ scene.id ][ camera.id ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = {};\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / https://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n * }\n */\n\nfunction MeshDepthMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshDepthMaterial';\n\n\tthis.depthPacking = BasicDepthPacking;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshDepthMaterial.prototype = Object.create( Material.prototype );\nMeshDepthMaterial.prototype.constructor = MeshDepthMaterial;\n\nMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\nMeshDepthMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.depthPacking = source.depthPacking;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *\n *  referencePosition: <float>,\n *  nearDistance: <float>,\n *  farDistance: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>\n *\n * }\n */\n\nfunction MeshDistanceMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshDistanceMaterial';\n\n\tthis.referencePosition = new Vector3();\n\tthis.nearDistance = 1;\n\tthis.farDistance = 1000;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshDistanceMaterial.prototype = Object.create( Material.prototype );\nMeshDistanceMaterial.prototype.constructor = MeshDistanceMaterial;\n\nMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\nMeshDistanceMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.referencePosition.copy( source.referencePosition );\n\tthis.nearDistance = source.nearDistance;\n\tthis.farDistance = source.farDistance;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLShadowMap( _renderer, _objects, maxTextureSize ) {\n\n\tvar _frustum = new Frustum(),\n\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t_shadowMapSize = new Vector2(),\n\t\t_maxShadowMapSize = new Vector2( maxTextureSize, maxTextureSize ),\n\n\t\t_lookTarget = new Vector3(),\n\t\t_lightPositionWorld = new Vector3(),\n\n\t\t_MorphingFlag = 1,\n\t\t_SkinningFlag = 2,\n\n\t\t_NumberOfMaterialVariants = ( _MorphingFlag | _SkinningFlag ) + 1,\n\n\t\t_depthMaterials = new Array( _NumberOfMaterialVariants ),\n\t\t_distanceMaterials = new Array( _NumberOfMaterialVariants ),\n\n\t\t_materialCache = {};\n\n\tvar shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };\n\n\tvar cubeDirections = [\n\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t];\n\n\tvar cubeUps = [\n\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t];\n\n\tvar cube2DViewPorts = [\n\t\tnew Vector4(), new Vector4(), new Vector4(),\n\t\tnew Vector4(), new Vector4(), new Vector4()\n\t];\n\n\t// init\n\n\tfor ( var i = 0; i !== _NumberOfMaterialVariants; ++ i ) {\n\n\t\tvar useMorphing = ( i & _MorphingFlag ) !== 0;\n\t\tvar useSkinning = ( i & _SkinningFlag ) !== 0;\n\n\t\tvar depthMaterial = new MeshDepthMaterial( {\n\n\t\t\tdepthPacking: RGBADepthPacking,\n\n\t\t\tmorphTargets: useMorphing,\n\t\t\tskinning: useSkinning\n\n\t\t} );\n\n\t\t_depthMaterials[ i ] = depthMaterial;\n\n\t\t//\n\n\t\tvar distanceMaterial = new MeshDistanceMaterial( {\n\n\t\t\tmorphTargets: useMorphing,\n\t\t\tskinning: useSkinning\n\n\t\t} );\n\n\t\t_distanceMaterials[ i ] = distanceMaterial;\n\n\t}\n\n\t//\n\n\tvar scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\t// TODO Clean up (needed in case of contextlost)\n\t\tvar _gl = _renderer.context;\n\t\tvar _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.disable( _gl.BLEND );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// render depth map\n\n\t\tvar faceCount;\n\n\t\tfor ( var i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tvar light = lights[ i ];\n\t\t\tvar shadow = light.shadow;\n\t\t\tvar isPointLight = light && light.isPointLight;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tvar shadowCamera = shadow.camera;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\t\t\t_shadowMapSize.min( _maxShadowMapSize );\n\n\t\t\tif ( isPointLight ) {\n\n\t\t\t\tvar vpWidth = _shadowMapSize.x;\n\t\t\t\tvar vpHeight = _shadowMapSize.y;\n\n\t\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t\t// following orientation:\n\t\t\t\t//\n\t\t\t\t//  xzXZ\n\t\t\t\t//   y Y\n\t\t\t\t//\n\t\t\t\t// X - Positive x direction\n\t\t\t\t// x - Negative x direction\n\t\t\t\t// Y - Positive y direction\n\t\t\t\t// y - Negative y direction\n\t\t\t\t// Z - Positive z direction\n\t\t\t\t// z - Negative z direction\n\n\t\t\t\t// positive X\n\t\t\t\tcube2DViewPorts[ 0 ].set( vpWidth * 2, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// negative X\n\t\t\t\tcube2DViewPorts[ 1 ].set( 0, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// positive Z\n\t\t\t\tcube2DViewPorts[ 2 ].set( vpWidth * 3, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// negative Z\n\t\t\t\tcube2DViewPorts[ 3 ].set( vpWidth, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// positive Y\n\t\t\t\tcube2DViewPorts[ 4 ].set( vpWidth * 3, 0, vpWidth, vpHeight );\n\t\t\t\t// negative Y\n\t\t\t\tcube2DViewPorts[ 5 ].set( vpWidth, 0, vpWidth, vpHeight );\n\n\t\t\t\t_shadowMapSize.x *= 4.0;\n\t\t\t\t_shadowMapSize.y *= 2.0;\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\tvar pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + \".shadowMap\";\n\n\t\t\t\tshadowCamera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\tif ( shadow.isSpotLightShadow ) {\n\n\t\t\t\tshadow.update( light );\n\n\t\t\t}\n\n\t\t\tvar shadowMap = shadow.map;\n\t\t\tvar shadowMatrix = shadow.matrix;\n\n\t\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\t\tshadowCamera.position.copy( _lightPositionWorld );\n\n\t\t\tif ( isPointLight ) {\n\n\t\t\t\tfaceCount = 6;\n\n\t\t\t\t// for point lights we set the shadow matrix to be a translation-only matrix\n\t\t\t\t// equal to inverse of the light's position\n\n\t\t\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t\t} else {\n\n\t\t\t\tfaceCount = 1;\n\n\t\t\t\t_lookTarget.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\t\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\t\t// compute shadow matrix\n\n\t\t\t\tshadowMatrix.set(\n\t\t\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t\t\t);\n\n\t\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\n\t\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadowMap );\n\t\t\t_renderer.clear();\n\n\t\t\t// render shadow map for each cube face (if omni-directional) or\n\t\t\t// run a single pass if not\n\n\t\t\tfor ( var face = 0; face < faceCount; face ++ ) {\n\n\t\t\t\tif ( isPointLight ) {\n\n\t\t\t\t\t_lookTarget.copy( shadowCamera.position );\n\t\t\t\t\t_lookTarget.add( cubeDirections[ face ] );\n\t\t\t\t\tshadowCamera.up.copy( cubeUps[ face ] );\n\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\t\t\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\t\t\tvar vpDimensions = cube2DViewPorts[ face ];\n\t\t\t\t\t_state.viewport( vpDimensions );\n\n\t\t\t\t}\n\n\t\t\t\t// update camera matrices and frustum\n\n\t\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t\t\t// set object matrices & frustum culling\n\n\t\t\t\trenderObject( scene, camera, shadowCamera, isPointLight );\n\n\t\t\t}\n\n\t\t}\n\n\t\tscope.needsUpdate = false;\n\n\t};\n\n\tfunction getDepthMaterial( object, material, isPointLight, lightPositionWorld, shadowCameraNear, shadowCameraFar ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tvar result = null;\n\n\t\tvar materialVariants = _depthMaterials;\n\t\tvar customMaterial = object.customDepthMaterial;\n\n\t\tif ( isPointLight ) {\n\n\t\t\tmaterialVariants = _distanceMaterials;\n\t\t\tcustomMaterial = object.customDistanceMaterial;\n\n\t\t}\n\n\t\tif ( ! customMaterial ) {\n\n\t\t\tvar useMorphing = false;\n\n\t\t\tif ( material.morphTargets ) {\n\n\t\t\t\tif ( geometry && geometry.isBufferGeometry ) {\n\n\t\t\t\t\tuseMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n\n\t\t\t\t} else if ( geometry && geometry.isGeometry ) {\n\n\t\t\t\t\tuseMorphing = geometry.morphTargets && geometry.morphTargets.length > 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( object.isSkinnedMesh && material.skinning === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:', object );\n\n\t\t\t}\n\n\t\t\tvar useSkinning = object.isSkinnedMesh && material.skinning;\n\n\t\t\tvar variantIndex = 0;\n\n\t\t\tif ( useMorphing ) variantIndex |= _MorphingFlag;\n\t\t\tif ( useSkinning ) variantIndex |= _SkinningFlag;\n\n\t\t\tresult = materialVariants[ variantIndex ];\n\n\t\t} else {\n\n\t\t\tresult = customMaterial;\n\n\t\t}\n\n\t\tif ( _renderer.localClippingEnabled &&\n\t\t\t\tmaterial.clipShadows === true &&\n\t\t\t\tmaterial.clippingPlanes.length !== 0 ) {\n\n\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t// appropriate state\n\n\t\t\tvar keyA = result.uuid, keyB = material.uuid;\n\n\t\t\tvar materialsForVariant = _materialCache[ keyA ];\n\n\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t}\n\n\t\t\tvar cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult = cachedMaterial;\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tresult.side = ( material.shadowSide != null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( isPointLight && result.isMeshDistanceMaterial ) {\n\n\t\t\tresult.referencePosition.copy( lightPositionWorld );\n\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\tresult.farDistance = shadowCameraFar;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, isPointLight ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tvar visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( object.castShadow && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tvar geometry = _objects.update( object );\n\t\t\t\tvar material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tvar group = groups[ k ];\n\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, groupMaterial, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far );\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, material, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far );\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, isPointLight );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLState( gl, extensions, utils, capabilities ) {\n\n\tfunction ColorBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar color = new Vector4();\n\t\tvar currentColorMask = null;\n\t\tvar currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar currentDepthMask = null;\n\t\tvar currentDepthFunc = null;\n\t\tvar currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tif ( depthFunc ) {\n\n\t\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar currentStencilMask = null;\n\t\tvar currentStencilFunc = null;\n\t\tvar currentStencilRef = null;\n\t\tvar currentStencilFuncMask = null;\n\t\tvar currentStencilFail = null;\n\t\tvar currentStencilZFail = null;\n\t\tvar currentStencilZPass = null;\n\t\tvar currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef \t!== stencilRef \t||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail\t !== stencilFail \t||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tvar colorBuffer = new ColorBuffer();\n\tvar depthBuffer = new DepthBuffer();\n\tvar stencilBuffer = new StencilBuffer();\n\n\tvar maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tvar newAttributes = new Uint8Array( maxVertexAttributes );\n\tvar enabledAttributes = new Uint8Array( maxVertexAttributes );\n\tvar attributeDivisors = new Uint8Array( maxVertexAttributes );\n\n\tvar enabledCapabilities = {};\n\n\tvar compressedTextureFormats = null;\n\n\tvar currentProgram = null;\n\n\tvar currentBlendingEnabled = null;\n\tvar currentBlending = null;\n\tvar currentBlendEquation = null;\n\tvar currentBlendSrc = null;\n\tvar currentBlendDst = null;\n\tvar currentBlendEquationAlpha = null;\n\tvar currentBlendSrcAlpha = null;\n\tvar currentBlendDstAlpha = null;\n\tvar currentPremultipledAlpha = false;\n\n\tvar currentFlipSided = null;\n\tvar currentCullFace = null;\n\n\tvar currentLineWidth = null;\n\n\tvar currentPolygonOffsetFactor = null;\n\tvar currentPolygonOffsetUnits = null;\n\n\tvar maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n\n\tvar lineWidthAvailable = false;\n\tvar version = 0;\n\tvar glVersion = gl.getParameter( gl.VERSION );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL\\ ([0-9])/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL\\ ES\\ ([0-9])/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tvar currentTextureSlot = null;\n\tvar currentBoundTextures = {};\n\n\tvar currentScissor = new Vector4();\n\tvar currentViewport = new Vector4();\n\n\tfunction createTexture( type, target, count ) {\n\n\t\tvar data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tvar texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\tfor ( var i = 0; i < count; i ++ ) {\n\n\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tvar emptyTextures = {};\n\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( gl.DEPTH_TEST );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( gl.CULL_FACE );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction initAttributes() {\n\n\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tvar extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tfor ( var i = 0, l = enabledAttributes.length; i !== l; ++ i ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction getCompressedTextureFormats() {\n\n\t\tif ( compressedTextureFormats === null ) {\n\n\t\t\tcompressedTextureFormats = [];\n\n\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_etc1' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_astc' ) ) {\n\n\t\t\t\tvar formats = gl.getParameter( gl.COMPRESSED_TEXTURE_FORMATS );\n\n\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\n\n\t\t\t\t\tcompressedTextureFormats.push( formats[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn compressedTextureFormats;\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled ) {\n\n\t\t\t\tdisable( gl.BLEND );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( ! currentBlendingEnabled ) {\n\n\t\t\tenable( gl.BLEND );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ONE, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( utils.convert( blendEquation ), utils.convert( blendEquationAlpha ) );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( utils.convert( blendSrc ), utils.convert( blendDst ), utils.convert( blendSrcAlpha ), utils.convert( blendDstAlpha ) );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = null;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( gl.CULL_FACE )\n\t\t\t: enable( gl.CULL_FACE );\n\n\t\tvar flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( gl.CULL_FACE );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.CULL_FACE );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t} else {\n\n\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture ) {\n\n\t\tif ( currentTextureSlot === null ) {\n\n\t\t\tactiveTexture();\n\n\t\t}\n\n\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] === 1 ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tenabledCapabilities = {};\n\n\t\tcompressedTextureFormats = null;\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlending = null;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tenableAttributeAndDivisor: enableAttributeAndDivisor,\n\t\tdisableUnusedAttributes: disableUnusedAttributes,\n\t\tenable: enable,\n\t\tdisable: disable,\n\t\tgetCompressedTextureFormats: getCompressedTextureFormats,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tvar _videoTextures = {};\n\tvar _canvas;\n\n\t//\n\n\tfunction clampToMaxSize( image, maxSize ) {\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tif ( 'data' in image ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// Warning: Scaling through the canvas will only work with images that use\n\t\t\t// premultiplied alpha.\n\n\t\t\tvar scale = maxSize / Math.max( image.width, image.height );\n\n\t\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\tcanvas.width = Math.floor( image.width * scale );\n\t\t\tcanvas.height = Math.floor( image.height * scale );\n\n\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height );\n\n\t\t\treturn canvas;\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo( image ) {\n\n\t\treturn _Math.isPowerOfTwo( image.width ) && _Math.isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction makePowerOfTwo( image ) {\n\n\t\tif ( image instanceof HTMLImageElement || image instanceof HTMLCanvasElement || image instanceof ImageBitmap ) {\n\n\t\t\tif ( _canvas === undefined ) _canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\n\t\t\t_canvas.width = _Math.floorPowerOfTwo( image.width );\n\t\t\t_canvas.height = _Math.floorPowerOfTwo( image.height );\n\n\t\t\tvar context = _canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, _canvas.width, _canvas.height );\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is not power of two (' + image.width + 'x' + image.height + '). Resized to ' + _canvas.width + 'x' + _canvas.height );\n\n\t\t\treturn _canvas;\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\tif ( capabilities.isWebGL2 ) return false;\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, isPowerOfTwo ) {\n\n\t\treturn texture.generateMipmaps && isPowerOfTwo &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target, texture, width, height ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\t// Note: Math.log( x ) * Math.LOG2E used instead of Math.log2( x ) which is not supported by IE11\n\t\ttextureProperties.__maxMipLevel = Math.log( Math.max( width, height ) ) * Math.LOG2E;\n\n\t}\n\n\tfunction getInternalFormat( glFormat, glType ) {\n\n\t\tif ( ! capabilities.isWebGL2 ) return glFormat;\n\n\t\tif ( glFormat === _gl.RED ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) return _gl.R32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) return _gl.R16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) return _gl.R8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGB ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) return _gl.RGB32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) return _gl.RGB16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) return _gl.RGB8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGBA ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) return _gl.RGBA32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) return _gl.RGBA16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) return _gl.RGBA8;\n\n\t\t}\n\n\t\treturn glFormat;\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipMapNearestFilter || f === NearestMipMapLinearFilter ) {\n\n\t\t\treturn _gl.NEAREST;\n\n\t\t}\n\n\t\treturn _gl.LINEAR;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tvar texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\tdelete _videoTextures[ texture.id ];\n\n\t\t}\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tvar renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.image && textureProperties.__image__webglTextureCube ) {\n\n\t\t\t// cube texture\n\n\t\t\t_gl.deleteTexture( textureProperties.__image__webglTextureCube );\n\n\t\t} else {\n\n\t\t\t// 2D texture\n\n\t\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t}\n\n\t\t// remove all webgl properties\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\tif ( ! renderTarget ) return;\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\n\t\t}\n\n\t\tproperties.remove( renderTarget.texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tvar image = texture.image;\n\n\t\t\tif ( image === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_3D, textureProperties.__webglTexture );\n\n\t}\n\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.image.length === 6 ) {\n\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\tif ( ! textureProperties.__image__webglTextureCube ) {\n\n\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\ttextureProperties.__image__webglTextureCube = _gl.createTexture();\n\n\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\n\n\t\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\n\t\t\t\tvar isCompressed = ( texture && texture.isCompressedTexture );\n\t\t\t\tvar isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\t\tvar cubeImage = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\t\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], capabilities.maxCubemapSize );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar image = cubeImage[ 0 ],\n\t\t\t\t\tisPowerOfTwoImage = isPowerOfTwo( image ),\n\t\t\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\t\tglInternalFormat = getInternalFormat( glFormat, glType );\n\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isPowerOfTwoImage );\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( ! isCompressed ) {\n\n\t\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! isCompressed ) {\n\n\t\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( texture, isPowerOfTwoImage ) ) {\n\n\t\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP, texture, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__version = texture.version;\n\n\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t\t} else {\n\n\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction setTextureCubeDynamic( texture, slot ) {\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( texture ).__webglTexture );\n\n\t}\n\n\tfunction setTextureParameters( textureType, texture, isPowerOfTwoImage ) {\n\n\t\tvar extension;\n\n\t\tif ( isPowerOfTwoImage ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, utils.convert( texture.wrapS ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, utils.convert( texture.wrapT ) );\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, utils.convert( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, utils.convert( texture.minFilter ) );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\tif ( extension ) {\n\n\t\t\tif ( texture.type === FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\n\t\t\tif ( texture.type === HalfFloatType && ( capabilities.isWebGL2 || extensions.get( 'OES_texture_half_float_linear' ) ) === null ) return;\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tvar textureType;\n\n\t\tif ( texture.isDataTexture3D ) {\n\n\t\t\ttextureType = _gl.TEXTURE_3D;\n\n\t\t} else {\n\n\t\t\ttextureType = _gl.TEXTURE_2D;\n\n\t\t}\n\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture );\n\n\n\n\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\n\t\tvar image = clampToMaxSize( texture.image, capabilities.maxTextureSize );\n\n\t\tif ( textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( image ) === false ) {\n\n\t\t\timage = makePowerOfTwo( image );\n\n\t\t}\n\n\t\tvar isPowerOfTwoImage = isPowerOfTwo( image ),\n\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\tglType = utils.convert( texture.type ),\n\t\t\tglInternalFormat = getInternalFormat( glFormat, glType );\n\n\t\tsetTextureParameters( textureType, texture, isPowerOfTwoImage );\n\n\t\tvar mipmap, mipmaps = texture.mipmaps;\n\n\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t// populate depth texture with dummy data\n\n\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT;\n\n\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\tif ( ! capabilities.isWebGL2 ) throw new Error( 'Float Depth Texture only supported in WebGL2.0' );\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t} else if ( capabilities.isWebGL2 ) {\n\n\t\t\t\t// WebGL 2.0 requires signed internalformat for glTexImage2D\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT16;\n\n\t\t\t}\n\n\t\t\tif ( texture.format === DepthFormat && glInternalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedShortType;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\tif ( texture.format === DepthStencilFormat ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH_STENCIL;\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t}\n\n\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t} else if ( texture.isDataTexture3D ) {\n\n\t\t\tstate.texImage3D( _gl.TEXTURE_3D, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t} else {\n\n\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, glFormat, glType, image );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, isPowerOfTwoImage ) ) {\n\n\t\t\tgenerateMipmap( _gl.TEXTURE_2D, texture, image.width, image.height );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, attachment, textureTarget ) {\n\n\t\tvar glFormat = utils.convert( renderTarget.texture.format );\n\t\tvar glType = utils.convert( renderTarget.texture.type );\n\t\tvar glInternalFormat = getInternalFormat( glFormat, glType );\n\t\tstate.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget ) {\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else {\n\n\t\t\t// FIXME: We don't support !depth !stencil\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tvar isCube = ( renderTarget && renderTarget.isWebGLRenderTargetCube );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tvar webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\tinfo.memory.textures ++;\n\n\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\n\t\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, isTargetPowerOfTwo );\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, isTargetPowerOfTwo ) ) {\n\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\n\n\t\t} else {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget.texture, isTargetPowerOfTwo );\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D );\n\n\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, isTargetPowerOfTwo ) ) {\n\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_2D, renderTarget.texture, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tvar texture = renderTarget.texture;\n\t\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, isTargetPowerOfTwo ) ) {\n\n\t\t\tvar target = renderTarget.isWebGLRenderTargetCube ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\t\t\tvar webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\tgenerateMipmap( target, texture, renderTarget.width, renderTarget.height );\n\t\t\tstate.bindTexture( target, null );\n\n\t\t}\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tvar id = texture.id;\n\t\tvar frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures[ id ] !== frame ) {\n\n\t\t\t_videoTextures[ id ] = frame;\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.setTextureCubeDynamic = setTextureCubeDynamic;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\n}\n\n/**\n * @author thespite / http://www.twitter.com/thespite\n */\n\nfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\tfunction convert( p ) {\n\n\t\tvar extension;\n\n\t\tif ( p === RepeatWrapping ) return gl.REPEAT;\n\t\tif ( p === ClampToEdgeWrapping ) return gl.CLAMP_TO_EDGE;\n\t\tif ( p === MirroredRepeatWrapping ) return gl.MIRRORED_REPEAT;\n\n\t\tif ( p === NearestFilter ) return gl.NEAREST;\n\t\tif ( p === NearestMipMapNearestFilter ) return gl.NEAREST_MIPMAP_NEAREST;\n\t\tif ( p === NearestMipMapLinearFilter ) return gl.NEAREST_MIPMAP_LINEAR;\n\n\t\tif ( p === LinearFilter ) return gl.LINEAR;\n\t\tif ( p === LinearMipMapNearestFilter ) return gl.LINEAR_MIPMAP_NEAREST;\n\t\tif ( p === LinearMipMapLinearFilter ) return gl.LINEAR_MIPMAP_LINEAR;\n\n\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\n\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\n\t\tif ( p === UnsignedShort565Type ) return gl.UNSIGNED_SHORT_5_6_5;\n\n\t\tif ( p === ByteType ) return gl.BYTE;\n\t\tif ( p === ShortType ) return gl.SHORT;\n\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\n\t\tif ( p === IntType ) return gl.INT;\n\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\n\t\tif ( p === FloatType ) return gl.FLOAT;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) return gl.HALF_FLOAT;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) return extension.HALF_FLOAT_OES;\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return gl.ALPHA;\n\t\tif ( p === RGBFormat ) return gl.RGB;\n\t\tif ( p === RGBAFormat ) return gl.RGBA;\n\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\n\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\n\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\n\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\n\t\tif ( p === RedFormat ) return gl.RED;\n\n\t\tif ( p === AddEquation ) return gl.FUNC_ADD;\n\t\tif ( p === SubtractEquation ) return gl.FUNC_SUBTRACT;\n\t\tif ( p === ReverseSubtractEquation ) return gl.FUNC_REVERSE_SUBTRACT;\n\n\t\tif ( p === ZeroFactor ) return gl.ZERO;\n\t\tif ( p === OneFactor ) return gl.ONE;\n\t\tif ( p === SrcColorFactor ) return gl.SRC_COLOR;\n\t\tif ( p === OneMinusSrcColorFactor ) return gl.ONE_MINUS_SRC_COLOR;\n\t\tif ( p === SrcAlphaFactor ) return gl.SRC_ALPHA;\n\t\tif ( p === OneMinusSrcAlphaFactor ) return gl.ONE_MINUS_SRC_ALPHA;\n\t\tif ( p === DstAlphaFactor ) return gl.DST_ALPHA;\n\t\tif ( p === OneMinusDstAlphaFactor ) return gl.ONE_MINUS_DST_ALPHA;\n\n\t\tif ( p === DstColorFactor ) return gl.DST_COLOR;\n\t\tif ( p === OneMinusDstColorFactor ) return gl.ONE_MINUS_DST_COLOR;\n\t\tif ( p === SrcAlphaSaturateFactor ) return gl.SRC_ALPHA_SATURATE;\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format ||\n\t\t\tp === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format ||\n\t\t\tp === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) return extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t}\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn p;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === MinEquation || p === MaxEquation ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tif ( p === MinEquation ) return gl.MIN;\n\t\t\t\tif ( p === MaxEquation ) return gl.MAX;\n\n\t\t\t}\n\n\t\t\textension = extensions.get( 'EXT_blend_minmax' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === MinEquation ) return extension.MIN_EXT;\n\t\t\t\tif ( p === MaxEquation ) return extension.MAX_EXT;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) return gl.UNSIGNED_INT_24_8;\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) return extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t}\n\n\t\treturn 0;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Group() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Group';\n\n}\n\nGroup.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Group,\n\n\tisGroup: true\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author WestLangley / http://github.com/WestLangley\n*/\n\nfunction Camera() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Camera';\n\n\tthis.matrixWorldInverse = new Matrix4();\n\n\tthis.projectionMatrix = new Matrix4();\n\tthis.projectionMatrixInverse = new Matrix4();\n\n}\n\nCamera.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Camera,\n\n\tisCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\treturn this;\n\n\t},\n\n\tgetWorldDirection: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Camera: .getWorldDirection() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\tvar e = this.matrixWorld.elements;\n\n\t\treturn target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize();\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\tthis.matrixWorldInverse.getInverse( this.matrixWorld );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author greggman / http://games.greggman.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author tschw\n */\n\nfunction PerspectiveCamera( fov, aspect, near, far ) {\n\n\tCamera.call( this );\n\n\tthis.type = 'PerspectiveCamera';\n\n\tthis.fov = fov !== undefined ? fov : 50;\n\tthis.zoom = 1;\n\n\tthis.near = near !== undefined ? near : 0.1;\n\tthis.far = far !== undefined ? far : 2000;\n\tthis.focus = 10;\n\n\tthis.aspect = aspect !== undefined ? aspect : 1;\n\tthis.view = null;\n\n\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\tthis.updateProjectionMatrix();\n\n}\n\nPerspectiveCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\tconstructor: PerspectiveCamera,\n\n\tisPerspectiveCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength: function ( focalLength ) {\n\n\t\t// see http://www.bobatkins.com/photography/technical/field_of_view.html\n\t\tvar vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = _Math.RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength: function () {\n\n\t\tvar vExtentSlope = Math.tan( _Math.DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t},\n\n\tgetEffectiveFOV: function () {\n\n\t\treturn _Math.RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( _Math.DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t},\n\n\tgetFilmWidth: function () {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t},\n\n\tgetFilmHeight: function () {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t},\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   var w = 1920;\n\t *   var h = 1080;\n\t *   var fullWidth = w * 3;\n\t *   var fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tclearViewOffset: function () {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tupdateProjectionMatrix: function () {\n\n\t\tvar near = this.near,\n\t\t\ttop = near * Math.tan( _Math.DEG2RAD * 0.5 * this.fov ) / this.zoom,\n\t\t\theight = 2 * top,\n\t\t\twidth = this.aspect * height,\n\t\t\tleft = - 0.5 * width,\n\t\t\tview = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tvar fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tvar skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n\n\t\tthis.projectionMatrixInverse.getInverse( this.projectionMatrix );\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ArrayCamera( array ) {\n\n\tPerspectiveCamera.call( this );\n\n\tthis.cameras = array || [];\n\n}\n\nArrayCamera.prototype = Object.assign( Object.create( PerspectiveCamera.prototype ), {\n\n\tconstructor: ArrayCamera,\n\n\tisArrayCamera: true\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebVRManager( renderer ) {\n\n\tvar scope = this;\n\n\tvar device = null;\n\tvar frameData = null;\n\n\tvar poseTarget = null;\n\n\tvar controllers = [];\n\tvar standingMatrix = new Matrix4();\n\tvar standingMatrixInverse = new Matrix4();\n\n\tvar frameOfReferenceType = 'stage';\n\n\tif ( typeof window !== 'undefined' && 'VRFrameData' in window ) {\n\n\t\tframeData = new window.VRFrameData();\n\t\twindow.addEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange, false );\n\n\t}\n\n\tvar matrixWorldInverse = new Matrix4();\n\tvar tempQuaternion = new Quaternion();\n\tvar tempPosition = new Vector3();\n\n\tvar cameraL = new PerspectiveCamera();\n\tcameraL.bounds = new Vector4( 0.0, 0.0, 0.5, 1.0 );\n\tcameraL.layers.enable( 1 );\n\n\tvar cameraR = new PerspectiveCamera();\n\tcameraR.bounds = new Vector4( 0.5, 0.0, 0.5, 1.0 );\n\tcameraR.layers.enable( 2 );\n\n\tvar cameraVR = new ArrayCamera( [ cameraL, cameraR ] );\n\tcameraVR.layers.enable( 1 );\n\tcameraVR.layers.enable( 2 );\n\n\t//\n\n\tfunction isPresenting() {\n\n\t\treturn device !== null && device.isPresenting === true;\n\n\t}\n\n\tvar currentSize, currentPixelRatio;\n\n\tfunction onVRDisplayPresentChange() {\n\n\t\tif ( isPresenting() ) {\n\n\t\t\tvar eyeParameters = device.getEyeParameters( 'left' );\n\t\t\tvar renderWidth = eyeParameters.renderWidth;\n\t\t\tvar renderHeight = eyeParameters.renderHeight;\n\n\t\t\tcurrentPixelRatio = renderer.getPixelRatio();\n\t\t\tcurrentSize = renderer.getSize();\n\n\t\t\trenderer.setDrawingBufferSize( renderWidth * 2, renderHeight, 1 );\n\n\t\t\tanimation.start();\n\n\t\t} else {\n\n\t\t\tif ( scope.enabled ) {\n\n\t\t\t\trenderer.setDrawingBufferSize( currentSize.width, currentSize.height, currentPixelRatio );\n\n\t\t\t}\n\n\t\t\tanimation.stop();\n\n\t\t}\n\n\t}\n\n\t//\n\n\tvar triggers = [];\n\n\tfunction findGamepad( id ) {\n\n\t\tvar gamepads = navigator.getGamepads && navigator.getGamepads();\n\n\t\tfor ( var i = 0, j = 0, l = gamepads.length; i < l; i ++ ) {\n\n\t\t\tvar gamepad = gamepads[ i ];\n\n\t\t\tif ( gamepad && ( gamepad.id === 'Daydream Controller' ||\n\t\t\t\tgamepad.id === 'Gear VR Controller' || gamepad.id === 'Oculus Go Controller' ||\n\t\t\t\tgamepad.id === 'OpenVR Gamepad' || gamepad.id.startsWith( 'Oculus Touch' ) ||\n\t\t\t\tgamepad.id.startsWith( 'Spatial Controller' ) ) ) {\n\n\t\t\t\tif ( j === id ) return gamepad;\n\n\t\t\t\tj ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateControllers() {\n\n\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\n\n\t\t\tvar controller = controllers[ i ];\n\n\t\t\tvar gamepad = findGamepad( i );\n\n\t\t\tif ( gamepad !== undefined && gamepad.pose !== undefined ) {\n\n\t\t\t\tif ( gamepad.pose === null ) return;\n\n\t\t\t\t//  Pose\n\n\t\t\t\tvar pose = gamepad.pose;\n\n\t\t\t\tif ( pose.hasPosition === false ) controller.position.set( 0.2, - 0.6, - 0.05 );\n\n\t\t\t\tif ( pose.position !== null ) controller.position.fromArray( pose.position );\n\t\t\t\tif ( pose.orientation !== null ) controller.quaternion.fromArray( pose.orientation );\n\t\t\t\tcontroller.matrix.compose( controller.position, controller.quaternion, controller.scale );\n\t\t\t\tcontroller.matrix.premultiply( standingMatrix );\n\t\t\t\tcontroller.matrix.decompose( controller.position, controller.quaternion, controller.scale );\n\t\t\t\tcontroller.matrixWorldNeedsUpdate = true;\n\t\t\t\tcontroller.visible = true;\n\n\t\t\t\t//  Trigger\n\n\t\t\t\tvar buttonId = gamepad.id === 'Daydream Controller' ? 0 : 1;\n\n\t\t\t\tif ( triggers[ i ] !== gamepad.buttons[ buttonId ].pressed ) {\n\n\t\t\t\t\ttriggers[ i ] = gamepad.buttons[ buttonId ].pressed;\n\n\t\t\t\t\tif ( triggers[ i ] === true ) {\n\n\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'selectstart' } );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'selectend' } );\n\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'select' } );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tcontroller.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.enabled = false;\n\n\tthis.getController = function ( id ) {\n\n\t\tvar controller = controllers[ id ];\n\n\t\tif ( controller === undefined ) {\n\n\t\t\tcontroller = new Group();\n\t\t\tcontroller.matrixAutoUpdate = false;\n\t\t\tcontroller.visible = false;\n\n\t\t\tcontrollers[ id ] = controller;\n\n\t\t}\n\n\t\treturn controller;\n\n\t};\n\n\tthis.getDevice = function () {\n\n\t\treturn device;\n\n\t};\n\n\tthis.setDevice = function ( value ) {\n\n\t\tif ( value !== undefined ) device = value;\n\n\t\tanimation.setContext( value );\n\n\t};\n\n\tthis.setFrameOfReferenceType = function ( value ) {\n\n\t\tframeOfReferenceType = value;\n\n\t};\n\n\tthis.setPoseTarget = function ( object ) {\n\n\t\tif ( object !== undefined ) poseTarget = object;\n\n\t};\n\n\tthis.getCamera = function ( camera ) {\n\n\t\tvar userHeight = frameOfReferenceType === 'stage' ? 1.6 : 0;\n\n\t\tif ( device === null ) {\n\n\t\t\tcamera.position.set( 0, userHeight, 0 );\n\t\t\treturn camera;\n\n\t\t}\n\n\t\tdevice.depthNear = camera.near;\n\t\tdevice.depthFar = camera.far;\n\n\t\tdevice.getFrameData( frameData );\n\n\t\t//\n\n\t\tif ( frameOfReferenceType === 'stage' ) {\n\n\t\t\tvar stageParameters = device.stageParameters;\n\n\t\t\tif ( stageParameters ) {\n\n\t\t\t\tstandingMatrix.fromArray( stageParameters.sittingToStandingTransform );\n\n\t\t\t} else {\n\n\t\t\t\tstandingMatrix.makeTranslation( 0, userHeight, 0 );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar pose = frameData.pose;\n\t\tvar poseObject = poseTarget !== null ? poseTarget : camera;\n\n\t\t// We want to manipulate poseObject by its position and quaternion components since users may rely on them.\n\t\tposeObject.matrix.copy( standingMatrix );\n\t\tposeObject.matrix.decompose( poseObject.position, poseObject.quaternion, poseObject.scale );\n\n\t\tif ( pose.orientation !== null ) {\n\n\t\t\ttempQuaternion.fromArray( pose.orientation );\n\t\t\tposeObject.quaternion.multiply( tempQuaternion );\n\n\t\t}\n\n\t\tif ( pose.position !== null ) {\n\n\t\t\ttempQuaternion.setFromRotationMatrix( standingMatrix );\n\t\t\ttempPosition.fromArray( pose.position );\n\t\t\ttempPosition.applyQuaternion( tempQuaternion );\n\t\t\tposeObject.position.add( tempPosition );\n\n\t\t}\n\n\t\tposeObject.updateMatrixWorld();\n\n\t\tif ( device.isPresenting === false ) return camera;\n\n\t\t//\n\n\t\tcameraL.near = camera.near;\n\t\tcameraR.near = camera.near;\n\n\t\tcameraL.far = camera.far;\n\t\tcameraR.far = camera.far;\n\n\t\tcameraVR.matrixWorld.copy( camera.matrixWorld );\n\t\tcameraVR.matrixWorldInverse.copy( camera.matrixWorldInverse );\n\n\t\tcameraL.matrixWorldInverse.fromArray( frameData.leftViewMatrix );\n\t\tcameraR.matrixWorldInverse.fromArray( frameData.rightViewMatrix );\n\n\t\t// TODO (mrdoob) Double check this code\n\n\t\tstandingMatrixInverse.getInverse( standingMatrix );\n\n\t\tif ( frameOfReferenceType === 'stage' ) {\n\n\t\t\tcameraL.matrixWorldInverse.multiply( standingMatrixInverse );\n\t\t\tcameraR.matrixWorldInverse.multiply( standingMatrixInverse );\n\n\t\t}\n\n\t\tvar parent = poseObject.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\n\n\t\t\tcameraL.matrixWorldInverse.multiply( matrixWorldInverse );\n\t\t\tcameraR.matrixWorldInverse.multiply( matrixWorldInverse );\n\n\t\t}\n\n\t\t// envMap and Mirror needs camera.matrixWorld\n\n\t\tcameraL.matrixWorld.getInverse( cameraL.matrixWorldInverse );\n\t\tcameraR.matrixWorld.getInverse( cameraR.matrixWorldInverse );\n\n\t\tcameraL.projectionMatrix.fromArray( frameData.leftProjectionMatrix );\n\t\tcameraR.projectionMatrix.fromArray( frameData.rightProjectionMatrix );\n\n\t\t// HACK (mrdoob)\n\t\t// https://github.com/w3c/webvr/issues/203\n\n\t\tcameraVR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t//\n\n\t\tvar layers = device.getLayers();\n\n\t\tif ( layers.length ) {\n\n\t\t\tvar layer = layers[ 0 ];\n\n\t\t\tif ( layer.leftBounds !== null && layer.leftBounds.length === 4 ) {\n\n\t\t\t\tcameraL.bounds.fromArray( layer.leftBounds );\n\n\t\t\t}\n\n\t\t\tif ( layer.rightBounds !== null && layer.rightBounds.length === 4 ) {\n\n\t\t\t\tcameraR.bounds.fromArray( layer.rightBounds );\n\n\t\t\t}\n\n\t\t}\n\n\t\tupdateControllers();\n\n\t\treturn cameraVR;\n\n\t};\n\n\tthis.getStandingMatrix = function () {\n\n\t\treturn standingMatrix;\n\n\t};\n\n\tthis.isPresenting = isPresenting;\n\n\t// Animation Loop\n\n\tvar animation = new WebGLAnimation();\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tanimation.setAnimationLoop( callback );\n\n\t};\n\n\tthis.submitFrame = function () {\n\n\t\tif ( isPresenting() ) device.submitFrame();\n\n\t};\n\n\tthis.dispose = function () {\n\n\t\tif ( typeof window !== 'undefined' ) {\n\n\t\t\twindow.removeEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange );\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebXRManager( renderer ) {\n\n\tvar gl = renderer.context;\n\n\tvar device = null;\n\tvar session = null;\n\n\tvar frameOfReference = null;\n\tvar frameOfReferenceType = 'stage';\n\n\tvar pose = null;\n\n\tvar controllers = [];\n\tvar inputSources = [];\n\n\tfunction isPresenting() {\n\n\t\treturn session !== null && frameOfReference !== null;\n\n\t}\n\n\t//\n\n\tvar cameraL = new PerspectiveCamera();\n\tcameraL.layers.enable( 1 );\n\tcameraL.viewport = new Vector4();\n\n\tvar cameraR = new PerspectiveCamera();\n\tcameraR.layers.enable( 2 );\n\tcameraR.viewport = new Vector4();\n\n\tvar cameraVR = new ArrayCamera( [ cameraL, cameraR ] );\n\tcameraVR.layers.enable( 1 );\n\tcameraVR.layers.enable( 2 );\n\n\t//\n\n\tthis.enabled = false;\n\n\tthis.getController = function ( id ) {\n\n\t\tvar controller = controllers[ id ];\n\n\t\tif ( controller === undefined ) {\n\n\t\t\tcontroller = new Group();\n\t\t\tcontroller.matrixAutoUpdate = false;\n\t\t\tcontroller.visible = false;\n\n\t\t\tcontrollers[ id ] = controller;\n\n\t\t}\n\n\t\treturn controller;\n\n\t};\n\n\tthis.getDevice = function () {\n\n\t\treturn device;\n\n\t};\n\n\tthis.setDevice = function ( value ) {\n\n\t\tif ( value !== undefined ) device = value;\n\t\tif ( value instanceof XRDevice ) gl.setCompatibleXRDevice( value );\n\n\t};\n\n\t//\n\n\tfunction onSessionEvent( event ) {\n\n\t\tvar controller = controllers[ inputSources.indexOf( event.inputSource ) ];\n\t\tif ( controller ) controller.dispatchEvent( { type: event.type } );\n\n\t}\n\n\tfunction onSessionEnd() {\n\n\t\trenderer.setFramebuffer( null );\n\t\tanimation.stop();\n\n\t}\n\n\tthis.setFrameOfReferenceType = function ( value ) {\n\n\t\tframeOfReferenceType = value;\n\n\t};\n\n\tthis.setSession = function ( value ) {\n\n\t\tsession = value;\n\n\t\tif ( session !== null ) {\n\n\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\n\t\t\tsession.baseLayer = new XRWebGLLayer( session, gl );\n\t\t\tsession.requestFrameOfReference( frameOfReferenceType ).then( function ( value ) {\n\n\t\t\t\tframeOfReference = value;\n\n\t\t\t\trenderer.setFramebuffer( session.baseLayer.framebuffer );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t} );\n\n\t\t\t//\n\n\t\t\tinputSources = session.getInputSources();\n\n\t\t\tsession.addEventListener( 'inputsourceschange', function () {\n\n\t\t\t\tinputSources = session.getInputSources();\n\t\t\t\tconsole.log( inputSources );\n\n\t\t\t} );\n\n\t\t}\n\n\t};\n\n\tfunction updateCamera( camera, parent ) {\n\n\t\tif ( parent === null ) {\n\n\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t} else {\n\n\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t}\n\n\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\n\n\t}\n\n\tthis.getCamera = function ( camera ) {\n\n\t\tif ( isPresenting() ) {\n\n\t\t\tvar parent = camera.parent;\n\t\t\tvar cameras = cameraVR.cameras;\n\n\t\t\t// apply camera.parent to cameraVR\n\n\t\t\tupdateCamera( cameraVR, parent );\n\n\t\t\tfor ( var i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\t// update camera and its children\n\n\t\t\tcamera.matrixWorld.copy( cameraVR.matrixWorld );\n\n\t\t\tvar children = camera.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateMatrixWorld( true );\n\n\t\t\t}\n\n\t\t\treturn cameraVR;\n\n\t\t}\n\n\t\treturn camera;\n\n\t};\n\n\tthis.isPresenting = isPresenting;\n\n\t// Animation Loop\n\n\tvar onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tpose = frame.getDevicePose( frameOfReference );\n\n\t\tif ( pose !== null ) {\n\n\t\t\tvar layer = session.baseLayer;\n\t\t\tvar views = frame.views;\n\n\t\t\tfor ( var i = 0; i < views.length; i ++ ) {\n\n\t\t\t\tvar view = views[ i ];\n\t\t\t\tvar viewport = layer.getViewport( view );\n\t\t\t\tvar viewMatrix = pose.getViewMatrix( view );\n\n\t\t\t\tvar camera = cameraVR.cameras[ i ];\n\t\t\t\tcamera.matrix.fromArray( viewMatrix ).getInverse( camera.matrix );\n\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\tcameraVR.matrix.copy( camera.matrix );\n\n\t\t\t\t\t// HACK (mrdoob)\n\t\t\t\t\t// https://github.com/w3c/webvr/issues/203\n\n\t\t\t\t\tcameraVR.projectionMatrix.copy( camera.projectionMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\n\n\t\t\tvar controller = controllers[ i ];\n\n\t\t\tvar inputSource = inputSources[ i ];\n\n\t\t\tif ( inputSource ) {\n\n\t\t\t\tvar inputPose = frame.getInputPose( inputSource, frameOfReference );\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\tif ( 'targetRay' in inputPose ) {\n\n\t\t\t\t\t\tcontroller.matrix.elements = inputPose.targetRay.transformMatrix;\n\n\t\t\t\t\t} else if ( 'pointerMatrix' in inputPose ) {\n\n\t\t\t\t\t\t// DEPRECATED\n\n\t\t\t\t\t\tcontroller.matrix.elements = inputPose.pointerMatrix;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontroller.matrix.decompose( controller.position, controller.rotation, controller.scale );\n\t\t\t\t\tcontroller.visible = true;\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcontroller.visible = false;\n\n\t\t}\n\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t}\n\n\tvar animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\n\t};\n\n\tthis.dispose = function () {};\n\n\t// DEPRECATED\n\n\tthis.getStandingMatrix = function () {\n\n\t\tconsole.warn( 'THREE.WebXRManager: getStandingMatrix() is no longer needed.' );\n\t\treturn new THREE.Matrix4();\n\n\t};\n\n\tthis.submitFrame = function () {};\n\n}\n\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n * @author tschw\n */\n\nfunction WebGLRenderer( parameters ) {\n\n\tconsole.log( 'THREE.WebGLRenderer', REVISION );\n\n\tparameters = parameters || {};\n\n\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ),\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default';\n\n\tvar currentRenderList = null;\n\tvar currentRenderState = null;\n\n\t// public properties\n\n\tthis.domElement = _canvas;\n\tthis.context = null;\n\n\t// clearing\n\n\tthis.autoClear = true;\n\tthis.autoClearColor = true;\n\tthis.autoClearDepth = true;\n\tthis.autoClearStencil = true;\n\n\t// scene graph\n\n\tthis.sortObjects = true;\n\n\t// user-defined clipping\n\n\tthis.clippingPlanes = [];\n\tthis.localClippingEnabled = false;\n\n\t// physically based shading\n\n\tthis.gammaFactor = 2.0;\t// for backwards compatibility\n\tthis.gammaInput = false;\n\tthis.gammaOutput = false;\n\n\t// physical lights\n\n\tthis.physicallyCorrectLights = false;\n\n\t// tone mapping\n\n\tthis.toneMapping = LinearToneMapping;\n\tthis.toneMappingExposure = 1.0;\n\tthis.toneMappingWhitePoint = 1.0;\n\n\t// morphs\n\n\tthis.maxMorphTargets = 8;\n\tthis.maxMorphNormals = 4;\n\n\t// internal properties\n\n\tvar _this = this,\n\n\t\t_isContextLost = false,\n\n\t\t// internal state cache\n\n\t\t_framebuffer = null,\n\n\t\t_currentRenderTarget = null,\n\t\t_currentFramebuffer = null,\n\t\t_currentMaterialId = - 1,\n\n\t\t// geometry and program caching\n\n\t\t_currentGeometryProgram = {\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false\n\t\t},\n\n\t\t_currentCamera = null,\n\t\t_currentArrayCamera = null,\n\n\t\t_currentViewport = new Vector4(),\n\t\t_currentScissor = new Vector4(),\n\t\t_currentScissorTest = null,\n\n\t\t//\n\n\t\t_usedTextureUnits = 0,\n\n\t\t//\n\n\t\t_width = _canvas.width,\n\t\t_height = _canvas.height,\n\n\t\t_pixelRatio = 1,\n\n\t\t_viewport = new Vector4( 0, 0, _width, _height ),\n\t\t_scissor = new Vector4( 0, 0, _width, _height ),\n\t\t_scissorTest = false,\n\n\t\t// frustum\n\n\t\t_frustum = new Frustum(),\n\n\t\t// clipping\n\n\t\t_clipping = new WebGLClipping(),\n\t\t_clippingEnabled = false,\n\t\t_localClippingEnabled = false,\n\n\t\t// camera matrices cache\n\n\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t_vector3 = new Vector3();\n\n\tfunction getTargetPixelRatio() {\n\n\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t}\n\n\t// initialize\n\n\tvar _gl;\n\n\ttry {\n\n\t\tvar contextAttributes = {\n\t\t\talpha: _alpha,\n\t\t\tdepth: _depth,\n\t\t\tstencil: _stencil,\n\t\t\tantialias: _antialias,\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\n\t\t\tpowerPreference: _powerPreference\n\t\t};\n\n\t\t// event listeners must be registered before WebGL context is created, see #12753\n\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\t_gl = _context || _canvas.getContext( 'webgl', contextAttributes ) || _canvas.getContext( 'experimental-webgl', contextAttributes );\n\n\t\tif ( _gl === null ) {\n\n\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\n\n\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t} else {\n\n\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t};\n\n\t\t}\n\n\t} catch ( error ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\n\t}\n\n\tvar extensions, capabilities, state, info;\n\tvar properties, textures, attributes, geometries, objects;\n\tvar programCache, renderLists, renderStates;\n\n\tvar background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\tvar utils;\n\n\tfunction initGLContext() {\n\n\t\textensions = new WebGLExtensions( _gl );\n\n\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\tif ( ! capabilities.isWebGL2 ) {\n\n\t\t\textensions.get( 'WEBGL_depth_texture' );\n\t\t\textensions.get( 'OES_texture_float' );\n\t\t\textensions.get( 'OES_texture_half_float' );\n\t\t\textensions.get( 'OES_texture_half_float_linear' );\n\t\t\textensions.get( 'OES_standard_derivatives' );\n\t\t\textensions.get( 'OES_element_index_uint' );\n\t\t\textensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t}\n\n\t\textensions.get( 'OES_texture_float_linear' );\n\n\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\tstate = new WebGLState( _gl, extensions, utils, capabilities );\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\n\t\tinfo = new WebGLInfo( _gl );\n\t\tproperties = new WebGLProperties();\n\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\tattributes = new WebGLAttributes( _gl );\n\t\tgeometries = new WebGLGeometries( _gl, attributes, info );\n\t\tobjects = new WebGLObjects( geometries, info );\n\t\tmorphtargets = new WebGLMorphtargets( _gl );\n\t\tprogramCache = new WebGLPrograms( _this, extensions, capabilities );\n\t\trenderLists = new WebGLRenderLists();\n\t\trenderStates = new WebGLRenderStates();\n\n\t\tbackground = new WebGLBackground( _this, state, objects, _premultipliedAlpha );\n\n\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\tinfo.programs = programCache.programs;\n\n\t\t_this.context = _gl;\n\t\t_this.capabilities = capabilities;\n\t\t_this.extensions = extensions;\n\t\t_this.properties = properties;\n\t\t_this.renderLists = renderLists;\n\t\t_this.state = state;\n\t\t_this.info = info;\n\n\t}\n\n\tinitGLContext();\n\n\t// vr\n\n\tvar vr = null;\n\n\tif ( typeof navigator !== 'undefined' ) {\n\n\t\tvr = ( 'xr' in navigator ) ? new WebXRManager( _this ) : new WebVRManager( _this );\n\n\t}\n\n\tthis.vr = vr;\n\n\t// shadow map\n\n\tvar shadowMap = new WebGLShadowMap( _this, objects, capabilities.maxTextureSize );\n\n\tthis.shadowMap = shadowMap;\n\n\t// API\n\n\tthis.getContext = function () {\n\n\t\treturn _gl;\n\n\t};\n\n\tthis.getContextAttributes = function () {\n\n\t\treturn _gl.getContextAttributes();\n\n\t};\n\n\tthis.forceContextLoss = function () {\n\n\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.loseContext();\n\n\t};\n\n\tthis.forceContextRestore = function () {\n\n\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.restoreContext();\n\n\t};\n\n\tthis.getPixelRatio = function () {\n\n\t\treturn _pixelRatio;\n\n\t};\n\n\tthis.setPixelRatio = function ( value ) {\n\n\t\tif ( value === undefined ) return;\n\n\t\t_pixelRatio = value;\n\n\t\tthis.setSize( _width, _height, false );\n\n\t};\n\n\tthis.getSize = function () {\n\n\t\treturn {\n\t\t\twidth: _width,\n\t\t\theight: _height\n\t\t};\n\n\t};\n\n\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\tif ( vr.isPresenting() ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_canvas.width = width * _pixelRatio;\n\t\t_canvas.height = height * _pixelRatio;\n\n\t\tif ( updateStyle !== false ) {\n\n\t\t\t_canvas.style.width = width + 'px';\n\t\t\t_canvas.style.height = height + 'px';\n\n\t\t}\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getDrawingBufferSize = function () {\n\n\t\treturn {\n\t\t\twidth: _width * _pixelRatio,\n\t\t\theight: _height * _pixelRatio\n\t\t};\n\n\t};\n\n\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_pixelRatio = pixelRatio;\n\n\t\t_canvas.width = width * pixelRatio;\n\t\t_canvas.height = height * pixelRatio;\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getCurrentViewport = function () {\n\n\t\treturn _currentViewport;\n\n\t};\n\n\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t_viewport.set( x, _height - y - height, width, height );\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\n\t};\n\n\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t_scissor.set( x, _height - y - height, width, height );\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n\n\t};\n\n\tthis.setScissorTest = function ( boolean ) {\n\n\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t};\n\n\t// Clearing\n\n\tthis.getClearColor = function () {\n\n\t\treturn background.getClearColor();\n\n\t};\n\n\tthis.setClearColor = function () {\n\n\t\tbackground.setClearColor.apply( background, arguments );\n\n\t};\n\n\tthis.getClearAlpha = function () {\n\n\t\treturn background.getClearAlpha();\n\n\t};\n\n\tthis.setClearAlpha = function () {\n\n\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t};\n\n\tthis.clear = function ( color, depth, stencil ) {\n\n\t\tvar bits = 0;\n\n\t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\n\t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t_gl.clear( bits );\n\n\t};\n\n\tthis.clearColor = function () {\n\n\t\tthis.clear( true, false, false );\n\n\t};\n\n\tthis.clearDepth = function () {\n\n\t\tthis.clear( false, true, false );\n\n\t};\n\n\tthis.clearStencil = function () {\n\n\t\tthis.clear( false, false, true );\n\n\t};\n\n\t//\n\n\tthis.dispose = function () {\n\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\trenderLists.dispose();\n\t\trenderStates.dispose();\n\t\tproperties.dispose();\n\t\tobjects.dispose();\n\n\t\tvr.dispose();\n\n\t\tanimation.stop();\n\n\t};\n\n\t// Events\n\n\tfunction onContextLost( event ) {\n\n\t\tevent.preventDefault();\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t_isContextLost = true;\n\n\t}\n\n\tfunction onContextRestore( /* event */ ) {\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t_isContextLost = false;\n\n\t\tinitGLContext();\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tvar material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\tdeallocateMaterial( material );\n\n\t}\n\n\t// Buffer deallocation\n\n\tfunction deallocateMaterial( material ) {\n\n\t\treleaseMaterialProgramReference( material );\n\n\t\tproperties.remove( material );\n\n\t}\n\n\n\tfunction releaseMaterialProgramReference( material ) {\n\n\t\tvar programInfo = properties.get( material ).program;\n\n\t\tmaterial.program = undefined;\n\n\t\tif ( programInfo !== undefined ) {\n\n\t\t\tprogramCache.releaseProgram( programInfo );\n\n\t\t}\n\n\t}\n\n\t// Buffer rendering\n\n\tfunction renderObjectImmediate( object, program ) {\n\n\t\tobject.render( function ( object ) {\n\n\t\t\t_this.renderBufferImmediate( object, program );\n\n\t\t} );\n\n\t}\n\n\tthis.renderBufferImmediate = function ( object, program ) {\n\n\t\tstate.initAttributes();\n\n\t\tvar buffers = properties.get( object );\n\n\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\n\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\n\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\n\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tif ( object.hasPositions ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tstate.enableAttribute( programAttributes.position );\n\t\t\t_gl.vertexAttribPointer( programAttributes.position, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasNormals ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tstate.enableAttribute( programAttributes.normal );\n\t\t\t_gl.vertexAttribPointer( programAttributes.normal, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasUvs ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tstate.enableAttribute( programAttributes.uv );\n\t\t\t_gl.vertexAttribPointer( programAttributes.uv, 2, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasColors ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tstate.enableAttribute( programAttributes.color );\n\t\t\t_gl.vertexAttribPointer( programAttributes.color, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tstate.disableUnusedAttributes();\n\n\t\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\n\n\t\tobject.count = 0;\n\n\t};\n\n\tthis.renderBufferDirect = function ( camera, fog, geometry, material, object, group ) {\n\n\t\tvar frontFaceCW = ( object.isMesh && object.normalMatrix.determinant() < 0 );\n\n\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\tvar program = setProgram( camera, fog, material, object );\n\n\t\tvar updateBuffers = false;\n\n\t\tif ( _currentGeometryProgram.geometry !== geometry.id ||\n\t\t\t_currentGeometryProgram.program !== program.id ||\n\t\t\t_currentGeometryProgram.wireframe !== ( material.wireframe === true ) ) {\n\n\t\t\t_currentGeometryProgram.geometry = geometry.id;\n\t\t\t_currentGeometryProgram.program = program.id;\n\t\t\t_currentGeometryProgram.wireframe = material.wireframe === true;\n\t\t\tupdateBuffers = true;\n\n\t\t}\n\n\t\tif ( object.morphTargetInfluences ) {\n\n\t\t\tmorphtargets.update( object, geometry, material, program );\n\n\t\t\tupdateBuffers = true;\n\n\t\t}\n\n\t\t//\n\n\t\tvar index = geometry.index;\n\t\tvar position = geometry.attributes.position;\n\t\tvar rangeFactor = 1;\n\n\t\tif ( material.wireframe === true ) {\n\n\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\trangeFactor = 2;\n\n\t\t}\n\n\t\tvar attribute;\n\t\tvar renderer = bufferRenderer;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattribute = attributes.get( index );\n\n\t\t\trenderer = indexedBufferRenderer;\n\t\t\trenderer.setIndex( attribute );\n\n\t\t}\n\n\t\tif ( updateBuffers ) {\n\n\t\t\tsetupVertexAttributes( material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, attribute.buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tvar dataCount = Infinity;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdataCount = index.count;\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\tdataCount = position.count;\n\n\t\t}\n\n\t\tvar rangeStart = geometry.drawRange.start * rangeFactor;\n\t\tvar rangeCount = geometry.drawRange.count * rangeFactor;\n\n\t\tvar groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\tvar groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\n\t\tvar drawStart = Math.max( rangeStart, groupStart );\n\t\tvar drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\tvar drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\t//\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t} else {\n\n\t\t\t\tswitch ( object.drawMode ) {\n\n\t\t\t\t\tcase TrianglesDrawMode:\n\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TriangleStripDrawMode:\n\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_STRIP );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TriangleFanDrawMode:\n\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_FAN );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t} else if ( object.isLine ) {\n\n\t\t\tvar lineWidth = material.linewidth;\n\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t}\n\n\t\t} else if ( object.isPoints ) {\n\n\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t} else if ( object.isSprite ) {\n\n\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t}\n\n\t\tif ( geometry && geometry.isInstancedBufferGeometry ) {\n\n\t\t\tif ( geometry.maxInstancedCount > 0 ) {\n\n\t\t\t\trenderer.renderInstances( geometry, drawStart, drawCount );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t}\n\n\t};\n\n\tfunction setupVertexAttributes( material, program, geometry ) {\n\n\t\tif ( geometry && geometry.isInstancedBufferGeometry & ! capabilities.isWebGL2 ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.initAttributes();\n\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( var name in programAttributes ) {\n\n\t\t\tvar programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute >= 0 ) {\n\n\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tvar normalized = geometryAttribute.normalized;\n\t\t\t\t\tvar size = geometryAttribute.itemSize;\n\n\t\t\t\t\tvar attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tvar buffer = attribute.buffer;\n\t\t\t\t\tvar type = attribute.type;\n\t\t\t\t\tvar bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tvar data = geometryAttribute.data;\n\t\t\t\t\t\tvar stride = data.stride;\n\t\t\t\t\t\tvar offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data && data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, data.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, stride * bytesPerElement, offset * bytesPerElement );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, 0, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.disableUnusedAttributes();\n\n\t}\n\n\t// Compile\n\n\tthis.compile = function ( scene, camera ) {\n\n\t\tcurrentRenderState = renderStates.get( scene, camera );\n\t\tcurrentRenderState.init();\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tif ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\tcurrentRenderState.setupLights( camera );\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tif ( object.material ) {\n\n\t\t\t\tif ( Array.isArray( object.material ) ) {\n\n\t\t\t\t\tfor ( var i = 0; i < object.material.length; i ++ ) {\n\n\t\t\t\t\t\tinitMaterial( object.material[ i ], scene.fog, object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tinitMaterial( object.material, scene.fog, object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t};\n\n\t// Animation Loop\n\n\tvar onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time ) {\n\n\t\tif ( vr.isPresenting() ) return;\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t}\n\n\tvar animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tif ( typeof window !== 'undefined' ) animation.setContext( window );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\t\tvr.setAnimationLoop( callback );\n\n\t\tanimation.start();\n\n\t};\n\n\t// Rendering\n\n\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\n\n\t\tif ( ! ( camera && camera.isCamera ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( _isContextLost ) return;\n\n\t\t// reset caching for this frame\n\n\t\t_currentGeometryProgram.geometry = null;\n\t\t_currentGeometryProgram.program = null;\n\t\t_currentGeometryProgram.wireframe = false;\n\t\t_currentMaterialId = - 1;\n\t\t_currentCamera = null;\n\n\t\t// update scene graph\n\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t// update camera matrices and frustum\n\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\tif ( vr.enabled ) {\n\n\t\t\tcamera = vr.getCamera( camera );\n\n\t\t}\n\n\t\t//\n\n\t\tcurrentRenderState = renderStates.get( scene, camera );\n\t\tcurrentRenderState.init();\n\n\t\tscene.onBeforeRender( _this, scene, camera, renderTarget );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t_clippingEnabled = _clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\tcurrentRenderList = renderLists.get( scene, camera );\n\t\tcurrentRenderList.init();\n\n\t\tprojectObject( scene, camera, _this.sortObjects );\n\n\t\tif ( _this.sortObjects === true ) {\n\n\t\t\tcurrentRenderList.sort();\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _clippingEnabled ) _clipping.beginShadows();\n\n\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\tcurrentRenderState.setupLights( camera );\n\n\t\tif ( _clippingEnabled ) _clipping.endShadows();\n\n\t\t//\n\n\t\tif ( this.info.autoReset ) this.info.reset();\n\n\t\tif ( renderTarget === undefined ) {\n\n\t\t\trenderTarget = null;\n\n\t\t}\n\n\t\tthis.setRenderTarget( renderTarget );\n\n\t\t//\n\n\t\tbackground.render( currentRenderList, scene, camera, forceClear );\n\n\t\t// render scene\n\n\t\tvar opaqueObjects = currentRenderList.opaque;\n\t\tvar transparentObjects = currentRenderList.transparent;\n\n\t\tif ( scene.overrideMaterial ) {\n\n\t\t\tvar overrideMaterial = scene.overrideMaterial;\n\n\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera, overrideMaterial );\n\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera, overrideMaterial );\n\n\t\t} else {\n\n\t\t\t// opaque pass (front-to-back order)\n\n\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera );\n\n\t\t\t// transparent pass (back-to-front order)\n\n\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera );\n\n\t\t}\n\n\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\tif ( renderTarget ) {\n\n\t\t\ttextures.updateRenderTargetMipmap( renderTarget );\n\n\t\t}\n\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\tstate.buffers.depth.setTest( true );\n\t\tstate.buffers.depth.setMask( true );\n\t\tstate.buffers.color.setMask( true );\n\n\t\tstate.setPolygonOffset( false );\n\n\t\tscene.onAfterRender( _this, scene, camera );\n\n\t\tif ( vr.enabled ) {\n\n\t\t\tvr.submitFrame();\n\n\t\t}\n\n\t\t// _gl.finish();\n\n\t\tcurrentRenderList = null;\n\t\tcurrentRenderState = null;\n\n\t};\n\n\t/*\n\t// TODO Duplicated code (Frustum)\n\n\tvar _sphere = new Sphere();\n\n\tfunction isObjectViewable( object ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( geometry.boundingSphere === null )\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere ).\n\t\tapplyMatrix4( object.matrixWorld );\n\n\t\treturn isSphereViewable( _sphere );\n\n\t}\n\n\tfunction isSpriteViewable( sprite ) {\n\n\t\t_sphere.center.set( 0, 0, 0 );\n\t\t_sphere.radius = 0.7071067811865476;\n\t\t_sphere.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn isSphereViewable( _sphere );\n\n\t}\n\n\tfunction isSphereViewable( sphere ) {\n\n\t\tif ( ! _frustum.intersectsSphere( sphere ) ) return false;\n\n\t\tvar numPlanes = _clipping.numPlanes;\n\n\t\tif ( numPlanes === 0 ) return true;\n\n\t\tvar planes = _this.clippingPlanes,\n\n\t\t\tcenter = sphere.center,\n\t\t\tnegRad = - sphere.radius,\n\t\t\ti = 0;\n\n\t\tdo {\n\n\t\t\t// out when deeper than radius in the negative halfspace\n\t\t\tif ( planes[ i ].distanceToPoint( center ) < negRad ) return false;\n\n\t\t} while ( ++ i !== numPlanes );\n\n\t\treturn true;\n\n\t}\n\t*/\n\n\tfunction projectObject( object, camera, sortObjects ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tvar visible = object.layers.test( camera.layers );\n\n\t\tif ( visible ) {\n\n\t\t\tif ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar geometry = objects.update( object );\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tcurrentRenderList.push( object, geometry, material, _vector3.z, null );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isImmediateRenderObject ) {\n\n\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t}\n\n\t\t\t\tcurrentRenderList.push( object, null, object.material, _vector3.z, null );\n\n\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\tobject.skeleton.update();\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar geometry = objects.update( object );\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tvar group = groups[ i ];\n\t\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, _vector3.z, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tprojectObject( children[ i ], camera, sortObjects );\n\n\t\t}\n\n\t}\n\n\tfunction renderObjects( renderList, scene, camera, overrideMaterial ) {\n\n\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\tvar renderItem = renderList[ i ];\n\n\t\t\tvar object = renderItem.object;\n\t\t\tvar geometry = renderItem.geometry;\n\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\n\t\t\tvar group = renderItem.group;\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\t_currentArrayCamera = camera;\n\n\t\t\t\tvar cameras = camera.cameras;\n\n\t\t\t\tfor ( var j = 0, jl = cameras.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar camera2 = cameras[ j ];\n\n\t\t\t\t\tif ( object.layers.test( camera2.layers ) ) {\n\n\t\t\t\t\t\tif ( 'viewport' in camera2 ) { // XR\n\n\t\t\t\t\t\t\tstate.viewport( _currentViewport.copy( camera2.viewport ) );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar bounds = camera2.bounds;\n\n\t\t\t\t\t\t\tvar x = bounds.x * _width;\n\t\t\t\t\t\t\tvar y = bounds.y * _height;\n\t\t\t\t\t\t\tvar width = bounds.z * _width;\n\t\t\t\t\t\t\tvar height = bounds.w * _height;\n\n\t\t\t\t\t\t\tstate.viewport( _currentViewport.set( x, y, width, height ).multiplyScalar( _pixelRatio ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcurrentRenderState.setupLights( camera2 );\n\n\t\t\t\t\t\trenderObject( object, scene, camera2, geometry, material, group );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_currentArrayCamera = null;\n\n\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\n\n\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\tif ( object.isImmediateRenderObject ) {\n\n\t\t\tstate.setMaterial( material );\n\n\t\t\tvar program = setProgram( camera, scene.fog, material, object );\n\n\t\t\t_currentGeometryProgram.geometry = null;\n\t\t\t_currentGeometryProgram.program = null;\n\t\t\t_currentGeometryProgram.wireframe = false;\n\n\t\t\trenderObjectImmediate( object, program );\n\n\t\t} else {\n\n\t\t\t_this.renderBufferDirect( camera, scene.fog, geometry, material, object, group );\n\n\t\t}\n\n\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\n\n\t}\n\n\tfunction initMaterial( material, fog, object ) {\n\n\t\tvar materialProperties = properties.get( material );\n\n\t\tvar lights = currentRenderState.state.lights;\n\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tvar lightsHash = materialProperties.lightsHash;\n\t\tvar lightsStateHash = lights.state.hash;\n\n\t\tvar parameters = programCache.getParameters(\n\t\t\tmaterial, lights.state, shadowsArray, fog, _clipping.numPlanes, _clipping.numIntersection, object );\n\n\t\tvar code = programCache.getProgramCode( material, parameters );\n\n\t\tvar program = materialProperties.program;\n\t\tvar programChange = true;\n\n\t\tif ( program === undefined ) {\n\n\t\t\t// new material\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t} else if ( program.code !== code ) {\n\n\t\t\t// changed glsl or parameters\n\t\t\treleaseMaterialProgramReference( material );\n\n\t\t} else if ( lightsHash.stateID !== lightsStateHash.stateID ||\n\t\t\tlightsHash.directionalLength !== lightsStateHash.directionalLength ||\n\t\t\tlightsHash.pointLength !== lightsStateHash.pointLength ||\n\t\t\tlightsHash.spotLength !== lightsStateHash.spotLength ||\n\t\t\tlightsHash.rectAreaLength !== lightsStateHash.rectAreaLength ||\n\t\t\tlightsHash.hemiLength !== lightsStateHash.hemiLength ||\n\t\t\tlightsHash.shadowsLength !== lightsStateHash.shadowsLength ) {\n\n\t\t\tlightsHash.stateID = lightsStateHash.stateID;\n\t\t\tlightsHash.directionalLength = lightsStateHash.directionalLength;\n\t\t\tlightsHash.pointLength = lightsStateHash.pointLength;\n\t\t\tlightsHash.spotLength = lightsStateHash.spotLength;\n\t\t\tlightsHash.rectAreaLength = lightsStateHash.rectAreaLength;\n\t\t\tlightsHash.hemiLength = lightsStateHash.hemiLength;\n\t\t\tlightsHash.shadowsLength = lightsStateHash.shadowsLength;\n\n\t\t\tprogramChange = false;\n\n\t\t} else if ( parameters.shaderID !== undefined ) {\n\n\t\t\t// same glsl and uniform list\n\t\t\treturn;\n\n\t\t} else {\n\n\t\t\t// only rebuild uniform list\n\t\t\tprogramChange = false;\n\n\t\t}\n\n\t\tif ( programChange ) {\n\n\t\t\tif ( parameters.shaderID ) {\n\n\t\t\t\tvar shader = ShaderLib[ parameters.shaderID ];\n\n\t\t\t\tmaterialProperties.shader = {\n\t\t\t\t\tname: material.type,\n\t\t\t\t\tuniforms: UniformsUtils.clone( shader.uniforms ),\n\t\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\t\tfragmentShader: shader.fragmentShader\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tmaterialProperties.shader = {\n\t\t\t\t\tname: material.type,\n\t\t\t\t\tuniforms: material.uniforms,\n\t\t\t\t\tvertexShader: material.vertexShader,\n\t\t\t\t\tfragmentShader: material.fragmentShader\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tmaterial.onBeforeCompile( materialProperties.shader, _this );\n\n\t\t\t// Computing code again as onBeforeCompile may have changed the shaders\n\t\t\tcode = programCache.getProgramCode( material, parameters );\n\n\t\t\tprogram = programCache.acquireProgram( material, materialProperties.shader, parameters, code );\n\n\t\t\tmaterialProperties.program = program;\n\t\t\tmaterial.program = program;\n\n\t\t}\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tif ( material.morphTargets ) {\n\n\t\t\tmaterial.numSupportedMorphTargets = 0;\n\n\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\n\n\t\t\t\tif ( programAttributes[ 'morphTarget' + i ] >= 0 ) {\n\n\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.morphNormals ) {\n\n\t\t\tmaterial.numSupportedMorphNormals = 0;\n\n\t\t\tfor ( var i = 0; i < _this.maxMorphNormals; i ++ ) {\n\n\t\t\t\tif ( programAttributes[ 'morphNormal' + i ] >= 0 ) {\n\n\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar uniforms = materialProperties.shader.uniforms;\n\n\t\tif ( ! material.isShaderMaterial &&\n\t\t\t! material.isRawShaderMaterial ||\n\t\t\tmaterial.clipping === true ) {\n\n\t\t\tmaterialProperties.numClippingPlanes = _clipping.numPlanes;\n\t\t\tmaterialProperties.numIntersection = _clipping.numIntersection;\n\t\t\tuniforms.clippingPlanes = _clipping.uniform;\n\n\t\t}\n\n\t\tmaterialProperties.fog = fog;\n\n\t\t// store the light setup it was created for\n\t\tif ( lightsHash === undefined ) {\n\n\t\t\tmaterialProperties.lightsHash = lightsHash = {};\n\n\t\t}\n\n\t\tlightsHash.stateID = lightsStateHash.stateID;\n\t\tlightsHash.directionalLength = lightsStateHash.directionalLength;\n\t\tlightsHash.pointLength = lightsStateHash.pointLength;\n\t\tlightsHash.spotLength = lightsStateHash.spotLength;\n\t\tlightsHash.rectAreaLength = lightsStateHash.rectAreaLength;\n\t\tlightsHash.hemiLength = lightsStateHash.hemiLength;\n\t\tlightsHash.shadowsLength = lightsStateHash.shadowsLength;\n\n\t\tif ( material.lights ) {\n\n\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t}\n\n\t\tvar progUniforms = materialProperties.program.getUniforms(),\n\t\t\tuniformsList =\n\t\t\t\tWebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t}\n\n\tfunction setProgram( camera, fog, material, object ) {\n\n\t\t_usedTextureUnits = 0;\n\n\t\tvar materialProperties = properties.get( material );\n\t\tvar lights = currentRenderState.state.lights;\n\n\t\tvar lightsHash = materialProperties.lightsHash;\n\t\tvar lightsStateHash = lights.state.hash;\n\n\t\tif ( _clippingEnabled ) {\n\n\t\t\tif ( _localClippingEnabled || camera !== _currentCamera ) {\n\n\t\t\t\tvar useCache =\n\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t// (#8465, #8379)\n\t\t\t\t_clipping.setState(\n\t\t\t\t\tmaterial.clippingPlanes, material.clipIntersection, material.clipShadows,\n\t\t\t\t\tcamera, materialProperties, useCache );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.needsUpdate === false ) {\n\n\t\t\tif ( materialProperties.program === undefined ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( material.fog && materialProperties.fog !== fog ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( material.lights && ( lightsHash.stateID !== lightsStateHash.stateID ||\n\t\t\t\tlightsHash.directionalLength !== lightsStateHash.directionalLength ||\n\t\t\t\tlightsHash.pointLength !== lightsStateHash.pointLength ||\n\t\t\t\tlightsHash.spotLength !== lightsStateHash.spotLength ||\n\t\t\t\tlightsHash.rectAreaLength !== lightsStateHash.rectAreaLength ||\n\t\t\t\tlightsHash.hemiLength !== lightsStateHash.hemiLength ||\n\t\t\t\tlightsHash.shadowsLength !== lightsStateHash.shadowsLength ) ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t( materialProperties.numClippingPlanes !== _clipping.numPlanes ||\n\t\t\t\tmaterialProperties.numIntersection !== _clipping.numIntersection ) ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.needsUpdate ) {\n\n\t\t\tinitMaterial( material, fog, object );\n\t\t\tmaterial.needsUpdate = false;\n\n\t\t}\n\n\t\tvar refreshProgram = false;\n\t\tvar refreshMaterial = false;\n\t\tvar refreshLights = false;\n\n\t\tvar program = materialProperties.program,\n\t\t\tp_uniforms = program.getUniforms(),\n\t\t\tm_uniforms = materialProperties.shader.uniforms;\n\n\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\trefreshProgram = true;\n\t\t\trefreshMaterial = true;\n\t\t\trefreshLights = true;\n\n\t\t}\n\n\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t_currentMaterialId = material.id;\n\n\t\t\trefreshMaterial = true;\n\n\t\t}\n\n\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t}\n\n\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t}\n\n\t\t\t// load material specific uniforms\n\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\tvar uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\tmaterial.skinning ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// skinning uniforms must be set even if material didn't change\n\t\t// auto-setting of texture unit for bone texture must go before other textures\n\t\t// not sure why, but otherwise weird things happen\n\n\t\tif ( material.skinning ) {\n\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\tvar skeleton = object.skeleton;\n\n\t\t\tif ( skeleton ) {\n\n\t\t\t\tvar bones = skeleton.bones;\n\n\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === undefined ) {\n\n\t\t\t\t\t\t// layout (1 matrix = 4 pixels)\n\t\t\t\t\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t\t\t\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t\t\t\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t\t\t\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t\t\t\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\n\t\t\t\t\t\tvar size = Math.sqrt( bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\t\t\t\t\tsize = _Math.ceilPowerOfTwo( size );\n\t\t\t\t\t\tsize = Math.max( size, 4 );\n\n\t\t\t\t\t\tvar boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\t\t\t\t\tboneMatrices.set( skeleton.boneMatrices ); // copy current values\n\n\t\t\t\t\t\tvar boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\t\t\t\t\tboneTexture.needsUpdate = true;\n\n\t\t\t\t\t\tskeleton.boneMatrices = boneMatrices;\n\t\t\t\t\t\tskeleton.boneTexture = boneTexture;\n\t\t\t\t\t\tskeleton.boneTextureSize = size;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture );\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( refreshMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingWhitePoint', _this.toneMappingWhitePoint );\n\n\t\t\tif ( material.lights ) {\n\n\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t// values\n\t\t\t\t//\n\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t// the GL state when required\n\n\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t}\n\n\t\t\t// refresh uniforms common to several materials\n\n\t\t\tif ( fog && material.fog ) {\n\n\t\t\t\trefreshUniformsFog( m_uniforms, fog );\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsLambert( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\tif ( material.isMeshToonMaterial ) {\n\n\t\t\t\t\trefreshUniformsToon( m_uniforms, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trefreshUniformsPhong( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\t\trefreshUniformsPhysical( m_uniforms, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trefreshUniformsStandard( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\trefreshUniformsMatcap( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsDepth( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsDistance( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsNormal( m_uniforms, material );\n\n\t\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\n\n\t\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\t\trefreshUniformsDash( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\t\trefreshUniformsPoints( m_uniforms, material );\n\n\t\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\t\trefreshUniformsSprites( m_uniforms, material );\n\n\t\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\t\tm_uniforms.color.value = material.color;\n\t\t\t\tm_uniforms.opacity.value = material.opacity;\n\n\t\t\t}\n\n\t\t\t// RectAreaLight Texture\n\t\t\t// TODO (mrdoob): Find a nicer implementation\n\n\t\t\tif ( m_uniforms.ltc_1 !== undefined ) m_uniforms.ltc_1.value = UniformsLib.LTC_1;\n\t\t\tif ( m_uniforms.ltc_2 !== undefined ) m_uniforms.ltc_2.value = UniformsLib.LTC_2;\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, _this );\n\n\t\t}\n\n\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, _this );\n\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t}\n\n\t\t// common matrices\n\n\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\treturn program;\n\n\t}\n\n\t// Uniforms (refresh uniforms objects)\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value = material.color;\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t}\n\n\t\tif ( material.envMap ) {\n\n\t\t\tuniforms.envMap.value = material.envMap;\n\n\t\t\t// don't flip CubeTexture envMaps, flip everything else:\n\t\t\t//  WebGLRenderTargetCube will be flipped for backwards compatibility\n\t\t\t//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\n\t\t\t// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\n\t\t\tuniforms.flipEnvMap.value = ( ! ( material.envMap && material.envMap.isCubeTexture ) ) ? 1 : - 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t\tuniforms.maxMipLevel.value = properties.get( material.envMap ).__maxMipLevel;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. specular map\n\t\t// 3. normal map\n\t\t// 4. bump map\n\t\t// 5. alpha map\n\t\t// 6. emissive map\n\n\t\tvar uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.specularMap ) {\n\n\t\t\tuvScaleMap = material.specularMap;\n\n\t\t} else if ( material.displacementMap ) {\n\n\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t} else if ( material.normalMap ) {\n\n\t\t\tuvScaleMap = material.normalMap;\n\n\t\t} else if ( material.bumpMap ) {\n\n\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t} else if ( material.roughnessMap ) {\n\n\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t} else if ( material.metalnessMap ) {\n\n\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t} else if ( material.emissiveMap ) {\n\n\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value = material.color;\n\t\tuniforms.opacity.value = material.opacity;\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material ) {\n\n\t\tuniforms.diffuse.value = material.color;\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * _pixelRatio;\n\t\tuniforms.scale.value = _height * 0.5;\n\n\t\tuniforms.map.value = material.map;\n\n\t\tif ( material.map !== null ) {\n\n\t\t\tif ( material.map.matrixAutoUpdate === true ) {\n\n\t\t\t\tmaterial.map.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( material.map.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value = material.color;\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\t\tuniforms.map.value = material.map;\n\n\t\tif ( material.map !== null ) {\n\n\t\t\tif ( material.map.matrixAutoUpdate === true ) {\n\n\t\t\t\tmaterial.map.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( material.map.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsFog( uniforms, fog ) {\n\n\t\tuniforms.fogColor.value = fog.color;\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLambert( uniforms, material ) {\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value = material.specular;\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\trefreshUniformsPhong( uniforms, material );\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.roughness.value = material.roughness;\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t}\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material ) {\n\n\t\trefreshUniformsStandard( uniforms, material );\n\n\t\tuniforms.reflectivity.value = material.reflectivity; // also part of uniforms common\n\n\t\tuniforms.clearCoat.value = material.clearCoat;\n\t\tuniforms.clearCoatRoughness.value = material.clearCoatRoughness;\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDepth( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tuniforms.referencePosition.value.copy( material.referencePosition );\n\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\tuniforms.farDistance.value = material.farDistance;\n\n\t}\n\n\tfunction refreshUniformsNormal( uniforms, material ) {\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\tuniforms.ambientLightColor.needsUpdate = value;\n\n\t\tuniforms.directionalLights.needsUpdate = value;\n\t\tuniforms.pointLights.needsUpdate = value;\n\t\tuniforms.spotLights.needsUpdate = value;\n\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t}\n\n\t// Textures\n\n\tfunction allocTextureUnit() {\n\n\t\tvar textureUnit = _usedTextureUnits;\n\n\t\tif ( textureUnit >= capabilities.maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\n\n\t\t}\n\n\t\t_usedTextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tthis.allocTextureUnit = allocTextureUnit;\n\n\t// this.setTexture2D = setTexture2D;\n\tthis.setTexture2D = ( function () {\n\n\t\tvar warned = false;\n\n\t\t// backwards compatibility: peel texture.texture\n\t\treturn function setTexture2D( texture, slot ) {\n\n\t\t\tif ( texture && texture.isWebGLRenderTarget ) {\n\n\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\twarned = true;\n\n\t\t\t\t}\n\n\t\t\t\ttexture = texture.texture;\n\n\t\t\t}\n\n\t\t\ttextures.setTexture2D( texture, slot );\n\n\t\t};\n\n\t}() );\n\n\tthis.setTexture3D = ( function () {\n\n\t\t// backwards compatibility: peel texture.texture\n\t\treturn function setTexture3D( texture, slot ) {\n\n\t\t\ttextures.setTexture3D( texture, slot );\n\n\t\t};\n\n\t}() );\n\n\tthis.setTexture = ( function () {\n\n\t\tvar warned = false;\n\n\t\treturn function setTexture( texture, slot ) {\n\n\t\t\tif ( ! warned ) {\n\n\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.\" );\n\t\t\t\twarned = true;\n\n\t\t\t}\n\n\t\t\ttextures.setTexture2D( texture, slot );\n\n\t\t};\n\n\t}() );\n\n\tthis.setTextureCube = ( function () {\n\n\t\tvar warned = false;\n\n\t\treturn function setTextureCube( texture, slot ) {\n\n\t\t\t// backwards compatibility: peel texture.texture\n\t\t\tif ( texture && texture.isWebGLRenderTargetCube ) {\n\n\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\twarned = true;\n\n\t\t\t\t}\n\n\t\t\t\ttexture = texture.texture;\n\n\t\t\t}\n\n\t\t\t// currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture\n\t\t\t// TODO: unify these code paths\n\t\t\tif ( ( texture && texture.isCubeTexture ) ||\n\t\t\t\t( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\n\n\t\t\t\t// CompressedTexture can have Array in image :/\n\n\t\t\t\t// this function alone should take care of cube textures\n\t\t\t\ttextures.setTextureCube( texture, slot );\n\n\t\t\t} else {\n\n\t\t\t\t// assumed: texture property of THREE.WebGLRenderTargetCube\n\n\t\t\t\ttextures.setTextureCubeDynamic( texture, slot );\n\n\t\t\t}\n\n\t\t};\n\n\t}() );\n\n\t//\n\n\tthis.setFramebuffer = function ( value ) {\n\n\t\t_framebuffer = value;\n\n\t};\n\n\tthis.getRenderTarget = function () {\n\n\t\treturn _currentRenderTarget;\n\n\t};\n\n\tthis.setRenderTarget = function ( renderTarget ) {\n\n\t\t_currentRenderTarget = renderTarget;\n\n\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\n\n\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t}\n\n\t\tvar framebuffer = _framebuffer;\n\t\tvar isCube = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tvar __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\n\n\t\t\t\tframebuffer = __webglFramebuffer[ renderTarget.activeCubeFace ];\n\t\t\t\tisCube = true;\n\n\t\t\t} else {\n\n\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t}\n\n\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t} else {\n\n\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio );\n\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio );\n\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t}\n\n\t\tif ( _currentFramebuffer !== framebuffer ) {\n\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t\t_currentFramebuffer = framebuffer;\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport );\n\t\tstate.scissor( _currentScissor );\n\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\tif ( isCube ) {\n\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + renderTarget.activeCubeFace, textureProperties.__webglTexture, renderTarget.activeMipMapLevel );\n\n\t\t}\n\n\t};\n\n\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer ) {\n\n\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\tif ( framebuffer ) {\n\n\t\t\tvar restore = false;\n\n\t\t\tif ( framebuffer !== _currentFramebuffer ) {\n\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\trestore = true;\n\n\t\t\t}\n\n\t\t\ttry {\n\n\t\t\t\tvar texture = renderTarget.texture;\n\t\t\t\tvar textureFormat = texture.format;\n\t\t\t\tvar textureType = texture.type;\n\n\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // IE11, Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.get( 'OES_texture_float' ) || extensions.get( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t! ( textureType === HalfFloatType && ( capabilities.isWebGL2 ? extensions.get( 'EXT_color_buffer_float' ) : extensions.get( 'EXT_color_buffer_half_float' ) ) ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\n\n\t\t\t\t}\n\n\t\t\t} finally {\n\n\t\t\t\tif ( restore ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.copyFramebufferToTexture = function ( position, texture, level ) {\n\n\t\tvar width = texture.image.width;\n\t\tvar height = texture.image.height;\n\t\tvar glFormat = utils.convert( texture.format );\n\n\t\tthis.setTexture2D( texture, 0 );\n\n\t\t_gl.copyTexImage2D( _gl.TEXTURE_2D, level || 0, glFormat, position.x, position.y, width, height, 0 );\n\n\t};\n\n\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level ) {\n\n\t\tvar width = srcTexture.image.width;\n\t\tvar height = srcTexture.image.height;\n\t\tvar glFormat = utils.convert( dstTexture.format );\n\t\tvar glType = utils.convert( dstTexture.type );\n\n\t\tthis.setTexture2D( dstTexture, 0 );\n\n\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level || 0, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t} else {\n\n\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level || 0, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction FogExp2( color, density ) {\n\n\tthis.name = '';\n\n\tthis.color = new Color( color );\n\tthis.density = ( density !== undefined ) ? density : 0.00025;\n\n}\n\nFogExp2.prototype.isFogExp2 = true;\n\nFogExp2.prototype.clone = function () {\n\n\treturn new FogExp2( this.color, this.density );\n\n};\n\nFogExp2.prototype.toJSON = function ( /* meta */ ) {\n\n\treturn {\n\t\ttype: 'FogExp2',\n\t\tcolor: this.color.getHex(),\n\t\tdensity: this.density\n\t};\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Fog( color, near, far ) {\n\n\tthis.name = '';\n\n\tthis.color = new Color( color );\n\n\tthis.near = ( near !== undefined ) ? near : 1;\n\tthis.far = ( far !== undefined ) ? far : 1000;\n\n}\n\nFog.prototype.isFog = true;\n\nFog.prototype.clone = function () {\n\n\treturn new Fog( this.color, this.near, this.far );\n\n};\n\nFog.prototype.toJSON = function ( /* meta */ ) {\n\n\treturn {\n\t\ttype: 'Fog',\n\t\tcolor: this.color.getHex(),\n\t\tnear: this.near,\n\t\tfar: this.far\n\t};\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Scene() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Scene';\n\n\tthis.background = null;\n\tthis.fog = null;\n\tthis.overrideMaterial = null;\n\n\tthis.autoUpdate = true; // checked by the renderer\n\n}\n\nScene.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Scene,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tif ( this.background !== null ) data.object.background = this.background.toJSON( meta );\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InterleavedBuffer( array, stride ) {\n\n\tthis.array = array;\n\tthis.stride = stride;\n\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\tthis.dynamic = false;\n\tthis.updateRange = { offset: 0, count: - 1 };\n\n\tthis.version = 0;\n\n}\n\nObject.defineProperty( InterleavedBuffer.prototype, 'needsUpdate', {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\nObject.assign( InterleavedBuffer.prototype, {\n\n\tisInterleavedBuffer: true,\n\n\tonUploadCallback: function () {},\n\n\tsetArray: function ( array ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.count = array !== undefined ? array.length / this.stride : 0;\n\t\tthis.array = array;\n\n\t\treturn this;\n\n\t},\n\n\tsetDynamic: function ( value ) {\n\n\t\tthis.dynamic = value;\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.dynamic = source.dynamic;\n\n\t\treturn this;\n\n\t},\n\n\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tset: function ( value, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tonUpload: function ( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, normalized ) {\n\n\tthis.data = interleavedBuffer;\n\tthis.itemSize = itemSize;\n\tthis.offset = offset;\n\n\tthis.normalized = normalized === true;\n\n}\n\nObject.defineProperties( InterleavedBufferAttribute.prototype, {\n\n\tcount: {\n\n\t\tget: function () {\n\n\t\t\treturn this.data.count;\n\n\t\t}\n\n\t},\n\n\tarray: {\n\n\t\tget: function () {\n\n\t\t\treturn this.data.array;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( InterleavedBufferAttribute.prototype, {\n\n\tisInterleavedBufferAttribute: true,\n\n\tsetX: function ( index, x ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( index, y ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( index, z ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetW: function ( index, w ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tgetX: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset ];\n\n\t},\n\n\tgetY: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t},\n\n\tgetZ: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t},\n\n\tgetW: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t},\n\n\tsetXY: function ( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZ: function ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  map: new THREE.Texture( <Image> ),\n *  rotation: <float>,\n *  sizeAttenuation: <bool>\n * }\n */\n\nfunction SpriteMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'SpriteMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\tthis.map = null;\n\n\tthis.rotation = 0;\n\n\tthis.sizeAttenuation = true;\n\n\tthis.lights = false;\n\tthis.transparent = true;\n\n\tthis.setValues( parameters );\n\n}\n\nSpriteMaterial.prototype = Object.create( Material.prototype );\nSpriteMaterial.prototype.constructor = SpriteMaterial;\nSpriteMaterial.prototype.isSpriteMaterial = true;\n\nSpriteMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\tthis.map = source.map;\n\n\tthis.rotation = source.rotation;\n\n\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\treturn this;\n\n};\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar geometry;\n\nfunction Sprite( material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Sprite';\n\n\tif ( geometry === undefined ) {\n\n\t\tgeometry = new BufferGeometry();\n\n\t\tvar float32Array = new Float32Array( [\n\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t] );\n\n\t\tvar interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\tgeometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\tgeometry.addAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\tgeometry.addAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t}\n\n\tthis.geometry = geometry;\n\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n\tthis.center = new Vector2( 0.5, 0.5 );\n\n}\n\nSprite.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Sprite,\n\n\tisSprite: true,\n\n\traycast: ( function () {\n\n\t\tvar intersectPoint = new Vector3();\n\t\tvar worldScale = new Vector3();\n\t\tvar mvPosition = new Vector3();\n\n\t\tvar alignedPosition = new Vector2();\n\t\tvar rotatedPosition = new Vector2();\n\t\tvar viewWorldMatrix = new Matrix4();\n\n\t\tvar vA = new Vector3();\n\t\tvar vB = new Vector3();\n\t\tvar vC = new Vector3();\n\n\t\tvar uvA = new Vector2();\n\t\tvar uvB = new Vector2();\n\t\tvar uvC = new Vector2();\n\n\t\tfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t\t\t// compute position in camera space\n\t\t\talignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t\t\t// to check if rotation is not zero\n\t\t\tif ( sin !== undefined ) {\n\n\t\t\t\trotatedPosition.x = ( cos * alignedPosition.x ) - ( sin * alignedPosition.y );\n\t\t\t\trotatedPosition.y = ( sin * alignedPosition.x ) + ( cos * alignedPosition.y );\n\n\t\t\t} else {\n\n\t\t\t\trotatedPosition.copy( alignedPosition );\n\n\t\t\t}\n\n\n\t\t\tvertexPosition.copy( mvPosition );\n\t\t\tvertexPosition.x += rotatedPosition.x;\n\t\t\tvertexPosition.y += rotatedPosition.y;\n\n\t\t\t// transform to world space\n\t\t\tvertexPosition.applyMatrix4( viewWorldMatrix );\n\n\t\t}\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tworldScale.setFromMatrixScale( this.matrixWorld );\n\t\t\tviewWorldMatrix.getInverse( this.modelViewMatrix ).premultiply( this.matrixWorld );\n\t\t\tmvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\t\tvar rotation = this.material.rotation;\n\t\t\tvar sin, cos;\n\t\t\tif ( rotation !== 0 ) {\n\n\t\t\t\tcos = Math.cos( rotation );\n\t\t\t\tsin = Math.sin( rotation );\n\n\t\t\t}\n\n\t\t\tvar center = this.center;\n\n\t\t\ttransformVertex( vA.set( - 0.5, - 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\n\t\t\ttransformVertex( vB.set( 0.5, - 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\n\t\t\ttransformVertex( vC.set( 0.5, 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\n\n\t\t\tuvA.set( 0, 0 );\n\t\t\tuvB.set( 1, 0 );\n\t\t\tuvC.set( 1, 1 );\n\n\t\t\t// check first triangle\n\t\t\tvar intersect = raycaster.ray.intersectTriangle( vA, vB, vC, false, intersectPoint );\n\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\t// check second triangle\n\t\t\t\ttransformVertex( vB.set( - 0.5, 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\n\t\t\t\tuvB.set( 0, 1 );\n\n\t\t\t\tintersect = raycaster.ray.intersectTriangle( vA, vC, vB, false, intersectPoint );\n\t\t\t\tif ( intersect === null ) {\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\tintersects.push( {\n\n\t\t\t\tdistance: distance,\n\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\tuv: Triangle.getUV( intersectPoint, vA, vB, vC, uvA, uvB, uvC, new Vector2() ),\n\t\t\t\tface: null,\n\t\t\t\tobject: this\n\n\t\t\t} );\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.material ).copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\treturn this;\n\n\t}\n\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LOD() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'LOD';\n\n\tObject.defineProperties( this, {\n\t\tlevels: {\n\t\t\tenumerable: true,\n\t\t\tvalue: []\n\t\t}\n\t} );\n\n}\n\nLOD.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: LOD,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source, false );\n\n\t\tvar levels = source.levels;\n\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tvar level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\taddLevel: function ( object, distance ) {\n\n\t\tif ( distance === undefined ) distance = 0;\n\n\t\tdistance = Math.abs( distance );\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, object: object } );\n\n\t\tthis.add( object );\n\n\t},\n\n\tgetObjectForDistance: function ( distance ) {\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\tif ( distance < levels[ i ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn levels[ i - 1 ].object;\n\n\t},\n\n\traycast: ( function () {\n\n\t\tvar matrixPosition = new Vector3();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t};\n\n\t}() ),\n\n\tupdate: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function update( camera ) {\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tif ( levels.length > 1 ) {\n\n\t\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\tvar distance = v1.distanceTo( v2 );\n\n\t\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( distance >= levels[ i ].distance ) {\n\n\t\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.levels = [];\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tvar level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author michael guerrero / http://realitymeltdown.com\n * @author ikerr / http://verold.com\n */\n\nfunction Skeleton( bones, boneInverses ) {\n\n\t// copy the bone array\n\n\tbones = bones || [];\n\n\tthis.bones = bones.slice( 0 );\n\tthis.boneMatrices = new Float32Array( this.bones.length * 16 );\n\n\t// use the supplied bone inverses or calculate the inverses\n\n\tif ( boneInverses === undefined ) {\n\n\t\tthis.calculateInverses();\n\n\t} else {\n\n\t\tif ( this.bones.length === boneInverses.length ) {\n\n\t\t\tthis.boneInverses = boneInverses.slice( 0 );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Skeleton boneInverses is the wrong length.' );\n\n\t\t\tthis.boneInverses = [];\n\n\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nObject.assign( Skeleton.prototype, {\n\n\tcalculateInverses: function () {\n\n\t\tthis.boneInverses = [];\n\n\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tvar inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.getInverse( this.bones[ i ].matrixWorld );\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t},\n\n\tpose: function () {\n\n\t\tvar bone, i, il;\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tbone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tbone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tupdate: ( function () {\n\n\t\tvar offsetMatrix = new Matrix4();\n\t\tvar identityMatrix = new Matrix4();\n\n\t\treturn function update() {\n\n\t\t\tvar bones = this.bones;\n\t\t\tvar boneInverses = this.boneInverses;\n\t\t\tvar boneMatrices = this.boneMatrices;\n\t\t\tvar boneTexture = this.boneTexture;\n\n\t\t\t// flatten bone matrices to array\n\n\t\t\tfor ( var i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t\t// compute the offset between the current and the original transform\n\n\t\t\t\tvar matrix = bones[ i ] ? bones[ i ].matrixWorld : identityMatrix;\n\n\t\t\t\toffsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t\toffsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t\t}\n\n\t\t\tif ( boneTexture !== undefined ) {\n\n\t\t\t\tboneTexture.needsUpdate = true;\n\n\t\t\t}\n\n\t\t};\n\n\t} )(),\n\n\tclone: function () {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t},\n\n\tgetBoneByName: function ( name ) {\n\n\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tvar bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\n\nfunction Bone() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Bone';\n\n}\n\nBone.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Bone,\n\n\tisBone: true\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\n\nfunction SkinnedMesh( geometry, material ) {\n\n\tMesh.call( this, geometry, material );\n\n\tthis.type = 'SkinnedMesh';\n\n\tthis.bindMode = 'attached';\n\tthis.bindMatrix = new Matrix4();\n\tthis.bindMatrixInverse = new Matrix4();\n\n\tvar bones = this.initBones();\n\tvar skeleton = new Skeleton( bones );\n\n\tthis.bind( skeleton, this.matrixWorld );\n\n\tthis.normalizeSkinWeights();\n\n}\n\nSkinnedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {\n\n\tconstructor: SkinnedMesh,\n\n\tisSkinnedMesh: true,\n\n\tinitBones: function () {\n\n\t\tvar bones = [], bone, gbone;\n\t\tvar i, il;\n\n\t\tif ( this.geometry && this.geometry.bones !== undefined ) {\n\n\t\t\t// first, create array of 'Bone' objects from geometry data\n\n\t\t\tfor ( i = 0, il = this.geometry.bones.length; i < il; i ++ ) {\n\n\t\t\t\tgbone = this.geometry.bones[ i ];\n\n\t\t\t\t// create new 'Bone' object\n\n\t\t\t\tbone = new Bone();\n\t\t\t\tbones.push( bone );\n\n\t\t\t\t// apply values\n\n\t\t\t\tbone.name = gbone.name;\n\t\t\t\tbone.position.fromArray( gbone.pos );\n\t\t\t\tbone.quaternion.fromArray( gbone.rotq );\n\t\t\t\tif ( gbone.scl !== undefined ) bone.scale.fromArray( gbone.scl );\n\n\t\t\t}\n\n\t\t\t// second, create bone hierarchy\n\n\t\t\tfor ( i = 0, il = this.geometry.bones.length; i < il; i ++ ) {\n\n\t\t\t\tgbone = this.geometry.bones[ i ];\n\n\t\t\t\tif ( ( gbone.parent !== - 1 ) && ( gbone.parent !== null ) && ( bones[ gbone.parent ] !== undefined ) ) {\n\n\t\t\t\t\t// subsequent bones in the hierarchy\n\n\t\t\t\t\tbones[ gbone.parent ].add( bones[ i ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// topmost bone, immediate child of the skinned mesh\n\n\t\t\t\t\tthis.add( bones[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// now the bones are part of the scene graph and children of the skinned mesh.\n\t\t// let's update the corresponding matrices\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\treturn bones;\n\n\t},\n\n\tbind: function ( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.getInverse( bindMatrix );\n\n\t},\n\n\tpose: function () {\n\n\t\tthis.skeleton.pose();\n\n\t},\n\n\tnormalizeSkinWeights: function () {\n\n\t\tvar scale, i;\n\n\t\tif ( this.geometry && this.geometry.isGeometry ) {\n\n\t\t\tfor ( i = 0; i < this.geometry.skinWeights.length; i ++ ) {\n\n\t\t\t\tvar sw = this.geometry.skinWeights[ i ];\n\n\t\t\t\tscale = 1.0 / sw.manhattanLength();\n\n\t\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\t\tsw.multiplyScalar( scale );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsw.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( this.geometry && this.geometry.isBufferGeometry ) {\n\n\t\t\tvar vec = new Vector4();\n\n\t\t\tvar skinWeight = this.geometry.attributes.skinWeight;\n\n\t\t\tfor ( i = 0; i < skinWeight.count; i ++ ) {\n\n\t\t\t\tvec.x = skinWeight.getX( i );\n\t\t\t\tvec.y = skinWeight.getY( i );\n\t\t\t\tvec.z = skinWeight.getZ( i );\n\t\t\t\tvec.w = skinWeight.getW( i );\n\n\t\t\t\tscale = 1.0 / vec.manhattanLength();\n\n\t\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\t\tvec.multiplyScalar( scale );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvec.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t\t}\n\n\t\t\t\tskinWeight.setXYZW( i, vec.x, vec.y, vec.z, vec.w );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tMesh.prototype.updateMatrixWorld.call( this, force );\n\n\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\n\n\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *  linecap: \"round\",\n *  linejoin: \"round\"\n * }\n */\n\nfunction LineBasicMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'LineBasicMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\n\tthis.linewidth = 1;\n\tthis.linecap = 'round';\n\tthis.linejoin = 'round';\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nLineBasicMaterial.prototype = Object.create( Material.prototype );\nLineBasicMaterial.prototype.constructor = LineBasicMaterial;\n\nLineBasicMaterial.prototype.isLineBasicMaterial = true;\n\nLineBasicMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.linewidth = source.linewidth;\n\tthis.linecap = source.linecap;\n\tthis.linejoin = source.linejoin;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Line( geometry, material, mode ) {\n\n\tif ( mode === 1 ) {\n\n\t\tconsole.error( 'THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead.' );\n\n\t}\n\n\tObject3D.call( this );\n\n\tthis.type = 'Line';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new LineBasicMaterial( { color: Math.random() * 0xffffff } );\n\n}\n\nLine.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Line,\n\n\tisLine: true,\n\n\tcomputeLineDistances: ( function () {\n\n\t\tvar start = new Vector3();\n\t\tvar end = new Vector3();\n\n\t\treturn function computeLineDistances() {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t// we assume non-indexed geometry\n\n\t\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\t\tvar positionAttribute = geometry.attributes.position;\n\t\t\t\t\tvar lineDistances = [ 0 ];\n\n\t\t\t\t\tfor ( var i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t\tstart.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t\t\tend.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\t\t\tlineDistances[ i ] += start.distanceTo( end );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.addAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar lineDistances = geometry.lineDistances;\n\n\t\t\t\tlineDistances[ 0 ] = 0;\n\n\t\t\t\tfor ( var i = 1, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i ] += vertices[ i - 1 ].distanceTo( vertices[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}() ),\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar precision = raycaster.linePrecision;\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\t\t\tsphere.radius += precision;\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\tvar localPrecision = precision / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\t\tvar localPrecisionSq = localPrecision * localPrecision;\n\n\t\t\tvar vStart = new Vector3();\n\t\t\tvar vEnd = new Vector3();\n\t\t\tvar interSegment = new Vector3();\n\t\t\tvar interRay = new Vector3();\n\t\t\tvar step = ( this && this.isLineSegments ) ? 2 : 1;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\n\n\t\t\t\t\t\tvar a = indices[ i ];\n\t\t\t\t\t\tvar b = indices[ i + 1 ];\n\n\t\t\t\t\t\tvStart.fromArray( positions, a * 3 );\n\t\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\n\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > localPrecisionSq ) continue;\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\n\n\t\t\t\t\t\tvStart.fromArray( positions, 3 * i );\n\t\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\n\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > localPrecisionSq ) continue;\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar nbVertices = vertices.length;\n\n\t\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\n\n\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\n\n\t\t\t\t\tif ( distSq > localPrecisionSq ) continue;\n\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LineSegments( geometry, material ) {\n\n\tLine.call( this, geometry, material );\n\n\tthis.type = 'LineSegments';\n\n}\n\nLineSegments.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\tconstructor: LineSegments,\n\n\tisLineSegments: true,\n\n\tcomputeLineDistances: ( function () {\n\n\t\tvar start = new Vector3();\n\t\tvar end = new Vector3();\n\n\t\treturn function computeLineDistances() {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t// we assume non-indexed geometry\n\n\t\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\t\tvar positionAttribute = geometry.attributes.position;\n\t\t\t\t\tvar lineDistances = [];\n\n\t\t\t\t\tfor ( var i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t\t\tstart.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t\t\tend.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + start.distanceTo( end );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.addAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar lineDistances = geometry.lineDistances;\n\n\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i += 2 ) {\n\n\t\t\t\t\tstart.copy( vertices[ i ] );\n\t\t\t\t\tend.copy( vertices[ i + 1 ] );\n\n\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + start.distanceTo( end );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}() )\n\n} );\n\n/**\n * @author mgreter / http://github.com/mgreter\n */\n\nfunction LineLoop( geometry, material ) {\n\n\tLine.call( this, geometry, material );\n\n\tthis.type = 'LineLoop';\n\n}\n\nLineLoop.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\tconstructor: LineLoop,\n\n\tisLineLoop: true,\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  size: <float>,\n *  sizeAttenuation: <bool>\n *\n *  morphTargets: <bool>\n * }\n */\n\nfunction PointsMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'PointsMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\n\tthis.map = null;\n\n\tthis.size = 1;\n\tthis.sizeAttenuation = true;\n\n\tthis.morphTargets = false;\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nPointsMaterial.prototype = Object.create( Material.prototype );\nPointsMaterial.prototype.constructor = PointsMaterial;\n\nPointsMaterial.prototype.isPointsMaterial = true;\n\nPointsMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.size = source.size;\n\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\tthis.morphTargets = source.morphTargets;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Points( geometry, material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Points';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new PointsMaterial( { color: Math.random() * 0xffffff } );\n\n}\n\nPoints.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Points,\n\n\tisPoints: true,\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar object = this;\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\t\t\tvar threshold = raycaster.params.Points.threshold;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\t\t\tsphere.radius += threshold;\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\t\tvar localThresholdSq = localThreshold * localThreshold;\n\t\t\tvar position = new Vector3();\n\t\t\tvar intersectPoint = new Vector3();\n\n\t\t\tfunction testPoint( point, index ) {\n\n\t\t\t\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\n\n\t\t\t\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\t\t\t\tray.closestPointToPoint( point, intersectPoint );\n\t\t\t\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\t\t\tindex: index,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tobject: object\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar a = indices[ i ];\n\n\t\t\t\t\t\tposition.fromArray( positions, a * 3 );\n\n\t\t\t\t\t\ttestPoint( position, a );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\n\n\t\t\t\t\t\tposition.fromArray( positions, i * 3 );\n\n\t\t\t\t\t\ttestPoint( position, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\ttestPoint( vertices[ i ], i );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction VideoTexture( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\tTexture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.generateMipmaps = false;\n\n}\n\nVideoTexture.prototype = Object.assign( Object.create( Texture.prototype ), {\n\n\tconstructor: VideoTexture,\n\n\tisVideoTexture: true,\n\n\tupdate: function () {\n\n\t\tvar video = this.image;\n\n\t\tif ( video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction CompressedTexture( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.image = { width: width, height: height };\n\tthis.mipmaps = mipmaps;\n\n\t// no flipping for cube textures\n\t// (also flipping doesn't work for compressed textures )\n\n\tthis.flipY = false;\n\n\t// can't generate mipmaps for compressed textures\n\t// mips must be embedded in DDS files\n\n\tthis.generateMipmaps = false;\n\n}\n\nCompressedTexture.prototype = Object.create( Texture.prototype );\nCompressedTexture.prototype.constructor = CompressedTexture;\n\nCompressedTexture.prototype.isCompressedTexture = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction CanvasTexture( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\tTexture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.needsUpdate = true;\n\n}\n\nCanvasTexture.prototype = Object.create( Texture.prototype );\nCanvasTexture.prototype.constructor = CanvasTexture;\nCanvasTexture.prototype.isCanvasTexture = true;\n\n/**\n * @author Matt DesLauriers / @mattdesl\n * @author atix / arthursilber.de\n */\n\nfunction DepthTexture( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\tformat = format !== undefined ? format : DepthFormat;\n\n\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t}\n\n\tif ( type === undefined && format === DepthFormat ) type = UnsignedShortType;\n\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.image = { width: width, height: height };\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\tthis.flipY = false;\n\tthis.generateMipmaps\t= false;\n\n}\n\nDepthTexture.prototype = Object.create( Texture.prototype );\nDepthTexture.prototype.constructor = DepthTexture;\nDepthTexture.prototype.isDepthTexture = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WireframeGeometry( geometry ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'WireframeGeometry';\n\n\t// buffer\n\n\tvar vertices = [];\n\n\t// helper variables\n\n\tvar i, j, l, o, ol;\n\tvar edge = [ 0, 0 ], edges = {}, e, edge1, edge2;\n\tvar key, keys = [ 'a', 'b', 'c' ];\n\tvar vertex;\n\n\t// different logic for Geometry and BufferGeometry\n\n\tif ( geometry && geometry.isGeometry ) {\n\n\t\t// create a data structure that contains all edges without duplicates\n\n\t\tvar faces = geometry.faces;\n\n\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices\n\n\t\tfor ( key in edges ) {\n\n\t\t\te = edges[ key ];\n\n\t\t\tvertex = geometry.vertices[ e.index1 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\tvertex = geometry.vertices[ e.index2 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t} else if ( geometry && geometry.isBufferGeometry ) {\n\n\t\tvar position, indices, groups;\n\t\tvar group, start, count;\n\t\tvar index1, index2;\n\n\t\tvertex = new Vector3();\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\t// indexed BufferGeometry\n\n\t\t\tposition = geometry.attributes.position;\n\t\t\tindices = geometry.index;\n\t\t\tgroups = geometry.groups;\n\n\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t}\n\n\t\t\t// create a data structure that contains all eges without duplicates\n\n\t\t\tfor ( o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\tgroup = groups[ o ];\n\n\t\t\t\tstart = group.start;\n\t\t\t\tcount = group.count;\n\n\t\t\t\tfor ( i = start, l = ( start + count ); i < l; i += 3 ) {\n\n\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\tedge1 = indices.getX( i + j );\n\t\t\t\t\t\tedge2 = indices.getX( i + ( j + 1 ) % 3 );\n\t\t\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// generate vertices\n\n\t\t\tfor ( key in edges ) {\n\n\t\t\t\te = edges[ key ];\n\n\t\t\t\tvertex.fromBufferAttribute( position, e.index1 );\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\tvertex.fromBufferAttribute( position, e.index2 );\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// non-indexed BufferGeometry\n\n\t\t\tposition = geometry.attributes.position;\n\n\t\t\tfor ( i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\tindex1 = 3 * i + j;\n\t\t\t\t\tvertex.fromBufferAttribute( position, index1 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\tindex2 = 3 * i + ( ( j + 1 ) % 3 );\n\t\t\t\t\tvertex.fromBufferAttribute( position, index2 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n}\n\nWireframeGeometry.prototype = Object.create( BufferGeometry.prototype );\nWireframeGeometry.prototype.constructor = WireframeGeometry;\n\n/**\n * @author zz85 / https://github.com/zz85\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Parametric Surfaces Geometry\n * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\n */\n\n// ParametricGeometry\n\nfunction ParametricGeometry( func, slices, stacks ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ParametricGeometry';\n\n\tthis.parameters = {\n\t\tfunc: func,\n\t\tslices: slices,\n\t\tstacks: stacks\n\t};\n\n\tthis.fromBufferGeometry( new ParametricBufferGeometry( func, slices, stacks ) );\n\tthis.mergeVertices();\n\n}\n\nParametricGeometry.prototype = Object.create( Geometry.prototype );\nParametricGeometry.prototype.constructor = ParametricGeometry;\n\n// ParametricBufferGeometry\n\nfunction ParametricBufferGeometry( func, slices, stacks ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ParametricBufferGeometry';\n\n\tthis.parameters = {\n\t\tfunc: func,\n\t\tslices: slices,\n\t\tstacks: stacks\n\t};\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\tvar EPS = 0.00001;\n\n\tvar normal = new Vector3();\n\n\tvar p0 = new Vector3(), p1 = new Vector3();\n\tvar pu = new Vector3(), pv = new Vector3();\n\n\tvar i, j;\n\n\tif ( func.length < 3 ) {\n\n\t\tconsole.error( 'THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.' );\n\n\t}\n\n\t// generate vertices, normals and uvs\n\n\tvar sliceCount = slices + 1;\n\n\tfor ( i = 0; i <= stacks; i ++ ) {\n\n\t\tvar v = i / stacks;\n\n\t\tfor ( j = 0; j <= slices; j ++ ) {\n\n\t\t\tvar u = j / slices;\n\n\t\t\t// vertex\n\n\t\t\tfunc( u, v, p0 );\n\t\t\tvertices.push( p0.x, p0.y, p0.z );\n\n\t\t\t// normal\n\n\t\t\t// approximate tangent vectors via finite differences\n\n\t\t\tif ( u - EPS >= 0 ) {\n\n\t\t\t\tfunc( u - EPS, v, p1 );\n\t\t\t\tpu.subVectors( p0, p1 );\n\n\t\t\t} else {\n\n\t\t\t\tfunc( u + EPS, v, p1 );\n\t\t\t\tpu.subVectors( p1, p0 );\n\n\t\t\t}\n\n\t\t\tif ( v - EPS >= 0 ) {\n\n\t\t\t\tfunc( u, v - EPS, p1 );\n\t\t\t\tpv.subVectors( p0, p1 );\n\n\t\t\t} else {\n\n\t\t\t\tfunc( u, v + EPS, p1 );\n\t\t\t\tpv.subVectors( p1, p0 );\n\n\t\t\t}\n\n\t\t\t// cross product of tangent vectors returns surface normal\n\n\t\t\tnormal.crossVectors( pu, pv ).normalize();\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( u, v );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( i = 0; i < stacks; i ++ ) {\n\n\t\tfor ( j = 0; j < slices; j ++ ) {\n\n\t\t\tvar a = i * sliceCount + j;\n\t\t\tvar b = i * sliceCount + j + 1;\n\t\t\tvar c = ( i + 1 ) * sliceCount + j + 1;\n\t\t\tvar d = ( i + 1 ) * sliceCount + j;\n\n\t\t\t// faces one and two\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nParametricBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nParametricBufferGeometry.prototype.constructor = ParametricBufferGeometry;\n\n/**\n * @author clockworkgeek / https://github.com/clockworkgeek\n * @author timothypratley / https://github.com/timothypratley\n * @author WestLangley / http://github.com/WestLangley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// PolyhedronGeometry\n\nfunction PolyhedronGeometry( vertices, indices, radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'PolyhedronGeometry';\n\n\tthis.parameters = {\n\t\tvertices: vertices,\n\t\tindices: indices,\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new PolyhedronBufferGeometry( vertices, indices, radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nPolyhedronGeometry.prototype = Object.create( Geometry.prototype );\nPolyhedronGeometry.prototype.constructor = PolyhedronGeometry;\n\n// PolyhedronBufferGeometry\n\nfunction PolyhedronBufferGeometry( vertices, indices, radius, detail ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'PolyhedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tvertices: vertices,\n\t\tindices: indices,\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tradius = radius || 1;\n\tdetail = detail || 0;\n\n\t// default buffer data\n\n\tvar vertexBuffer = [];\n\tvar uvBuffer = [];\n\n\t// the subdivision creates the vertex buffer data\n\n\tsubdivide( detail );\n\n\t// all vertices should lie on a conceptual sphere with a given radius\n\n\tappplyRadius( radius );\n\n\t// finally, create the uv data\n\n\tgenerateUVs();\n\n\t// build non-indexed geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\tif ( detail === 0 ) {\n\n\t\tthis.computeVertexNormals(); // flat normals\n\n\t} else {\n\n\t\tthis.normalizeNormals(); // smooth normals\n\n\t}\n\n\t// helper functions\n\n\tfunction subdivide( detail ) {\n\n\t\tvar a = new Vector3();\n\t\tvar b = new Vector3();\n\t\tvar c = new Vector3();\n\n\t\t// iterate over all faces and apply a subdivison with the given detail value\n\n\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t// get the vertices of the face\n\n\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t// perform subdivision\n\n\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t}\n\n\t}\n\n\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\tvar cols = Math.pow( 2, detail );\n\n\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\tvar v = [];\n\n\t\tvar i, j;\n\n\t\t// construct all of the vertices for this subdivision\n\n\t\tfor ( i = 0; i <= cols; i ++ ) {\n\n\t\t\tv[ i ] = [];\n\n\t\t\tvar aj = a.clone().lerp( c, i / cols );\n\t\t\tvar bj = b.clone().lerp( c, i / cols );\n\n\t\t\tvar rows = cols - i;\n\n\t\t\tfor ( j = 0; j <= rows; j ++ ) {\n\n\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// construct all of the faces\n\n\t\tfor ( i = 0; i < cols; i ++ ) {\n\n\t\t\tfor ( j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\tvar k = Math.floor( j / 2 );\n\n\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction appplyRadius( radius ) {\n\n\t\tvar vertex = new Vector3();\n\n\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t}\n\n\t}\n\n\tfunction generateUVs() {\n\n\t\tvar vertex = new Vector3();\n\n\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\tvar u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\tvar v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t}\n\n\t\tcorrectUVs();\n\n\t\tcorrectSeam();\n\n\t}\n\n\tfunction correctSeam() {\n\n\t\t// handle case when face straddles the seam, see #3269\n\n\t\tfor ( var i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t// uv data of a single face\n\n\t\t\tvar x0 = uvBuffer[ i + 0 ];\n\t\t\tvar x1 = uvBuffer[ i + 2 ];\n\t\t\tvar x2 = uvBuffer[ i + 4 ];\n\n\t\t\tvar max = Math.max( x0, x1, x2 );\n\t\t\tvar min = Math.min( x0, x1, x2 );\n\n\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction pushVertex( vertex ) {\n\n\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t}\n\n\tfunction getVertexByIndex( index, vertex ) {\n\n\t\tvar stride = index * 3;\n\n\t\tvertex.x = vertices[ stride + 0 ];\n\t\tvertex.y = vertices[ stride + 1 ];\n\t\tvertex.z = vertices[ stride + 2 ];\n\n\t}\n\n\tfunction correctUVs() {\n\n\t\tvar a = new Vector3();\n\t\tvar b = new Vector3();\n\t\tvar c = new Vector3();\n\n\t\tvar centroid = new Vector3();\n\n\t\tvar uvA = new Vector2();\n\t\tvar uvB = new Vector2();\n\t\tvar uvC = new Vector2();\n\n\t\tfor ( var i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\tvar azi = azimuth( centroid );\n\n\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t}\n\n\t}\n\n\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t}\n\n\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t}\n\n\t}\n\n\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\tfunction azimuth( vector ) {\n\n\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t}\n\n\n\t// Angle above the XZ plane.\n\n\tfunction inclination( vector ) {\n\n\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t}\n\n}\n\nPolyhedronBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nPolyhedronBufferGeometry.prototype.constructor = PolyhedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// TetrahedronGeometry\n\nfunction TetrahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TetrahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new TetrahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nTetrahedronGeometry.prototype = Object.create( Geometry.prototype );\nTetrahedronGeometry.prototype.constructor = TetrahedronGeometry;\n\n// TetrahedronBufferGeometry\n\nfunction TetrahedronBufferGeometry( radius, detail ) {\n\n\tvar vertices = [\n\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t];\n\n\tvar indices = [\n\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'TetrahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nTetrahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nTetrahedronBufferGeometry.prototype.constructor = TetrahedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// OctahedronGeometry\n\nfunction OctahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'OctahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new OctahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nOctahedronGeometry.prototype = Object.create( Geometry.prototype );\nOctahedronGeometry.prototype.constructor = OctahedronGeometry;\n\n// OctahedronBufferGeometry\n\nfunction OctahedronBufferGeometry( radius, detail ) {\n\n\tvar vertices = [\n\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t];\n\n\tvar indices = [\n\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t1, 3, 4,\t1, 4, 2\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'OctahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nOctahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nOctahedronBufferGeometry.prototype.constructor = OctahedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// IcosahedronGeometry\n\nfunction IcosahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'IcosahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new IcosahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nIcosahedronGeometry.prototype = Object.create( Geometry.prototype );\nIcosahedronGeometry.prototype.constructor = IcosahedronGeometry;\n\n// IcosahedronBufferGeometry\n\nfunction IcosahedronBufferGeometry( radius, detail ) {\n\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\tvar vertices = [\n\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t 0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t t, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t];\n\n\tvar indices = [\n\t\t 0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t 1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t 3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t 4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'IcosahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nIcosahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nIcosahedronBufferGeometry.prototype.constructor = IcosahedronBufferGeometry;\n\n/**\n * @author Abe Pazos / https://hamoid.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// DodecahedronGeometry\n\nfunction DodecahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'DodecahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new DodecahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nDodecahedronGeometry.prototype = Object.create( Geometry.prototype );\nDodecahedronGeometry.prototype.constructor = DodecahedronGeometry;\n\n// DodecahedronBufferGeometry\n\nfunction DodecahedronBufferGeometry( radius, detail ) {\n\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\tvar r = 1 / t;\n\n\tvar vertices = [\n\n\t\t// (±1, ±1, ±1)\n\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t// (0, ±1/φ, ±φ)\n\t\t 0, - r, - t, 0, - r, t,\n\t\t 0, r, - t, 0, r, t,\n\n\t\t// (±1/φ, ±φ, 0)\n\t\t- r, - t, 0, - r, t, 0,\n\t\t r, - t, 0, r, t, 0,\n\n\t\t// (±φ, 0, ±1/φ)\n\t\t- t, 0, - r, t, 0, - r,\n\t\t- t, 0, r, t, 0, r\n\t];\n\n\tvar indices = [\n\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'DodecahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nDodecahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nDodecahedronBufferGeometry.prototype.constructor = DodecahedronBufferGeometry;\n\n/**\n * @author oosmoxiecode / https://github.com/oosmoxiecode\n * @author WestLangley / https://github.com/WestLangley\n * @author zz85 / https://github.com/zz85\n * @author miningold / https://github.com/miningold\n * @author jonobr1 / https://github.com/jonobr1\n * @author Mugen87 / https://github.com/Mugen87\n *\n */\n\n// TubeGeometry\n\nfunction TubeGeometry( path, tubularSegments, radius, radialSegments, closed, taper ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TubeGeometry';\n\n\tthis.parameters = {\n\t\tpath: path,\n\t\ttubularSegments: tubularSegments,\n\t\tradius: radius,\n\t\tradialSegments: radialSegments,\n\t\tclosed: closed\n\t};\n\n\tif ( taper !== undefined ) console.warn( 'THREE.TubeGeometry: taper has been removed.' );\n\n\tvar bufferGeometry = new TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed );\n\n\t// expose internals\n\n\tthis.tangents = bufferGeometry.tangents;\n\tthis.normals = bufferGeometry.normals;\n\tthis.binormals = bufferGeometry.binormals;\n\n\t// create geometry\n\n\tthis.fromBufferGeometry( bufferGeometry );\n\tthis.mergeVertices();\n\n}\n\nTubeGeometry.prototype = Object.create( Geometry.prototype );\nTubeGeometry.prototype.constructor = TubeGeometry;\n\n// TubeBufferGeometry\n\nfunction TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TubeBufferGeometry';\n\n\tthis.parameters = {\n\t\tpath: path,\n\t\ttubularSegments: tubularSegments,\n\t\tradius: radius,\n\t\tradialSegments: radialSegments,\n\t\tclosed: closed\n\t};\n\n\ttubularSegments = tubularSegments || 64;\n\tradius = radius || 1;\n\tradialSegments = radialSegments || 8;\n\tclosed = closed || false;\n\n\tvar frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t// expose internals\n\n\tthis.tangents = frames.tangents;\n\tthis.normals = frames.normals;\n\tthis.binormals = frames.binormals;\n\n\t// helper variables\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\tvar uv = new Vector2();\n\tvar P = new Vector3();\n\n\tvar i, j;\n\n\t// buffer\n\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\tvar indices = [];\n\n\t// create buffer data\n\n\tgenerateBufferData();\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// functions\n\n\tfunction generateBufferData() {\n\n\t\tfor ( i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\tgenerateSegment( i );\n\n\t\t}\n\n\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t// at the regular position on the given path\n\t\t//\n\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t// uvs are generated in a separate function.\n\t\t// this makes it easy compute correct values for closed geometries\n\n\t\tgenerateUVs();\n\n\t\t// finally create faces\n\n\t\tgenerateIndices();\n\n\t}\n\n\tfunction generateSegment( i ) {\n\n\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t// retrieve corresponding normal and binormal\n\n\t\tvar N = frames.normals[ i ];\n\t\tvar B = frames.binormals[ i ];\n\n\t\t// generate normals and vertices for the current segment\n\n\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\tvar sin = Math.sin( v );\n\t\t\tvar cos = - Math.cos( v );\n\n\t\t\t// normal\n\n\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\tnormal.normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t}\n\n\tfunction generateIndices() {\n\n\t\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction generateUVs() {\n\n\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nTubeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTubeBufferGeometry.prototype.constructor = TubeBufferGeometry;\n\n/**\n * @author oosmoxiecode\n * @author Mugen87 / https://github.com/Mugen87\n *\n * based on http://www.blackpawn.com/texts/pqtorus/\n */\n\n// TorusKnotGeometry\n\nfunction TorusKnotGeometry( radius, tube, tubularSegments, radialSegments, p, q, heightScale ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TorusKnotGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\ttubularSegments: tubularSegments,\n\t\tradialSegments: radialSegments,\n\t\tp: p,\n\t\tq: q\n\t};\n\n\tif ( heightScale !== undefined ) console.warn( 'THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.' );\n\n\tthis.fromBufferGeometry( new TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) );\n\tthis.mergeVertices();\n\n}\n\nTorusKnotGeometry.prototype = Object.create( Geometry.prototype );\nTorusKnotGeometry.prototype.constructor = TorusKnotGeometry;\n\n// TorusKnotBufferGeometry\n\nfunction TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TorusKnotBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\ttubularSegments: tubularSegments,\n\t\tradialSegments: radialSegments,\n\t\tp: p,\n\t\tq: q\n\t};\n\n\tradius = radius || 1;\n\ttube = tube || 0.4;\n\ttubularSegments = Math.floor( tubularSegments ) || 64;\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\tp = p || 2;\n\tq = q || 3;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar i, j;\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\tvar P1 = new Vector3();\n\tvar P2 = new Vector3();\n\n\tvar B = new Vector3();\n\tvar T = new Vector3();\n\tvar N = new Vector3();\n\n\t// generate vertices, normals and uvs\n\n\tfor ( i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n\n\t\tvar u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t// calculate orthonormal basis\n\n\t\tT.subVectors( P2, P1 );\n\t\tN.addVectors( P2, P1 );\n\t\tB.crossVectors( T, N );\n\t\tN.crossVectors( B, T );\n\n\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\tB.normalize();\n\t\tN.normalize();\n\n\t\tfor ( j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\t\t\tvar cx = - tube * Math.cos( v );\n\t\t\tvar cy = tube * Math.sin( v );\n\n\t\t\t// now calculate the final vertex position.\n\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( i / tubularSegments );\n\t\t\tuvs.push( j / radialSegments );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t// indices\n\n\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// this function calculates the current position on the torus curve\n\n\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\tvar cu = Math.cos( u );\n\t\tvar su = Math.sin( u );\n\t\tvar quOverP = q / p * u;\n\t\tvar cs = Math.cos( quOverP );\n\n\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t}\n\n}\n\nTorusKnotBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTorusKnotBufferGeometry.prototype.constructor = TorusKnotBufferGeometry;\n\n/**\n * @author oosmoxiecode\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// TorusGeometry\n\nfunction TorusGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TorusGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\tradialSegments: radialSegments,\n\t\ttubularSegments: tubularSegments,\n\t\tarc: arc\n\t};\n\n\tthis.fromBufferGeometry( new TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) );\n\tthis.mergeVertices();\n\n}\n\nTorusGeometry.prototype = Object.create( Geometry.prototype );\nTorusGeometry.prototype.constructor = TorusGeometry;\n\n// TorusBufferGeometry\n\nfunction TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TorusBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\tradialSegments: radialSegments,\n\t\ttubularSegments: tubularSegments,\n\t\tarc: arc\n\t};\n\n\tradius = radius || 1;\n\ttube = tube || 0.4;\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\ttubularSegments = Math.floor( tubularSegments ) || 6;\n\tarc = arc || Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar center = new Vector3();\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\tvar j, i;\n\n\t// generate vertices, normals and uvs\n\n\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\tvar u = i / tubularSegments * arc;\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( i / tubularSegments );\n\t\t\tuvs.push( j / radialSegments );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( j = 1; j <= radialSegments; j ++ ) {\n\n\t\tfor ( i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t// indices\n\n\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nTorusBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTorusBufferGeometry.prototype.constructor = TorusBufferGeometry;\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n * Port from https://github.com/mapbox/earcut (v2.1.2)\n */\n\nvar Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim ) {\n\n\t\tdim = dim || 2;\n\n\t\tvar hasHoles = holeIndices && holeIndices.length,\n\t\t\touterLen = hasHoles ? holeIndices[ 0 ] * dim : data.length,\n\t\t\touterNode = linkedList( data, 0, outerLen, dim, true ),\n\t\t\ttriangles = [];\n\n\t\tif ( ! outerNode ) return triangles;\n\n\t\tvar minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( var i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 1 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\n\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tvar i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\n\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tvar p = start, again;\n\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\n\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tvar stop = ear, prev, next;\n\n\t// iterate through ears, slicing them one by one\n\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim );\n\t\t\ttriangles.push( ear.i / dim );\n\t\t\ttriangles.push( next.i / dim );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertice leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( ear, triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\n\nfunction isEar( ear ) {\n\n\tvar a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tvar p = ear.next.next;\n\n\twhile ( p !== ear.prev ) {\n\n\t\tif ( pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tvar a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// triangle bbox; min & max are calculated like this for speed\n\n\tvar minTX = a.x < b.x ? ( a.x < c.x ? a.x : c.x ) : ( b.x < c.x ? b.x : c.x ),\n\t\tminTY = a.y < b.y ? ( a.y < c.y ? a.y : c.y ) : ( b.y < c.y ? b.y : c.y ),\n\t\tmaxTX = a.x > b.x ? ( a.x > c.x ? a.x : c.x ) : ( b.x > c.x ? b.x : c.x ),\n\t\tmaxTY = a.y > b.y ? ( a.y > c.y ? a.y : c.y ) : ( b.y > c.y ? b.y : c.y );\n\n\t// z-order range for the current triangle bbox;\n\n\tvar minZ = zOrder( minTX, minTY, minX, minY, invSize ),\n\t\tmaxZ = zOrder( maxTX, maxTY, minX, minY, invSize );\n\n\t// first look for points inside the triangle in increasing z-order\n\n\tvar p = ear.nextZ;\n\n\twhile ( p && p.z <= maxZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.nextZ;\n\n\t}\n\n\t// then look for points in decreasing z-order\n\n\tp = ear.prevZ;\n\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\n\t\tp = p.prevZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\n\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tvar p = start;\n\n\tdo {\n\n\t\tvar a = p.prev, b = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim );\n\t\t\ttriangles.push( p.i / dim );\n\t\t\ttriangles.push( b.i / dim );\n\n\t\t\t// remove two nodes involved\n\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn p;\n\n}\n\n// try splitting polygon into two and triangulate them independently\n\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\n\tvar a = start;\n\n\tdo {\n\n\t\tvar b = a.next.next;\n\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\n\t\t\t\tvar c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\n\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tvar queue = [], i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\teliminateHole( queue[ i ], outerNode );\n\t\touterNode = filterPoints( outerNode, outerNode.next );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\n\nfunction eliminateHole( hole, outerNode ) {\n\n\touterNode = findHoleBridge( hole, outerNode );\n\n\tif ( outerNode ) {\n\n\t\tvar b = splitPolygon( outerNode, hole );\n\n\t\tfilterPoints( b, b.next );\n\n\t}\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\n\nfunction findHoleBridge( hole, outerNode ) {\n\n\tvar p = outerNode,\n\t\thx = hole.x,\n\t\thy = hole.y,\n\t\tqx = - Infinity,\n\t\tm;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tvar x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\n\t\t\t\tif ( x === hx ) {\n\n\t\t\t\t\tif ( hy === p.y ) return p;\n\t\t\t\t\tif ( hy === p.next.y ) return p.next;\n\n\t\t\t\t}\n\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\tif ( hx === qx ) return m.prev; // hole touches outer segment; pick lower endpoint\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tvar stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y,\n\t\ttanMin = Infinity,\n\t\ttan;\n\n\tp = m.next;\n\n\twhile ( p !== stop ) {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( ( tan < tanMin || ( tan === tanMin && p.x > m.x ) ) && locallyInside( p, hole ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t}\n\n\treturn m;\n\n}\n\n// interlink polygon nodes in z-order\n\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tvar p = start;\n\n\tdo {\n\n\t\tif ( p.z === null ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\n\nfunction sortLinked( list ) {\n\n\tvar i, p, q, e, tail, numMerges, pSize, qSize, inSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\n\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\n\tx = 32767 * ( x - minX ) * invSize;\n\ty = 32767 * ( y - minY ) * invSize;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\n\nfunction getLeftmost( start ) {\n\n\tvar p = start, leftmost = start;\n\n\tdo {\n\n\t\tif ( p.x < leftmost.x ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\n\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) - ( ax - px ) * ( cy - py ) >= 0 &&\n\t ( ax - px ) * ( by - py ) - ( bx - px ) * ( ay - py ) >= 0 &&\n\t ( bx - px ) * ( cy - py ) - ( cx - px ) * ( by - py ) >= 0;\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\n\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) &&\n\t\tlocallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b );\n\n}\n\n// signed area of a triangle\n\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\n\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\n\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tif ( ( equals( p1, q1 ) && equals( p2, q2 ) ) ||\n\t\t\t( equals( p1, q2 ) && equals( p2, q1 ) ) ) return true;\n\n\treturn area( p1, q1, p2 ) > 0 !== area( p1, q1, q2 ) > 0 &&\n\t\t\t\t area( p2, q2, p1 ) > 0 !== area( p2, q2, q1 ) > 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\n\nfunction intersectsPolygon( a, b ) {\n\n\tvar p = a;\n\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\t\t\t\tintersects( p, p.next, a, b ) ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\n\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\n\nfunction middleInside( a, b ) {\n\n\tvar p = a,\n\t\tinside = false,\n\t\tpx = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) ) {\n\n\t\t\tinside = ! inside;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\n\nfunction splitPolygon( a, b ) {\n\n\tvar a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\n\nfunction insertNode( i, x, y, last ) {\n\n\tvar p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertice index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertice nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = null;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tvar sum = 0;\n\n\tfor ( var i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\nvar ShapeUtils = {\n\n\t// calculate area of the contour polygon\n\n\tarea: function ( contour ) {\n\n\t\tvar n = contour.length;\n\t\tvar a = 0.0;\n\n\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t},\n\n\tisClockWise: function ( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t},\n\n\ttriangulateShape: function ( contour, holes ) {\n\n\t\tvar vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tvar holeIndices = []; // array of hole indices\n\t\tvar faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tvar holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( var i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tvar triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( var i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n};\n\nfunction removeDupEndPts( points ) {\n\n\tvar l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( var i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline is bevel\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\n// ExtrudeGeometry\n\nfunction ExtrudeGeometry( shapes, options ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ExtrudeGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\toptions: options\n\t};\n\n\tthis.fromBufferGeometry( new ExtrudeBufferGeometry( shapes, options ) );\n\tthis.mergeVertices();\n\n}\n\nExtrudeGeometry.prototype = Object.create( Geometry.prototype );\nExtrudeGeometry.prototype.constructor = ExtrudeGeometry;\n\nExtrudeGeometry.prototype.toJSON = function () {\n\n\tvar data = Geometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\tvar options = this.parameters.options;\n\n\treturn toJSON( shapes, options, data );\n\n};\n\n// ExtrudeBufferGeometry\n\nfunction ExtrudeBufferGeometry( shapes, options ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ExtrudeBufferGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\toptions: options\n\t};\n\n\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\tvar scope = this;\n\n\tvar verticesArray = [];\n\tvar uvArray = [];\n\n\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\tvar shape = shapes[ i ];\n\t\taddShape( shape );\n\n\t}\n\n\t// build geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\tthis.computeVertexNormals();\n\n\t// functions\n\n\tfunction addShape( shape ) {\n\n\t\tvar placeholder = [];\n\n\t\t// options\n\n\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\tvar steps = options.steps !== undefined ? options.steps : 1;\n\t\tvar depth = options.depth !== undefined ? options.depth : 100;\n\n\t\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6;\n\t\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2;\n\t\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\tvar extrudePath = options.extrudePath;\n\n\t\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t// deprecated options\n\n\t\tif ( options.amount !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.ExtrudeBufferGeometry: amount has been renamed to depth.' );\n\t\t\tdepth = options.amount;\n\n\t\t}\n\n\t\t//\n\n\t\tvar extrudePts, extrudeByPath = false;\n\t\tvar splineTube, binormal, normal, position2;\n\n\t\tif ( extrudePath ) {\n\n\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\textrudeByPath = true;\n\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t// SETUP TNB variables\n\n\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\tbinormal = new Vector3();\n\t\t\tnormal = new Vector3();\n\t\t\tposition2 = new Vector3();\n\n\t\t}\n\n\t\t// Safeguards if bevels are not enabled\n\n\t\tif ( ! bevelEnabled ) {\n\n\t\t\tbevelSegments = 0;\n\t\t\tbevelThickness = 0;\n\t\t\tbevelSize = 0;\n\n\t\t}\n\n\t\t// Variables initialization\n\n\t\tvar ahole, h, hl; // looping of holes\n\n\t\tvar shapePoints = shape.extractPoints( curveSegments );\n\n\t\tvar vertices = shapePoints.shape;\n\t\tvar holes = shapePoints.holes;\n\n\t\tvar reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\tif ( reverse ) {\n\n\t\t\tvertices = vertices.reverse();\n\n\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t/* Vertices */\n\n\t\tvar contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\tvertices = vertices.concat( ahole );\n\n\t\t}\n\n\n\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\n\n\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\n\n\t\t}\n\n\t\tvar b, bs, t, z,\n\t\t\tvert, vlen = vertices.length,\n\t\t\tface, flen = faces.length;\n\n\n\t\t// Find directions for point movement\n\n\n\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t//\n\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\tvar v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\tvar v_prev_x = inPt.x - inPrev.x,\n\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\tvar v_next_x = inNext.x - inPt.x,\n\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t// check for collinear edges\n\t\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t// not collinear\n\n\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\tvar sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t//  but prevent crazy spikes\n\t\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\tvar direction_eq = false; // assumes: opposite\n\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t}\n\n\n\t\tvar contourMovements = [];\n\n\t\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\tif ( j === il ) j = 0;\n\t\t\tif ( k === il ) k = 0;\n\n\t\t\t//  (j)---(i)---(k)\n\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t}\n\n\t\tvar holesMovements = [],\n\t\t\toneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\toneHoleMovements = [];\n\n\t\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t}\n\n\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t}\n\n\n\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\tfor ( b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\tt = b / bevelSegments;\n\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\n\n\t\t\t// contract shape\n\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t}\n\n\t\t\t// expand holes\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tbs = bevelSize;\n\n\t\t// Back facing vertices\n\n\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t} else {\n\n\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Add stepped vertices...\n\t\t// Including front facing vertices\n\n\t\tvar s;\n\n\t\tfor ( s = 1; s <= steps; s ++ ) {\n\n\t\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// Add bevel segments planes\n\n\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\tt = b / bevelSegments;\n\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\n\n\t\t\t// contract shape\n\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t}\n\n\t\t\t// expand holes\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t/* Faces */\n\n\t\t// Top and bottom faces\n\n\t\tbuildLidFaces();\n\n\t\t// Sides faces\n\n\t\tbuildSideFaces();\n\n\n\t\t/////  Internal functions\n\n\t\tfunction buildLidFaces() {\n\n\t\t\tvar start = verticesArray.length / 3;\n\n\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\tvar layer = 0; // steps + 1\n\t\t\t\tvar offset = vlen * layer;\n\n\t\t\t\t// Bottom faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t}\n\n\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t// Top faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Bottom faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t}\n\n\t\t\t\t// Top faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t}\n\n\t\t// Create faces for the z-sides of the shape\n\n\t\tfunction buildSideFaces() {\n\n\t\t\tvar start = verticesArray.length / 3;\n\t\t\tvar layeroffset = 0;\n\t\t\tsidewalls( contour, layeroffset );\n\t\t\tlayeroffset += contour.length;\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t//, true\n\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t}\n\n\n\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t}\n\n\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\tvar j, k;\n\t\t\ti = contour.length;\n\n\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\tj = i;\n\t\t\t\tk = i - 1;\n\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\tvar s = 0,\n\t\t\t\t\tsl = steps + bevelSegments * 2;\n\n\t\t\t\tfor ( s = 0; s < sl; s ++ ) {\n\n\t\t\t\t\tvar slen1 = vlen * s;\n\t\t\t\t\tvar slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\tvar a = layeroffset + j + slen1,\n\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction v( x, y, z ) {\n\n\t\t\tplaceholder.push( x );\n\t\t\tplaceholder.push( y );\n\t\t\tplaceholder.push( z );\n\n\t\t}\n\n\n\t\tfunction f3( a, b, c ) {\n\n\t\t\taddVertex( a );\n\t\t\taddVertex( b );\n\t\t\taddVertex( c );\n\n\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\tvar uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\taddUV( uvs[ 0 ] );\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 2 ] );\n\n\t\t}\n\n\t\tfunction f4( a, b, c, d ) {\n\n\t\t\taddVertex( a );\n\t\t\taddVertex( b );\n\t\t\taddVertex( d );\n\n\t\t\taddVertex( b );\n\t\t\taddVertex( c );\n\t\t\taddVertex( d );\n\n\n\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\tvar uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\taddUV( uvs[ 0 ] );\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 2 ] );\n\t\t\taddUV( uvs[ 3 ] );\n\n\t\t}\n\n\t\tfunction addVertex( index ) {\n\n\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t}\n\n\n\t\tfunction addUV( vector2 ) {\n\n\t\t\tuvArray.push( vector2.x );\n\t\t\tuvArray.push( vector2.y );\n\n\t\t}\n\n\t}\n\n}\n\nExtrudeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nExtrudeBufferGeometry.prototype.constructor = ExtrudeBufferGeometry;\n\nExtrudeBufferGeometry.prototype.toJSON = function () {\n\n\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\tvar options = this.parameters.options;\n\n\treturn toJSON( shapes, options, data );\n\n};\n\n//\n\nvar WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tvar a_x = vertices[ indexA * 3 ];\n\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\tvar b_x = vertices[ indexB * 3 ];\n\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\tvar c_x = vertices[ indexC * 3 ];\n\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tvar a_x = vertices[ indexA * 3 ];\n\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\tvar a_z = vertices[ indexA * 3 + 2 ];\n\t\tvar b_x = vertices[ indexB * 3 ];\n\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\tvar b_z = vertices[ indexB * 3 + 2 ];\n\t\tvar c_x = vertices[ indexC * 3 ];\n\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\t\tvar c_z = vertices[ indexC * 3 + 2 ];\n\t\tvar d_x = vertices[ indexD * 3 ];\n\t\tvar d_y = vertices[ indexD * 3 + 1 ];\n\t\tvar d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < 0.01 ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n};\n\nfunction toJSON( shapes, options, data ) {\n\n\t//\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tvar shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\t//\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author alteredq / http://alteredqualia.com/\n *\n * Text = 3D Text\n *\n * parameters = {\n *  font: <THREE.Font>, // font\n *\n *  size: <float>, // size of the text\n *  height: <float>, // thickness to extrude text\n *  curveSegments: <int>, // number of points on the curves\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into text bevel goes\n *  bevelSize: <float> // how far from text outline is bevel\n * }\n */\n\n// TextGeometry\n\nfunction TextGeometry( text, parameters ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TextGeometry';\n\n\tthis.parameters = {\n\t\ttext: text,\n\t\tparameters: parameters\n\t};\n\n\tthis.fromBufferGeometry( new TextBufferGeometry( text, parameters ) );\n\tthis.mergeVertices();\n\n}\n\nTextGeometry.prototype = Object.create( Geometry.prototype );\nTextGeometry.prototype.constructor = TextGeometry;\n\n// TextBufferGeometry\n\nfunction TextBufferGeometry( text, parameters ) {\n\n\tparameters = parameters || {};\n\n\tvar font = parameters.font;\n\n\tif ( ! ( font && font.isFont ) ) {\n\n\t\tconsole.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\n\t\treturn new Geometry();\n\n\t}\n\n\tvar shapes = font.generateShapes( text, parameters.size );\n\n\t// translate parameters to ExtrudeGeometry API\n\n\tparameters.depth = parameters.height !== undefined ? parameters.height : 50;\n\n\t// defaults\n\n\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\n\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\n\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\n\n\tExtrudeBufferGeometry.call( this, shapes, parameters );\n\n\tthis.type = 'TextBufferGeometry';\n\n}\n\nTextBufferGeometry.prototype = Object.create( ExtrudeBufferGeometry.prototype );\nTextBufferGeometry.prototype.constructor = TextBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author benaadams / https://twitter.com/ben_a_adams\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// SphereGeometry\n\nfunction SphereGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'SphereGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nSphereGeometry.prototype = Object.create( Geometry.prototype );\nSphereGeometry.prototype.constructor = SphereGeometry;\n\n// SphereBufferGeometry\n\nfunction SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'SphereBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tradius = radius || 1;\n\n\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\n\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\n\n\tphiStart = phiStart !== undefined ? phiStart : 0;\n\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\n\n\tvar thetaEnd = thetaStart + thetaLength;\n\n\tvar ix, iy;\n\n\tvar index = 0;\n\tvar grid = [];\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// generate vertices, normals and uvs\n\n\tfor ( iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\tvar verticesRow = [];\n\n\t\tvar v = iy / heightSegments;\n\n\t\tfor ( ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\tvar u = ix / widthSegments;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormal.set( vertex.x, vertex.y, vertex.z ).normalize();\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( u, 1 - v );\n\n\t\t\tverticesRow.push( index ++ );\n\n\t\t}\n\n\t\tgrid.push( verticesRow );\n\n\t}\n\n\t// indices\n\n\tfor ( iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\tfor ( ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\tvar a = grid[ iy ][ ix + 1 ];\n\t\t\tvar b = grid[ iy ][ ix ];\n\t\t\tvar c = grid[ iy + 1 ][ ix ];\n\t\t\tvar d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nSphereBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nSphereBufferGeometry.prototype.constructor = SphereBufferGeometry;\n\n/**\n * @author Kaleb Murphy\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// RingGeometry\n\nfunction RingGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'RingGeometry';\n\n\tthis.parameters = {\n\t\tinnerRadius: innerRadius,\n\t\touterRadius: outerRadius,\n\t\tthetaSegments: thetaSegments,\n\t\tphiSegments: phiSegments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nRingGeometry.prototype = Object.create( Geometry.prototype );\nRingGeometry.prototype.constructor = RingGeometry;\n\n// RingBufferGeometry\n\nfunction RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'RingBufferGeometry';\n\n\tthis.parameters = {\n\t\tinnerRadius: innerRadius,\n\t\touterRadius: outerRadius,\n\t\tthetaSegments: thetaSegments,\n\t\tphiSegments: phiSegments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tinnerRadius = innerRadius || 0.5;\n\touterRadius = outerRadius || 1;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\n\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 1;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// some helper variables\n\n\tvar segment;\n\tvar radius = innerRadius;\n\tvar radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\tvar j, i;\n\n\t// generate vertices, normals and uvs\n\n\tfor ( j = 0; j <= phiSegments; j ++ ) {\n\n\t\tfor ( i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\tsegment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uv\n\n\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// increase the radius for next row of vertices\n\n\t\tradius += radiusStep;\n\n\t}\n\n\t// indices\n\n\tfor ( j = 0; j < phiSegments; j ++ ) {\n\n\t\tvar thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\tfor ( i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\tsegment = i + thetaSegmentLevel;\n\n\t\t\tvar a = segment;\n\t\t\tvar b = segment + thetaSegments + 1;\n\t\t\tvar c = segment + thetaSegments + 2;\n\t\t\tvar d = segment + 1;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nRingBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nRingBufferGeometry.prototype.constructor = RingBufferGeometry;\n\n/**\n * @author zz85 / https://github.com/zz85\n * @author bhouston / http://clara.io\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// LatheGeometry\n\nfunction LatheGeometry( points, segments, phiStart, phiLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'LatheGeometry';\n\n\tthis.parameters = {\n\t\tpoints: points,\n\t\tsegments: segments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength\n\t};\n\n\tthis.fromBufferGeometry( new LatheBufferGeometry( points, segments, phiStart, phiLength ) );\n\tthis.mergeVertices();\n\n}\n\nLatheGeometry.prototype = Object.create( Geometry.prototype );\nLatheGeometry.prototype.constructor = LatheGeometry;\n\n// LatheBufferGeometry\n\nfunction LatheBufferGeometry( points, segments, phiStart, phiLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'LatheBufferGeometry';\n\n\tthis.parameters = {\n\t\tpoints: points,\n\t\tsegments: segments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength\n\t};\n\n\tsegments = Math.floor( segments ) || 12;\n\tphiStart = phiStart || 0;\n\tphiLength = phiLength || Math.PI * 2;\n\n\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\tphiLength = _Math.clamp( phiLength, 0, Math.PI * 2 );\n\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar base;\n\tvar inverseSegments = 1.0 / segments;\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\tvar i, j;\n\n\t// generate vertices and uvs\n\n\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\tvar phi = phiStart + i * inverseSegments * phiLength;\n\n\t\tvar sin = Math.sin( phi );\n\t\tvar cos = Math.cos( phi );\n\n\t\tfor ( j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\tvertex.y = points[ j ].y;\n\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// uv\n\n\t\t\tuv.x = i / segments;\n\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\n\t\t}\n\n\t}\n\n\t// indices\n\n\tfor ( i = 0; i < segments; i ++ ) {\n\n\t\tfor ( j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\tbase = j + i * points.length;\n\n\t\t\tvar a = base;\n\t\t\tvar b = base + points.length;\n\t\t\tvar c = base + points.length + 1;\n\t\t\tvar d = base + 1;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// generate normals\n\n\tthis.computeVertexNormals();\n\n\t// if the geometry is closed, we need to average the normals along the seam.\n\t// because the corresponding vertices are identical (but still have different UVs).\n\n\tif ( phiLength === Math.PI * 2 ) {\n\n\t\tvar normals = this.attributes.normal.array;\n\t\tvar n1 = new Vector3();\n\t\tvar n2 = new Vector3();\n\t\tvar n = new Vector3();\n\n\t\t// this is the buffer offset for the last line of vertices\n\n\t\tbase = segments * points.length * 3;\n\n\t\tfor ( i = 0, j = 0; i < points.length; i ++, j += 3 ) {\n\n\t\t\t// select the normal of the vertex in the first line\n\n\t\t\tn1.x = normals[ j + 0 ];\n\t\t\tn1.y = normals[ j + 1 ];\n\t\t\tn1.z = normals[ j + 2 ];\n\n\t\t\t// select the normal of the vertex in the last line\n\n\t\t\tn2.x = normals[ base + j + 0 ];\n\t\t\tn2.y = normals[ base + j + 1 ];\n\t\t\tn2.z = normals[ base + j + 2 ];\n\n\t\t\t// average normals\n\n\t\t\tn.addVectors( n1, n2 ).normalize();\n\n\t\t\t// assign the new values to both normals\n\n\t\t\tnormals[ j + 0 ] = normals[ base + j + 0 ] = n.x;\n\t\t\tnormals[ j + 1 ] = normals[ base + j + 1 ] = n.y;\n\t\t\tnormals[ j + 2 ] = normals[ base + j + 2 ] = n.z;\n\n\t\t}\n\n\t}\n\n}\n\nLatheBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nLatheBufferGeometry.prototype.constructor = LatheBufferGeometry;\n\n/**\n * @author jonobr1 / http://jonobr1.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// ShapeGeometry\n\nfunction ShapeGeometry( shapes, curveSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ShapeGeometry';\n\n\tif ( typeof curveSegments === 'object' ) {\n\n\t\tconsole.warn( 'THREE.ShapeGeometry: Options parameter has been removed.' );\n\n\t\tcurveSegments = curveSegments.curveSegments;\n\n\t}\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\tcurveSegments: curveSegments\n\t};\n\n\tthis.fromBufferGeometry( new ShapeBufferGeometry( shapes, curveSegments ) );\n\tthis.mergeVertices();\n\n}\n\nShapeGeometry.prototype = Object.create( Geometry.prototype );\nShapeGeometry.prototype.constructor = ShapeGeometry;\n\nShapeGeometry.prototype.toJSON = function () {\n\n\tvar data = Geometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\n\treturn toJSON$1( shapes, data );\n\n};\n\n// ShapeBufferGeometry\n\nfunction ShapeBufferGeometry( shapes, curveSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ShapeBufferGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\tcurveSegments: curveSegments\n\t};\n\n\tcurveSegments = curveSegments || 12;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar groupStart = 0;\n\tvar groupCount = 0;\n\n\t// allow single and array values for \"shapes\" parameter\n\n\tif ( Array.isArray( shapes ) === false ) {\n\n\t\taddShape( shapes );\n\n\t} else {\n\n\t\tfor ( var i = 0; i < shapes.length; i ++ ) {\n\n\t\t\taddShape( shapes[ i ] );\n\n\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\tgroupStart += groupCount;\n\t\t\tgroupCount = 0;\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t// helper functions\n\n\tfunction addShape( shape ) {\n\n\t\tvar i, l, shapeHole;\n\n\t\tvar indexOffset = vertices.length / 3;\n\t\tvar points = shape.extractPoints( curveSegments );\n\n\t\tvar shapeVertices = points.shape;\n\t\tvar shapeHoles = points.holes;\n\n\t\t// check direction of vertices\n\n\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t// also check if holes are in the opposite direction\n\n\t\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tshapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t// join vertices of inner and outer paths to a single array\n\n\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\tshapeHole = shapeHoles[ i ];\n\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t}\n\n\t\t// vertices, normals, uvs\n\n\t\tfor ( i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\tvar vertex = shapeVertices[ i ];\n\n\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\tnormals.push( 0, 0, 1 );\n\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t}\n\n\t\t// incides\n\n\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tvar a = face[ 0 ] + indexOffset;\n\t\t\tvar b = face[ 1 ] + indexOffset;\n\t\t\tvar c = face[ 2 ] + indexOffset;\n\n\t\t\tindices.push( a, b, c );\n\t\t\tgroupCount += 3;\n\n\t\t}\n\n\t}\n\n}\n\nShapeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nShapeBufferGeometry.prototype.constructor = ShapeBufferGeometry;\n\nShapeBufferGeometry.prototype.toJSON = function () {\n\n\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\n\treturn toJSON$1( shapes, data );\n\n};\n\n//\n\nfunction toJSON$1( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tvar shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction EdgesGeometry( geometry, thresholdAngle ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'EdgesGeometry';\n\n\tthis.parameters = {\n\t\tthresholdAngle: thresholdAngle\n\t};\n\n\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\n\n\t// buffer\n\n\tvar vertices = [];\n\n\t// helper variables\n\n\tvar thresholdDot = Math.cos( _Math.DEG2RAD * thresholdAngle );\n\tvar edge = [ 0, 0 ], edges = {}, edge1, edge2;\n\tvar key, keys = [ 'a', 'b', 'c' ];\n\n\t// prepare source geometry\n\n\tvar geometry2;\n\n\tif ( geometry.isBufferGeometry ) {\n\n\t\tgeometry2 = new Geometry();\n\t\tgeometry2.fromBufferGeometry( geometry );\n\n\t} else {\n\n\t\tgeometry2 = geometry.clone();\n\n\t}\n\n\tgeometry2.mergeVertices();\n\tgeometry2.computeFaceNormals();\n\n\tvar sourceVertices = geometry2.vertices;\n\tvar faces = geometry2.faces;\n\n\t// now create a data structure where each entry represents an edge with its adjoining faces\n\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\tvar face = faces[ i ];\n\n\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\tedge[ 0 ] = Math.min( edge1, edge2 );\n\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ], face1: i, face2: undefined };\n\n\t\t\t} else {\n\n\t\t\t\tedges[ key ].face2 = i;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// generate vertices\n\n\tfor ( key in edges ) {\n\n\t\tvar e = edges[ key ];\n\n\t\t// an edge is only rendered if the angle (in degrees) between the face normals of the adjoining faces exceeds this value. default = 1 degree.\n\n\t\tif ( e.face2 === undefined || faces[ e.face1 ].normal.dot( faces[ e.face2 ].normal ) <= thresholdDot ) {\n\n\t\t\tvar vertex = sourceVertices[ e.index1 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\tvertex = sourceVertices[ e.index2 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n}\n\nEdgesGeometry.prototype = Object.create( BufferGeometry.prototype );\nEdgesGeometry.prototype.constructor = EdgesGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// CylinderGeometry\n\nfunction CylinderGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'CylinderGeometry';\n\n\tthis.parameters = {\n\t\tradiusTop: radiusTop,\n\t\tradiusBottom: radiusBottom,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nCylinderGeometry.prototype = Object.create( Geometry.prototype );\nCylinderGeometry.prototype.constructor = CylinderGeometry;\n\n// CylinderBufferGeometry\n\nfunction CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'CylinderBufferGeometry';\n\n\tthis.parameters = {\n\t\tradiusTop: radiusTop,\n\t\tradiusBottom: radiusBottom,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tvar scope = this;\n\n\tradiusTop = radiusTop !== undefined ? radiusTop : 1;\n\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 1;\n\theight = height || 1;\n\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\theightSegments = Math.floor( heightSegments ) || 1;\n\n\topenEnded = openEnded !== undefined ? openEnded : false;\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0.0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar index = 0;\n\tvar indexArray = [];\n\tvar halfHeight = height / 2;\n\tvar groupStart = 0;\n\n\t// generate geometry\n\n\tgenerateTorso();\n\n\tif ( openEnded === false ) {\n\n\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\tfunction generateTorso() {\n\n\t\tvar x, y;\n\t\tvar normal = new Vector3();\n\t\tvar vertex = new Vector3();\n\n\t\tvar groupCount = 0;\n\n\t\t// this will be used to calculate the normal\n\t\tvar slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\tvar indexRow = [];\n\n\t\t\tvar v = y / heightSegments;\n\n\t\t\t// calculate the radius of the current row\n\n\t\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tvar u = x / radialSegments;\n\n\t\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\t\tvar sinTheta = Math.sin( theta );\n\t\t\t\tvar cosTheta = Math.cos( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\t// now save vertices of the row in our index array\n\n\t\t\tindexArray.push( indexRow );\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\tfor ( y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\tvar a = indexArray[ y ][ x ];\n\t\t\t\tvar b = indexArray[ y + 1 ][ x ];\n\t\t\t\tvar c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\tvar d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t// update group counter\n\n\t\t\t\tgroupCount += 6;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t}\n\n\tfunction generateCap( top ) {\n\n\t\tvar x, centerIndexStart, centerIndexEnd;\n\n\t\tvar uv = new Vector2();\n\t\tvar vertex = new Vector3();\n\n\t\tvar groupCount = 0;\n\n\t\tvar radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\tvar sign = ( top === true ) ? 1 : - 1;\n\n\t\t// save the index of the first center vertex\n\t\tcenterIndexStart = index;\n\n\t\t// first we generate the center vertex data of the cap.\n\t\t// because the geometry needs one set of uvs per face,\n\t\t// we must generate a center vertex per face/segment\n\n\t\tfor ( x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t// vertex\n\n\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t// increase index\n\n\t\t\tindex ++;\n\n\t\t}\n\n\t\t// save the index of the last center vertex\n\n\t\tcenterIndexEnd = index;\n\n\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\tvar u = x / radialSegments;\n\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\tvar cosTheta = Math.cos( theta );\n\t\t\tvar sinTheta = Math.sin( theta );\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * sinTheta;\n\t\t\tvertex.y = halfHeight * sign;\n\t\t\tvertex.z = radius * cosTheta;\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t// uv\n\n\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t// increase index\n\n\t\t\tindex ++;\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\tvar c = centerIndexStart + x;\n\t\t\tvar i = centerIndexEnd + x;\n\n\t\t\tif ( top === true ) {\n\n\t\t\t\t// face top\n\n\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t} else {\n\n\t\t\t\t// face bottom\n\n\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t}\n\n\t\t\tgroupCount += 3;\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t}\n\n}\n\nCylinderBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nCylinderBufferGeometry.prototype.constructor = CylinderBufferGeometry;\n\n/**\n * @author abelnation / http://github.com/abelnation\n */\n\n// ConeGeometry\n\nfunction ConeGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tCylinderGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\tthis.type = 'ConeGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n}\n\nConeGeometry.prototype = Object.create( CylinderGeometry.prototype );\nConeGeometry.prototype.constructor = ConeGeometry;\n\n// ConeBufferGeometry\n\nfunction ConeBufferGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tCylinderBufferGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\tthis.type = 'ConeBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n}\n\nConeBufferGeometry.prototype = Object.create( CylinderBufferGeometry.prototype );\nConeBufferGeometry.prototype.constructor = ConeBufferGeometry;\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n * @author Mugen87 / https://github.com/Mugen87\n * @author hughes\n */\n\n// CircleGeometry\n\nfunction CircleGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'CircleGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tsegments: segments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nCircleGeometry.prototype = Object.create( Geometry.prototype );\nCircleGeometry.prototype.constructor = CircleGeometry;\n\n// CircleBufferGeometry\n\nfunction CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'CircleBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tsegments: segments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tradius = radius || 1;\n\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar i, s;\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\n\t// center point\n\n\tvertices.push( 0, 0, 0 );\n\tnormals.push( 0, 0, 1 );\n\tuvs.push( 0.5, 0.5 );\n\n\tfor ( s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\tvar segment = thetaStart + s / segments * thetaLength;\n\n\t\t// vertex\n\n\t\tvertex.x = radius * Math.cos( segment );\n\t\tvertex.y = radius * Math.sin( segment );\n\n\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t// normal\n\n\t\tnormals.push( 0, 0, 1 );\n\n\t\t// uvs\n\n\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\tuvs.push( uv.x, uv.y );\n\n\t}\n\n\t// indices\n\n\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\tindices.push( i, i + 1, 0 );\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nCircleBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nCircleBufferGeometry.prototype.constructor = CircleBufferGeometry;\n\n\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\tWireframeGeometry: WireframeGeometry,\n\tParametricGeometry: ParametricGeometry,\n\tParametricBufferGeometry: ParametricBufferGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTetrahedronBufferGeometry: TetrahedronBufferGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tOctahedronBufferGeometry: OctahedronBufferGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tIcosahedronBufferGeometry: IcosahedronBufferGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tDodecahedronBufferGeometry: DodecahedronBufferGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tPolyhedronBufferGeometry: PolyhedronBufferGeometry,\n\tTubeGeometry: TubeGeometry,\n\tTubeBufferGeometry: TubeBufferGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTorusKnotBufferGeometry: TorusKnotBufferGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusBufferGeometry: TorusBufferGeometry,\n\tTextGeometry: TextGeometry,\n\tTextBufferGeometry: TextBufferGeometry,\n\tSphereGeometry: SphereGeometry,\n\tSphereBufferGeometry: SphereBufferGeometry,\n\tRingGeometry: RingGeometry,\n\tRingBufferGeometry: RingBufferGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPlaneBufferGeometry: PlaneBufferGeometry,\n\tLatheGeometry: LatheGeometry,\n\tLatheBufferGeometry: LatheBufferGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tShapeBufferGeometry: ShapeBufferGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tExtrudeBufferGeometry: ExtrudeBufferGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tConeGeometry: ConeGeometry,\n\tConeBufferGeometry: ConeBufferGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tCylinderBufferGeometry: CylinderBufferGeometry,\n\tCircleGeometry: CircleGeometry,\n\tCircleBufferGeometry: CircleBufferGeometry,\n\tBoxGeometry: BoxGeometry,\n\tBoxBufferGeometry: BoxBufferGeometry\n});\n\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * parameters = {\n *  color: <THREE.Color>\n * }\n */\n\nfunction ShadowMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'ShadowMaterial';\n\n\tthis.color = new Color( 0x000000 );\n\tthis.transparent = true;\n\n\tthis.setValues( parameters );\n\n}\n\nShadowMaterial.prototype = Object.create( Material.prototype );\nShadowMaterial.prototype.constructor = ShadowMaterial;\n\nShadowMaterial.prototype.isShadowMaterial = true;\n\nShadowMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction RawShaderMaterial( parameters ) {\n\n\tShaderMaterial.call( this, parameters );\n\n\tthis.type = 'RawShaderMaterial';\n\n}\n\nRawShaderMaterial.prototype = Object.create( ShaderMaterial.prototype );\nRawShaderMaterial.prototype.constructor = RawShaderMaterial;\n\nRawShaderMaterial.prototype.isRawShaderMaterial = true;\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  color: <hex>,\n *  roughness: <float>,\n *  metalness: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  roughnessMap: new THREE.Texture( <Image> ),\n *\n *  metalnessMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  envMapIntensity: <float>\n *\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshStandardMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.defines = { 'STANDARD': '' };\n\n\tthis.type = 'MeshStandardMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\tthis.roughness = 0.5;\n\tthis.metalness = 0.5;\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.roughnessMap = null;\n\n\tthis.metalnessMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.envMapIntensity = 1.0;\n\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshStandardMaterial.prototype = Object.create( Material.prototype );\nMeshStandardMaterial.prototype.constructor = MeshStandardMaterial;\n\nMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\nMeshStandardMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = { 'STANDARD': '' };\n\n\tthis.color.copy( source.color );\n\tthis.roughness = source.roughness;\n\tthis.metalness = source.metalness;\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.roughnessMap = source.roughnessMap;\n\n\tthis.metalnessMap = source.metalnessMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.envMapIntensity = source.envMapIntensity;\n\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  reflectivity: <float>\n * }\n */\n\nfunction MeshPhysicalMaterial( parameters ) {\n\n\tMeshStandardMaterial.call( this );\n\n\tthis.defines = { 'PHYSICAL': '' };\n\n\tthis.type = 'MeshPhysicalMaterial';\n\n\tthis.reflectivity = 0.5; // maps to F0 = 0.04\n\n\tthis.clearCoat = 0.0;\n\tthis.clearCoatRoughness = 0.0;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshPhysicalMaterial.prototype = Object.create( MeshStandardMaterial.prototype );\nMeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;\n\nMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\nMeshPhysicalMaterial.prototype.copy = function ( source ) {\n\n\tMeshStandardMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = { 'PHYSICAL': '' };\n\n\tthis.reflectivity = source.reflectivity;\n\n\tthis.clearCoat = source.clearCoat;\n\tthis.clearCoatRoughness = source.clearCoatRoughness;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  specular: <hex>,\n *  shininess: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshPhongMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshPhongMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\tthis.specular = new Color( 0x111111 );\n\tthis.shininess = 30;\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshPhongMaterial.prototype = Object.create( Material.prototype );\nMeshPhongMaterial.prototype.constructor = MeshPhongMaterial;\n\nMeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\nMeshPhongMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\tthis.specular.copy( source.specular );\n\tthis.shininess = source.shininess;\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author takahirox / http://github.com/takahirox\n *\n * parameters = {\n *  gradientMap: new THREE.Texture( <Image> )\n * }\n */\n\nfunction MeshToonMaterial( parameters ) {\n\n\tMeshPhongMaterial.call( this );\n\n\tthis.defines = { 'TOON': '' };\n\n\tthis.type = 'MeshToonMaterial';\n\n\tthis.gradientMap = null;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshToonMaterial.prototype = Object.create( MeshPhongMaterial.prototype );\nMeshToonMaterial.prototype.constructor = MeshToonMaterial;\n\nMeshToonMaterial.prototype.isMeshToonMaterial = true;\n\nMeshToonMaterial.prototype.copy = function ( source ) {\n\n\tMeshPhongMaterial.prototype.copy.call( this, source );\n\n\tthis.gradientMap = source.gradientMap;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  opacity: <float>,\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshNormalMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshNormalMaterial';\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshNormalMaterial.prototype = Object.create( Material.prototype );\nMeshNormalMaterial.prototype.constructor = MeshNormalMaterial;\n\nMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\nMeshNormalMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshLambertMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshLambertMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshLambertMaterial.prototype = Object.create( Material.prototype );\nMeshLambertMaterial.prototype.constructor = MeshLambertMaterial;\n\nMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\nMeshLambertMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  matcap: new THREE.Texture( <Image> ),\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshMatcapMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.defines = { 'MATCAP': '' };\n\n\tthis.type = 'MeshMatcapMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\n\tthis.matcap = null;\n\n\tthis.map = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.alphaMap = null;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n\t// a matcap is required\n\n\tif ( this.matcap === null ) {\n\n\t\tvar canvas = document.createElement( 'canvas' );\n\t\tcanvas.width = 1;\n\t\tcanvas.height = 1;\n\n\t\tvar context = canvas.getContext( '2d' );\n\n\t\tcontext.fillStyle = '#fff';\n\t\tcontext.fillRect( 0, 0, 1, 1 );\n\n\t\tthis.matcap = new THREE.CanvasTexture( canvas );\n\n\t}\n\n}\n\nMeshMatcapMaterial.prototype = Object.create( Material.prototype );\nMeshMatcapMaterial.prototype.constructor = MeshMatcapMaterial;\n\nMeshMatcapMaterial.prototype.isMeshMatcapMaterial = true;\n\nMeshMatcapMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = { 'MATCAP': '' };\n\n\tthis.color.copy( source.color );\n\n\tthis.matcap = source.matcap;\n\n\tthis.map = source.map;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *\n *  scale: <float>,\n *  dashSize: <float>,\n *  gapSize: <float>\n * }\n */\n\nfunction LineDashedMaterial( parameters ) {\n\n\tLineBasicMaterial.call( this );\n\n\tthis.type = 'LineDashedMaterial';\n\n\tthis.scale = 1;\n\tthis.dashSize = 3;\n\tthis.gapSize = 1;\n\n\tthis.setValues( parameters );\n\n}\n\nLineDashedMaterial.prototype = Object.create( LineBasicMaterial.prototype );\nLineDashedMaterial.prototype.constructor = LineDashedMaterial;\n\nLineDashedMaterial.prototype.isLineDashedMaterial = true;\n\nLineDashedMaterial.prototype.copy = function ( source ) {\n\n\tLineBasicMaterial.prototype.copy.call( this, source );\n\n\tthis.scale = source.scale;\n\tthis.dashSize = source.dashSize;\n\tthis.gapSize = source.gapSize;\n\n\treturn this;\n\n};\n\n\n\nvar Materials = /*#__PURE__*/Object.freeze({\n\tShadowMaterial: ShadowMaterial,\n\tSpriteMaterial: SpriteMaterial,\n\tRawShaderMaterial: RawShaderMaterial,\n\tShaderMaterial: ShaderMaterial,\n\tPointsMaterial: PointsMaterial,\n\tMeshPhysicalMaterial: MeshPhysicalMaterial,\n\tMeshStandardMaterial: MeshStandardMaterial,\n\tMeshPhongMaterial: MeshPhongMaterial,\n\tMeshToonMaterial: MeshToonMaterial,\n\tMeshNormalMaterial: MeshNormalMaterial,\n\tMeshLambertMaterial: MeshLambertMaterial,\n\tMeshDepthMaterial: MeshDepthMaterial,\n\tMeshDistanceMaterial: MeshDistanceMaterial,\n\tMeshBasicMaterial: MeshBasicMaterial,\n\tMeshMatcapMaterial: MeshMatcapMaterial,\n\tLineDashedMaterial: LineDashedMaterial,\n\tLineBasicMaterial: LineBasicMaterial,\n\tMaterial: Material\n});\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LoadingManager( onLoad, onProgress, onError ) {\n\n\tvar scope = this;\n\n\tvar isLoading = false;\n\tvar itemsLoaded = 0;\n\tvar itemsTotal = 0;\n\tvar urlModifier = undefined;\n\n\t// Refer to #5689 for the reason why we don't set .onStart\n\t// in the constructor\n\n\tthis.onStart = undefined;\n\tthis.onLoad = onLoad;\n\tthis.onProgress = onProgress;\n\tthis.onError = onError;\n\n\tthis.itemStart = function ( url ) {\n\n\t\titemsTotal ++;\n\n\t\tif ( isLoading === false ) {\n\n\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t}\n\n\t\tisLoading = true;\n\n\t};\n\n\tthis.itemEnd = function ( url ) {\n\n\t\titemsLoaded ++;\n\n\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t}\n\n\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\tisLoading = false;\n\n\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\tscope.onLoad();\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.itemError = function ( url ) {\n\n\t\tif ( scope.onError !== undefined ) {\n\n\t\t\tscope.onError( url );\n\n\t\t}\n\n\t};\n\n\tthis.resolveURL = function ( url ) {\n\n\t\tif ( urlModifier ) {\n\n\t\t\treturn urlModifier( url );\n\n\t\t}\n\n\t\treturn url;\n\n\t};\n\n\tthis.setURLModifier = function ( transform ) {\n\n\t\turlModifier = transform;\n\t\treturn this;\n\n\t};\n\n}\n\nvar DefaultLoadingManager = new LoadingManager();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar loading = {};\n\nfunction FileLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( FileLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Check for data: URI\n\t\tvar dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n\t\tvar dataUriRegexResult = url.match( dataUriRegex );\n\n\t\t// Safari can not handle Data URIs through XMLHttpRequest so process manually\n\t\tif ( dataUriRegexResult ) {\n\n\t\t\tvar mimeType = dataUriRegexResult[ 1 ];\n\t\t\tvar isBase64 = !! dataUriRegexResult[ 2 ];\n\t\t\tvar data = dataUriRegexResult[ 3 ];\n\n\t\t\tdata = window.decodeURIComponent( data );\n\n\t\t\tif ( isBase64 ) data = window.atob( data );\n\n\t\t\ttry {\n\n\t\t\t\tvar response;\n\t\t\t\tvar responseType = ( this.responseType || '' ).toLowerCase();\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\tvar view = new Uint8Array( data.length );\n\n\t\t\t\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\t\t\t\t\tview[ i ] = data.charCodeAt( i );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( responseType === 'blob' ) {\n\n\t\t\t\t\t\t\tresponse = new Blob( [ view.buffer ], { type: mimeType } );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tresponse = view.buffer;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\tvar parser = new DOMParser();\n\t\t\t\t\t\tresponse = parser.parseFromString( data, mimeType );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\tresponse = JSON.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // 'text' or other\n\n\t\t\t\t\t\tresponse = data;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\twindow.setTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\twindow.setTimeout( function () {\n\n\t\t\t\t\tif ( onError ) onError( error );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Initialise array for duplicate requests\n\n\t\t\tloading[ url ] = [];\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\tvar request = new XMLHttpRequest();\n\n\t\t\trequest.open( 'GET', url, true );\n\n\t\t\trequest.addEventListener( 'load', function ( event ) {\n\n\t\t\t\tvar response = this.response;\n\n\t\t\t\tCache.add( url, response );\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tif ( this.status === 200 || this.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( this.status === 0 ) console.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( response );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'progress', function ( event ) {\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'error', function ( event ) {\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'abort', function ( event ) {\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}, false );\n\n\t\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\n\t\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\n\n\t\t\tif ( request.overrideMimeType ) request.overrideMimeType( this.mimeType !== undefined ? this.mimeType : 'text/plain' );\n\n\t\t\tfor ( var header in this.requestHeader ) {\n\n\t\t\t\trequest.setRequestHeader( header, this.requestHeader[ header ] );\n\n\t\t\t}\n\n\t\t\trequest.send( null );\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\treturn request;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t},\n\n\tsetResponseType: function ( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t},\n\n\tsetWithCredentials: function ( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t},\n\n\tsetMimeType: function ( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t},\n\n\tsetRequestHeader: function ( value ) {\n\n\t\tthis.requestHeader = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n */\n\nfunction CompressedTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t// override in sub classes\n\tthis._parser = null;\n\n}\n\nObject.assign( CompressedTextureLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar images = [];\n\n\t\tvar texture = new CompressedTexture();\n\t\ttexture.image = images;\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tvar loaded = 0;\n\n\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author Nikos M. / https://github.com/foo123/\n *\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n */\n\nfunction DataTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t// override in sub classes\n\tthis._parser = null;\n\n}\n\nObject.assign( DataTextureLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar texture = new DataTexture();\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tvar texData = scope._parser( buffer );\n\n\t\t\tif ( ! texData ) return;\n\n\t\t\tif ( undefined !== texData.image ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( undefined !== texData.data ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = undefined !== texData.wrapS ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = undefined !== texData.wrapT ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = undefined !== texData.magFilter ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = undefined !== texData.minFilter ? texData.minFilter : LinearMipMapLinearFilter;\n\n\t\t\ttexture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\n\n\t\t\tif ( undefined !== texData.format ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\t\t\tif ( undefined !== texData.type ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( undefined !== texData.mipmaps ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\n\t\t\t}\n\n\t\t\tif ( 1 === texData.mipmapCount ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction ImageLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( ImageLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tvar image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemEnd( url );\n\t\t\tscope.manager.itemError( url );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.substr( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction CubeTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( CubeTextureLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( urls, onLoad, onProgress, onError ) {\n\n\t\tvar texture = new CubeTexture();\n\n\t\tvar loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tvar loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction TextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( TextureLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar texture = new Texture();\n\n\t\tvar loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\n\t\t\t// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n\t\t\tvar isJPEG = url.search( /\\.jpe?g$/i ) > 0 || url.search( /^data\\:image\\/jpeg/ ) === 0;\n\n\t\t\ttexture.format = isJPEG ? RGBFormat : RGBAFormat;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Extensible curve object\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\n/**************************************************************\n *\tAbstract Curve base class\n **************************************************************/\n\nfunction Curve() {\n\n\tthis.type = 'Curve';\n\n\tthis.arcLengthDivisions = 200;\n\n}\n\nObject.assign( Curve.prototype, {\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint: function ( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t},\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt: function ( u, optionalTarget ) {\n\n\t\tvar t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t},\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 5;\n\n\t\tvar points = [];\n\n\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 5;\n\n\t\tvar points = [];\n\n\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\t// Get total curve arc length\n\n\tgetLength: function () {\n\n\t\tvar lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t},\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = this.arcLengthDivisions;\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tvar cache = [];\n\t\tvar current, last = this.getPoint( 0 );\n\t\tvar p, sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t},\n\n\tupdateArcLengths: function () {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t},\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping: function ( u, distance ) {\n\n\t\tvar arcLengths = this.getLengths();\n\n\t\tvar i = 0, il = arcLengths.length;\n\n\t\tvar targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tvar low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tvar lengthBefore = arcLengths[ i ];\n\t\tvar lengthAfter = arcLengths[ i + 1 ];\n\n\t\tvar segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tvar t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t},\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent: function ( t ) {\n\n\t\tvar delta = 0.0001;\n\t\tvar t1 = t - delta;\n\t\tvar t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tvar pt1 = this.getPoint( t1 );\n\t\tvar pt2 = this.getPoint( t2 );\n\n\t\tvar vec = pt2.clone().sub( pt1 );\n\t\treturn vec.normalize();\n\n\t},\n\n\tgetTangentAt: function ( u ) {\n\n\t\tvar t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t );\n\n\t},\n\n\tcomputeFrenetFrames: function ( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tvar normal = new Vector3();\n\n\t\tvar tangents = [];\n\t\tvar normals = [];\n\t\tvar binormals = [];\n\n\t\tvar vec = new Vector3();\n\t\tvar mat = new Matrix4();\n\n\t\tvar i, u, theta;\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\t\tu = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u );\n\t\t\ttangents[ i ].normalize();\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tvar min = Number.MAX_VALUE;\n\t\tvar tx = Math.abs( tangents[ 0 ].x );\n\t\tvar ty = Math.abs( tangents[ 0 ].y );\n\t\tvar tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\ttheta = Math.acos( _Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\ttheta = Math.acos( _Math.clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n} );\n\nfunction EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'EllipseCurve';\n\n\tthis.aX = aX || 0;\n\tthis.aY = aY || 0;\n\n\tthis.xRadius = xRadius || 1;\n\tthis.yRadius = yRadius || 1;\n\n\tthis.aStartAngle = aStartAngle || 0;\n\tthis.aEndAngle = aEndAngle || 2 * Math.PI;\n\n\tthis.aClockwise = aClockwise || false;\n\n\tthis.aRotation = aRotation || 0;\n\n}\n\nEllipseCurve.prototype = Object.create( Curve.prototype );\nEllipseCurve.prototype.constructor = EllipseCurve;\n\nEllipseCurve.prototype.isEllipseCurve = true;\n\nEllipseCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar twoPi = Math.PI * 2;\n\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\n\tvar samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t// ensures that deltaAngle is 0 .. 2 PI\n\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\tif ( samePoints ) {\n\n\t\t\tdeltaAngle = 0;\n\n\t\t} else {\n\n\t\t\tdeltaAngle = twoPi;\n\n\t\t}\n\n\t}\n\n\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\tdeltaAngle = - twoPi;\n\n\t\t} else {\n\n\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t}\n\n\t}\n\n\tvar angle = this.aStartAngle + t * deltaAngle;\n\tvar x = this.aX + this.xRadius * Math.cos( angle );\n\tvar y = this.aY + this.yRadius * Math.sin( angle );\n\n\tif ( this.aRotation !== 0 ) {\n\n\t\tvar cos = Math.cos( this.aRotation );\n\t\tvar sin = Math.sin( this.aRotation );\n\n\t\tvar tx = x - this.aX;\n\t\tvar ty = y - this.aY;\n\n\t\t// Rotate the point about the center of the ellipse.\n\t\tx = tx * cos - ty * sin + this.aX;\n\t\ty = tx * sin + ty * cos + this.aY;\n\n\t}\n\n\treturn point.set( x, y );\n\n};\n\nEllipseCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.aX = source.aX;\n\tthis.aY = source.aY;\n\n\tthis.xRadius = source.xRadius;\n\tthis.yRadius = source.yRadius;\n\n\tthis.aStartAngle = source.aStartAngle;\n\tthis.aEndAngle = source.aEndAngle;\n\n\tthis.aClockwise = source.aClockwise;\n\n\tthis.aRotation = source.aRotation;\n\n\treturn this;\n\n};\n\n\nEllipseCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.aX = this.aX;\n\tdata.aY = this.aY;\n\n\tdata.xRadius = this.xRadius;\n\tdata.yRadius = this.yRadius;\n\n\tdata.aStartAngle = this.aStartAngle;\n\tdata.aEndAngle = this.aEndAngle;\n\n\tdata.aClockwise = this.aClockwise;\n\n\tdata.aRotation = this.aRotation;\n\n\treturn data;\n\n};\n\nEllipseCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.aX = json.aX;\n\tthis.aY = json.aY;\n\n\tthis.xRadius = json.xRadius;\n\tthis.yRadius = json.yRadius;\n\n\tthis.aStartAngle = json.aStartAngle;\n\tthis.aEndAngle = json.aEndAngle;\n\n\tthis.aClockwise = json.aClockwise;\n\n\tthis.aRotation = json.aRotation;\n\n\treturn this;\n\n};\n\nfunction ArcCurve( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\tEllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\tthis.type = 'ArcCurve';\n\n}\n\nArcCurve.prototype = Object.create( EllipseCurve.prototype );\nArcCurve.prototype.constructor = ArcCurve;\n\nArcCurve.prototype.isArcCurve = true;\n\n/**\n * @author zz85 https://github.com/zz85\n *\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tvar c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tvar t2 = t * t;\n\t\t\tvar t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nvar tmp = new Vector3();\nvar px = new CubicPoly(), py = new CubicPoly(), pz = new CubicPoly();\n\nfunction CatmullRomCurve3( points, closed, curveType, tension ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CatmullRomCurve3';\n\n\tthis.points = points || [];\n\tthis.closed = closed || false;\n\tthis.curveType = curveType || 'centripetal';\n\tthis.tension = tension || 0.5;\n\n}\n\nCatmullRomCurve3.prototype = Object.create( Curve.prototype );\nCatmullRomCurve3.prototype.constructor = CatmullRomCurve3;\n\nCatmullRomCurve3.prototype.isCatmullRomCurve3 = true;\n\nCatmullRomCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar points = this.points;\n\tvar l = points.length;\n\n\tvar p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\tvar intPoint = Math.floor( p );\n\tvar weight = p - intPoint;\n\n\tif ( this.closed ) {\n\n\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\tintPoint = l - 2;\n\t\tweight = 1;\n\n\t}\n\n\tvar p0, p1, p2, p3; // 4 points\n\n\tif ( this.closed || intPoint > 0 ) {\n\n\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t} else {\n\n\t\t// extrapolate first point\n\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\tp0 = tmp;\n\n\t}\n\n\tp1 = points[ intPoint % l ];\n\tp2 = points[ ( intPoint + 1 ) % l ];\n\n\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t} else {\n\n\t\t// extrapolate last point\n\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\tp3 = tmp;\n\n\t}\n\n\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t// init Centripetal / Chordal Catmull-Rom\n\t\tvar pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t// safety check for repeated points\n\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t}\n\n\tpoint.set(\n\t\tpx.calc( weight ),\n\t\tpy.calc( weight ),\n\t\tpz.calc( weight )\n\t);\n\n\treturn point;\n\n};\n\nCatmullRomCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\tvar point = source.points[ i ];\n\n\t\tthis.points.push( point.clone() );\n\n\t}\n\n\tthis.closed = source.closed;\n\tthis.curveType = source.curveType;\n\tthis.tension = source.tension;\n\n\treturn this;\n\n};\n\nCatmullRomCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.points = [];\n\n\tfor ( var i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\tvar point = this.points[ i ];\n\t\tdata.points.push( point.toArray() );\n\n\t}\n\n\tdata.closed = this.closed;\n\tdata.curveType = this.curveType;\n\tdata.tension = this.tension;\n\n\treturn data;\n\n};\n\nCatmullRomCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\tvar point = json.points[ i ];\n\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t}\n\n\tthis.closed = json.closed;\n\tthis.curveType = json.curveType;\n\tthis.tension = json.tension;\n\n\treturn this;\n\n};\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n * Bezier Curves formulas obtained from\n * http://en.wikipedia.org/wiki/Bézier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tvar v0 = ( p2 - p0 ) * 0.5;\n\tvar v1 = ( p3 - p1 ) * 0.5;\n\tvar t2 = t * t;\n\tvar t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tvar k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tvar k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tvar k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nfunction CubicBezierCurve( v0, v1, v2, v3 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CubicBezierCurve';\n\n\tthis.v0 = v0 || new Vector2();\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\tthis.v3 = v3 || new Vector2();\n\n}\n\nCubicBezierCurve.prototype = Object.create( Curve.prototype );\nCubicBezierCurve.prototype.constructor = CubicBezierCurve;\n\nCubicBezierCurve.prototype.isCubicBezierCurve = true;\n\nCubicBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\tpoint.set(\n\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t);\n\n\treturn point;\n\n};\n\nCubicBezierCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\tthis.v3.copy( source.v3 );\n\n\treturn this;\n\n};\n\nCubicBezierCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\tdata.v3 = this.v3.toArray();\n\n\treturn data;\n\n};\n\nCubicBezierCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\tthis.v3.fromArray( json.v3 );\n\n\treturn this;\n\n};\n\nfunction CubicBezierCurve3( v0, v1, v2, v3 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CubicBezierCurve3';\n\n\tthis.v0 = v0 || new Vector3();\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\tthis.v3 = v3 || new Vector3();\n\n}\n\nCubicBezierCurve3.prototype = Object.create( Curve.prototype );\nCubicBezierCurve3.prototype.constructor = CubicBezierCurve3;\n\nCubicBezierCurve3.prototype.isCubicBezierCurve3 = true;\n\nCubicBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\tpoint.set(\n\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t);\n\n\treturn point;\n\n};\n\nCubicBezierCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\tthis.v3.copy( source.v3 );\n\n\treturn this;\n\n};\n\nCubicBezierCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\tdata.v3 = this.v3.toArray();\n\n\treturn data;\n\n};\n\nCubicBezierCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\tthis.v3.fromArray( json.v3 );\n\n\treturn this;\n\n};\n\nfunction LineCurve( v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'LineCurve';\n\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\n}\n\nLineCurve.prototype = Object.create( Curve.prototype );\nLineCurve.prototype.constructor = LineCurve;\n\nLineCurve.prototype.isLineCurve = true;\n\nLineCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tif ( t === 1 ) {\n\n\t\tpoint.copy( this.v2 );\n\n\t} else {\n\n\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t}\n\n\treturn point;\n\n};\n\n// Line curve is linear, so we can overwrite default getPointAt\n\nLineCurve.prototype.getPointAt = function ( u, optionalTarget ) {\n\n\treturn this.getPoint( u, optionalTarget );\n\n};\n\nLineCurve.prototype.getTangent = function ( /* t */ ) {\n\n\tvar tangent = this.v2.clone().sub( this.v1 );\n\n\treturn tangent.normalize();\n\n};\n\nLineCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nLineCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nLineCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction LineCurve3( v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'LineCurve3';\n\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\n}\n\nLineCurve3.prototype = Object.create( Curve.prototype );\nLineCurve3.prototype.constructor = LineCurve3;\n\nLineCurve3.prototype.isLineCurve3 = true;\n\nLineCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tif ( t === 1 ) {\n\n\t\tpoint.copy( this.v2 );\n\n\t} else {\n\n\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t}\n\n\treturn point;\n\n};\n\n// Line curve is linear, so we can overwrite default getPointAt\n\nLineCurve3.prototype.getPointAt = function ( u, optionalTarget ) {\n\n\treturn this.getPoint( u, optionalTarget );\n\n};\n\nLineCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nLineCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nLineCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction QuadraticBezierCurve( v0, v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'QuadraticBezierCurve';\n\n\tthis.v0 = v0 || new Vector2();\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\n}\n\nQuadraticBezierCurve.prototype = Object.create( Curve.prototype );\nQuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;\n\nQuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\n\nQuadraticBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\tpoint.set(\n\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t);\n\n\treturn point;\n\n};\n\nQuadraticBezierCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nQuadraticBezierCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nQuadraticBezierCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction QuadraticBezierCurve3( v0, v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'QuadraticBezierCurve3';\n\n\tthis.v0 = v0 || new Vector3();\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\n}\n\nQuadraticBezierCurve3.prototype = Object.create( Curve.prototype );\nQuadraticBezierCurve3.prototype.constructor = QuadraticBezierCurve3;\n\nQuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\n\nQuadraticBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\tpoint.set(\n\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t);\n\n\treturn point;\n\n};\n\nQuadraticBezierCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nQuadraticBezierCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nQuadraticBezierCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction SplineCurve( points /* array of Vector2 */ ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'SplineCurve';\n\n\tthis.points = points || [];\n\n}\n\nSplineCurve.prototype = Object.create( Curve.prototype );\nSplineCurve.prototype.constructor = SplineCurve;\n\nSplineCurve.prototype.isSplineCurve = true;\n\nSplineCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar points = this.points;\n\tvar p = ( points.length - 1 ) * t;\n\n\tvar intPoint = Math.floor( p );\n\tvar weight = p - intPoint;\n\n\tvar p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\tvar p1 = points[ intPoint ];\n\tvar p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\tvar p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\tpoint.set(\n\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t);\n\n\treturn point;\n\n};\n\nSplineCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\tvar point = source.points[ i ];\n\n\t\tthis.points.push( point.clone() );\n\n\t}\n\n\treturn this;\n\n};\n\nSplineCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.points = [];\n\n\tfor ( var i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\tvar point = this.points[ i ];\n\t\tdata.points.push( point.toArray() );\n\n\t}\n\n\treturn data;\n\n};\n\nSplineCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\tvar point = json.points[ i ];\n\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t}\n\n\treturn this;\n\n};\n\n\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n **/\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nfunction CurvePath() {\n\n\tCurve.call( this );\n\n\tthis.type = 'CurvePath';\n\n\tthis.curves = [];\n\tthis.autoClose = false; // Automatically closes the path\n\n}\n\nCurvePath.prototype = Object.assign( Object.create( Curve.prototype ), {\n\n\tconstructor: CurvePath,\n\n\tadd: function ( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t},\n\n\tclosePath: function () {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t}\n\n\t},\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint: function ( t ) {\n\n\t\tvar d = t * this.getLength();\n\t\tvar curveLengths = this.getCurveLengths();\n\t\tvar i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tvar diff = curveLengths[ i ] - d;\n\t\t\t\tvar curve = this.curves[ i ];\n\n\t\t\t\tvar segmentLength = curve.getLength();\n\t\t\t\tvar u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t},\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength: function () {\n\n\t\tvar lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t},\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths: function () {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t},\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths: function () {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tvar lengths = [], sums = 0;\n\n\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t},\n\n\tgetSpacedPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 40;\n\n\t\tvar points = [];\n\n\t\tfor ( var i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\tgetPoints: function ( divisions ) {\n\n\t\tdivisions = divisions || 12;\n\n\t\tvar points = [], last;\n\n\t\tfor ( var i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tvar curve = curves[ i ];\n\t\t\tvar resolution = ( curve && curve.isEllipseCurve ) ? divisions * 2\n\t\t\t\t: ( curve && ( curve.isLineCurve || curve.isLineCurve3 ) ) ? 1\n\t\t\t\t\t: ( curve && curve.isSplineCurve ) ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tvar pts = curve.getPoints( resolution );\n\n\t\t\tfor ( var j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tvar point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( var i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( var i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Creates free form 2d path using series of points, lines or curves.\n **/\n\nfunction Path( points ) {\n\n\tCurvePath.call( this );\n\n\tthis.type = 'Path';\n\n\tthis.currentPoint = new Vector2();\n\n\tif ( points ) {\n\n\t\tthis.setFromPoints( points );\n\n\t}\n\n}\n\nPath.prototype = Object.assign( Object.create( CurvePath.prototype ), {\n\n\tconstructor: Path,\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( var i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t},\n\n\tmoveTo: function ( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t},\n\n\tlineTo: function ( x, y ) {\n\n\t\tvar curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t},\n\n\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\tvar curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t},\n\n\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tvar curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t},\n\n\tsplineThru: function ( pts /*Array of Vector*/ ) {\n\n\t\tvar npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tvar curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t},\n\n\tarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tvar x0 = this.currentPoint.x;\n\t\tvar y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t},\n\n\tabsarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t},\n\n\tellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tvar x0 = this.currentPoint.x;\n\t\tvar y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t},\n\n\tabsellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tvar curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tvar firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tvar lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tCurvePath.prototype.copy.call( this, source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = CurvePath.prototype.toJSON.call( this );\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tCurvePath.prototype.fromJSON.call( this, json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Defines a 2d shape plane using paths.\n **/\n\n// STEP 1 Create a path.\n// STEP 2 Turn path into shape.\n// STEP 3 ExtrudeGeometry takes in Shape/Shapes\n// STEP 3a - Extract points from each shape, turn to vertices\n// STEP 3b - Triangulate each shape, add faces.\n\nfunction Shape( points ) {\n\n\tPath.call( this, points );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.type = 'Shape';\n\n\tthis.holes = [];\n\n}\n\nShape.prototype = Object.assign( Object.create( Path.prototype ), {\n\n\tconstructor: Shape,\n\n\tgetPointsHoles: function ( divisions ) {\n\n\t\tvar holesPts = [];\n\n\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t},\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints: function ( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tPath.prototype.copy.call( this, source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( var i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = Path.prototype.toJSON.call( this );\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tPath.prototype.fromJSON.call( this, json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( var i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Light( color, intensity ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Light';\n\n\tthis.color = new Color( color );\n\tthis.intensity = intensity !== undefined ? intensity : 1;\n\n\tthis.receiveShadow = undefined;\n\n}\n\nLight.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Light,\n\n\tisLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction HemisphereLight( skyColor, groundColor, intensity ) {\n\n\tLight.call( this, skyColor, intensity );\n\n\tthis.type = 'HemisphereLight';\n\n\tthis.castShadow = undefined;\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.groundColor = new Color( groundColor );\n\n}\n\nHemisphereLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: HemisphereLight,\n\n\tisHemisphereLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LightShadow( camera ) {\n\n\tthis.camera = camera;\n\n\tthis.bias = 0;\n\tthis.radius = 1;\n\n\tthis.mapSize = new Vector2( 512, 512 );\n\n\tthis.map = null;\n\tthis.matrix = new Matrix4();\n\n}\n\nObject.assign( LightShadow.prototype, {\n\n\tcopy: function ( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction SpotLightShadow() {\n\n\tLightShadow.call( this, new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n}\n\nSpotLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\tconstructor: SpotLightShadow,\n\n\tisSpotLightShadow: true,\n\n\tupdate: function ( light ) {\n\n\t\tvar camera = this.camera;\n\n\t\tvar fov = _Math.RAD2DEG * 2 * light.angle;\n\t\tvar aspect = this.mapSize.width / this.mapSize.height;\n\t\tvar far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction SpotLight( color, intensity, distance, angle, penumbra, decay ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'SpotLight';\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.target = new Object3D();\n\n\tObject.defineProperty( this, 'power', {\n\t\tget: function () {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\treturn this.intensity * Math.PI;\n\n\t\t},\n\t\tset: function ( power ) {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\tthis.intensity = power / Math.PI;\n\n\t\t}\n\t} );\n\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\n\tthis.penumbra = ( penumbra !== undefined ) ? penumbra : 0;\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\tthis.shadow = new SpotLightShadow();\n\n}\n\nSpotLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: SpotLight,\n\n\tisSpotLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction PointLight( color, intensity, distance, decay ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'PointLight';\n\n\tObject.defineProperty( this, 'power', {\n\t\tget: function () {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\treturn this.intensity * 4 * Math.PI;\n\n\t\t},\n\t\tset: function ( power ) {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t\t}\n\t} );\n\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\tthis.shadow = new LightShadow( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n}\n\nPointLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: PointLight,\n\n\tisPointLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author arose / http://github.com/arose\n */\n\nfunction OrthographicCamera( left, right, top, bottom, near, far ) {\n\n\tCamera.call( this );\n\n\tthis.type = 'OrthographicCamera';\n\n\tthis.zoom = 1;\n\tthis.view = null;\n\n\tthis.left = left;\n\tthis.right = right;\n\tthis.top = top;\n\tthis.bottom = bottom;\n\n\tthis.near = ( near !== undefined ) ? near : 0.1;\n\tthis.far = ( far !== undefined ) ? far : 2000;\n\n\tthis.updateProjectionMatrix();\n\n}\n\nOrthographicCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\tconstructor: OrthographicCamera,\n\n\tisOrthographicCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t},\n\n\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tclearViewOffset: function () {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tupdateProjectionMatrix: function () {\n\n\t\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tvar cx = ( this.right + this.left ) / 2;\n\t\tvar cy = ( this.top + this.bottom ) / 2;\n\n\t\tvar left = cx - dx;\n\t\tvar right = cx + dx;\n\t\tvar top = cy + dy;\n\t\tvar bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tvar zoomW = this.zoom / ( this.view.width / this.view.fullWidth );\n\t\t\tvar zoomH = this.zoom / ( this.view.height / this.view.fullHeight );\n\t\t\tvar scaleW = ( this.right - this.left ) / this.view.width;\n\t\t\tvar scaleH = ( this.top - this.bottom ) / this.view.height;\n\n\t\t\tleft += scaleW * ( this.view.offsetX / zoomW );\n\t\t\tright = left + scaleW * ( this.view.width / zoomW );\n\t\t\ttop -= scaleH * ( this.view.offsetY / zoomH );\n\t\t\tbottom = top - scaleH * ( this.view.height / zoomH );\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t\tthis.projectionMatrixInverse.getInverse( this.projectionMatrix );\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction DirectionalLightShadow( ) {\n\n\tLightShadow.call( this, new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n}\n\nDirectionalLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\tconstructor: DirectionalLightShadow\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction DirectionalLight( color, intensity ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'DirectionalLight';\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.target = new Object3D();\n\n\tthis.shadow = new DirectionalLightShadow();\n\n}\n\nDirectionalLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: DirectionalLight,\n\n\tisDirectionalLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AmbientLight( color, intensity ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'AmbientLight';\n\n\tthis.castShadow = undefined;\n\n}\n\nAmbientLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: AmbientLight,\n\n\tisAmbientLight: true\n\n} );\n\n/**\n * @author abelnation / http://github.com/abelnation\n */\n\nfunction RectAreaLight( color, intensity, width, height ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'RectAreaLight';\n\n\tthis.width = ( width !== undefined ) ? width : 10;\n\tthis.height = ( height !== undefined ) ? height : 10;\n\n}\n\nRectAreaLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: RectAreaLight,\n\n\tisRectAreaLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Light.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author tschw\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n */\n\nvar AnimationUtils = {\n\n\t// same as Array.prototype.slice, but also works on typed arrays\n\tarraySlice: function ( array, from, to ) {\n\n\t\tif ( AnimationUtils.isTypedArray( array ) ) {\n\n\t\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t\t}\n\n\t\treturn array.slice( from, to );\n\n\t},\n\n\t// converts an array to a specific type\n\tconvertArray: function ( array, type, forceClone ) {\n\n\t\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t\t\t! forceClone && array.constructor === type ) return array;\n\n\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\t\treturn new type( array ); // create typed array\n\n\t\t}\n\n\t\treturn Array.prototype.slice.call( array ); // create Array\n\n\t},\n\n\tisTypedArray: function ( object ) {\n\n\t\treturn ArrayBuffer.isView( object ) &&\n\t\t\t\t! ( object instanceof DataView );\n\n\t},\n\n\t// returns an array by which times and values can be sorted\n\tgetKeyframeOrder: function ( times ) {\n\n\t\tfunction compareTime( i, j ) {\n\n\t\t\treturn times[ i ] - times[ j ];\n\n\t\t}\n\n\t\tvar n = times.length;\n\t\tvar result = new Array( n );\n\t\tfor ( var i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\t\tresult.sort( compareTime );\n\n\t\treturn result;\n\n\t},\n\n\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\tsortedArray: function ( values, stride, order ) {\n\n\t\tvar nValues = values.length;\n\t\tvar result = new values.constructor( nValues );\n\n\t\tfor ( var i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\t\tvar srcOffset = order[ i ] * stride;\n\n\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// function for parsing AOS keyframe formats\n\tflattenJSON: function ( jsonKeys, times, values, valuePropertyName ) {\n\n\t\tvar i = 1, key = jsonKeys[ 0 ];\n\n\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t}\n\n\t\tif ( key === undefined ) return; // no data\n\n\t\tvar value = key[ valuePropertyName ];\n\t\tif ( value === undefined ) return; // no data\n\n\t\tif ( Array.isArray( value ) ) {\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else if ( value.toArray !== undefined ) {\n\n\t\t\t// ...assume THREE.Math-ish\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else {\n\n\t\t\t// otherwise push as-is\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push( value );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t}\n\n\t}\n\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n * @author tschw\n */\n\nfunction Interpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tthis.parameterPositions = parameterPositions;\n\tthis._cachedIndex = 0;\n\n\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\tthis.sampleValues = sampleValues;\n\tthis.valueSize = sampleSize;\n\n}\n\nObject.assign( Interpolant.prototype, {\n\n\tevaluate: function ( t ) {\n\n\t\tvar pp = this.parameterPositions,\n\t\t\ti1 = this._cachedIndex,\n\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tvar right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( var giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t, t0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tvar t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( var giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tvar mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.afterEnd_( i1 - 1, t0, t );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t},\n\n\tsettings: null, // optional, subclass-specific settings structure\n\t// Note: The indirection allows central control of many interpolants.\n\n\t// --- Protected interface\n\n\tDefaultSettings_: {},\n\n\tgetSettings_: function () {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t},\n\n\tcopySampleValue_: function ( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// Template methods for derived classes:\n\n\tinterpolate_: function ( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t},\n\n\tintervalChanged_: function ( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n} );\n\n//!\\ DECLARE ALIAS AFTER assign prototype !\nObject.assign( Interpolant.prototype, {\n\n\t//( 0, t, t0 ), returns this.resultBuffer\n\tbeforeStart_: Interpolant.prototype.copySampleValue_,\n\n\t//( N-1, tN-1, t ), returns this.resultBuffer\n\tafterEnd_: Interpolant.prototype.copySampleValue_,\n\n} );\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n *\n * @author tschw\n */\n\nfunction CubicInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\tthis._weightPrev = - 0;\n\tthis._offsetPrev = - 0;\n\tthis._weightNext = - 0;\n\tthis._offsetNext = - 0;\n\n}\n\nCubicInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: CubicInterpolant,\n\n\tDefaultSettings_: {\n\n\t\tendingStart: ZeroCurvatureEnding,\n\t\tendingEnd: ZeroCurvatureEnding\n\n\t},\n\n\tintervalChanged_: function ( i1, t0, t1 ) {\n\n\t\tvar pp = this.parameterPositions,\n\t\t\tiPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t},\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tvar sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tvar s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tvar s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tvar sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n * @author tschw\n */\n\nfunction LinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: LinearInterpolant,\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceeding\n * the parameter.\n *\n * @author tschw\n */\n\nfunction DiscreteInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nDiscreteInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: DiscreteInterpolant,\n\n\tinterpolate_: function ( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n} );\n\n/**\n *\n * A timed sequence of keyframes for a specific property.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction KeyframeTrack( name, times, values, interpolation ) {\n\n\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\tthis.name = name;\n\n\tthis.times = AnimationUtils.convertArray( times, this.TimeBufferType );\n\tthis.values = AnimationUtils.convertArray( values, this.ValueBufferType );\n\n\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n}\n\n// Static methods\n\nObject.assign( KeyframeTrack, {\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\ttoJSON: function ( track ) {\n\n\t\tvar trackType = track.constructor;\n\n\t\tvar json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== undefined ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': AnimationUtils.convertArray( track.times, Array ),\n\t\t\t\t'values': AnimationUtils.convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tvar interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n} );\n\nObject.assign( KeyframeTrack.prototype, {\n\n\tconstructor: KeyframeTrack,\n\n\tTimeBufferType: Float32Array,\n\n\tValueBufferType: Float32Array,\n\n\tDefaultInterpolation: InterpolateLinear,\n\n\tInterpolantFactoryMethodDiscrete: function ( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodSmooth: function ( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tsetInterpolation: function ( interpolation ) {\n\n\t\tvar factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tvar message = \"unsupported interpolation for \" +\n\t\t\t\tthis.ValueTypeName + \" keyframe track named \" + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t},\n\n\tgetInterpolation: function () {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t},\n\n\tgetValueSize: function () {\n\n\t\treturn this.values.length / this.times.length;\n\n\t},\n\n\t// move all keyframes either forwards or backwards in time\n\tshift: function ( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tvar times = this.times;\n\n\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale: function ( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tvar times = this.times;\n\n\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim: function ( startTime, endTime ) {\n\n\t\tvar times = this.times,\n\t\t\tnKeys = times.length,\n\t\t\tfrom = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) to = Math.max( to, 1 ), from = to - 1;\n\n\t\t\tvar stride = this.getValueSize();\n\t\t\tthis.times = AnimationUtils.arraySlice( times, from, to );\n\t\t\tthis.values = AnimationUtils.arraySlice( this.values, from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate: function () {\n\n\t\tvar valid = true;\n\n\t\tvar valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tvar times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tvar prevTime = null;\n\n\t\tfor ( var i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tvar currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( AnimationUtils.isTypedArray( values ) ) {\n\n\t\t\t\tfor ( var i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t},\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize: function () {\n\n\t\tvar times = this.times,\n\t\t\tvalues = this.values,\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\twriteIndex = 1,\n\t\t\tlastIndex = times.length - 1;\n\n\t\tfor ( var i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tvar keep = false;\n\n\t\t\tvar time = times[ i ];\n\t\t\tvar timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== time[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tvar offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvar value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tvar readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( var readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = AnimationUtils.arraySlice( times, 0, writeIndex );\n\t\t\tthis.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n *\n * A Track of Boolean keyframe values.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction BooleanKeyframeTrack( name, times, values ) {\n\n\tKeyframeTrack.call( this, name, times, values );\n\n}\n\nBooleanKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: BooleanKeyframeTrack,\n\n\tValueTypeName: 'bool',\n\tValueBufferType: Array,\n\n\tDefaultInterpolation: InterpolateDiscrete,\n\n\tInterpolantFactoryMethodLinear: undefined,\n\tInterpolantFactoryMethodSmooth: undefined\n\n\t// Note: Actually this track could have a optimized / compressed\n\t// representation of a single value and a custom interpolant that\n\t// computes \"firstValue ^ isOdd( index )\".\n\n} );\n\n/**\n *\n * A Track of keyframe values that represent color.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction ColorKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nColorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: ColorKeyframeTrack,\n\n\tValueTypeName: 'color'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n\t// Note: Very basic implementation and nothing special yet.\n\t// However, this is the place for color space parameterization.\n\n} );\n\n/**\n *\n * A Track of numeric keyframe values.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction NumberKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nNumberKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: NumberKeyframeTrack,\n\n\tValueTypeName: 'number'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n} );\n\n/**\n * Spherical linear unit quaternion interpolant.\n *\n * @author tschw\n */\n\nfunction QuaternionLinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nQuaternionLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: QuaternionLinearInterpolant,\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset = i1 * stride,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tfor ( var end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n *\n * A Track of quaternion keyframe values.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction QuaternionKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nQuaternionKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: QuaternionKeyframeTrack,\n\n\tValueTypeName: 'quaternion',\n\n\t// ValueBufferType is inherited\n\n\tDefaultInterpolation: InterpolateLinear,\n\n\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodSmooth: undefined // not yet implemented\n\n} );\n\n/**\n *\n * A Track that interpolates Strings\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction StringKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nStringKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: StringKeyframeTrack,\n\n\tValueTypeName: 'string',\n\tValueBufferType: Array,\n\n\tDefaultInterpolation: InterpolateDiscrete,\n\n\tInterpolantFactoryMethodLinear: undefined,\n\n\tInterpolantFactoryMethodSmooth: undefined\n\n} );\n\n/**\n *\n * A Track of vectored keyframe values.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction VectorKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nVectorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: VectorKeyframeTrack,\n\n\tValueTypeName: 'vector'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n} );\n\n/**\n *\n * Reusable set of Tracks that represent an animation.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n */\n\nfunction AnimationClip( name, duration, tracks ) {\n\n\tthis.name = name;\n\tthis.tracks = tracks;\n\tthis.duration = ( duration !== undefined ) ? duration : - 1;\n\n\tthis.uuid = _Math.generateUUID();\n\n\t// this means it should figure out its duration by scanning the tracks\n\tif ( this.duration < 0 ) {\n\n\t\tthis.resetDuration();\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tvar trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tvar times = [], values = [];\n\n\t\tAnimationUtils.flattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nObject.assign( AnimationClip, {\n\n\tparse: function ( json ) {\n\n\t\tvar tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( var i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\treturn new AnimationClip( json.name, json.duration, tracks );\n\n\t},\n\n\ttoJSON: function ( clip ) {\n\n\t\tvar tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tvar json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid\n\n\t\t};\n\n\t\tfor ( var i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t},\n\n\tCreateFromMorphTargetSequence: function ( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tvar numMorphTargets = morphTargetSequence.length;\n\t\tvar tracks = [];\n\n\t\tfor ( var i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tvar times = [];\n\t\t\tvar values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tvar order = AnimationUtils.getKeyframeOrder( times );\n\t\t\ttimes = AnimationUtils.sortedArray( times, 1, order );\n\t\t\tvalues = AnimationUtils.sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new AnimationClip( name, - 1, tracks );\n\n\t},\n\n\tfindByName: function ( objectOrClipArray, name ) {\n\n\t\tvar clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tvar o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( var i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\tCreateClipsFromMorphTargetSequences: function ( morphTargets, fps, noLoop ) {\n\n\t\tvar animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tvar pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( var i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tvar morphTarget = morphTargets[ i ];\n\t\t\tvar parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tvar name = parts[ 1 ];\n\n\t\t\t\tvar animationMorphTargets = animationToMorphTargets[ name ];\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar clips = [];\n\n\t\tfor ( var name in animationToMorphTargets ) {\n\n\t\t\tclips.push( AnimationClip.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t},\n\n\t// parse the animation.hierarchy format\n\tparseAnimation: function ( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tvar times = [];\n\t\t\t\tvar values = [];\n\n\t\t\t\tAnimationUtils.flattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tvar tracks = [];\n\n\t\tvar clipName = animation.name || 'default';\n\t\t// automatic length determination in AnimationClip.\n\t\tvar duration = animation.length || - 1;\n\t\tvar fps = animation.fps || 30;\n\n\t\tvar hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( var h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tvar animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tvar morphTargetNames = {};\n\n\t\t\t\tfor ( var k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( var m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( var morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tvar times = [];\n\t\t\t\t\tvar values = [];\n\n\t\t\t\t\tfor ( var m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tvar animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * ( fps || 1.0 );\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tvar boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar clip = new AnimationClip( clipName, duration, tracks );\n\n\t\treturn clip;\n\n\t}\n\n} );\n\nObject.assign( AnimationClip.prototype, {\n\n\tresetDuration: function () {\n\n\t\tvar tracks = this.tracks, duration = 0;\n\n\t\tfor ( var i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tvar track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t},\n\n\ttrim: function () {\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tvalidate: function () {\n\n\t\tvar valid = true;\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t},\n\n\toptimize: function () {\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction MaterialLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\tthis.textures = {};\n\n}\n\nObject.assign( MaterialLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetTextures: function ( value ) {\n\n\t\tthis.textures = value;\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tvar textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tvar material = new Materials[ json.type ]();\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearCoat !== undefined ) material.clearCoat = json.clearCoat;\n\t\tif ( json.clearCoatRoughness !== undefined ) material.clearCoatRoughness = json.clearCoatRoughness;\n\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== 1 ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.skinning !== undefined ) material.skinning = json.skinning;\n\t\tif ( json.morphTargets !== undefined ) material.morphTargets = json.morphTargets;\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( var name in json.uniforms ) {\n\n\t\t\t\tvar uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\n\t\t// Deprecated\n\n\t\tif ( json.shading !== undefined ) material.flatShading = json.shading === 1; // THREE.FlatShading\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\n\t\tif ( json.alphaMap !== undefined ) {\n\n\t\t\tmaterial.alphaMap = getTexture( json.alphaMap );\n\t\t\tmaterial.transparent = true;\n\n\t\t}\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tvar normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\treturn material;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction BufferGeometryLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( BufferGeometryLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tvar typedArray = new TYPED_ARRAYS[ index.type ]( index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tvar attributes = json.data.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tvar attribute = attributes[ key ];\n\t\t\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\n\n\t\t\tgeometry.addAttribute( key, new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized ) );\n\n\t\t}\n\n\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tvar center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\treturn geometry;\n\n\t}\n\n} );\n\nvar TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\t// Workaround for IE11 pre KB2929437. See #11440\n\tUint8ClampedArray: typeof Uint8ClampedArray !== 'undefined' ? Uint8ClampedArray : Uint8Array,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Loader() {}\n\nLoader.Handlers = {\n\n\thandlers: [],\n\n\tadd: function ( regex, loader ) {\n\n\t\tthis.handlers.push( regex, loader );\n\n\t},\n\n\tget: function ( file ) {\n\n\t\tvar handlers = this.handlers;\n\n\t\tfor ( var i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\tvar regex = handlers[ i ];\n\t\t\tvar loader = handlers[ i + 1 ];\n\n\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\treturn loader;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n};\n\nObject.assign( Loader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tonLoadStart: function () {},\n\n\tonLoadProgress: function () {},\n\n\tonLoadComplete: function () {},\n\n\tinitMaterials: function ( materials, texturePath, crossOrigin ) {\n\n\t\tvar array = [];\n\n\t\tfor ( var i = 0; i < materials.length; ++ i ) {\n\n\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\n\n\t\t}\n\n\t\treturn array;\n\n\t},\n\n\tcreateMaterial: ( function () {\n\n\t\tvar BlendingMode = {\n\t\t\tNoBlending: NoBlending,\n\t\t\tNormalBlending: NormalBlending,\n\t\t\tAdditiveBlending: AdditiveBlending,\n\t\t\tSubtractiveBlending: SubtractiveBlending,\n\t\t\tMultiplyBlending: MultiplyBlending,\n\t\t\tCustomBlending: CustomBlending\n\t\t};\n\n\t\tvar color = new Color();\n\t\tvar textureLoader = new TextureLoader();\n\t\tvar materialLoader = new MaterialLoader();\n\n\t\treturn function createMaterial( m, texturePath, crossOrigin ) {\n\n\t\t\t// convert from old material format\n\n\t\t\tvar textures = {};\n\n\t\t\tfunction loadTexture( path, repeat, offset, wrap, anisotropy ) {\n\n\t\t\t\tvar fullPath = texturePath + path;\n\t\t\t\tvar loader = Loader.Handlers.get( fullPath );\n\n\t\t\t\tvar texture;\n\n\t\t\t\tif ( loader !== null ) {\n\n\t\t\t\t\ttexture = loader.load( fullPath );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttextureLoader.setCrossOrigin( crossOrigin );\n\t\t\t\t\ttexture = textureLoader.load( fullPath );\n\n\t\t\t\t}\n\n\t\t\t\tif ( repeat !== undefined ) {\n\n\t\t\t\t\ttexture.repeat.fromArray( repeat );\n\n\t\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = RepeatWrapping;\n\n\t\t\t\t}\n\n\t\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\t\ttexture.offset.fromArray( offset );\n\n\t\t\t\t}\n\n\t\t\t\tif ( wrap !== undefined ) {\n\n\t\t\t\t\tif ( wrap[ 0 ] === 'repeat' ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\tif ( wrap[ 0 ] === 'mirror' ) texture.wrapS = MirroredRepeatWrapping;\n\n\t\t\t\t\tif ( wrap[ 1 ] === 'repeat' ) texture.wrapT = RepeatWrapping;\n\t\t\t\t\tif ( wrap[ 1 ] === 'mirror' ) texture.wrapT = MirroredRepeatWrapping;\n\n\t\t\t\t}\n\n\t\t\t\tif ( anisotropy !== undefined ) {\n\n\t\t\t\t\ttexture.anisotropy = anisotropy;\n\n\t\t\t\t}\n\n\t\t\t\tvar uuid = _Math.generateUUID();\n\n\t\t\t\ttextures[ uuid ] = texture;\n\n\t\t\t\treturn uuid;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar json = {\n\t\t\t\tuuid: _Math.generateUUID(),\n\t\t\t\ttype: 'MeshLambertMaterial'\n\t\t\t};\n\n\t\t\tfor ( var name in m ) {\n\n\t\t\t\tvar value = m[ name ];\n\n\t\t\t\tswitch ( name ) {\n\n\t\t\t\t\tcase 'DbgColor':\n\t\t\t\t\tcase 'DbgIndex':\n\t\t\t\t\tcase 'opticalDensity':\n\t\t\t\t\tcase 'illumination':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'DbgName':\n\t\t\t\t\t\tjson.name = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'blending':\n\t\t\t\t\t\tjson.blending = BlendingMode[ value ];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorAmbient':\n\t\t\t\t\tcase 'mapAmbient':\n\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial:', name, 'is no longer supported.' );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorDiffuse':\n\t\t\t\t\t\tjson.color = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorSpecular':\n\t\t\t\t\t\tjson.specular = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorEmissive':\n\t\t\t\t\t\tjson.emissive = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'specularCoef':\n\t\t\t\t\t\tjson.shininess = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'shading':\n\t\t\t\t\t\tif ( value.toLowerCase() === 'basic' ) json.type = 'MeshBasicMaterial';\n\t\t\t\t\t\tif ( value.toLowerCase() === 'phong' ) json.type = 'MeshPhongMaterial';\n\t\t\t\t\t\tif ( value.toLowerCase() === 'standard' ) json.type = 'MeshStandardMaterial';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapDiffuse':\n\t\t\t\t\t\tjson.map = loadTexture( value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapDiffuseRepeat':\n\t\t\t\t\tcase 'mapDiffuseOffset':\n\t\t\t\t\tcase 'mapDiffuseWrap':\n\t\t\t\t\tcase 'mapDiffuseAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapEmissive':\n\t\t\t\t\t\tjson.emissiveMap = loadTexture( value, m.mapEmissiveRepeat, m.mapEmissiveOffset, m.mapEmissiveWrap, m.mapEmissiveAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapEmissiveRepeat':\n\t\t\t\t\tcase 'mapEmissiveOffset':\n\t\t\t\t\tcase 'mapEmissiveWrap':\n\t\t\t\t\tcase 'mapEmissiveAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapLight':\n\t\t\t\t\t\tjson.lightMap = loadTexture( value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapLightRepeat':\n\t\t\t\t\tcase 'mapLightOffset':\n\t\t\t\t\tcase 'mapLightWrap':\n\t\t\t\t\tcase 'mapLightAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAO':\n\t\t\t\t\t\tjson.aoMap = loadTexture( value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAORepeat':\n\t\t\t\t\tcase 'mapAOOffset':\n\t\t\t\t\tcase 'mapAOWrap':\n\t\t\t\t\tcase 'mapAOAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBump':\n\t\t\t\t\t\tjson.bumpMap = loadTexture( value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBumpScale':\n\t\t\t\t\t\tjson.bumpScale = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBumpRepeat':\n\t\t\t\t\tcase 'mapBumpOffset':\n\t\t\t\t\tcase 'mapBumpWrap':\n\t\t\t\t\tcase 'mapBumpAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormal':\n\t\t\t\t\t\tjson.normalMap = loadTexture( value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormalFactor':\n\t\t\t\t\t\tjson.normalScale = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormalRepeat':\n\t\t\t\t\tcase 'mapNormalOffset':\n\t\t\t\t\tcase 'mapNormalWrap':\n\t\t\t\t\tcase 'mapNormalAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapSpecular':\n\t\t\t\t\t\tjson.specularMap = loadTexture( value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapSpecularRepeat':\n\t\t\t\t\tcase 'mapSpecularOffset':\n\t\t\t\t\tcase 'mapSpecularWrap':\n\t\t\t\t\tcase 'mapSpecularAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapMetalness':\n\t\t\t\t\t\tjson.metalnessMap = loadTexture( value, m.mapMetalnessRepeat, m.mapMetalnessOffset, m.mapMetalnessWrap, m.mapMetalnessAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapMetalnessRepeat':\n\t\t\t\t\tcase 'mapMetalnessOffset':\n\t\t\t\t\tcase 'mapMetalnessWrap':\n\t\t\t\t\tcase 'mapMetalnessAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapRoughness':\n\t\t\t\t\t\tjson.roughnessMap = loadTexture( value, m.mapRoughnessRepeat, m.mapRoughnessOffset, m.mapRoughnessWrap, m.mapRoughnessAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapRoughnessRepeat':\n\t\t\t\t\tcase 'mapRoughnessOffset':\n\t\t\t\t\tcase 'mapRoughnessWrap':\n\t\t\t\t\tcase 'mapRoughnessAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAlpha':\n\t\t\t\t\t\tjson.alphaMap = loadTexture( value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAlphaRepeat':\n\t\t\t\t\tcase 'mapAlphaOffset':\n\t\t\t\t\tcase 'mapAlphaWrap':\n\t\t\t\t\tcase 'mapAlphaAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'flipSided':\n\t\t\t\t\t\tjson.side = BackSide;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'doubleSided':\n\t\t\t\t\t\tjson.side = DoubleSide;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'transparency':\n\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial: transparency has been renamed to opacity' );\n\t\t\t\t\t\tjson.opacity = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'depthTest':\n\t\t\t\t\tcase 'depthWrite':\n\t\t\t\t\tcase 'colorWrite':\n\t\t\t\t\tcase 'opacity':\n\t\t\t\t\tcase 'reflectivity':\n\t\t\t\t\tcase 'transparent':\n\t\t\t\t\tcase 'visible':\n\t\t\t\t\tcase 'wireframe':\n\t\t\t\t\t\tjson[ name ] = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'vertexColors':\n\t\t\t\t\t\tif ( value === true ) json.vertexColors = VertexColors;\n\t\t\t\t\t\tif ( value === 'face' ) json.vertexColors = FaceColors;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.error( 'THREE.Loader.createMaterial: Unsupported', name, value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.type === 'MeshBasicMaterial' ) delete json.emissive;\n\t\t\tif ( json.type !== 'MeshPhongMaterial' ) delete json.specular;\n\n\t\t\tif ( json.opacity < 1 ) json.transparent = true;\n\n\t\t\tmaterialLoader.setTextures( textures );\n\n\t\t\treturn materialLoader.parse( json );\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * @author Don McCurdy / https://www.donmccurdy.com\n */\n\nvar LoaderUtils = {\n\n\tdecodeText: function ( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tvar s = '';\n\n\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\t// Merges multi-byte utf-8 characters.\n\t\treturn decodeURIComponent( escape( s ) );\n\n\t},\n\n\textractUrlBase: function ( url ) {\n\n\t\tvar index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.substr( 0, index + 1 );\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction JSONLoader( manager ) {\n\n\tif ( typeof manager === 'boolean' ) {\n\n\t\tconsole.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );\n\t\tmanager = undefined;\n\n\t}\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\tthis.withCredentials = false;\n\n}\n\nObject.assign( JSONLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar path = ( this.path === undefined ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json = JSON.parse( text );\n\t\t\tvar metadata = json.metadata;\n\n\t\t\tif ( metadata !== undefined ) {\n\n\t\t\t\tvar type = metadata.type;\n\n\t\t\t\tif ( type !== undefined ) {\n\n\t\t\t\t\tif ( type.toLowerCase() === 'object' ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar object = scope.parse( json, path );\n\t\t\tonLoad( object.geometry, object.materials );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t},\n\n\tsetResourcePath: function ( value ) {\n\n\t\tthis.resourcePath = value;\n\t\treturn this;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tparse: ( function () {\n\n\t\tfunction parseModel( json, geometry ) {\n\n\t\t\tfunction isBitSet( value, position ) {\n\n\t\t\t\treturn value & ( 1 << position );\n\n\t\t\t}\n\n\t\t\tvar i, j, fi,\n\n\t\t\t\toffset, zLength,\n\n\t\t\t\tcolorIndex, normalIndex, uvIndex, materialIndex,\n\n\t\t\t\ttype,\n\t\t\t\tisQuad,\n\t\t\t\thasMaterial,\n\t\t\t\thasFaceVertexUv,\n\t\t\t\thasFaceNormal, hasFaceVertexNormal,\n\t\t\t\thasFaceColor, hasFaceVertexColor,\n\n\t\t\t\tvertex, face, faceA, faceB, hex, normal,\n\n\t\t\t\tuvLayer, uv, u, v,\n\n\t\t\t\tfaces = json.faces,\n\t\t\t\tvertices = json.vertices,\n\t\t\t\tnormals = json.normals,\n\t\t\t\tcolors = json.colors,\n\n\t\t\t\tscale = json.scale,\n\n\t\t\t\tnUvLayers = 0;\n\n\n\t\t\tif ( json.uvs !== undefined ) {\n\n\t\t\t\t// disregard empty arrays\n\n\t\t\t\tfor ( i = 0; i < json.uvs.length; i ++ ) {\n\n\t\t\t\t\tif ( json.uvs[ i ].length ) nUvLayers ++;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\toffset = 0;\n\t\t\tzLength = vertices.length;\n\n\t\t\twhile ( offset < zLength ) {\n\n\t\t\t\tvertex = new Vector3();\n\n\t\t\t\tvertex.x = vertices[ offset ++ ] * scale;\n\t\t\t\tvertex.y = vertices[ offset ++ ] * scale;\n\t\t\t\tvertex.z = vertices[ offset ++ ] * scale;\n\n\t\t\t\tgeometry.vertices.push( vertex );\n\n\t\t\t}\n\n\t\t\toffset = 0;\n\t\t\tzLength = faces.length;\n\n\t\t\twhile ( offset < zLength ) {\n\n\t\t\t\ttype = faces[ offset ++ ];\n\n\t\t\t\tisQuad = isBitSet( type, 0 );\n\t\t\t\thasMaterial = isBitSet( type, 1 );\n\t\t\t\thasFaceVertexUv = isBitSet( type, 3 );\n\t\t\t\thasFaceNormal = isBitSet( type, 4 );\n\t\t\t\thasFaceVertexNormal = isBitSet( type, 5 );\n\t\t\t\thasFaceColor = isBitSet( type, 6 );\n\t\t\t\thasFaceVertexColor = isBitSet( type, 7 );\n\n\t\t\t\t// console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\n\n\t\t\t\tif ( isQuad ) {\n\n\t\t\t\t\tfaceA = new Face3();\n\t\t\t\t\tfaceA.a = faces[ offset ];\n\t\t\t\t\tfaceA.b = faces[ offset + 1 ];\n\t\t\t\t\tfaceA.c = faces[ offset + 3 ];\n\n\t\t\t\t\tfaceB = new Face3();\n\t\t\t\t\tfaceB.a = faces[ offset + 1 ];\n\t\t\t\t\tfaceB.b = faces[ offset + 2 ];\n\t\t\t\t\tfaceB.c = faces[ offset + 3 ];\n\n\t\t\t\t\toffset += 4;\n\n\t\t\t\t\tif ( hasMaterial ) {\n\n\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\t\tfaceA.materialIndex = materialIndex;\n\t\t\t\t\t\tfaceB.materialIndex = materialIndex;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// to get face <=> uv index correspondence\n\n\t\t\t\t\tfi = geometry.faces.length;\n\n\t\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = [];\n\n\t\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\n\n\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n\t\t\t\t\t\t\t\tuv = new Vector2( u, v );\n\n\t\t\t\t\t\t\t\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\n\t\t\t\t\t\t\t\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\tfaceA.normal.set(\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tfaceB.normal.copy( faceA.normal );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\tnormal = new Vector3(\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t);\n\n\n\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\n\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\thex = colors[ colorIndex ];\n\n\t\t\t\t\t\tfaceA.color.setHex( hex );\n\t\t\t\t\t\tfaceB.color.setHex( hex );\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\thex = colors[ colorIndex ];\n\n\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexColors.push( new Color( hex ) );\n\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexColors.push( new Color( hex ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.faces.push( faceA );\n\t\t\t\t\tgeometry.faces.push( faceB );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tface = new Face3();\n\t\t\t\t\tface.a = faces[ offset ++ ];\n\t\t\t\t\tface.b = faces[ offset ++ ];\n\t\t\t\t\tface.c = faces[ offset ++ ];\n\n\t\t\t\t\tif ( hasMaterial ) {\n\n\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\t\tface.materialIndex = materialIndex;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// to get face <=> uv index correspondence\n\n\t\t\t\t\tfi = geometry.faces.length;\n\n\t\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\n\t\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n\t\t\t\t\t\t\t\tuv = new Vector2( u, v );\n\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\tface.normal.set(\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\tnormal = new Vector3(\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tface.vertexNormals.push( normal );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\tface.color.setHex( colors[ colorIndex ] );\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\tface.vertexColors.push( new Color( colors[ colorIndex ] ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.faces.push( face );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseSkin( json, geometry ) {\n\n\t\t\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\n\n\t\t\tif ( json.skinWeights ) {\n\n\t\t\t\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\n\n\t\t\t\t\tvar x = json.skinWeights[ i ];\n\t\t\t\t\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\n\t\t\t\t\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\n\t\t\t\t\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\n\n\t\t\t\t\tgeometry.skinWeights.push( new Vector4( x, y, z, w ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.skinIndices ) {\n\n\t\t\t\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\n\n\t\t\t\t\tvar a = json.skinIndices[ i ];\n\t\t\t\t\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\n\t\t\t\t\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\n\t\t\t\t\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\n\n\t\t\t\t\tgeometry.skinIndices.push( new Vector4( a, b, c, d ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeometry.bones = json.bones;\n\n\t\t\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\n\n\t\t\t\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\n\t\t\t\t\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseMorphing( json, geometry ) {\n\n\t\t\tvar scale = json.scale;\n\n\t\t\tif ( json.morphTargets !== undefined ) {\n\n\t\t\t\tfor ( var i = 0, l = json.morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\t\tgeometry.morphTargets[ i ] = {};\n\t\t\t\t\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\n\t\t\t\t\tgeometry.morphTargets[ i ].vertices = [];\n\n\t\t\t\t\tvar dstVertices = geometry.morphTargets[ i ].vertices;\n\t\t\t\t\tvar srcVertices = json.morphTargets[ i ].vertices;\n\n\t\t\t\t\tfor ( var v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\n\n\t\t\t\t\t\tvar vertex = new Vector3();\n\t\t\t\t\t\tvertex.x = srcVertices[ v ] * scale;\n\t\t\t\t\t\tvertex.y = srcVertices[ v + 1 ] * scale;\n\t\t\t\t\t\tvertex.z = srcVertices[ v + 2 ] * scale;\n\n\t\t\t\t\t\tdstVertices.push( vertex );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.morphColors !== undefined && json.morphColors.length > 0 ) {\n\n\t\t\t\tconsole.warn( 'THREE.JSONLoader: \"morphColors\" no longer supported. Using them as face colors.' );\n\n\t\t\t\tvar faces = geometry.faces;\n\t\t\t\tvar morphColors = json.morphColors[ 0 ].colors;\n\n\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\t\tfaces[ i ].color.fromArray( morphColors, i * 3 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseAnimations( json, geometry ) {\n\n\t\t\tvar outputAnimations = [];\n\n\t\t\t// parse old style Bone/Hierarchy animations\n\t\t\tvar animations = [];\n\n\t\t\tif ( json.animation !== undefined ) {\n\n\t\t\t\tanimations.push( json.animation );\n\n\t\t\t}\n\n\t\t\tif ( json.animations !== undefined ) {\n\n\t\t\t\tif ( json.animations.length ) {\n\n\t\t\t\t\tanimations = animations.concat( json.animations );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tanimations.push( json.animations );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < animations.length; i ++ ) {\n\n\t\t\t\tvar clip = AnimationClip.parseAnimation( animations[ i ], geometry.bones );\n\t\t\t\tif ( clip ) outputAnimations.push( clip );\n\n\t\t\t}\n\n\t\t\t// parse implicit morph animations\n\t\t\tif ( geometry.morphTargets ) {\n\n\t\t\t\t// TODO: Figure out what an appropraite FPS is for morph target animations -- defaulting to 10, but really it is completely arbitrary.\n\t\t\t\tvar morphAnimationClips = AnimationClip.CreateClipsFromMorphTargetSequences( geometry.morphTargets, 10 );\n\t\t\t\toutputAnimations = outputAnimations.concat( morphAnimationClips );\n\n\t\t\t}\n\n\t\t\tif ( outputAnimations.length > 0 ) geometry.animations = outputAnimations;\n\n\t\t}\n\n\t\treturn function parse( json, path ) {\n\n\t\t\tif ( json.data !== undefined ) {\n\n\t\t\t\t// Geometry 4.0 spec\n\t\t\t\tjson = json.data;\n\n\t\t\t}\n\n\t\t\tif ( json.scale !== undefined ) {\n\n\t\t\t\tjson.scale = 1.0 / json.scale;\n\n\t\t\t} else {\n\n\t\t\t\tjson.scale = 1.0;\n\n\t\t\t}\n\n\t\t\tvar geometry = new Geometry();\n\n\t\t\tparseModel( json, geometry );\n\t\t\tparseSkin( json, geometry );\n\t\t\tparseMorphing( json, geometry );\n\t\t\tparseAnimations( json, geometry );\n\n\t\t\tgeometry.computeFaceNormals();\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\tif ( json.materials === undefined || json.materials.length === 0 ) {\n\n\t\t\t\treturn { geometry: geometry };\n\n\t\t\t} else {\n\n\t\t\t\tvar materials = Loader.prototype.initMaterials( json.materials, this.resourcePath || path, this.crossOrigin );\n\n\t\t\t\treturn { geometry: geometry, materials: materials };\n\n\t\t\t}\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ObjectLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\tthis.texturePath = '';\n\n}\n\nObject.assign( ObjectLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.texturePath === '' ) {\n\n\t\t\tthis.texturePath = url.substring( 0, url.lastIndexOf( '/' ) + 1 );\n\n\t\t}\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url + '. Use THREE.JSONLoader instead.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetTexturePath: function ( value ) {\n\n\t\tthis.texturePath = value;\n\t\treturn this;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tparse: function ( json, onLoad ) {\n\n\t\tvar shapes = this.parseShape( json.shapes );\n\t\tvar geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tvar images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tvar textures = this.parseTextures( json.textures, images );\n\t\tvar materials = this.parseMaterials( json.materials, textures );\n\n\t\tvar object = this.parseObject( json.object, geometries, materials );\n\n\t\tif ( json.animations ) {\n\n\t\t\tobject.animations = this.parseAnimations( json.animations );\n\n\t\t}\n\n\t\tif ( json.images === undefined || json.images.length === 0 ) {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t},\n\n\tparseShape: function ( json ) {\n\n\t\tvar shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t},\n\n\tparseGeometries: function ( json, shapes ) {\n\n\t\tvar geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tvar geometryLoader = new JSONLoader();\n\t\t\tvar bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar geometry;\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'PlaneGeometry':\n\t\t\t\t\tcase 'PlaneBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BoxGeometry':\n\t\t\t\t\tcase 'BoxBufferGeometry':\n\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.depth,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.depthSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CircleGeometry':\n\t\t\t\t\tcase 'CircleBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CylinderGeometry':\n\t\t\t\t\tcase 'CylinderBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radiusTop,\n\t\t\t\t\t\t\tdata.radiusBottom,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ConeGeometry':\n\t\t\t\t\tcase 'ConeBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SphereGeometry':\n\t\t\t\t\tcase 'SphereBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DodecahedronGeometry':\n\t\t\t\t\tcase 'DodecahedronBufferGeometry':\n\t\t\t\t\tcase 'IcosahedronGeometry':\n\t\t\t\t\tcase 'IcosahedronBufferGeometry':\n\t\t\t\t\tcase 'OctahedronGeometry':\n\t\t\t\t\tcase 'OctahedronBufferGeometry':\n\t\t\t\t\tcase 'TetrahedronGeometry':\n\t\t\t\t\tcase 'TetrahedronBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.detail\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'RingGeometry':\n\t\t\t\t\tcase 'RingBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.innerRadius,\n\t\t\t\t\t\t\tdata.outerRadius,\n\t\t\t\t\t\t\tdata.thetaSegments,\n\t\t\t\t\t\t\tdata.phiSegments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusGeometry':\n\t\t\t\t\tcase 'TorusBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.arc\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusKnotGeometry':\n\t\t\t\t\tcase 'TorusKnotBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.p,\n\t\t\t\t\t\t\tdata.q\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'LatheGeometry':\n\t\t\t\t\tcase 'LatheBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.points,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PolyhedronGeometry':\n\t\t\t\t\tcase 'PolyhedronBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.vertices,\n\t\t\t\t\t\t\tdata.indices,\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.details\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ShapeGeometry':\n\t\t\t\t\tcase 'ShapeBufferGeometry':\n\n\t\t\t\t\t\tvar geometryShapes = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\tdata.curveSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\tcase 'ExtrudeGeometry':\n\t\t\t\t\tcase 'ExtrudeBufferGeometry':\n\n\t\t\t\t\t\tvar geometryShapes = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar extrudePath = data.options.extrudePath;\n\n\t\t\t\t\t\tif ( extrudePath !== undefined ) {\n\n\t\t\t\t\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\tdata.options\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Geometry':\n\n\t\t\t\t\t\tgeometry = geometryLoader.parse( data, this.texturePath ).geometry;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( geometry.isBufferGeometry === true && data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t},\n\n\tparseMaterials: function ( json, textures ) {\n\n\t\tvar materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tvar loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tif ( data.type === 'MultiMaterial' ) {\n\n\t\t\t\t\t// Deprecated\n\n\t\t\t\t\tvar array = [];\n\n\t\t\t\t\tfor ( var j = 0; j < data.materials.length; j ++ ) {\n\n\t\t\t\t\t\tarray.push( loader.parse( data.materials[ j ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials[ data.uuid ] = array;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tmaterials[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t},\n\n\tparseAnimations: function ( json ) {\n\n\t\tvar animations = [];\n\n\t\tfor ( var i = 0; i < json.length; i ++ ) {\n\n\t\t\tvar data = json[ i ];\n\n\t\t\tvar clip = AnimationClip.parse( data );\n\n\t\t\tif ( data.uuid !== undefined ) clip.uuid = data.uuid;\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t},\n\n\tparseImages: function ( json, onLoad ) {\n\n\t\tvar scope = this;\n\t\tvar images = {};\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tvar manager = new LoadingManager( onLoad );\n\n\t\t\tvar loader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( var i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tvar image = json[ i ];\n\t\t\t\tvar url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\timages[ image.uuid ] = [];\n\n\t\t\t\t\tfor ( var j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar currentUrl = url[ j ];\n\n\t\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( currentUrl ) ? currentUrl : scope.texturePath + currentUrl;\n\n\t\t\t\t\t\timages[ image.uuid ].push( loadImage( path ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.texturePath + image.url;\n\n\t\t\t\t\timages[ image.uuid ] = loadImage( path );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t},\n\n\tparseTextures: function ( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tvar textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tvar texture;\n\n\t\t\t\tif ( Array.isArray( images[ data.image ] ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture( images[ data.image ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture = new Texture( images[ data.image ] );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t},\n\n\tparseObject: function ( data, geometries, materials ) {\n\n\t\tvar object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tvar array = [];\n\n\t\t\t\tfor ( var i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.' );\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tvar geometry = getGeometry( data.geometry );\n\t\t\t\tvar material = getMaterial( data.material );\n\n\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 ) {\n\n\t\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tvar children = data.children;\n\n\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tvar levels = data.levels;\n\n\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tvar level = levels[ l ];\n\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n} );\n\nvar TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tSphericalReflectionMapping: SphericalReflectionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping,\n\tCubeUVRefractionMapping: CubeUVRefractionMapping\n};\n\nvar TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nvar TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipMapNearestFilter: NearestMipMapNearestFilter,\n\tNearestMipMapLinearFilter: NearestMipMapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipMapNearestFilter: LinearMipMapNearestFilter,\n\tLinearMipMapLinearFilter: LinearMipMapLinearFilter\n};\n\n/**\n * @author thespite / http://clicktorelease.com/\n */\n\n\nfunction ImageBitmapLoader( manager ) {\n\n\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t}\n\n\tif ( typeof fetch === 'undefined' ) {\n\n\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t}\n\n\tthis.manager = manager !== undefined ? manager : DefaultLoadingManager;\n\tthis.options = undefined;\n\n}\n\nImageBitmapLoader.prototype = {\n\n\tconstructor: ImageBitmapLoader,\n\n\tsetOptions: function setOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t},\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tfetch( url ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, scope.options );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tscope.manager.itemEnd( url );\n\t\t\tscope.manager.itemError( url );\n\n\t\t} );\n\n\t},\n\n\tsetCrossOrigin: function ( /* value */ ) {\n\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n};\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * minimal class for proxing functions to Path. Replaces old \"extractSubpaths()\"\n **/\n\nfunction ShapePath() {\n\n\tthis.type = 'ShapePath';\n\n\tthis.color = new Color();\n\n\tthis.subPaths = [];\n\tthis.currentPath = null;\n\n}\n\nObject.assign( ShapePath.prototype, {\n\n\tmoveTo: function ( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t},\n\n\tlineTo: function ( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t},\n\n\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t},\n\n\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t},\n\n\tsplineThru: function ( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t},\n\n\ttoShapes: function ( isCCW, noHoles ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tvar shapes = [];\n\n\t\t\tfor ( var i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tvar tmpPath = inSubpaths[ i ];\n\n\t\t\t\tvar tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tvar polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tvar inside = false;\n\t\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tvar edgeLowPt = inPolygon[ p ];\n\t\t\t\tvar edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tvar isClockWise = ShapeUtils.isClockWise;\n\n\t\tvar subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tvar solid, tmpPath, tmpShape, shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tvar holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tvar betterShapeHoles = [];\n\t\tvar newShapes = [];\n\t\tvar newShapeHoles = [];\n\t\tvar mainIdx = 0;\n\t\tvar tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( var i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tvar ambiguous = false;\n\t\t\tvar toChange = [];\n\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tvar sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tvar ho = sho[ hIdx ];\n\t\t\t\t\tvar hole_unassigned = true;\n\n\t\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t// console.log(\"ambiguous: \", ambiguous);\n\t\t\tif ( toChange.length > 0 ) {\n\n\t\t\t\t// console.log(\"to change: \", toChange);\n\t\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar tmpHoles;\n\n\t\tfor ( var i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction Font( data ) {\n\n\tthis.type = 'Font';\n\n\tthis.data = data;\n\n}\n\nObject.assign( Font.prototype, {\n\n\tisFont: true,\n\n\tgenerateShapes: function ( text, size ) {\n\n\t\tif ( size === undefined ) size = 100;\n\n\t\tvar shapes = [];\n\t\tvar paths = createPaths( text, size, this.data );\n\n\t\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\n\n\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n} );\n\nfunction createPaths( text, size, data ) {\n\n\tvar chars = Array.from ? Array.from( text ) : String( text ).split( '' ); // see #13988\n\tvar scale = size / data.resolution;\n\tvar line_height = ( data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness ) * scale;\n\n\tvar paths = [];\n\n\tvar offsetX = 0, offsetY = 0;\n\n\tfor ( var i = 0; i < chars.length; i ++ ) {\n\n\t\tvar char = chars[ i ];\n\n\t\tif ( char === '\\n' ) {\n\n\t\t\toffsetX = 0;\n\t\t\toffsetY -= line_height;\n\n\t\t} else {\n\n\t\t\tvar ret = createPath( char, scale, offsetX, offsetY, data );\n\t\t\toffsetX += ret.offsetX;\n\t\t\tpaths.push( ret.path );\n\n\t\t}\n\n\t}\n\n\treturn paths;\n\n}\n\nfunction createPath( char, scale, offsetX, offsetY, data ) {\n\n\tvar glyph = data.glyphs[ char ] || data.glyphs[ '?' ];\n\n\tif ( ! glyph ) return;\n\n\tvar path = new ShapePath();\n\n\tvar x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;\n\n\tif ( glyph.o ) {\n\n\t\tvar outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\n\n\t\tfor ( var i = 0, l = outline.length; i < l; ) {\n\n\t\t\tvar action = outline[ i ++ ];\n\n\t\t\tswitch ( action ) {\n\n\t\t\t\tcase 'm': // moveTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.moveTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'l': // lineTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.lineTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'q': // quadraticCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'b': // bezierCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy2 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn { offsetX: glyph.ha * scale, path: path };\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction FontLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( FontLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tconsole.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\n\t\t\t\tjson = JSON.parse( text.substring( 65, text.length - 2 ) );\n\n\t\t\t}\n\n\t\t\tvar font = scope.parse( json );\n\n\t\t\tif ( onLoad ) onLoad( font );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\treturn new Font( json );\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar context;\n\nvar AudioContext = {\n\n\tgetContext: function () {\n\n\t\tif ( context === undefined ) {\n\n\t\t\tcontext = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn context;\n\n\t},\n\n\tsetContext: function ( value ) {\n\n\t\tcontext = value;\n\n\t}\n\n};\n\n/**\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\n */\n\nfunction AudioLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( AudioLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\tvar bufferCopy = buffer.slice( 0 );\n\n\t\t\tvar context = AudioContext.getContext();\n\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t} );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction StereoCamera() {\n\n\tthis.type = 'StereoCamera';\n\n\tthis.aspect = 1;\n\n\tthis.eyeSep = 0.064;\n\n\tthis.cameraL = new PerspectiveCamera();\n\tthis.cameraL.layers.enable( 1 );\n\tthis.cameraL.matrixAutoUpdate = false;\n\n\tthis.cameraR = new PerspectiveCamera();\n\tthis.cameraR.layers.enable( 2 );\n\tthis.cameraR.matrixAutoUpdate = false;\n\n}\n\nObject.assign( StereoCamera.prototype, {\n\n\tupdate: ( function () {\n\n\t\tvar instance, focus, fov, aspect, near, far, zoom, eyeSep;\n\n\t\tvar eyeRight = new Matrix4();\n\t\tvar eyeLeft = new Matrix4();\n\n\t\treturn function update( camera ) {\n\n\t\t\tvar needsUpdate = instance !== this || focus !== camera.focus || fov !== camera.fov ||\n\t\t\t\t\t\t\t\t\t\t\t\taspect !== camera.aspect * this.aspect || near !== camera.near ||\n\t\t\t\t\t\t\t\t\t\t\t\tfar !== camera.far || zoom !== camera.zoom || eyeSep !== this.eyeSep;\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\tinstance = this;\n\t\t\t\tfocus = camera.focus;\n\t\t\t\tfov = camera.fov;\n\t\t\t\taspect = camera.aspect * this.aspect;\n\t\t\t\tnear = camera.near;\n\t\t\t\tfar = camera.far;\n\t\t\t\tzoom = camera.zoom;\n\n\t\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t\tvar projectionMatrix = camera.projectionMatrix.clone();\n\t\t\t\teyeSep = this.eyeSep / 2;\n\t\t\t\tvar eyeSepOnProjection = eyeSep * near / focus;\n\t\t\t\tvar ymax = ( near * Math.tan( _Math.DEG2RAD * fov * 0.5 ) ) / zoom;\n\t\t\t\tvar xmin, xmax;\n\n\t\t\t\t// translate xOffset\n\n\t\t\t\teyeLeft.elements[ 12 ] = - eyeSep;\n\t\t\t\teyeRight.elements[ 12 ] = eyeSep;\n\n\t\t\t\t// for left eye\n\n\t\t\t\txmin = - ymax * aspect + eyeSepOnProjection;\n\t\t\t\txmax = ymax * aspect + eyeSepOnProjection;\n\n\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\tthis.cameraL.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t\t// for right eye\n\n\t\t\t\txmin = - ymax * aspect - eyeSepOnProjection;\n\t\t\t\txmax = ymax * aspect - eyeSepOnProjection;\n\n\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\tthis.cameraR.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t}\n\n\t\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( eyeLeft );\n\t\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( eyeRight );\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * Camera for rendering cube maps\n *\t- renders scene into axis-aligned cube\n *\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction CubeCamera( near, far, cubeResolution ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'CubeCamera';\n\n\tvar fov = 90, aspect = 1;\n\n\tvar cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPX.up.set( 0, - 1, 0 );\n\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n\tthis.add( cameraPX );\n\n\tvar cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNX.up.set( 0, - 1, 0 );\n\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n\tthis.add( cameraNX );\n\n\tvar cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPY.up.set( 0, 0, 1 );\n\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n\tthis.add( cameraPY );\n\n\tvar cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNY.up.set( 0, 0, - 1 );\n\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n\tthis.add( cameraNY );\n\n\tvar cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPZ.up.set( 0, - 1, 0 );\n\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n\tthis.add( cameraPZ );\n\n\tvar cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNZ.up.set( 0, - 1, 0 );\n\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n\tthis.add( cameraNZ );\n\n\tvar options = { format: RGBFormat, magFilter: LinearFilter, minFilter: LinearFilter };\n\n\tthis.renderTarget = new WebGLRenderTargetCube( cubeResolution, cubeResolution, options );\n\tthis.renderTarget.texture.name = \"CubeCamera\";\n\n\tthis.update = function ( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tvar renderTarget = this.renderTarget;\n\t\tvar generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderTarget.activeCubeFace = 0;\n\t\trenderer.render( scene, cameraPX, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 1;\n\t\trenderer.render( scene, cameraNX, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 2;\n\t\trenderer.render( scene, cameraPY, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 3;\n\t\trenderer.render( scene, cameraNY, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 4;\n\t\trenderer.render( scene, cameraPZ, renderTarget );\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderTarget.activeCubeFace = 5;\n\t\trenderer.render( scene, cameraNZ, renderTarget );\n\n\t\trenderer.setRenderTarget( null );\n\n\t};\n\n\tthis.clear = function ( renderer, color, depth, stencil ) {\n\n\t\tvar renderTarget = this.renderTarget;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\trenderTarget.activeCubeFace = i;\n\t\t\trenderer.setRenderTarget( renderTarget );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( null );\n\n\t};\n\n}\n\nCubeCamera.prototype = Object.create( Object3D.prototype );\nCubeCamera.prototype.constructor = CubeCamera;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AudioListener() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'AudioListener';\n\n\tthis.context = AudioContext.getContext();\n\n\tthis.gain = this.context.createGain();\n\tthis.gain.connect( this.context.destination );\n\n\tthis.filter = null;\n\n}\n\nAudioListener.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: AudioListener,\n\n\tgetInput: function () {\n\n\t\treturn this.gain;\n\n\t},\n\n\tremoveFilter: function ( ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetFilter: function () {\n\n\t\treturn this.filter;\n\n\t},\n\n\tsetFilter: function ( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t},\n\n\tgetMasterVolume: function () {\n\n\t\treturn this.gain.gain.value;\n\n\t},\n\n\tsetMasterVolume: function ( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t},\n\n\tupdateMatrixWorld: ( function () {\n\n\t\tvar position = new Vector3();\n\t\tvar quaternion = new Quaternion();\n\t\tvar scale = new Vector3();\n\n\t\tvar orientation = new Vector3();\n\n\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tvar listener = this.context.listener;\n\t\t\tvar up = this.up;\n\n\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\n\n\t\t\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\n\t\t\tif ( listener.positionX ) {\n\n\t\t\t\tlistener.positionX.setValueAtTime( position.x, this.context.currentTime );\n\t\t\t\tlistener.positionY.setValueAtTime( position.y, this.context.currentTime );\n\t\t\t\tlistener.positionZ.setValueAtTime( position.z, this.context.currentTime );\n\t\t\t\tlistener.forwardX.setValueAtTime( orientation.x, this.context.currentTime );\n\t\t\t\tlistener.forwardY.setValueAtTime( orientation.y, this.context.currentTime );\n\t\t\t\tlistener.forwardZ.setValueAtTime( orientation.z, this.context.currentTime );\n\t\t\t\tlistener.upX.setValueAtTime( up.x, this.context.currentTime );\n\t\t\t\tlistener.upY.setValueAtTime( up.y, this.context.currentTime );\n\t\t\t\tlistener.upZ.setValueAtTime( up.z, this.context.currentTime );\n\n\t\t\t} else {\n\n\t\t\t\tlistener.setPosition( position.x, position.y, position.z );\n\t\t\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\n\n\t\t\t}\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\n */\n\nfunction Audio( listener ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Audio';\n\n\tthis.context = listener.context;\n\n\tthis.gain = this.context.createGain();\n\tthis.gain.connect( listener.getInput() );\n\n\tthis.autoplay = false;\n\n\tthis.buffer = null;\n\tthis.loop = false;\n\tthis.startTime = 0;\n\tthis.offset = 0;\n\tthis.playbackRate = 1;\n\tthis.isPlaying = false;\n\tthis.hasPlaybackControl = true;\n\tthis.sourceType = 'empty';\n\n\tthis.filters = [];\n\n}\n\nAudio.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Audio,\n\n\tgetOutput: function () {\n\n\t\treturn this.gain;\n\n\t},\n\n\tsetNodeSource: function ( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t},\n\n\tsetMediaElementSource: function ( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t},\n\n\tsetBuffer: function ( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t},\n\n\tplay: function () {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar source = this.context.createBufferSource();\n\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.playbackRate.setValueAtTime( this.playbackRate, this.startTime );\n\t\tthis.startTime = this.context.currentTime;\n\t\tsource.start( this.startTime, this.offset );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\treturn this.connect();\n\n\t},\n\n\tpause: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\t\t\tthis.offset += ( this.context.currentTime - this.startTime ) * this.playbackRate;\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tstop: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.source.stop();\n\t\tthis.source.onended = null;\n\t\tthis.offset = 0;\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t},\n\n\tconnect: function () {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tdisconnect: function () {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetFilters: function () {\n\n\t\treturn this.filters;\n\n\t},\n\n\tsetFilters: function ( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value;\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetFilter: function () {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t},\n\n\tsetFilter: function ( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t},\n\n\tsetPlaybackRate: function ( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setValueAtTime( this.playbackRate, this.context.currentTime );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetPlaybackRate: function () {\n\n\t\treturn this.playbackRate;\n\n\t},\n\n\tonEnded: function () {\n\n\t\tthis.isPlaying = false;\n\n\t},\n\n\tgetLoop: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t},\n\n\tsetLoop: function ( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetVolume: function () {\n\n\t\treturn this.gain.gain.value;\n\n\t},\n\n\tsetVolume: function ( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction PositionalAudio( listener ) {\n\n\tAudio.call( this, listener );\n\n\tthis.panner = this.context.createPanner();\n\tthis.panner.connect( this.gain );\n\n}\n\nPositionalAudio.prototype = Object.assign( Object.create( Audio.prototype ), {\n\n\tconstructor: PositionalAudio,\n\n\tgetOutput: function () {\n\n\t\treturn this.panner;\n\n\t},\n\n\tgetRefDistance: function () {\n\n\t\treturn this.panner.refDistance;\n\n\t},\n\n\tsetRefDistance: function ( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t},\n\n\tgetRolloffFactor: function () {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t},\n\n\tsetRolloffFactor: function ( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t},\n\n\tgetDistanceModel: function () {\n\n\t\treturn this.panner.distanceModel;\n\n\t},\n\n\tsetDistanceModel: function ( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t},\n\n\tgetMaxDistance: function () {\n\n\t\treturn this.panner.maxDistance;\n\n\t},\n\n\tsetMaxDistance: function ( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t},\n\n\tsetDirectionalCone: function ( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t},\n\n\tupdateMatrixWorld: ( function () {\n\n\t\tvar position = new Vector3();\n\t\tvar quaternion = new Quaternion();\n\t\tvar scale = new Vector3();\n\n\t\tvar orientation = new Vector3();\n\n\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tvar panner = this.panner;\n\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\n\n\t\t\torientation.set( 0, 0, 1 ).applyQuaternion( quaternion );\n\n\t\t\tpanner.setPosition( position.x, position.y, position.z );\n\t\t\tpanner.setOrientation( orientation.x, orientation.y, orientation.z );\n\n\t\t};\n\n\t} )()\n\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AudioAnalyser( audio, fftSize ) {\n\n\tthis.analyser = audio.context.createAnalyser();\n\tthis.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\n\n\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\taudio.getOutput().connect( this.analyser );\n\n}\n\nObject.assign( AudioAnalyser.prototype, {\n\n\tgetFrequencyData: function () {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t},\n\n\tgetAverageFrequency: function () {\n\n\t\tvar value = 0, data = this.getFrequencyData();\n\n\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n} );\n\n/**\n *\n * Buffered scene graph property that allows weighted accumulation.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction PropertyMixer( binding, typeName, valueSize ) {\n\n\tthis.binding = binding;\n\tthis.valueSize = valueSize;\n\n\tvar bufferType = Float64Array,\n\t\tmixFunction;\n\n\tswitch ( typeName ) {\n\n\t\tcase 'quaternion':\n\t\t\tmixFunction = this._slerp;\n\t\t\tbreak;\n\n\t\tcase 'string':\n\t\tcase 'bool':\n\t\t\tbufferType = Array;\n\t\t\tmixFunction = this._select;\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tmixFunction = this._lerp;\n\n\t}\n\n\tthis.buffer = new bufferType( valueSize * 4 );\n\t// layout: [ incoming | accu0 | accu1 | orig ]\n\t//\n\t// interpolators can use .buffer as their .result\n\t// the data then goes to 'incoming'\n\t//\n\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t// the cumulative result and are compared to detect\n\t// changes\n\t//\n\t// 'orig' stores the original state of the property\n\n\tthis._mixBufferRegion = mixFunction;\n\n\tthis.cumulativeWeight = 0;\n\n\tthis.useCount = 0;\n\tthis.referenceCount = 0;\n\n}\n\nObject.assign( PropertyMixer.prototype, {\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate: function ( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tvar buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tcurrentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tvar mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t},\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply: function ( accuIndex ) {\n\n\t\tvar stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tvar originalValueOffset = stride * 3;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tfor ( var i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState: function () {\n\n\t\tvar binding = this.binding;\n\n\t\tvar buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * 3;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( var i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\tthis.cumulativeWeight = 0;\n\n\t},\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState: function () {\n\n\t\tvar originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t},\n\n\n\t// mix functions\n\n\t_select: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_slerp: function ( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t},\n\n\t_lerp: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tvar s = 1 - t;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tvar j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n *\n * A reference to a real property in the scene graph.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\n// Characters [].:/ are reserved for track binding syntax.\nvar RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\n\nfunction Composite( targetGroup, path, optionalParsedPath ) {\n\n\tvar parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\tthis._targetGroup = targetGroup;\n\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n}\n\nObject.assign( Composite.prototype, {\n\n\tgetValue: function ( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tvar firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t},\n\n\tsetValue: function ( array, offset ) {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t},\n\n\tbind: function () {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t},\n\n\tunbind: function () {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n} );\n\n\nfunction PropertyBinding( rootNode, path, parsedPath ) {\n\n\tthis.path = path;\n\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;\n\n\tthis.rootNode = rootNode;\n\n}\n\nObject.assign( PropertyBinding, {\n\n\tComposite: Composite,\n\n\tcreate: function ( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t},\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param  {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tsanitizeNodeName: ( function () {\n\n\t\tvar reservedRe = new RegExp( '[' + RESERVED_CHARS_RE + ']', 'g' );\n\n\t\treturn function sanitizeNodeName( name ) {\n\n\t\t\treturn name.replace( /\\s/g, '_' ).replace( reservedRe, '' );\n\n\t\t};\n\n\t}() ),\n\n\tparseTrackName: function () {\n\n\t\t// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n\t\t// only latin characters, and the unicode \\p{L} is not yet supported. So\n\t\t// instead, we exclude reserved characters and match everything else.\n\t\tvar wordChar = '[^' + RESERVED_CHARS_RE + ']';\n\t\tvar wordCharOrDot = '[^' + RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n\t\t// Parent directories, delimited by '/' or ':'. Currently unused, but must\n\t\t// be matched to parse the rest of the track name.\n\t\tvar directoryRe = /((?:WC+[\\/:])*)/.source.replace( 'WC', wordChar );\n\n\t\t// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\n\t\tvar nodeRe = /(WCOD+)?/.source.replace( 'WCOD', wordCharOrDot );\n\n\t\t// Object on target node, and accessor. May not contain reserved\n\t\t// characters. Accessor may contain any character except closing bracket.\n\t\tvar objectRe = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', wordChar );\n\n\t\t// Property and accessor. May not contain reserved characters. Accessor may\n\t\t// contain any non-bracket characters.\n\t\tvar propertyRe = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', wordChar );\n\n\t\tvar trackRe = new RegExp( ''\n\t\t\t+ '^'\n\t\t\t+ directoryRe\n\t\t\t+ nodeRe\n\t\t\t+ objectRe\n\t\t\t+ propertyRe\n\t\t\t+ '$'\n\t\t);\n\n\t\tvar supportedObjectNames = [ 'material', 'materials', 'bones' ];\n\n\t\treturn function parseTrackName( trackName ) {\n\n\t\t\tvar matches = trackRe.exec( trackName );\n\n\t\t\tif ( ! matches ) {\n\n\t\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t\t}\n\n\t\t\tvar results = {\n\t\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\t\tnodeName: matches[ 2 ],\n\t\t\t\tobjectName: matches[ 3 ],\n\t\t\t\tobjectIndex: matches[ 4 ],\n\t\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\t\tpropertyIndex: matches[ 6 ]\n\t\t\t};\n\n\t\t\tvar lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\t\tvar objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t\t// Object names must be checked against a whitelist. Otherwise, there\n\t\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t\t// include '.' characters).\n\t\t\t\tif ( supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\t\tresults.objectName = objectName;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t\t}\n\n\t\t\treturn results;\n\n\t\t};\n\n\t}(),\n\n\tfindNode: function ( root, nodeName ) {\n\n\t\tif ( ! nodeName || nodeName === \"\" || nodeName === \"root\" || nodeName === \".\" || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tvar bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tvar searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tvar childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tvar subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n} );\n\nObject.assign( PropertyBinding.prototype, { // prototype, continued\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable: function () {},\n\t_setValue_unavailable: function () {},\n\n\tBindingType: {\n\t\tDirect: 0,\n\t\tEntireArray: 1,\n\t\tArrayElement: 2,\n\t\tHasFromToArray: 3\n\t},\n\n\tVersioning: {\n\t\tNone: 0,\n\t\tNeedsUpdate: 1,\n\t\tMatrixWorldNeedsUpdate: 2\n\t},\n\n\tGetterByBindingType: [\n\n\t\tfunction getValue_direct( buffer, offset ) {\n\n\t\t\tbuffer[ offset ] = this.node[ this.propertyName ];\n\n\t\t},\n\n\t\tfunction getValue_array( buffer, offset ) {\n\n\t\t\tvar source = this.resolvedProperty;\n\n\t\t\tfor ( var i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t\t}\n\n\t\t},\n\n\t\tfunction getValue_arrayElement( buffer, offset ) {\n\n\t\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t\t},\n\n\t\tfunction getValue_toArray( buffer, offset ) {\n\n\t\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t\t}\n\n\t],\n\n\tSetterByBindingTypeAndVersioning: [\n\n\t\t[\n\t\t\t// Direct\n\n\t\t\tfunction setValue_direct( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t\t\t},\n\n\t\t\tfunction setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// EntireArray\n\n\t\t\tfunction setValue_array( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tfunction setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// ArrayElement\n\n\t\t\tfunction setValue_arrayElement( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t\t\t},\n\n\t\t\tfunction setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// HasToFromArray\n\n\t\t\tfunction setValue_fromArray( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t\t\t},\n\n\t\t\tfunction setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t]\n\n\t],\n\n\tgetValue: function getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t\t// Note: This class uses a State pattern on a per-method basis:\n\t\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n\t\t// prototype version of these methods with one that represents\n\t\t// the bound state. When the property is not found, the methods\n\t\t// become no-ops.\n\n\t},\n\n\tsetValue: function getValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t},\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind: function () {\n\n\t\tvar targetObject = this.node,\n\t\t\tparsedPath = this.parsedPath,\n\n\t\t\tobjectName = parsedPath.objectName,\n\t\t\tpropertyName = parsedPath.propertyName,\n\t\t\tpropertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName ) || this.rootNode;\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tvar objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( var i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tvar nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tvar nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tvar versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tvar bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === \"morphTargetInfluences\" ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.geometry.isBufferGeometry ) {\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphAttributes.position.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject.geometry.morphAttributes.position[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphTargets ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphTargets.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject.geometry.morphTargets[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t},\n\n\tunbind: function () {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n} );\n\n//!\\ DECLARE ALIAS AFTER assign prototype !\nObject.assign( PropertyBinding.prototype, {\n\n\t// initial state of these methods that calls 'bind'\n\t_getValue_unbound: PropertyBinding.prototype.getValue,\n\t_setValue_unbound: PropertyBinding.prototype.setValue,\n\n} );\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n * \t-\tAdd objects you would otherwise pass as 'root' to the\n * \t\tconstructor or the .clipAction method of AnimationMixer.\n *\n * \t-\tInstead pass this object as 'root'.\n *\n * \t-\tYou can also add and remove objects later when the mixer\n * \t\tis running.\n *\n * Note:\n *\n *  \tObjects of this class appear as one object to the mixer,\n *  \tso cache control of the individual objects must be done\n *  \ton the group.\n *\n * Limitation:\n *\n * \t- \tThe animated properties must be compatible among the\n * \t\tall objects in the group.\n *\n *  -\tA single property can either be controlled through a\n *  \ttarget group or directly, but not both.\n *\n * @author tschw\n */\n\nfunction AnimationObjectGroup() {\n\n\tthis.uuid = _Math.generateUUID();\n\n\t// cached objects followed by the active ones\n\tthis._objects = Array.prototype.slice.call( arguments );\n\n\tthis.nCachedObjects_ = 0;\t\t\t// threshold\n\t// note: read by PropertyBinding.Composite\n\n\tvar indices = {};\n\tthis._indicesByUUID = indices;\t\t// for bookkeeping\n\n\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t}\n\n\tthis._paths = [];\t\t\t\t\t// inside: string\n\tthis._parsedPaths = [];\t\t\t\t// inside: { we don't care, here }\n\tthis._bindings = []; \t\t\t\t// inside: Array< PropertyBinding >\n\tthis._bindingsIndicesByPath = {}; \t// inside: indices in these arrays\n\n\tvar scope = this;\n\n\tthis.stats = {\n\n\t\tobjects: {\n\t\t\tget total() {\n\n\t\t\t\treturn scope._objects.length;\n\n\t\t\t},\n\t\t\tget inUse() {\n\n\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t}\n\t\t},\n\t\tget bindingsPerObject() {\n\n\t\t\treturn scope._bindings.length;\n\n\t\t}\n\n\t};\n\n}\n\nObject.assign( AnimationObjectGroup.prototype, {\n\n\tisAnimationObjectGroup: true,\n\n\tadd: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length,\n\t\t\tknownObject = undefined;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\tremove: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tvar lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\t// remove & forget\n\tuncache: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tvar lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_: function ( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ],\n\t\t\tbindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tvar paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( var i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tvar object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t},\n\n\tunsubscribe_: function ( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tvar paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n *\n * Action provided by AnimationMixer for scheduling clip playback on specific\n * objects.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n *\n */\n\nfunction AnimationAction( mixer, clip, localRoot ) {\n\n\tthis._mixer = mixer;\n\tthis._clip = clip;\n\tthis._localRoot = localRoot || null;\n\n\tvar tracks = clip.tracks,\n\t\tnTracks = tracks.length,\n\t\tinterpolants = new Array( nTracks );\n\n\tvar interpolantSettings = {\n\t\tendingStart: ZeroCurvatureEnding,\n\t\tendingEnd: ZeroCurvatureEnding\n\t};\n\n\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\tvar interpolant = tracks[ i ].createInterpolant( null );\n\t\tinterpolants[ i ] = interpolant;\n\t\tinterpolant.settings = interpolantSettings;\n\n\t}\n\n\tthis._interpolantSettings = interpolantSettings;\n\n\tthis._interpolants = interpolants;\t// bound by the mixer\n\n\t// inside: PropertyMixer (managed by the mixer)\n\tthis._propertyBindings = new Array( nTracks );\n\n\tthis._cacheIndex = null;\t\t\t// for the memory manager\n\tthis._byClipCacheIndex = null;\t\t// for the memory manager\n\n\tthis._timeScaleInterpolant = null;\n\tthis._weightInterpolant = null;\n\n\tthis.loop = LoopRepeat;\n\tthis._loopCount = - 1;\n\n\t// global mixer time when the action is to be started\n\t// it's set back to 'null' upon start of the action\n\tthis._startTime = null;\n\n\t// scaled local time of the action\n\t// gets clamped or wrapped to 0..clip.duration according to loop\n\tthis.time = 0;\n\n\tthis.timeScale = 1;\n\tthis._effectiveTimeScale = 1;\n\n\tthis.weight = 1;\n\tthis._effectiveWeight = 1;\n\n\tthis.repetitions = Infinity; \t\t// no. of repetitions when looping\n\n\tthis.paused = false;\t\t\t\t// true -> zero effective time scale\n\tthis.enabled = true;\t\t\t\t// false -> zero effective weight\n\n\tthis.clampWhenFinished \t= false;\t// keep feeding the last frame?\n\n\tthis.zeroSlopeAtStart \t= true;\t\t// for smooth interpolation w/o separate\n\tthis.zeroSlopeAtEnd\t\t= true;\t\t// clips for start, loop and end\n\n}\n\nObject.assign( AnimationAction.prototype, {\n\n\t// State & Scheduling\n\n\tplay: function () {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t},\n\n\tstop: function () {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t},\n\n\treset: function () {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0;\t\t\t// restart clip\n\t\tthis._loopCount = - 1;\t// forget previous loops\n\t\tthis._startTime = null;\t// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t},\n\n\tisRunning: function () {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t},\n\n\t// return true when play has been called\n\tisScheduled: function () {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t},\n\n\tstartAt: function ( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t},\n\n\tsetLoop: function ( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t},\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight: function ( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t},\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight: function () {\n\n\t\treturn this._effectiveWeight;\n\n\t},\n\n\tfadeIn: function ( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t},\n\n\tfadeOut: function ( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t},\n\n\tcrossFadeFrom: function ( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tvar fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcrossFadeTo: function ( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t},\n\n\tstopFading: function () {\n\n\t\tvar weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale: function ( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale: function () {\n\n\t\treturn this._effectiveTimeScale;\n\n\t},\n\n\tsetDuration: function ( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\tsyncWith: function ( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\thalt: function ( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t},\n\n\twarp: function ( startTimeScale, endTimeScale, duration ) {\n\n\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\tinterpolant = this._timeScaleInterpolant,\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tvar times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t},\n\n\tstopWarping: function () {\n\n\t\tvar timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// Object Accessors\n\n\tgetMixer: function () {\n\n\t\treturn this._mixer;\n\n\t},\n\n\tgetClip: function () {\n\n\t\treturn this._clip;\n\n\t},\n\n\tgetRoot: function () {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t},\n\n\t// Interna\n\n\t_update: function ( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tvar timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\treturn; // yet to come / don't decide when delta = 0\n\n\t\t\t}\n\n\t\t\t// start\n\n\t\t\tthis._startTime = null; // unschedule\n\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tvar clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tvar weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tvar interpolants = this._interpolants;\n\t\t\tvar propertyMixers = this._propertyBindings;\n\n\t\t\tfor ( var j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_updateWeight: function ( time ) {\n\n\t\tvar weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tvar interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t},\n\n\t_updateTimeScale: function ( time ) {\n\n\t\tvar timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tvar interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t},\n\n\t_updateTime: function ( deltaTime ) {\n\n\t\tvar time = this.time + deltaTime;\n\t\tvar duration = this._clip.duration;\n\t\tvar loop = this.loop;\n\t\tvar loopCount = this._loopCount;\n\n\t\tvar pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else break handle_stop;\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tvar loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tvar pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tvar atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\tthis.time = time;\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.time = time;\n\t\treturn time;\n\n\t},\n\n\t_setEndings: function ( atStart, atEnd, pingPong ) {\n\n\t\tvar settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart \t= ZeroSlopeEnding;\n\t\t\tsettings.endingEnd\t\t= ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_scheduleFading: function ( duration, weightNow, weightThen ) {\n\n\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\tinterpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tvar times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now; \t\t\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n *\n * Player for AnimationClips.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction AnimationMixer( root ) {\n\n\tthis._root = root;\n\tthis._initMemoryManager();\n\tthis._accuIndex = 0;\n\n\tthis.time = 0;\n\n\tthis.timeScale = 1.0;\n\n}\n\nAnimationMixer.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: AnimationMixer,\n\n\t_bindAction: function ( action, prototypeAction ) {\n\n\t\tvar root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tvar track = tracks[ i ],\n\t\t\t\ttrackName = track.name,\n\t\t\t\tbinding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tvar path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t},\n\n\t_activateAction: function ( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tvar rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t},\n\n\t_deactivateAction: function ( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t},\n\n\t// Memory manager\n\n\t_initMemoryManager: function () {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \t\tknownActions: Array< AnimationAction >\t- used as prototypes\n\t\t// \t\tactionByRoot: AnimationAction\t\t\t- lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tvar scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t},\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction: function ( action ) {\n\n\t\tvar index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t},\n\n\t_addInactiveAction: function ( action, clipUuid, rootUuid ) {\n\n\t\tvar actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tvar knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t},\n\n\t_removeInactiveAction: function ( action ) {\n\n\t\tvar actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tvar clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tvar actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t},\n\n\t_removeInactiveBindingsForAction: function ( action ) {\n\n\t\tvar bindings = action._propertyBindings;\n\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tvar binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_lendAction: function ( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tvar actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t},\n\n\t_takeBackAction: function ( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tvar actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t},\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding: function ( binding, rootUuid, trackName ) {\n\n\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tbindings = this._bindings;\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t},\n\n\t_removeInactiveBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tremove_empty_map: {\n\n\t\t\tfor ( var _ in bindingByName ) break remove_empty_map; // eslint-disable-line no-unused-vars\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t},\n\n\t_lendBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t},\n\n\t_takeBackBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t},\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant: function () {\n\n\t\tvar interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++,\n\t\t\tinterpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, this._controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t},\n\n\t_takeBackControlInterpolant: function ( interpolant ) {\n\n\t\tvar interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t},\n\n\t_controlInterpolantsResultBuffer: new Float32Array( 1 ),\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction: function ( clip, optionalRoot ) {\n\n\t\tvar root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject !== null ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ],\n\t\t\tprototypeAction = null;\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tvar existingAction =\n\t\t\t\t\tactionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tvar newAction = new AnimationAction( this, clipObject, optionalRoot );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t},\n\n\t// get an existing action\n\texistingAction: function ( clip, optionalRoot ) {\n\n\t\tvar root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction: function () {\n\n\t\tvar actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tthis._nActiveActions = 0;\n\t\tthis._nActiveBindings = 0;\n\n\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\tactions[ i ].reset();\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].useCount = 0;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// advance the time and update apply the animation\n\tupdate: function ( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tvar actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\tvar action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tvar bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// return this mixer's root target object\n\tgetRoot: function () {\n\n\t\treturn this._root;\n\n\t},\n\n\t// free all resources specific to a particular clip\n\tuncacheClip: function ( clip ) {\n\n\t\tvar actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tvar actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( var i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tvar action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tvar cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t},\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot: function ( root ) {\n\n\t\tvar rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( var clipUuid in actionsByClip ) {\n\n\t\t\tvar actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( var trackName in bindingByName ) {\n\n\t\t\t\tvar binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t// remove a targeted clip from the cache\n\tuncacheAction: function ( clip, optionalRoot ) {\n\n\t\tvar action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Uniform( value ) {\n\n\tif ( typeof value === 'string' ) {\n\n\t\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\n\t\tvalue = arguments[ 1 ];\n\n\t}\n\n\tthis.value = value;\n\n}\n\nUniform.prototype.clone = function () {\n\n\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n};\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedBufferGeometry() {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'InstancedBufferGeometry';\n\tthis.maxInstancedCount = undefined;\n\n}\n\nInstancedBufferGeometry.prototype = Object.assign( Object.create( BufferGeometry.prototype ), {\n\n\tconstructor: InstancedBufferGeometry,\n\n\tisInstancedBufferGeometry: true,\n\n\tcopy: function ( source ) {\n\n\t\tBufferGeometry.prototype.copy.call( this, source );\n\n\t\tthis.maxInstancedCount = source.maxInstancedCount;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedInterleavedBuffer( array, stride, meshPerAttribute ) {\n\n\tInterleavedBuffer.call( this, array, stride );\n\n\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n}\n\nInstancedInterleavedBuffer.prototype = Object.assign( Object.create( InterleavedBuffer.prototype ), {\n\n\tconstructor: InstancedInterleavedBuffer,\n\n\tisInstancedInterleavedBuffer: true,\n\n\tcopy: function ( source ) {\n\n\t\tInterleavedBuffer.prototype.copy.call( this, source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedBufferAttribute( array, itemSize, normalized, meshPerAttribute ) {\n\n\tif ( typeof ( normalized ) === 'number' ) {\n\n\t\tmeshPerAttribute = normalized;\n\n\t\tnormalized = false;\n\n\t\tconsole.error( 'THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.' );\n\n\t}\n\n\tBufferAttribute.call( this, array, itemSize, normalized );\n\n\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n}\n\nInstancedBufferAttribute.prototype = Object.assign( Object.create( BufferAttribute.prototype ), {\n\n\tconstructor: InstancedBufferAttribute,\n\n\tisInstancedBufferAttribute: true,\n\n\tcopy: function ( source ) {\n\n\t\tBufferAttribute.prototype.copy.call( this, source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author bhouston / http://clara.io/\n * @author stephomi / http://stephaneginier.com/\n */\n\nfunction Raycaster( origin, direction, near, far ) {\n\n\tthis.ray = new Ray( origin, direction );\n\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\tthis.near = near || 0;\n\tthis.far = far || Infinity;\n\n\tthis.params = {\n\t\tMesh: {},\n\t\tLine: {},\n\t\tLOD: {},\n\t\tPoints: { threshold: 1 },\n\t\tSprite: {}\n\t};\n\n\tObject.defineProperties( this.params, {\n\t\tPointCloud: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\n\t\t\t\treturn this.Points;\n\n\t\t\t}\n\t\t}\n\t} );\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.visible === false ) return;\n\n\tobject.raycast( raycaster, intersects );\n\n\tif ( recursive === true ) {\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\nObject.assign( Raycaster.prototype, {\n\n\tlinePrecision: 1,\n\n\tset: function ( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t},\n\n\tsetFromCamera: function ( coords, camera ) {\n\n\t\tif ( ( camera && camera.isPerspectiveCamera ) ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\n\t\t} else if ( ( camera && camera.isOrthographicCamera ) ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\n\n\t\t}\n\n\t},\n\n\tintersectObject: function ( object, recursive, optionalTarget ) {\n\n\t\tvar intersects = optionalTarget || [];\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t},\n\n\tintersectObjects: function ( objects, recursive, optionalTarget ) {\n\n\t\tvar intersects = optionalTarget || [];\n\n\t\tif ( Array.isArray( objects ) === false ) {\n\n\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\n\t\t\treturn intersects;\n\n\t\t}\n\n\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Clock( autoStart ) {\n\n\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\n\n\tthis.startTime = 0;\n\tthis.oldTime = 0;\n\tthis.elapsedTime = 0;\n\n\tthis.running = false;\n\n}\n\nObject.assign( Clock.prototype, {\n\n\tstart: function () {\n\n\t\tthis.startTime = ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t},\n\n\tstop: function () {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t},\n\n\tgetElapsedTime: function () {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t},\n\n\tgetDelta: function () {\n\n\t\tvar diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tvar newTime = ( typeof performance === 'undefined' ? Date : performance ).now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n * The azimuthal angle (theta) is measured from the positive z-axiz.\n */\n\nfunction Spherical( radius, phi, theta ) {\n\n\tthis.radius = ( radius !== undefined ) ? radius : 1.0;\n\tthis.phi = ( phi !== undefined ) ? phi : 0; // polar angle\n\tthis.theta = ( theta !== undefined ) ? theta : 0; // azimuthal angle\n\n\treturn this;\n\n}\n\nObject.assign( Spherical.prototype, {\n\n\tset: function ( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t},\n\n\t// restrict phi to be betwee EPS and PI-EPS\n\tmakeSafe: function () {\n\n\t\tvar EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromVector3: function ( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t},\n\n\tsetFromCartesianCoords: function ( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( _Math.clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n *\n */\n\nfunction Cylindrical( radius, theta, y ) {\n\n\tthis.radius = ( radius !== undefined ) ? radius : 1.0; // distance from the origin to a point in the x-z plane\n\tthis.theta = ( theta !== undefined ) ? theta : 0; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\tthis.y = ( y !== undefined ) ? y : 0; // height above the x-z plane\n\n\treturn this;\n\n}\n\nObject.assign( Cylindrical.prototype, {\n\n\tset: function ( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromVector3: function ( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t},\n\n\tsetFromCartesianCoords: function ( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Box2( min, max ) {\n\n\tthis.min = ( min !== undefined ) ? min : new Vector2( + Infinity, + Infinity );\n\tthis.max = ( max !== undefined ) ? max : new Vector2( - Infinity, - Infinity );\n\n}\n\nObject.assign( Box2.prototype, {\n\n\tset: function ( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCenterAndSize: function () {\n\n\t\tvar v1 = new Vector2();\n\n\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tmakeEmpty: function () {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t},\n\n\tisEmpty: function () {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getCenter() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t},\n\n\tgetSize: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getSize() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t},\n\n\texpandByPoint: function ( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t},\n\n\texpandByVector: function ( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t},\n\n\texpandByScalar: function ( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t},\n\n\tcontainsBox: function ( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t},\n\n\tgetParameter: function ( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getParameter() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t},\n\n\tclampPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t},\n\n\tdistanceToPoint: function () {\n\n\t\tvar v1 = new Vector2();\n\n\t\treturn function distanceToPoint( point ) {\n\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t};\n\n\t}(),\n\n\tintersect: function ( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tunion: function ( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Line3( start, end ) {\n\n\tthis.start = ( start !== undefined ) ? start : new Vector3();\n\tthis.end = ( end !== undefined ) ? end : new Vector3();\n\n}\n\nObject.assign( Line3.prototype, {\n\n\tset: function ( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .getCenter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t},\n\n\tdelta: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .delta() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t},\n\n\tdistanceSq: function () {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t},\n\n\tdistance: function () {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t},\n\n\tat: function ( t, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .at() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t},\n\n\tclosestPointToPointParameter: function () {\n\n\t\tvar startP = new Vector3();\n\t\tvar startEnd = new Vector3();\n\n\t\treturn function closestPointToPointParameter( point, clampToLine ) {\n\n\t\t\tstartP.subVectors( point, this.start );\n\t\t\tstartEnd.subVectors( this.end, this.start );\n\n\t\t\tvar startEnd2 = startEnd.dot( startEnd );\n\t\t\tvar startEnd_startP = startEnd.dot( startP );\n\n\t\t\tvar t = startEnd_startP / startEnd2;\n\n\t\t\tif ( clampToLine ) {\n\n\t\t\t\tt = _Math.clamp( t, 0, 1 );\n\n\t\t\t}\n\n\t\t\treturn t;\n\n\t\t};\n\n\t}(),\n\n\tclosestPointToPoint: function ( point, clampToLine, target ) {\n\n\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction ImmediateRenderObject( material ) {\n\n\tObject3D.call( this );\n\n\tthis.material = material;\n\tthis.render = function ( /* renderCallback */ ) {};\n\n}\n\nImmediateRenderObject.prototype = Object.create( Object3D.prototype );\nImmediateRenderObject.prototype.constructor = ImmediateRenderObject;\n\nImmediateRenderObject.prototype.isImmediateRenderObject = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction VertexNormalsHelper( object, size, hex, linewidth ) {\n\n\tthis.object = object;\n\n\tthis.size = ( size !== undefined ) ? size : 1;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\n\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t//\n\n\tvar nNormals = 0;\n\n\tvar objGeometry = this.object.geometry;\n\n\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\tnNormals = objGeometry.faces.length * 3;\n\n\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\tnNormals = objGeometry.attributes.normal.count;\n\n\t}\n\n\t//\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\tgeometry.addAttribute( 'position', positions );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t//\n\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n}\n\nVertexNormalsHelper.prototype = Object.create( LineSegments.prototype );\nVertexNormalsHelper.prototype.constructor = VertexNormalsHelper;\n\nVertexNormalsHelper.prototype.update = ( function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar normalMatrix = new Matrix3();\n\n\treturn function update() {\n\n\t\tvar keys = [ 'a', 'b', 'c' ];\n\n\t\tthis.object.updateMatrixWorld( true );\n\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\tvar position = this.geometry.attributes.position;\n\n\t\t//\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\t\tvar vertices = objGeometry.vertices;\n\n\t\t\tvar faces = objGeometry.faces;\n\n\t\t\tvar idx = 0;\n\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar vertex = vertices[ face[ keys[ j ] ] ];\n\n\t\t\t\t\tvar normal = face.vertexNormals[ j ];\n\n\t\t\t\t\tv1.copy( vertex ).applyMatrix4( matrixWorld );\n\n\t\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\t\tvar objPos = objGeometry.attributes.position;\n\n\t\t\tvar objNorm = objGeometry.attributes.normal;\n\n\t\t\tvar idx = 0;\n\n\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\n\n\t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\n\n\t\t\t\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\n\n\t\t\t\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\n\n\t\t\t\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tposition.needsUpdate = true;\n\n\t};\n\n}() );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction SpotLightHelper( light, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = [\n\t\t0, 0, 0, \t0, 0, 1,\n\t\t0, 0, 0, \t1, 0, 1,\n\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t0, 0, 0, \t0, 1, 1,\n\t\t0, 0, 0, \t0, - 1, 1\n\t];\n\n\tfor ( var i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\tvar p1 = ( i / l ) * Math.PI * 2;\n\t\tvar p2 = ( j / l ) * Math.PI * 2;\n\n\t\tpositions.push(\n\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t);\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tthis.cone = new LineSegments( geometry, material );\n\tthis.add( this.cone );\n\n\tthis.update();\n\n}\n\nSpotLightHelper.prototype = Object.create( Object3D.prototype );\nSpotLightHelper.prototype.constructor = SpotLightHelper;\n\nSpotLightHelper.prototype.dispose = function () {\n\n\tthis.cone.geometry.dispose();\n\tthis.cone.material.dispose();\n\n};\n\nSpotLightHelper.prototype.update = function () {\n\n\tvar vector = new Vector3();\n\tvar vector2 = new Vector3();\n\n\treturn function update() {\n\n\t\tthis.light.updateMatrixWorld();\n\n\t\tvar coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\tvector.setFromMatrixPosition( this.light.matrixWorld );\n\t\tvector2.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( vector2.sub( vector ) );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t};\n\n}();\n\n/**\n * @author Sean Griffin / http://twitter.com/sgrif\n * @author Michael Guerrero / http://realitymeltdown.com\n * @author mrdoob / http://mrdoob.com/\n * @author ikerr / http://verold.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction getBoneList( object ) {\n\n\tvar boneList = [];\n\n\tif ( object && object.isBone ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( var i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nfunction SkeletonHelper( object ) {\n\n\tvar bones = getBoneList( object );\n\n\tvar geometry = new BufferGeometry();\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar color1 = new Color( 0, 0, 1 );\n\tvar color2 = new Color( 0, 1, 0 );\n\n\tfor ( var i = 0; i < bones.length; i ++ ) {\n\n\t\tvar bone = bones[ i ];\n\n\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t}\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors, depthTest: false, depthWrite: false, transparent: true } );\n\n\tLineSegments.call( this, geometry, material );\n\n\tthis.root = object;\n\tthis.bones = bones;\n\n\tthis.matrix = object.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n}\n\nSkeletonHelper.prototype = Object.create( LineSegments.prototype );\nSkeletonHelper.prototype.constructor = SkeletonHelper;\n\nSkeletonHelper.prototype.updateMatrixWorld = function () {\n\n\tvar vector = new Vector3();\n\n\tvar boneMatrix = new Matrix4();\n\tvar matrixWorldInv = new Matrix4();\n\n\treturn function updateMatrixWorld( force ) {\n\n\t\tvar bones = this.bones;\n\n\t\tvar geometry = this.geometry;\n\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\tmatrixWorldInv.getInverse( this.root.matrixWorld );\n\n\t\tfor ( var i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tvar bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\n\t\t\t\tvector.setFromMatrixPosition( boneMatrix );\n\t\t\t\tposition.setXYZ( j, vector.x, vector.y, vector.z );\n\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\tvector.setFromMatrixPosition( boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, vector.x, vector.y, vector.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t};\n\n}();\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction PointLightHelper( light, sphereSize, color ) {\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.color = color;\n\n\tvar geometry = new SphereBufferGeometry( sphereSize, 4, 2 );\n\tvar material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\n\tMesh.call( this, geometry, material );\n\n\tthis.matrix = this.light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n\n\t/*\n\tvar distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tvar d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n}\n\nPointLightHelper.prototype = Object.create( Mesh.prototype );\nPointLightHelper.prototype.constructor = PointLightHelper;\n\nPointLightHelper.prototype.dispose = function () {\n\n\tthis.geometry.dispose();\n\tthis.material.dispose();\n\n};\n\nPointLightHelper.prototype.update = function () {\n\n\tif ( this.color !== undefined ) {\n\n\t\tthis.material.color.set( this.color );\n\n\t} else {\n\n\t\tthis.material.color.copy( this.light.color );\n\n\t}\n\n\t/*\n\tvar d = this.light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.visible = true;\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\t*/\n\n};\n\n/**\n * @author abelnation / http://github.com/abelnation\n * @author Mugen87 / http://github.com/Mugen87\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction RectAreaLightHelper( light, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tvar geometry = new BufferGeometry();\n\n\tgeometry.addAttribute( 'position', new BufferAttribute( new Float32Array( 5 * 3 ), 3 ) );\n\n\tthis.line = new Line( geometry, material );\n\tthis.add( this.line );\n\n\n\tthis.update();\n\n}\n\nRectAreaLightHelper.prototype = Object.create( Object3D.prototype );\nRectAreaLightHelper.prototype.constructor = RectAreaLightHelper;\n\nRectAreaLightHelper.prototype.dispose = function () {\n\n\tthis.children[ 0 ].geometry.dispose();\n\tthis.children[ 0 ].material.dispose();\n\n};\n\nRectAreaLightHelper.prototype.update = function () {\n\n\t// calculate new dimensions of the helper\n\n\tvar hx = this.light.width * 0.5;\n\tvar hy = this.light.height * 0.5;\n\n\tvar position = this.line.geometry.attributes.position;\n\tvar array = position.array;\n\n\t// update vertices\n\n\tarray[ 0 ] = hx; array[ 1 ] = - hy; array[ 2 ] = 0;\n\tarray[ 3 ] = hx; array[ 4 ] = hy; array[ 5 ] = 0;\n\tarray[ 6 ] = - hx; array[ 7 ] = hy; array[ 8 ] = 0;\n\tarray[ 9 ] = - hx; array[ 10 ] = - hy; array[ 11 ] = 0;\n\tarray[ 12 ] = hx; array[ 13 ] = - hy; array[ 14 ] = 0;\n\n\tposition.needsUpdate = true;\n\n\tif ( this.color !== undefined ) {\n\n\t\tthis.line.material.color.set( this.color );\n\n\t} else {\n\n\t\tthis.line.material.color.copy( this.light.color );\n\n\t}\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction HemisphereLightHelper( light, size, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tvar geometry = new OctahedronBufferGeometry( size );\n\tgeometry.rotateY( Math.PI * 0.5 );\n\n\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\tif ( this.color === undefined ) this.material.vertexColors = VertexColors;\n\n\tvar position = geometry.getAttribute( 'position' );\n\tvar colors = new Float32Array( position.count * 3 );\n\n\tgeometry.addAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\tthis.add( new Mesh( geometry, this.material ) );\n\n\tthis.update();\n\n}\n\nHemisphereLightHelper.prototype = Object.create( Object3D.prototype );\nHemisphereLightHelper.prototype.constructor = HemisphereLightHelper;\n\nHemisphereLightHelper.prototype.dispose = function () {\n\n\tthis.children[ 0 ].geometry.dispose();\n\tthis.children[ 0 ].material.dispose();\n\n};\n\nHemisphereLightHelper.prototype.update = function () {\n\n\tvar vector = new Vector3();\n\n\tvar color1 = new Color();\n\tvar color2 = new Color();\n\n\treturn function update() {\n\n\t\tvar mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tvar colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\tcolor1.copy( this.light.color );\n\t\t\tcolor2.copy( this.light.groundColor );\n\n\t\t\tfor ( var i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tvar color = ( i < ( l / 2 ) ) ? color1 : color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tmesh.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t};\n\n}();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction GridHelper( size, divisions, color1, color2 ) {\n\n\tsize = size || 10;\n\tdivisions = divisions || 10;\n\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\tvar center = divisions / 2;\n\tvar step = size / divisions;\n\tvar halfSize = size / 2;\n\n\tvar vertices = [], colors = [];\n\n\tfor ( var i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\tvar color = i === center ? color1 : color2;\n\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\n\t}\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nGridHelper.prototype = Object.create( LineSegments.prototype );\nGridHelper.prototype.constructor = GridHelper;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / http://github.com/Mugen87\n * @author Hectate / http://www.github.com/Hectate\n */\n\nfunction PolarGridHelper( radius, radials, circles, divisions, color1, color2 ) {\n\n\tradius = radius || 10;\n\tradials = radials || 16;\n\tcircles = circles || 8;\n\tdivisions = divisions || 64;\n\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar x, z;\n\tvar v, i, j, r, color;\n\n\t// create the radials\n\n\tfor ( i = 0; i <= radials; i ++ ) {\n\n\t\tv = ( i / radials ) * ( Math.PI * 2 );\n\n\t\tx = Math.sin( v ) * radius;\n\t\tz = Math.cos( v ) * radius;\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tvertices.push( x, 0, z );\n\n\t\tcolor = ( i & 1 ) ? color1 : color2;\n\n\t\tcolors.push( color.r, color.g, color.b );\n\t\tcolors.push( color.r, color.g, color.b );\n\n\t}\n\n\t// create the circles\n\n\tfor ( i = 0; i <= circles; i ++ ) {\n\n\t\tcolor = ( i & 1 ) ? color1 : color2;\n\n\t\tr = radius - ( radius / circles * i );\n\n\t\tfor ( j = 0; j < divisions; j ++ ) {\n\n\t\t\t// first vertex\n\n\t\t\tv = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\tx = Math.sin( v ) * r;\n\t\t\tz = Math.cos( v ) * r;\n\n\t\t\tvertices.push( x, 0, z );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t// second vertex\n\n\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\tx = Math.sin( v ) * r;\n\t\t\tz = Math.cos( v ) * r;\n\n\t\t\tvertices.push( x, 0, z );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t}\n\n\t}\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nPolarGridHelper.prototype = Object.create( LineSegments.prototype );\nPolarGridHelper.prototype.constructor = PolarGridHelper;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction FaceNormalsHelper( object, size, hex, linewidth ) {\n\n\t// FaceNormalsHelper only supports THREE.Geometry\n\n\tthis.object = object;\n\n\tthis.size = ( size !== undefined ) ? size : 1;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t//\n\n\tvar nNormals = 0;\n\n\tvar objGeometry = this.object.geometry;\n\n\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\tnNormals = objGeometry.faces.length;\n\n\t} else {\n\n\t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\n\n\t}\n\n\t//\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\tgeometry.addAttribute( 'position', positions );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t//\n\n\tthis.matrixAutoUpdate = false;\n\tthis.update();\n\n}\n\nFaceNormalsHelper.prototype = Object.create( LineSegments.prototype );\nFaceNormalsHelper.prototype.constructor = FaceNormalsHelper;\n\nFaceNormalsHelper.prototype.update = ( function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar normalMatrix = new Matrix3();\n\n\treturn function update() {\n\n\t\tthis.object.updateMatrixWorld( true );\n\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\tvar position = this.geometry.attributes.position;\n\n\t\t//\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tvar vertices = objGeometry.vertices;\n\n\t\tvar faces = objGeometry.faces;\n\n\t\tvar idx = 0;\n\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tvar normal = face.normal;\n\n\t\t\tv1.copy( vertices[ face.a ] )\n\t\t\t\t.add( vertices[ face.b ] )\n\t\t\t\t.add( vertices[ face.c ] )\n\t\t\t\t.divideScalar( 3 )\n\t\t\t\t.applyMatrix4( matrixWorld );\n\n\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\tidx = idx + 1;\n\n\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\tidx = idx + 1;\n\n\t\t}\n\n\t\tposition.needsUpdate = true;\n\n\t};\n\n}() );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction DirectionalLightHelper( light, size, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tif ( size === undefined ) size = 1;\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [\n\t\t- size, size, 0,\n\t\tsize, size, 0,\n\t\tsize, - size, 0,\n\t\t- size, - size, 0,\n\t\t- size, size, 0\n\t], 3 ) );\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tthis.lightPlane = new Line( geometry, material );\n\tthis.add( this.lightPlane );\n\n\tgeometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\tthis.targetLine = new Line( geometry, material );\n\tthis.add( this.targetLine );\n\n\tthis.update();\n\n}\n\nDirectionalLightHelper.prototype = Object.create( Object3D.prototype );\nDirectionalLightHelper.prototype.constructor = DirectionalLightHelper;\n\nDirectionalLightHelper.prototype.dispose = function () {\n\n\tthis.lightPlane.geometry.dispose();\n\tthis.lightPlane.material.dispose();\n\tthis.targetLine.geometry.dispose();\n\tthis.targetLine.material.dispose();\n\n};\n\nDirectionalLightHelper.prototype.update = function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar v3 = new Vector3();\n\n\treturn function update() {\n\n\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\n\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\tv3.subVectors( v2, v1 );\n\n\t\tthis.lightPlane.lookAt( v3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( v3 );\n\t\tthis.targetLine.scale.z = v3.length();\n\n\t};\n\n}();\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author Mugen87 / https://github.com/Mugen87\n *\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n */\n\nfunction CameraHelper( camera ) {\n\n\tvar geometry = new BufferGeometry();\n\tvar material = new LineBasicMaterial( { color: 0xffffff, vertexColors: FaceColors } );\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar pointMap = {};\n\n\t// colors\n\n\tvar colorFrustum = new Color( 0xffaa00 );\n\tvar colorCone = new Color( 0xff0000 );\n\tvar colorUp = new Color( 0x00aaff );\n\tvar colorTarget = new Color( 0xffffff );\n\tvar colorCross = new Color( 0x333333 );\n\n\t// near\n\n\taddLine( 'n1', 'n2', colorFrustum );\n\taddLine( 'n2', 'n4', colorFrustum );\n\taddLine( 'n4', 'n3', colorFrustum );\n\taddLine( 'n3', 'n1', colorFrustum );\n\n\t// far\n\n\taddLine( 'f1', 'f2', colorFrustum );\n\taddLine( 'f2', 'f4', colorFrustum );\n\taddLine( 'f4', 'f3', colorFrustum );\n\taddLine( 'f3', 'f1', colorFrustum );\n\n\t// sides\n\n\taddLine( 'n1', 'f1', colorFrustum );\n\taddLine( 'n2', 'f2', colorFrustum );\n\taddLine( 'n3', 'f3', colorFrustum );\n\taddLine( 'n4', 'f4', colorFrustum );\n\n\t// cone\n\n\taddLine( 'p', 'n1', colorCone );\n\taddLine( 'p', 'n2', colorCone );\n\taddLine( 'p', 'n3', colorCone );\n\taddLine( 'p', 'n4', colorCone );\n\n\t// up\n\n\taddLine( 'u1', 'u2', colorUp );\n\taddLine( 'u2', 'u3', colorUp );\n\taddLine( 'u3', 'u1', colorUp );\n\n\t// target\n\n\taddLine( 'c', 't', colorTarget );\n\taddLine( 'p', 'c', colorCross );\n\n\t// cross\n\n\taddLine( 'cn1', 'cn2', colorCross );\n\taddLine( 'cn3', 'cn4', colorCross );\n\n\taddLine( 'cf1', 'cf2', colorCross );\n\taddLine( 'cf3', 'cf4', colorCross );\n\n\tfunction addLine( a, b, color ) {\n\n\t\taddPoint( a, color );\n\t\taddPoint( b, color );\n\n\t}\n\n\tfunction addPoint( id, color ) {\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tcolors.push( color.r, color.g, color.b );\n\n\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\tpointMap[ id ] = [];\n\n\t\t}\n\n\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tLineSegments.call( this, geometry, material );\n\n\tthis.camera = camera;\n\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\tthis.matrix = camera.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.pointMap = pointMap;\n\n\tthis.update();\n\n}\n\nCameraHelper.prototype = Object.create( LineSegments.prototype );\nCameraHelper.prototype.constructor = CameraHelper;\n\nCameraHelper.prototype.update = function () {\n\n\tvar geometry, pointMap;\n\n\tvar vector = new Vector3();\n\tvar camera = new Camera();\n\n\tfunction setPoint( point, x, y, z ) {\n\n\t\tvector.set( x, y, z ).unproject( camera );\n\n\t\tvar points = pointMap[ point ];\n\n\t\tif ( points !== undefined ) {\n\n\t\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tposition.setXYZ( points[ i ], vector.x, vector.y, vector.z );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn function update() {\n\n\t\tgeometry = this.geometry;\n\t\tpointMap = this.pointMap;\n\n\t\tvar w = 1, h = 1;\n\n\t\t// we need just camera projection matrix\n\t\t// world matrix must be identity\n\n\t\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', 0, 0, - 1 );\n\t\tsetPoint( 't', 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', - w, - h, - 1 );\n\t\tsetPoint( 'n2', w, - h, - 1 );\n\t\tsetPoint( 'n3', - w, h, - 1 );\n\t\tsetPoint( 'n4', w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', - w, - h, 1 );\n\t\tsetPoint( 'f2', w, - h, 1 );\n\t\tsetPoint( 'f3', - w, h, 1 );\n\t\tsetPoint( 'f4', w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', - w, 0, 1 );\n\t\tsetPoint( 'cf2', w, 0, 1 );\n\t\tsetPoint( 'cf3', 0, - h, 1 );\n\t\tsetPoint( 'cf4', 0, h, 1 );\n\n\t\tsetPoint( 'cn1', - w, 0, - 1 );\n\t\tsetPoint( 'cn2', w, 0, - 1 );\n\t\tsetPoint( 'cn3', 0, - h, - 1 );\n\t\tsetPoint( 'cn4', 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t};\n\n}();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / http://github.com/Mugen87\n */\n\nfunction BoxHelper( object, color ) {\n\n\tthis.object = object;\n\n\tif ( color === undefined ) color = 0xffff00;\n\n\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\tvar positions = new Float32Array( 8 * 3 );\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\tgeometry.addAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n}\n\nBoxHelper.prototype = Object.create( LineSegments.prototype );\nBoxHelper.prototype.constructor = BoxHelper;\n\nBoxHelper.prototype.update = ( function () {\n\n\tvar box = new Box3();\n\n\treturn function update( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\tbox.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tvar min = box.min;\n\t\tvar max = box.max;\n\n\t\t/*\n\t\t  5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tvar position = this.geometry.attributes.position;\n\t\tvar array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t};\n\n} )();\n\nBoxHelper.prototype.setFromObject = function ( object ) {\n\n\tthis.object = object;\n\tthis.update();\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Box3Helper( box, hex ) {\n\n\tthis.type = 'Box3Helper';\n\n\tthis.box = box;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\tvar positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\tvar geometry = new BufferGeometry();\n\n\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\tthis.geometry.computeBoundingSphere();\n\n}\n\nBox3Helper.prototype = Object.create( LineSegments.prototype );\nBox3Helper.prototype.constructor = Box3Helper;\n\nBox3Helper.prototype.updateMatrixWorld = function ( force ) {\n\n\tvar box = this.box;\n\n\tif ( box.isEmpty() ) return;\n\n\tbox.getCenter( this.position );\n\n\tbox.getSize( this.scale );\n\n\tthis.scale.multiplyScalar( 0.5 );\n\n\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction PlaneHelper( plane, size, hex ) {\n\n\tthis.type = 'PlaneHelper';\n\n\tthis.plane = plane;\n\n\tthis.size = ( size === undefined ) ? 1 : size;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar positions = [ 1, - 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0 ];\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\tgeometry.computeBoundingSphere();\n\n\tLine.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\t//\n\n\tvar positions2 = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, - 1, 1, 1, - 1, 1 ];\n\n\tvar geometry2 = new BufferGeometry();\n\tgeometry2.addAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\tgeometry2.computeBoundingSphere();\n\n\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false } ) ) );\n\n}\n\nPlaneHelper.prototype = Object.create( Line.prototype );\nPlaneHelper.prototype.constructor = PlaneHelper;\n\nPlaneHelper.prototype.updateMatrixWorld = function ( force ) {\n\n\tvar scale = - this.plane.constant;\n\n\tif ( Math.abs( scale ) < 1e-8 ) scale = 1e-8; // sign does not matter\n\n\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, scale );\n\n\tthis.children[ 0 ].material.side = ( scale < 0 ) ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\n\n\tthis.lookAt( this.plane.normal );\n\n\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n * @author zz85 / http://github.com/zz85\n * @author bhouston / http://clara.io\n *\n * Creates an arrow for visualizing directions\n *\n * Parameters:\n *  dir - Vector3\n *  origin - Vector3\n *  length - Number\n *  color - color in hex value\n *  headLength - Number\n *  headWidth - Number\n */\n\nvar lineGeometry, coneGeometry;\n\nfunction ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\n\n\t// dir is assumed to be normalized\n\n\tObject3D.call( this );\n\n\tif ( color === undefined ) color = 0xffff00;\n\tif ( length === undefined ) length = 1;\n\tif ( headLength === undefined ) headLength = 0.2 * length;\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\tif ( lineGeometry === undefined ) {\n\n\t\tlineGeometry = new BufferGeometry();\n\t\tlineGeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\tconeGeometry = new CylinderBufferGeometry( 0, 0.5, 1, 5, 1 );\n\t\tconeGeometry.translate( 0, - 0.5, 0 );\n\n\t}\n\n\tthis.position.copy( origin );\n\n\tthis.line = new Line( lineGeometry, new LineBasicMaterial( { color: color } ) );\n\tthis.line.matrixAutoUpdate = false;\n\tthis.add( this.line );\n\n\tthis.cone = new Mesh( coneGeometry, new MeshBasicMaterial( { color: color } ) );\n\tthis.cone.matrixAutoUpdate = false;\n\tthis.add( this.cone );\n\n\tthis.setDirection( dir );\n\tthis.setLength( length, headLength, headWidth );\n\n}\n\nArrowHelper.prototype = Object.create( Object3D.prototype );\nArrowHelper.prototype.constructor = ArrowHelper;\n\nArrowHelper.prototype.setDirection = ( function () {\n\n\tvar axis = new Vector3();\n\tvar radians;\n\n\treturn function setDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tradians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\n\n\t\t}\n\n\t};\n\n}() );\n\nArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\n\n\tif ( headLength === undefined ) headLength = 0.2 * length;\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\tthis.line.scale.set( 1, Math.max( 0, length - headLength ), 1 );\n\tthis.line.updateMatrix();\n\n\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\tthis.cone.position.y = length;\n\tthis.cone.updateMatrix();\n\n};\n\nArrowHelper.prototype.setColor = function ( color ) {\n\n\tthis.line.material.color.copy( color );\n\tthis.cone.material.color.copy( color );\n\n};\n\n/**\n * @author sroucheray / http://sroucheray.org/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AxesHelper( size ) {\n\n\tsize = size || 1;\n\n\tvar vertices = [\n\t\t0, 0, 0,\tsize, 0, 0,\n\t\t0, 0, 0,\t0, size, 0,\n\t\t0, 0, 0,\t0, 0, size\n\t];\n\n\tvar colors = [\n\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t0, 0, 1,\t0, 0.6, 1\n\t];\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nAxesHelper.prototype = Object.create( LineSegments.prototype );\nAxesHelper.prototype.constructor = AxesHelper;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Face4( a, b, c, d, normal, color, materialIndex ) {\n\n\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\n\treturn new Face3( a, b, c, normal, color, materialIndex );\n\n}\n\nvar LineStrip = 0;\n\nvar LinePieces = 1;\n\nfunction MeshFaceMaterial( materials ) {\n\n\tconsole.warn( 'THREE.MeshFaceMaterial has been removed. Use an Array instead.' );\n\treturn materials;\n\n}\n\nfunction MultiMaterial( materials ) {\n\n\tif ( materials === undefined ) materials = [];\n\n\tconsole.warn( 'THREE.MultiMaterial has been removed. Use an Array instead.' );\n\tmaterials.isMultiMaterial = true;\n\tmaterials.materials = materials;\n\tmaterials.clone = function () {\n\n\t\treturn materials.slice();\n\n\t};\n\treturn materials;\n\n}\n\nfunction PointCloud( geometry, material ) {\n\n\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\n\treturn new Points( geometry, material );\n\n}\n\nfunction Particle( material ) {\n\n\tconsole.warn( 'THREE.Particle has been renamed to THREE.Sprite.' );\n\treturn new Sprite( material );\n\n}\n\nfunction ParticleSystem( geometry, material ) {\n\n\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\n\treturn new Points( geometry, material );\n\n}\n\nfunction PointCloudMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction ParticleBasicMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction ParticleSystemMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction Vertex( x, y, z ) {\n\n\tconsole.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\n\treturn new Vector3( x, y, z );\n\n}\n\n//\n\nfunction DynamicBufferAttribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\n\treturn new BufferAttribute( array, itemSize ).setDynamic( true );\n\n}\n\nfunction Int8Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.' );\n\treturn new Int8BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint8Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.' );\n\treturn new Uint8BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint8ClampedAttribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.' );\n\treturn new Uint8ClampedBufferAttribute( array, itemSize );\n\n}\n\nfunction Int16Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.' );\n\treturn new Int16BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint16Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.' );\n\treturn new Uint16BufferAttribute( array, itemSize );\n\n}\n\nfunction Int32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.' );\n\treturn new Int32BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.' );\n\treturn new Uint32BufferAttribute( array, itemSize );\n\n}\n\nfunction Float32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.' );\n\treturn new Float32BufferAttribute( array, itemSize );\n\n}\n\nfunction Float64Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.' );\n\treturn new Float64BufferAttribute( array, itemSize );\n\n}\n\n//\n\nCurve.create = function ( construct, getPoint ) {\n\n\tconsole.log( 'THREE.Curve.create() has been deprecated' );\n\n\tconstruct.prototype = Object.create( Curve.prototype );\n\tconstruct.prototype.constructor = construct;\n\tconstruct.prototype.getPoint = getPoint;\n\n\treturn construct;\n\n};\n\n//\n\nObject.assign( CurvePath.prototype, {\n\n\tcreatePointsGeometry: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t// generate geometry from path points (for Line or Points objects)\n\n\t\tvar pts = this.getPoints( divisions );\n\t\treturn this.createGeometry( pts );\n\n\t},\n\n\tcreateSpacedPointsGeometry: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t// generate geometry from equidistant sampling along the path\n\n\t\tvar pts = this.getSpacedPoints( divisions );\n\t\treturn this.createGeometry( pts );\n\n\t},\n\n\tcreateGeometry: function ( points ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\tvar geometry = new Geometry();\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tgeometry.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t}\n\n\t\treturn geometry;\n\n\t}\n\n} );\n\n//\n\nObject.assign( Path.prototype, {\n\n\tfromPoints: function ( points ) {\n\n\t\tconsole.warn( 'THREE.Path: .fromPoints() has been renamed to .setFromPoints().' );\n\t\tthis.setFromPoints( points );\n\n\t}\n\n} );\n\n//\n\nfunction ClosedSplineCurve3( points ) {\n\n\tconsole.warn( 'THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\tthis.closed = true;\n\n}\n\nClosedSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n//\n\nfunction SplineCurve3( points ) {\n\n\tconsole.warn( 'THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\n}\n\nSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n//\n\nfunction Spline( points ) {\n\n\tconsole.warn( 'THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\n}\n\nSpline.prototype = Object.create( CatmullRomCurve3.prototype );\n\nObject.assign( Spline.prototype, {\n\n\tinitFromArray: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .initFromArray() has been removed.' );\n\n\t},\n\tgetControlPointsArray: function ( /* optionalTarget */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .getControlPointsArray() has been removed.' );\n\n\t},\n\treparametrizeByArcLength: function ( /* samplingCoef */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .reparametrizeByArcLength() has been removed.' );\n\n\t}\n\n} );\n\n//\n\nfunction AxisHelper( size ) {\n\n\tconsole.warn( 'THREE.AxisHelper has been renamed to THREE.AxesHelper.' );\n\treturn new AxesHelper( size );\n\n}\n\nfunction BoundingBoxHelper( object, color ) {\n\n\tconsole.warn( 'THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.' );\n\treturn new BoxHelper( object, color );\n\n}\n\nfunction EdgesHelper( object, hex ) {\n\n\tconsole.warn( 'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.' );\n\treturn new LineSegments( new EdgesGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n}\n\nGridHelper.prototype.setColors = function () {\n\n\tconsole.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\n\n};\n\nSkeletonHelper.prototype.update = function () {\n\n\tconsole.error( 'THREE.SkeletonHelper: update() no longer needs to be called.' );\n\n};\n\nfunction WireframeHelper( object, hex ) {\n\n\tconsole.warn( 'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.' );\n\treturn new LineSegments( new WireframeGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n}\n\n//\n\nObject.assign( Loader.prototype, {\n\n\textractUrlBase: function ( url ) {\n\n\t\tconsole.warn( 'THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.' );\n\t\treturn LoaderUtils.extractUrlBase( url );\n\n\t}\n\n} );\n\nfunction XHRLoader( manager ) {\n\n\tconsole.warn( 'THREE.XHRLoader has been renamed to THREE.FileLoader.' );\n\treturn new FileLoader( manager );\n\n}\n\nfunction BinaryTextureLoader( manager ) {\n\n\tconsole.warn( 'THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.' );\n\treturn new DataTextureLoader( manager );\n\n}\n\nObject.assign( JSONLoader.prototype, {\n\n\tsetTexturePath: function ( value ) {\n\n\t\tconsole.warn( 'THREE.JSONLoader: .setTexturePath() has been renamed to .setResourcePath().' );\n\t\treturn this.setResourcePath( value );\n\n\t}\n\n} );\n\n//\n\nObject.assign( Box2.prototype, {\n\n\tcenter: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' );\n\t\treturn this.getCenter( optionalTarget );\n\n\t},\n\tempty: function () {\n\n\t\tconsole.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\n\t\treturn this.isEmpty();\n\n\t},\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tsize: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box2: .size() has been renamed to .getSize().' );\n\t\treturn this.getSize( optionalTarget );\n\n\t}\n} );\n\nObject.assign( Box3.prototype, {\n\n\tcenter: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' );\n\t\treturn this.getCenter( optionalTarget );\n\n\t},\n\tempty: function () {\n\n\t\tconsole.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\n\t\treturn this.isEmpty();\n\n\t},\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tisIntersectionSphere: function ( sphere ) {\n\n\t\tconsole.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\treturn this.intersectsSphere( sphere );\n\n\t},\n\tsize: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box3: .size() has been renamed to .getSize().' );\n\t\treturn this.getSize( optionalTarget );\n\n\t}\n} );\n\nLine3.prototype.center = function ( optionalTarget ) {\n\n\tconsole.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' );\n\treturn this.getCenter( optionalTarget );\n\n};\n\nObject.assign( _Math, {\n\n\trandom16: function () {\n\n\t\tconsole.warn( 'THREE.Math: .random16() has been deprecated. Use Math.random() instead.' );\n\t\treturn Math.random();\n\n\t},\n\n\tnearestPowerOfTwo: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo().' );\n\t\treturn _Math.floorPowerOfTwo( value );\n\n\t},\n\n\tnextPowerOfTwo: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo().' );\n\t\treturn _Math.ceilPowerOfTwo( value );\n\n\t}\n\n} );\n\nObject.assign( Matrix3.prototype, {\n\n\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\tconsole.warn( \"THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\treturn this.toArray( array, offset );\n\n\t},\n\tmultiplyVector3: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\n\t\treturn vector.applyMatrix3( this );\n\n\t},\n\tmultiplyVector3Array: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Matrix3: .multiplyVector3Array() has been removed.' );\n\n\t},\n\tapplyToBuffer: function ( buffer /*, offset, length */ ) {\n\n\t\tconsole.warn( 'THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\n\t\treturn this.applyToBufferAttribute( buffer );\n\n\t},\n\tapplyToVector3Array: function ( /* array, offset, length */ ) {\n\n\t\tconsole.error( 'THREE.Matrix3: .applyToVector3Array() has been removed.' );\n\n\t}\n\n} );\n\nObject.assign( Matrix4.prototype, {\n\n\textractPosition: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\n\t\treturn this.copyPosition( m );\n\n\t},\n\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\tconsole.warn( \"THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\treturn this.toArray( array, offset );\n\n\t},\n\tgetPosition: function () {\n\n\t\tvar v1;\n\n\t\treturn function getPosition() {\n\n\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\n\t\t\treturn v1.setFromMatrixColumn( this, 3 );\n\n\t\t};\n\n\t}(),\n\tsetRotationFromQuaternion: function ( q ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\n\t\treturn this.makeRotationFromQuaternion( q );\n\n\t},\n\tmultiplyToArray: function () {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyToArray() has been removed.' );\n\n\t},\n\tmultiplyVector3: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\tmultiplyVector4: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\tmultiplyVector3Array: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Matrix4: .multiplyVector3Array() has been removed.' );\n\n\t},\n\trotateAxis: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\n\t\tv.transformDirection( this );\n\n\t},\n\tcrossVector: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\ttranslate: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\n\n\t},\n\trotateX: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\n\n\t},\n\trotateY: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\n\n\t},\n\trotateZ: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\n\n\t},\n\trotateByAxis: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\n\n\t},\n\tapplyToBuffer: function ( buffer /*, offset, length */ ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\n\t\treturn this.applyToBufferAttribute( buffer );\n\n\t},\n\tapplyToVector3Array: function ( /* array, offset, length */ ) {\n\n\t\tconsole.error( 'THREE.Matrix4: .applyToVector3Array() has been removed.' );\n\n\t},\n\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.' );\n\t\treturn this.makePerspective( left, right, top, bottom, near, far );\n\n\t}\n\n} );\n\nPlane.prototype.isIntersectionLine = function ( line ) {\n\n\tconsole.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\n\treturn this.intersectsLine( line );\n\n};\n\nQuaternion.prototype.multiplyVector3 = function ( vector ) {\n\n\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\n\treturn vector.applyQuaternion( this );\n\n};\n\nObject.assign( Ray.prototype, {\n\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tisIntersectionPlane: function ( plane ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\n\t\treturn this.intersectsPlane( plane );\n\n\t},\n\tisIntersectionSphere: function ( sphere ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\treturn this.intersectsSphere( sphere );\n\n\t}\n\n} );\n\nObject.assign( Triangle.prototype, {\n\n\tarea: function () {\n\n\t\tconsole.warn( 'THREE.Triangle: .area() has been renamed to .getArea().' );\n\t\treturn this.getArea();\n\n\t},\n\tbarycoordFromPoint: function ( point, target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\t\treturn this.getBarycoord( point, target );\n\n\t},\n\tmidpoint: function ( target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .midpoint() has been renamed to .getMidpoint().' );\n\t\treturn this.getMidpoint( target );\n\n\t},\n\tnormal: function ( target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\t\treturn this.getNormal( target );\n\n\t},\n\tplane: function ( target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .plane() has been renamed to .getPlane().' );\n\t\treturn this.getPlane( target );\n\n\t}\n\n} );\n\nObject.assign( Triangle, {\n\n\tbarycoordFromPoint: function ( point, a, b, c, target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\t\treturn Triangle.getBarycoord( point, a, b, c, target );\n\n\t},\n\tnormal: function ( a, b, c, target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\t\treturn Triangle.getNormal( a, b, c, target );\n\n\t}\n\n} );\n\nObject.assign( Shape.prototype, {\n\n\textractAllPoints: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.' );\n\t\treturn this.extractPoints( divisions );\n\n\t},\n\textrude: function ( options ) {\n\n\t\tconsole.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' );\n\t\treturn new ExtrudeGeometry( this, options );\n\n\t},\n\tmakeGeometry: function ( options ) {\n\n\t\tconsole.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' );\n\t\treturn new ShapeGeometry( this, options );\n\n\t}\n\n} );\n\nObject.assign( Vector2.prototype, {\n\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tdistanceToManhattan: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\t\treturn this.manhattanDistanceTo( v );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\nObject.assign( Vector3.prototype, {\n\n\tsetEulerFromRotationMatrix: function () {\n\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\n\n\t},\n\tsetEulerFromQuaternion: function () {\n\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\n\n\t},\n\tgetPositionFromMatrix: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\n\t\treturn this.setFromMatrixPosition( m );\n\n\t},\n\tgetScaleFromMatrix: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\n\t\treturn this.setFromMatrixScale( m );\n\n\t},\n\tgetColumnFromMatrix: function ( index, matrix ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\n\t\treturn this.setFromMatrixColumn( matrix, index );\n\n\t},\n\tapplyProjection: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.' );\n\t\treturn this.applyMatrix4( m );\n\n\t},\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tdistanceToManhattan: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\t\treturn this.manhattanDistanceTo( v );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\nObject.assign( Vector4.prototype, {\n\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\n//\n\nObject.assign( Geometry.prototype, {\n\n\tcomputeTangents: function () {\n\n\t\tconsole.error( 'THREE.Geometry: .computeTangents() has been removed.' );\n\n\t},\n\tcomputeLineDistances: function () {\n\n\t\tconsole.error( 'THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.' );\n\n\t}\n\n} );\n\nObject.assign( Object3D.prototype, {\n\n\tgetChildByName: function ( name ) {\n\n\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\n\t\treturn this.getObjectByName( name );\n\n\t},\n\trenderDepth: function () {\n\n\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\n\n\t},\n\ttranslate: function ( distance, axis ) {\n\n\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\n\t\treturn this.translateOnAxis( axis, distance );\n\n\t},\n\tgetWorldRotation: function () {\n\n\t\tconsole.error( 'THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.' );\n\n\t}\n\n} );\n\nObject.defineProperties( Object3D.prototype, {\n\n\teulerOrder: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\treturn this.rotation.order;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\tthis.rotation.order = value;\n\n\t\t}\n\t},\n\tuseQuaternion: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( LOD.prototype, {\n\n\tobjects: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\n\t\t\treturn this.levels;\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperty( Skeleton.prototype, 'useVertexTexture', {\n\n\tget: function () {\n\n\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t},\n\tset: function () {\n\n\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t}\n\n} );\n\nObject.defineProperty( Curve.prototype, '__arcLengthDivisions', {\n\n\tget: function () {\n\n\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\treturn this.arcLengthDivisions;\n\n\t},\n\tset: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\tthis.arcLengthDivisions = value;\n\n\t}\n\n} );\n\n//\n\nPerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\n\n\tconsole.warn( \"THREE.PerspectiveCamera.setLens is deprecated. \" +\n\t\t\t\"Use .setFocalLength and .filmGauge for a photographic setup.\" );\n\n\tif ( filmGauge !== undefined ) this.filmGauge = filmGauge;\n\tthis.setFocalLength( focalLength );\n\n};\n\n//\n\nObject.defineProperties( Light.prototype, {\n\tonlyShadow: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\n\n\t\t}\n\t},\n\tshadowCameraFov: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\n\t\t\tthis.shadow.camera.fov = value;\n\n\t\t}\n\t},\n\tshadowCameraLeft: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\n\t\t\tthis.shadow.camera.left = value;\n\n\t\t}\n\t},\n\tshadowCameraRight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\n\t\t\tthis.shadow.camera.right = value;\n\n\t\t}\n\t},\n\tshadowCameraTop: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\n\t\t\tthis.shadow.camera.top = value;\n\n\t\t}\n\t},\n\tshadowCameraBottom: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\n\t\t\tthis.shadow.camera.bottom = value;\n\n\t\t}\n\t},\n\tshadowCameraNear: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\n\t\t\tthis.shadow.camera.near = value;\n\n\t\t}\n\t},\n\tshadowCameraFar: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\n\t\t\tthis.shadow.camera.far = value;\n\n\t\t}\n\t},\n\tshadowCameraVisible: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\n\n\t\t}\n\t},\n\tshadowBias: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\n\t\t\tthis.shadow.bias = value;\n\n\t\t}\n\t},\n\tshadowDarkness: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowDarkness has been removed.' );\n\n\t\t}\n\t},\n\tshadowMapWidth: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\n\t\t\tthis.shadow.mapSize.width = value;\n\n\t\t}\n\t},\n\tshadowMapHeight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\n\t\t\tthis.shadow.mapSize.height = value;\n\n\t\t}\n\t}\n} );\n\n//\n\nObject.defineProperties( BufferAttribute.prototype, {\n\n\tlength: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Use .count instead.' );\n\t\t\treturn this.array.length;\n\n\t\t}\n\t},\n\tcopyIndicesArray: function ( /* indices */ ) {\n\n\t\tconsole.error( 'THREE.BufferAttribute: .copyIndicesArray() has been removed.' );\n\n\t}\n\n} );\n\nObject.assign( BufferGeometry.prototype, {\n\n\taddIndex: function ( index ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\n\t\tthis.setIndex( index );\n\n\t},\n\taddDrawCall: function ( start, count, indexOffset ) {\n\n\t\tif ( indexOffset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\n\n\t\t}\n\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\n\t\tthis.addGroup( start, count );\n\n\t},\n\tclearDrawCalls: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\n\t\tthis.clearGroups();\n\n\t},\n\tcomputeTangents: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\n\n\t},\n\tcomputeOffsets: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\n\n\t}\n\n} );\n\nObject.defineProperties( BufferGeometry.prototype, {\n\n\tdrawcalls: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t},\n\toffsets: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.assign( ExtrudeBufferGeometry.prototype, {\n\n\tgetArrays: function () {\n\n\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .getArrays() has been removed.' );\n\n\t},\n\n\taddShapeList: function () {\n\n\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.' );\n\n\t},\n\n\taddShape: function () {\n\n\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .addShape() has been removed.' );\n\n\t}\n\n} );\n\n//\n\nObject.defineProperties( Uniform.prototype, {\n\n\tdynamic: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.' );\n\n\t\t}\n\t},\n\tonUpdate: {\n\t\tvalue: function () {\n\n\t\t\tconsole.warn( 'THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.' );\n\t\t\treturn this;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( Material.prototype, {\n\n\twrapAround: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t}\n\t},\n\twrapRGB: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapRGB has been removed.' );\n\t\t\treturn new Color();\n\n\t\t}\n\t},\n\n\tshading: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\tthis.flatShading = ( value === FlatShading );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( MeshPhongMaterial.prototype, {\n\n\tmetal: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.' );\n\t\t\treturn false;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead' );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( ShaderMaterial.prototype, {\n\n\tderivatives: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\treturn this.extensions.derivatives;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\tthis.extensions.derivatives = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.assign( WebGLRenderer.prototype, {\n\n\tclearTarget: function ( renderTarget, color, depth, stencil ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.' );\n\t\tthis.setRenderTarget( renderTarget );\n\t\tthis.clear( color, depth, stencil );\n\n\t},\n\n\tanimate: function ( callback ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .animate() is now .setAnimationLoop().' );\n\t\tthis.setAnimationLoop( callback );\n\n\t},\n\n\tgetCurrentRenderTarget: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().' );\n\t\treturn this.getRenderTarget();\n\n\t},\n\n\tgetMaxAnisotropy: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().' );\n\t\treturn this.capabilities.getMaxAnisotropy();\n\n\t},\n\n\tgetPrecision: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.' );\n\t\treturn this.capabilities.precision;\n\n\t},\n\n\tresetGLState: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .resetGLState() is now .state.reset().' );\n\t\treturn this.state.reset();\n\n\t},\n\n\tsupportsFloatTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\n\t\treturn this.extensions.get( 'OES_texture_float' );\n\n\t},\n\tsupportsHalfFloatTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\n\t\treturn this.extensions.get( 'OES_texture_half_float' );\n\n\t},\n\tsupportsStandardDerivatives: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\n\t\treturn this.extensions.get( 'OES_standard_derivatives' );\n\n\t},\n\tsupportsCompressedTextureS3TC: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\n\t\treturn this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t},\n\tsupportsCompressedTexturePVRTC: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\n\t\treturn this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t},\n\tsupportsBlendMinMax: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\n\t\treturn this.extensions.get( 'EXT_blend_minmax' );\n\n\t},\n\tsupportsVertexTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.' );\n\t\treturn this.capabilities.vertexTextures;\n\n\t},\n\tsupportsInstancedArrays: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\n\t\treturn this.extensions.get( 'ANGLE_instanced_arrays' );\n\n\t},\n\tenableScissorTest: function ( boolean ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\n\t\tthis.setScissorTest( boolean );\n\n\t},\n\tinitMaterial: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\n\n\t},\n\taddPrePlugin: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\n\n\t},\n\taddPostPlugin: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\n\n\t},\n\tupdateShadowMap: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\n\n\t},\n\tsetFaceCulling: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .setFaceCulling() has been removed.' );\n\n\t}\n\n} );\n\nObject.defineProperties( WebGLRenderer.prototype, {\n\n\tshadowMapEnabled: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.enabled;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\n\t\t\tthis.shadowMap.enabled = value;\n\n\t\t}\n\t},\n\tshadowMapType: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\n\t\t\tthis.shadowMap.type = value;\n\n\t\t}\n\t},\n\tshadowMapCullFace: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t}\n} );\n\nObject.defineProperties( WebGLShadowMap.prototype, {\n\n\tcullFace: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function ( /* cullFace */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\trenderReverseSided: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\trenderSingleSided: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( WebGLRenderTarget.prototype, {\n\n\twrapS: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\treturn this.texture.wrapS;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\tthis.texture.wrapS = value;\n\n\t\t}\n\t},\n\twrapT: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\treturn this.texture.wrapT;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\tthis.texture.wrapT = value;\n\n\t\t}\n\t},\n\tmagFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\treturn this.texture.magFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\tthis.texture.magFilter = value;\n\n\t\t}\n\t},\n\tminFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\treturn this.texture.minFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\tthis.texture.minFilter = value;\n\n\t\t}\n\t},\n\tanisotropy: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\treturn this.texture.anisotropy;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\tthis.texture.anisotropy = value;\n\n\t\t}\n\t},\n\toffset: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\treturn this.texture.offset;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\tthis.texture.offset = value;\n\n\t\t}\n\t},\n\trepeat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\treturn this.texture.repeat;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\tthis.texture.repeat = value;\n\n\t\t}\n\t},\n\tformat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\treturn this.texture.format;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\tthis.texture.format = value;\n\n\t\t}\n\t},\n\ttype: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\treturn this.texture.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\tthis.texture.type = value;\n\n\t\t}\n\t},\n\tgenerateMipmaps: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\treturn this.texture.generateMipmaps;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\tthis.texture.generateMipmaps = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( WebVRManager.prototype, {\n\n\tstanding: {\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebVRManager: .standing has been removed.' );\n\n\t\t}\n\t},\n\tuserHeight: {\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebVRManager: .userHeight has been removed.' );\n\n\t\t}\n\t}\n\n} );\n\n//\n\nAudio.prototype.load = function ( file ) {\n\n\tconsole.warn( 'THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.' );\n\tvar scope = this;\n\tvar audioLoader = new AudioLoader();\n\taudioLoader.load( file, function ( buffer ) {\n\n\t\tscope.setBuffer( buffer );\n\n\t} );\n\treturn this;\n\n};\n\nAudioAnalyser.prototype.getData = function () {\n\n\tconsole.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\n\treturn this.getFrequencyData();\n\n};\n\n//\n\nCubeCamera.prototype.updateCubeMap = function ( renderer, scene ) {\n\n\tconsole.warn( 'THREE.CubeCamera: .updateCubeMap() is now .update().' );\n\treturn this.update( renderer, scene );\n\n};\n\n//\n\nvar GeometryUtils = {\n\n\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\n\n\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\n\t\tvar matrix;\n\n\t\tif ( geometry2.isMesh ) {\n\n\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\n\n\t\t\tmatrix = geometry2.matrix;\n\t\t\tgeometry2 = geometry2.geometry;\n\n\t\t}\n\n\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\n\n\t},\n\n\tcenter: function ( geometry ) {\n\n\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\n\t\treturn geometry.center();\n\n\t}\n\n};\n\nImageUtils.crossOrigin = undefined;\n\nImageUtils.loadTexture = function ( url, mapping, onLoad, onError ) {\n\n\tconsole.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\n\n\tvar loader = new TextureLoader();\n\tloader.setCrossOrigin( this.crossOrigin );\n\n\tvar texture = loader.load( url, onLoad, undefined, onError );\n\n\tif ( mapping ) texture.mapping = mapping;\n\n\treturn texture;\n\n};\n\nImageUtils.loadTextureCube = function ( urls, mapping, onLoad, onError ) {\n\n\tconsole.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\n\n\tvar loader = new CubeTextureLoader();\n\tloader.setCrossOrigin( this.crossOrigin );\n\n\tvar texture = loader.load( urls, onLoad, undefined, onError );\n\n\tif ( mapping ) texture.mapping = mapping;\n\n\treturn texture;\n\n};\n\nImageUtils.loadCompressedTexture = function () {\n\n\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\n\n};\n\nImageUtils.loadCompressedTextureCube = function () {\n\n\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\n\n};\n\n//\n\nfunction Projector() {\n\n\tconsole.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\n\n\tthis.projectVector = function ( vector, camera ) {\n\n\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\n\t\tvector.project( camera );\n\n\t};\n\n\tthis.unprojectVector = function ( vector, camera ) {\n\n\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\n\t\tvector.unproject( camera );\n\n\t};\n\n\tthis.pickingRay = function () {\n\n\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\n\n\t};\n\n}\n\n//\n\nfunction CanvasRenderer() {\n\n\tconsole.error( 'THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js' );\n\n\tthis.domElement = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\tthis.clear = function () {};\n\tthis.render = function () {};\n\tthis.setClearColor = function () {};\n\tthis.setSize = function () {};\n\n}\n\n//\n\nvar SceneUtils = {\n\n\tcreateMultiMaterialObject: function ( /* geometry, materials */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t},\n\n\tdetach: function ( /* child, parent, scene */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t},\n\n\tattach: function ( /* child, scene, parent */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t}\n\n};\n\n//\n\nfunction LensFlare() {\n\n\tconsole.error( 'THREE.LensFlare has been moved to /examples/js/objects/Lensflare.js' );\n\n}\n\nexport { WebGLRenderTargetCube, WebGLRenderTarget, WebGLRenderer, ShaderLib, UniformsLib, UniformsUtils, ShaderChunk, FogExp2, Fog, Scene, Sprite, LOD, SkinnedMesh, Skeleton, Bone, Mesh, LineSegments, LineLoop, Line, Points, Group, VideoTexture, DataTexture, DataTexture3D, CompressedTexture, CubeTexture, CanvasTexture, DepthTexture, Texture, CompressedTextureLoader, DataTextureLoader, CubeTextureLoader, TextureLoader, ObjectLoader, MaterialLoader, BufferGeometryLoader, DefaultLoadingManager, LoadingManager, JSONLoader, ImageLoader, ImageBitmapLoader, FontLoader, FileLoader, Loader, LoaderUtils, Cache, AudioLoader, SpotLightShadow, SpotLight, PointLight, RectAreaLight, HemisphereLight, DirectionalLightShadow, DirectionalLight, AmbientLight, LightShadow, Light, StereoCamera, PerspectiveCamera, OrthographicCamera, CubeCamera, ArrayCamera, Camera, AudioListener, PositionalAudio, AudioContext, AudioAnalyser, Audio, VectorKeyframeTrack, StringKeyframeTrack, QuaternionKeyframeTrack, NumberKeyframeTrack, ColorKeyframeTrack, BooleanKeyframeTrack, PropertyMixer, PropertyBinding, KeyframeTrack, AnimationUtils, AnimationObjectGroup, AnimationMixer, AnimationClip, Uniform, InstancedBufferGeometry, BufferGeometry, Geometry, InterleavedBufferAttribute, InstancedInterleavedBuffer, InterleavedBuffer, InstancedBufferAttribute, Face3, Object3D, Raycaster, Layers, EventDispatcher, Clock, QuaternionLinearInterpolant, LinearInterpolant, DiscreteInterpolant, CubicInterpolant, Interpolant, Triangle, _Math as Math, Spherical, Cylindrical, Plane, Frustum, Sphere, Ray, Matrix4, Matrix3, Box3, Box2, Line3, Euler, Vector4, Vector3, Vector2, Quaternion, Color, ImmediateRenderObject, VertexNormalsHelper, SpotLightHelper, SkeletonHelper, PointLightHelper, RectAreaLightHelper, HemisphereLightHelper, GridHelper, PolarGridHelper, FaceNormalsHelper, DirectionalLightHelper, CameraHelper, BoxHelper, Box3Helper, PlaneHelper, ArrowHelper, AxesHelper, Shape, Path, ShapePath, Font, CurvePath, Curve, ImageUtils, ShapeUtils, WebGLUtils, WireframeGeometry, ParametricGeometry, ParametricBufferGeometry, TetrahedronGeometry, TetrahedronBufferGeometry, OctahedronGeometry, OctahedronBufferGeometry, IcosahedronGeometry, IcosahedronBufferGeometry, DodecahedronGeometry, DodecahedronBufferGeometry, PolyhedronGeometry, PolyhedronBufferGeometry, TubeGeometry, TubeBufferGeometry, TorusKnotGeometry, TorusKnotBufferGeometry, TorusGeometry, TorusBufferGeometry, TextGeometry, TextBufferGeometry, SphereGeometry, SphereBufferGeometry, RingGeometry, RingBufferGeometry, PlaneGeometry, PlaneBufferGeometry, LatheGeometry, LatheBufferGeometry, ShapeGeometry, ShapeBufferGeometry, ExtrudeGeometry, ExtrudeBufferGeometry, EdgesGeometry, ConeGeometry, ConeBufferGeometry, CylinderGeometry, CylinderBufferGeometry, CircleGeometry, CircleBufferGeometry, BoxGeometry, BoxBufferGeometry, ShadowMaterial, SpriteMaterial, RawShaderMaterial, ShaderMaterial, PointsMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshPhongMaterial, MeshToonMaterial, MeshNormalMaterial, MeshLambertMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshBasicMaterial, MeshMatcapMaterial, LineDashedMaterial, LineBasicMaterial, Material, Float64BufferAttribute, Float32BufferAttribute, Uint32BufferAttribute, Int32BufferAttribute, Uint16BufferAttribute, Int16BufferAttribute, Uint8ClampedBufferAttribute, Uint8BufferAttribute, Int8BufferAttribute, BufferAttribute, ArcCurve, CatmullRomCurve3, CubicBezierCurve, CubicBezierCurve3, EllipseCurve, LineCurve, LineCurve3, QuadraticBezierCurve, QuadraticBezierCurve3, SplineCurve, REVISION, MOUSE, CullFaceNone, CullFaceBack, CullFaceFront, CullFaceFrontBack, FrontFaceDirectionCW, FrontFaceDirectionCCW, BasicShadowMap, PCFShadowMap, PCFSoftShadowMap, FrontSide, BackSide, DoubleSide, FlatShading, SmoothShading, NoColors, FaceColors, VertexColors, NoBlending, NormalBlending, AdditiveBlending, SubtractiveBlending, MultiplyBlending, CustomBlending, AddEquation, SubtractEquation, ReverseSubtractEquation, MinEquation, MaxEquation, ZeroFactor, OneFactor, SrcColorFactor, OneMinusSrcColorFactor, SrcAlphaFactor, OneMinusSrcAlphaFactor, DstAlphaFactor, OneMinusDstAlphaFactor, DstColorFactor, OneMinusDstColorFactor, SrcAlphaSaturateFactor, NeverDepth, AlwaysDepth, LessDepth, LessEqualDepth, EqualDepth, GreaterEqualDepth, GreaterDepth, NotEqualDepth, MultiplyOperation, MixOperation, AddOperation, NoToneMapping, LinearToneMapping, ReinhardToneMapping, Uncharted2ToneMapping, CineonToneMapping, UVMapping, CubeReflectionMapping, CubeRefractionMapping, EquirectangularReflectionMapping, EquirectangularRefractionMapping, SphericalReflectionMapping, CubeUVReflectionMapping, CubeUVRefractionMapping, RepeatWrapping, ClampToEdgeWrapping, MirroredRepeatWrapping, NearestFilter, NearestMipMapNearestFilter, NearestMipMapLinearFilter, LinearFilter, LinearMipMapNearestFilter, LinearMipMapLinearFilter, UnsignedByteType, ByteType, ShortType, UnsignedShortType, IntType, UnsignedIntType, FloatType, HalfFloatType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShort565Type, UnsignedInt248Type, AlphaFormat, RGBFormat, RGBAFormat, LuminanceFormat, LuminanceAlphaFormat, RGBEFormat, DepthFormat, DepthStencilFormat, RedFormat, RGB_S3TC_DXT1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGB_PVRTC_4BPPV1_Format, RGB_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_PVRTC_2BPPV1_Format, RGB_ETC1_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_10x10_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, LoopOnce, LoopRepeat, LoopPingPong, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, ZeroCurvatureEnding, ZeroSlopeEnding, WrapAroundEnding, TrianglesDrawMode, TriangleStripDrawMode, TriangleFanDrawMode, LinearEncoding, sRGBEncoding, GammaEncoding, RGBEEncoding, LogLuvEncoding, RGBM7Encoding, RGBM16Encoding, RGBDEncoding, BasicDepthPacking, RGBADepthPacking, TangentSpaceNormalMap, ObjectSpaceNormalMap, BoxGeometry as CubeGeometry, Face4, LineStrip, LinePieces, MeshFaceMaterial, MultiMaterial, PointCloud, Particle, ParticleSystem, PointCloudMaterial, ParticleBasicMaterial, ParticleSystemMaterial, Vertex, DynamicBufferAttribute, Int8Attribute, Uint8Attribute, Uint8ClampedAttribute, Int16Attribute, Uint16Attribute, Int32Attribute, Uint32Attribute, Float32Attribute, Float64Attribute, ClosedSplineCurve3, SplineCurve3, Spline, AxisHelper, BoundingBoxHelper, EdgesHelper, WireframeHelper, XHRLoader, BinaryTextureLoader, GeometryUtils, Projector, CanvasRenderer, SceneUtils, LensFlare };\n","/**\n * Generated On: 2015-10-5\n * Class: Coordinates\n * Description: Coordonnées cartographiques\n */\n\nimport * as THREE from 'three';\nimport proj4 from 'proj4';\nimport Ellipsoid from '../Math/Ellipsoid';\n\nproj4.defs('EPSG:4978', '+proj=geocent +datum=WGS84 +units=m +no_defs');\n\nconst projectionCache = {};\n\nexport const ellipsoidSizes = {\n    x: 6378137,\n    y: 6378137,\n    z: 6356752.3142451793,\n};\n\nconst ellipsoid = new Ellipsoid(ellipsoidSizes);\n\nexport const UNIT = {\n    DEGREE: 1,\n    METER: 2,\n};\n\nfunction _unitFromProj4Unit(projunit) {\n    if (projunit === 'degrees') {\n        return UNIT.DEGREE;\n    } else if (projunit === 'm') {\n        return UNIT.METER;\n    } else {\n        return undefined;\n    }\n}\n\nexport function crsToUnit(crs) {\n    switch (crs) {\n        case 'EPSG:4326' : return UNIT.DEGREE;\n        case 'EPSG:4978' : return UNIT.METER;\n        default: {\n            const p = proj4.defs(crs);\n            if (!p) {\n                return undefined;\n            }\n            return _unitFromProj4Unit(p.units);\n        }\n    }\n}\n\nexport function reasonnableEpsilonForCRS(crs) {\n    if (is4326(crs)) {\n        return 0.01;\n    } else {\n        return 0.001;\n    }\n}\n\nfunction _crsToUnitWithError(crs) {\n    const u = crsToUnit(crs);\n    if (crs === undefined || u === undefined) {\n        throw new Error(`Invalid crs paramater value '${crs}'`);\n    }\n    return u;\n}\n\nexport function assertCrsIsValid(crs) {\n    _crsToUnitWithError(crs);\n}\n\nexport function crsIsGeographic(crs) {\n    return (_crsToUnitWithError(crs) != UNIT.METER);\n}\n\nexport function crsIsGeocentric(crs) {\n    return (_crsToUnitWithError(crs) == UNIT.METER);\n}\n\nfunction _assertIsGeographic(crs) {\n    if (!crsIsGeographic(crs)) {\n        throw new Error(`Can't query crs ${crs} long/lat`);\n    }\n}\n\nfunction _assertIsGeocentric(crs) {\n    if (!crsIsGeocentric(crs)) {\n        throw new Error(`Can't query crs ${crs} x/y/z`);\n    }\n}\n\nfunction instanceProj4(crsIn, crsOut) {\n    if (projectionCache[crsIn]) {\n        const p = projectionCache[crsIn];\n        if (p[crsOut]) {\n            return p[crsOut];\n        }\n    } else {\n        projectionCache[crsIn] = {};\n    }\n    const p = proj4(crsIn, crsOut);\n    projectionCache[crsIn][crsOut] = p;\n    return p;\n}\n\nexport function is4326(crs) {\n    return crs.indexOf('EPSG:4326') == 0;\n}\n\n// Only support explicit conversions\nconst cartesian = new THREE.Vector3();\nfunction _convert(coordsIn, newCrs, target) {\n    target = target || new Coordinates(newCrs, 0, 0);\n    if (newCrs === coordsIn.crs) {\n        return target.copy(coordsIn);\n    } else {\n        if (is4326(coordsIn.crs) && newCrs === 'EPSG:4978') {\n            ellipsoid.cartographicToCartesian(coordsIn, cartesian);\n            target.set(newCrs, cartesian);\n            target._normal = coordsIn._normal;\n            target._normalNeedsUpdate = false;\n            return target;\n        }\n\n        if (coordsIn.crs === 'EPSG:4978' && is4326(newCrs)) {\n            ellipsoid.cartesianToCartographic({\n                x: coordsIn._values[0],\n                y: coordsIn._values[1],\n                z: coordsIn._values[2],\n            }, target);\n            return target;\n        }\n\n        if (coordsIn.crs in proj4.defs && newCrs in proj4.defs) {\n            const val0 = coordsIn._values[0];\n            let val1 = coordsIn._values[1];\n            const crsIn = coordsIn.crs;\n\n            // there is a bug for converting anything from and to 4978 with proj4\n            // https://github.com/proj4js/proj4js/issues/195\n            // the workaround is to use an intermediate projection, like EPSG:4326\n            if (newCrs == 'EPSG:4978') {\n                const p = instanceProj4(crsIn, 'EPSG:4326').forward([val0, val1]);\n                target.set('EPSG:4326', p[0], p[1], coordsIn._values[2]);\n                return target.as('EPSG:4978', target);\n            } else if (coordsIn.crs === 'EPSG:4978') {\n                coordsIn.as('EPSG:4326', target);\n                const p = instanceProj4(target.crs, newCrs).forward([target._values[0], target._values[1]]);\n                target.set(newCrs, p[0], p[1], target._values[2]);\n                return target;\n            } else if (is4326(crsIn) && newCrs == 'EPSG:3857') {\n                val1 = THREE.Math.clamp(val1, -89.999999, 89.999999);\n                const p = instanceProj4(crsIn, newCrs).forward([val0, val1]);\n                return target.set(newCrs, p[0], p[1], coordsIn._values[2]);\n            } else {\n                // here is the normal case with proj4\n                const p = instanceProj4(crsIn, newCrs).forward([val0, val1]);\n                return target.set(newCrs, p[0], p[1], coordsIn._values[2]);\n            }\n        }\n\n        throw new Error(`Cannot convert from crs ${coordsIn.crs} to ${newCrs}`);\n    }\n}\n\n/**\n * Build a Coordinates object, given a {@link http://inspire.ec.europa.eu/theme/rs|crs} and a number of coordinates value. Coordinates can be in geocentric system, geographic system or an instance of {@link https://threejs.org/docs/#api/math/Vector3|THREE.Vector3}.\n * If crs = 'EPSG:4326', coordinates must be in geographic system.\n * If crs = 'EPSG:4978', coordinates must be in geocentric system.\n * @constructor\n * @param       {string} crs - Geographic or Geocentric coordinates system.\n * @param       {number|THREE.Vector3} coordinates - The globe coordinates to aim to.\n * @param       {number} coordinates.longitude - Geographic Coordinate longitude\n * @param       {number} coordinates.latitude - Geographic Coordinate latitude\n * @param       {number} coordinates.altitude - Geographic Coordinate altiude\n * @param       {number} coordinates.x - Geocentric Coordinate X\n * @param       {number} coordinates.y - Geocentric Coordinate Y\n * @param       {number} coordinates.z - Geocentric Coordinate Z\n * @example\n * new Coordinates('EPSG:4978', 20885167, 849862, 23385912); //Geocentric coordinates\n * // or\n * new Coordinates('EPSG:4326', 2.33, 48.24, 24999549); //Geographic coordinates\n */\n\nfunction Coordinates(crs, ...coordinates) {\n    this._values = new Float64Array(3);\n    this.set(crs, ...coordinates);\n    this._normalNeedsUpdate = true;\n    this._normal = new THREE.Vector3();\n\n    // this._normal = this._normal || computeGeodesicNormal(this);\n    Object.defineProperty(this, 'geodesicNormal',\n        {\n            configurable: true,\n            get: () => (this._normalNeedsUpdate ? computeGeodesicNormal(this) : this._normal),\n        });\n}\n\nconst planarNormal = new THREE.Vector3(0, 0, 1);\n\nfunction computeGeodesicNormal(coord) {\n    coord._normalNeedsUpdate = false;\n    if (is4326(coord.crs)) {\n        return ellipsoid.geodeticSurfaceNormalCartographic(coord, coord._normal);\n    }\n    // In globe mode (EPSG:4978), we compute the normal.\n    if (coord.crs == 'EPSG:4978') {\n        return ellipsoid.geodeticSurfaceNormal(coord, coord._normal);\n    }\n    coord._normal.copy(planarNormal);\n    // In planar mode, normal is the up vector.\n    return planarNormal;\n}\n\nCoordinates.prototype.set = function set(crs, ...coordinates) {\n    _crsToUnitWithError(crs);\n    this.crs = crs;\n\n    if (coordinates.length == 1 && coordinates[0] instanceof THREE.Vector3) {\n        this._values[0] = coordinates[0].x;\n        this._values[1] = coordinates[0].y;\n        this._values[2] = coordinates[0].z;\n    } else {\n        for (let i = 0; i < coordinates.length && i < 3; i++) {\n            this._values[i] = coordinates[i];\n        }\n        for (let i = coordinates.length; i < 3; i++) {\n            this._values[i] = 0;\n        }\n    }\n    this._normalNeedsUpdate = true;\n    return this;\n};\n\nCoordinates.prototype.clone = function clone(target) {\n    let r;\n    if (target) {\n        Coordinates.call(target, this.crs, ...this._values);\n        r = target;\n    } else {\n        r = new Coordinates(this.crs, ...this._values);\n    }\n    if (this._normal) {\n        r._normal.copy(this._normal);\n    }\n    return r;\n};\n\nCoordinates.prototype.copy = function copy(src) {\n    this.set(src.crs, ...src._values);\n    return this;\n};\n\n/**\n * Returns the longitude in geographic coordinates. Coordinates must be in geographic system (can be converted by using {@linkcode as()} ).\n * @example\n *\n * const position = { longitude: 2.33, latitude: 48.24, altitude: 24999549 };\n * const coordinates = new Coordinates('EPSG:4326', position.longitude, position.latitude, position.altitude); // Geographic system\n * coordinates.longitude(); // Longitude in geographic system\n * // returns 2.33\n *\n * // or\n *\n * const position = { x: 20885167, y: 849862, z: 23385912 };\n * const coords = new Coordinates('EPSG:4978', position.x, position.y, position.z);  // Geocentric system\n * const coordinates = coords.as('EPSG:4326');  // Geographic system\n * coordinates.longitude(); // Longitude in geographic system\n * // returns 2.330201911389028\n *\n * @return     {number} - The longitude of the position.\n */\n\nCoordinates.prototype.longitude = function longitude() {\n    _assertIsGeographic(this.crs);\n    return this._values[0];\n};\n\n/**\n * Returns the latitude in geographic coordinates. Coordinates must be in geographic system (can be converted by using {@linkcode as()} ).\n * @example\n *\n * const position = { longitude: 2.33, latitude: 48.24, altitude: 24999549 };\n * const coordinates = new Coordinates('EPSG:4326', position.longitude, position.latitude, position.altitude); // Geographic system\n * coordinates.latitude(); // Latitude in geographic system\n * // returns : 48.24\n *\n * // or\n *\n * const position = { x: 20885167, y: 849862, z: 23385912 };\n * const coords = new Coordinates('EPSG:4978', position.x, position.y, position.z);  // Geocentric system\n * const coordinates = coords.as('EPSG:4326');  // Geographic system\n * coordinates.latitude(); // Latitude in geographic system\n * // returns : 48.24830764643365\n *\n * @return     {number} - The latitude of the position.\n */\n\nCoordinates.prototype.latitude = function latitude() {\n    return this._values[1];\n};\n\n/**\n * Returns the altitude in geographic coordinates. Coordinates must be in geographic system (can be converted by using {@linkcode as()} ).\n * @example\n *\n * const position = { longitude: 2.33, latitude: 48.24, altitude: 24999549 };\n * const coordinates = new Coordinates('EPSG:4326', position.longitude, position.latitude, position.altitude); // Geographic system\n * coordinates.altitude(); // Altitude in geographic system\n * // returns : 24999549\n *\n * // or\n *\n * const position = { x: 20885167, y: 849862, z: 23385912 };\n * const coords = new Coordinates('EPSG:4978', position.x, position.y, position.z);  // Geocentric system\n * const coordinates = coords.as('EPSG:4326');  // Geographic system\n * coordinates.altitude(); // Altitude in geographic system\n * // returns : 24999548.046711832\n *\n * @return     {number} - The altitude of the position.\n */\n\nCoordinates.prototype.altitude = function altitude() {\n    _assertIsGeographic(this.crs);\n    return this._values[2];\n};\n\n/**\n * Set the altiude.\n * @example coordinates.setAltitude(number)\n * @param      {number} - Set the altitude.\n */\n\nCoordinates.prototype.setAltitude = function setAltitude(altitude) {\n    _assertIsGeographic(this.crs);\n    this._values[2] = altitude;\n};\n\n/**\n * Returns the longitude in geocentric coordinates. Coordinates must be in geocentric system (can be converted by using {@linkcode as()} ).\n * @example\n *\n * const position = { x: 20885167, y: 849862, z: 23385912 };\n * const coordinates = new Coordinates('EPSG:4978', position.x, position.y, position.z);  // Geocentric system\n * coordinates.x();  // Geocentric system\n * // returns : 20885167\n *\n * // or\n *\n * const position = { longitude: 2.33, latitude: 48.24, altitude: 24999549 };\n * const coords = new Coordinates('EPSG:4326', position.longitude, position.latitude, position.altitude); // Geographic system\n * const coordinates = coords.as('EPSG:4978'); // Geocentric system\n * coordinates.x(); // Geocentric system\n * // returns : 20888561.0301258\n *\n * @return     {number} - The longitude of the position.\n */\n\nCoordinates.prototype.x = function x() {\n    _assertIsGeocentric(this.crs);\n    return this._values[0];\n};\n\n/**\n * Returns the latitude in geocentric coordinates. Coordinates must be in geocentric system (can be converted by using {@linkcode as()} ).\n * @example\n *\n * const position = { x: 20885167, y: 849862, z: 23385912 };\n * const coordinates = new Coordinates('EPSG:4978', position.x, position.y, position.z);  // Geocentric system\n * coordinates.y();  // Geocentric system\n * // returns : 849862\n *\n * // or\n *\n * const position = { longitude: 2.33, latitude: 48.24, altitude: 24999549 };\n * const coords = new Coordinates('EPSG:4326', position.longitude, position.latitude, position.altitude); // Geographic system\n * const coordinates = coords.as('EPSG:4978'); // Geocentric system\n * coordinates.y(); // Geocentric system\n * // returns : 849926.376770819\n *\n * @return     {number} - The latitude of the position.\n */\n\nCoordinates.prototype.y = function y() {\n    _assertIsGeocentric(this.crs);\n    return this._values[1];\n};\n\n/**\n * Returns the altitude in geocentric coordinates. Coordinates must be in geocentric system (can be converted by using {@linkcode as()} ).\n * @example\n *\n * const position = { x: 20885167, y: 849862, z: 23385912 };\n * const coordinates = new Coordinates('EPSG:4978', position.x, position.y, position.z);  // Geocentric system\n * coordinates.z();  // Geocentric system\n * // returns : 23385912\n *\n * // or\n *\n * const position = { longitude: 2.33, latitude: 48.24, altitude: 24999549 };\n * const coords = new Coordinates('EPSG:4326', position.longitude, position.latitude, position.altitude); // Geographic system\n * const coordinates = coords.as('EPSG:4978'); // Geocentric system\n * coordinates.z(); // Geocentric system\n * // returns : 23382883.536591515\n *\n * @return     {number} - The altitude of the position.\n */\n\nCoordinates.prototype.z = function z() {\n    _assertIsGeocentric(this.crs);\n    return this._values[2];\n};\n\n/**\n * Returns a position in cartesian coordinates. Coordinates must be in geocentric system (can be converted by using {@linkcode as()} ).\n * @example\n *\n * const position = { x: 20885167, y: 849862, z: 23385912 };\n * const coordinates = new Coordinates('EPSG:4978', position.x, position.y, position.z);  // Geocentric system\n * coordinates.xyz();  // Geocentric system\n * // returns : Vector3\n * // x: 20885167\n * // y: 849862\n * // z: 23385912\n *\n * // or\n *\n * const position = { longitude: 2.33, latitude: 48.24, altitude: 24999549 };\n * const coords = new Coordinates('EPSG:4326', position.longitude, position.latitude, position.altitude); // Geographic system\n * const coordinates = coords.as('EPSG:4978'); // Geocentric system\n * coordinates.xyz(); // Geocentric system\n * // returns : Vector3\n * // x: 20885167\n * // y: 849862\n * // z: 23385912\n *\n * @return     {Position} - position\n */\n\nCoordinates.prototype.xyz = function xyz(target) {\n    _assertIsGeocentric(this.crs);\n    const v = target || new THREE.Vector3();\n    v.fromArray(this._values);\n    return v;\n};\n\n/**\n * Returns coordinates in the wanted {@link http://inspire.ec.europa.eu/theme/rs|CRS}.\n * @example\n *\n * const position = { longitude: 2.33, latitude: 48.24, altitude: 24999549 };\n * const coords = new Coordinates('EPSG:4326', position.longitude, position.latitude, position.altitude); // Geographic system\n * const coordinates = coords.as('EPSG:4978'); // Geocentric system\n *\n * // or\n *\n * const position = { x: 20885167, y: 849862, z: 23385912 };\n * const coords = new Coordinates('EPSG:4978', position.x, position.y, position.z);  // Geocentric system\n * const coordinates = coords.as('EPSG:4326');  // Geographic system\n *\n * //or\n *\n * new Coordinates('EPSG:4326', longitude: 2.33, latitude: 48.24, altitude: 24999549).as('EPSG:4978'); // Geocentric system\n *\n * // or\n *\n * new Coordinates('EPSG:4978', x: 20885167, y: 849862, z: 23385912).as('EPSG:4326'); // Geographic system\n *\n * @param      {string} - {@link http://inspire.ec.europa.eu/theme/rs|crs} : Geocentric (ex: 'EPSG:4326') or Geographic (ex: 'EPSG:4978').\n * @return     {Position} - position\n */\n\nCoordinates.prototype.as = function as(crs, target) {\n    if (crs === undefined || crsToUnit(crs) === undefined) {\n        throw new Error(`Invalid crs paramater value '${crs}'`);\n    }\n    return _convert(this, crs, target);\n};\n\n/**\n * Returns the normalized offset from top-left in extent of this Coordinates\n * e.g: extent.center().offsetInExtent(extent) would return (0.5, 0.5).\n * @param {Extent} extent\n * @param {Vector2} target optional Vector2 target. If not present a new one will be created\n * @return {Vector2} normalized offset in extent\n */\nCoordinates.prototype.offsetInExtent = function offsetInExtent(extent, target) {\n    if (this.crs != extent.crs()) {\n        throw new Error('unsupported mix');\n    }\n\n    const dimension = {\n        x: Math.abs(extent.east() - extent.west()),\n        y: Math.abs(extent.north() - extent.south()),\n    };\n\n    const x = crsIsGeocentric(this.crs) ? this.x() : this.longitude();\n    const y = crsIsGeocentric(this.crs) ? this.y() : this.latitude();\n\n    const originX = (x - extent.west()) / dimension.x;\n    const originY = (extent.north() - y) / dimension.y;\n\n    target = target || new THREE.Vector2();\n    target.set(originX, originY);\n    return target;\n};\n\nexport const C = {\n\n    /**\n     * Return a Coordinates object from a position object. The object just\n     * needs to have x, y, z properties.\n     *\n     * @param {string} crs - The crs of the original position\n     * @param {Object} position - the position to transform\n     * @param {number} position.x - the x component of the position\n     * @param {number} position.y - the y component of the position\n     * @param {number} position.z - the z component of the position\n     * @return {Coordinates}\n     */\n    EPSG_4326: function EPSG_4326(...args) {\n        return new Coordinates('EPSG:4326', ...args);\n    },\n};\n\nexport default Coordinates;\n","export const l_ELEVATION = 0;\nexport const l_COLOR = 1;\nexport const EMPTY_TEXTURE_ZOOM = -1;\n","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","var global = require('./_global');\nvar core = require('./_core');\nvar hide = require('./_hide');\nvar redefine = require('./_redefine');\nvar ctx = require('./_ctx');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    // export native or passed\n    out = (own ? target : source)[key];\n    // bind timers to global for call from export context\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // extend global\n    if (target) redefine(target, key, out, type & $export.U);\n    // export\n    if (exports[key] != out) hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\nglobal.core = core;\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n","import * as THREE from 'three';\nimport Coordinates, { crsIsGeographic, assertCrsIsValid, reasonnableEpsilonForCRS, is4326 } from '../Geographic/Coordinates';\nimport Projection from '../Geographic/Projection';\n\n/**\n * Extent is a SIG-area (so 2D)\n * It can use explicit coordinates (e.g: lon/lat) or implicit (WMTS coordinates)\n */\n\nconst CARDINAL = {\n    WEST: 0,\n    EAST: 1,\n    SOUTH: 2,\n    NORTH: 3,\n};\n\n/**\n * @class      Extent\n * @param      {string}          crs     projection crs (ex: 'EPSG:4326')\n * @param      {(Array|object|Number)}  values  west, east, south and north values\n */\nfunction Extent(crs, ...values) {\n    this._crs = crs;\n\n    if (this.isTiledCrs()) {\n        if (values.length == 3) {\n            this.zoom = values[0];\n            this.row = values[1];\n            this.col = values[2];\n\n            if (this.zoom < 0) {\n                throw new Error(`invlid WTMS values ${values}`);\n            }\n        } else {\n            throw new Error(`Unsupported constructor args '${values}'`);\n        }\n    } else if (values.length === 2 &&\n        values[0] instanceof Coordinates &&\n        values[1] instanceof Coordinates) {\n        this._values = new Float64Array(4);\n        this._values[CARDINAL.WEST] = values[0]._values[0];\n        this._values[CARDINAL.EAST] = values[1]._values[0];\n        this._values[CARDINAL.SOUTH] = values[0]._values[1];\n        this._values[CARDINAL.NORTH] = values[1]._values[1];\n    } else if (values.length == 1 && values[0].west != undefined) {\n        this._values = new Float64Array(4);\n        this._values[CARDINAL.WEST] = values[0].west;\n        this._values[CARDINAL.EAST] = values[0].east;\n        this._values[CARDINAL.SOUTH] = values[0].south;\n        this._values[CARDINAL.NORTH] = values[0].north;\n    } else if (values.length == 4) {\n        this._values = new Float64Array(4);\n        Object.keys(CARDINAL).forEach((key) => {\n            const cardinal = CARDINAL[key];\n            this._values[cardinal] = values[cardinal];\n        });\n    } else {\n        throw new Error(`Unsupported constructor args '${values}'`);\n    }\n}\n\nExtent.prototype.clone = function clone() {\n    if (this.isTiledCrs()) {\n        return new Extent(this._crs, this.zoom, this.row, this.col);\n    } else {\n        const result = new Extent(this._crs, ...this._values);\n        return result;\n    }\n};\n\nExtent.prototype.isTiledCrs = function fnIsTiledCrs() {\n    return this._crs.indexOf('WMTS:') == 0 || this._crs == 'TMS';\n};\n\n// EPSG:3857\n// WGS84 bounds [-180.0, -85.06, 180.0, 85.06] (https://epsg.io/3857)\n// Warning, some tiled source don't exactly match the same bound\n// It should be taken into account\nconst coord = new Coordinates('EPSG:4326', 180, 85.06);\ncoord.as('EPSG:3857', coord);\n// Get bound dimension in 'EPSG:3857'\nconst sizeX = coord._values[0] * 2;\nconst sizeY = coord._values[1] * 2;\n\nExtent.prototype.as = function as(crs) {\n    assertCrsIsValid(crs);\n\n    if (this.isTiledCrs()) {\n        if (this._crs == 'WMTS:PM' || this._crs == 'TMS') {\n            // Convert this to the requested crs by using 4326 as an intermediate state.\n            const nbCol = Math.pow(2, this.zoom);\n            const nbRow = nbCol;\n            const sizeRow = 1.0 / nbRow;\n            // convert row PM to Y PM\n            const Yn = 1 - sizeRow * (nbRow - this.row);\n            const Ys = Yn + sizeRow;\n\n            // convert to EPSG:3857\n            if (crs == 'EPSG:3857') {\n                const west = (0.5 - sizeRow * (nbCol - this.col)) * sizeX;\n                const east = west + sizeRow * sizeX;\n                const south = (0.5 - Ys) * sizeY;\n                const north = (0.5 - Yn) * sizeY;\n                return new Extent('EPSG:3857', { west, east, south, north }).as(crs);\n            } else {\n                const size = 360 / nbCol;\n                // convert Y PM to latitude EPSG:4326 degree\n                const north = Projection.YToWGS84(Yn);\n                const south = Projection.YToWGS84(Ys);\n                // convert column PM to longitude EPSG:4326 degree\n                const west = 180 - size * (nbCol - this.col);\n                const east = west + size;\n\n                const extent = Extent('EPSG:4326', { west, east, south, north });\n                if (crs == 'EPSG:4326') {\n                    return extent;\n                } else {\n                    // convert in new crs\n                    return extent.as(crs);\n                }\n            }\n        } else if (this._crs == 'WMTS:WGS84G' && crs == 'EPSG:4326') {\n            const nbRow = Math.pow(2, this.zoom);\n            const size = 180 / nbRow;\n            const north = size * (nbRow - this.row) - 90;\n            const south = size * (nbRow - (this.row + 1)) - 90;\n            const west = 180 - size * (2 * nbRow - this.col);\n            const east = 180 - size * (2 * nbRow - (this.col + 1));\n\n            return new Extent(crs, { west, east, south, north });\n        } else {\n            throw new Error('Unsupported yet');\n        }\n    }\n\n    if (this._crs != crs && !(is4326(this._crs) && is4326(crs))) {\n        // Compute min/max in x/y by projecting 8 cardinal points,\n        // and then taking the min/max of each coordinates.\n        const cardinals = [];\n        const c = this.center();\n        cardinals.push(new Coordinates(this._crs, this.west(), this.north()));\n        cardinals.push(new Coordinates(this._crs, c._values[0], this.north()));\n        cardinals.push(new Coordinates(this._crs, this.east(), this.north()));\n        cardinals.push(new Coordinates(this._crs, this.east(), c._values[1]));\n        cardinals.push(new Coordinates(this._crs, this.east(), this.south()));\n        cardinals.push(new Coordinates(this._crs, c._values[0], this.south()));\n        cardinals.push(new Coordinates(this._crs, this.west(), this.south()));\n        cardinals.push(new Coordinates(this._crs, this.west(), c._values[1]));\n\n        let north = -Infinity;\n        let south = Infinity;\n        let east = -Infinity;\n        let west = Infinity;\n        // loop over the coordinates\n        for (let i = 0; i < cardinals.length; i++) {\n            // convert the coordinate.\n            cardinals[i] = cardinals[i].as(crs);\n            north = Math.max(north, cardinals[i]._values[1]);\n            south = Math.min(south, cardinals[i]._values[1]);\n            east = Math.max(east, cardinals[i]._values[0]);\n            west = Math.min(west, cardinals[i]._values[0]);\n        }\n        return new Extent(crs, { north, south, east, west });\n    }\n\n    return new Extent(crs, {\n        west: this.west(),\n        east: this.east(),\n        north: this.north(),\n        south: this.south(),\n    });\n};\n\nExtent.prototype.offsetToParent = function offsetToParent(other, target = new THREE.Vector4()) {\n    if (this.crs() != other.crs()) {\n        throw new Error('unsupported mix');\n    }\n    if (this.isTiledCrs()) {\n        const diffLevel = this.zoom - other.zoom;\n        const diff = Math.pow(2, diffLevel);\n        const invDiff = 1 / diff;\n\n        const r = (this.row - (this.row % diff)) * invDiff;\n        const c = (this.col - (this.col % diff)) * invDiff;\n\n        return target.set(\n            this.col * invDiff - c,\n            this.row * invDiff - r,\n            invDiff, invDiff);\n    }\n\n    const dimension = {\n        x: Math.abs(other.east() - other.west()),\n        y: Math.abs(other.north() - other.south()),\n    };\n\n    const originX =\n        (this.west() - other.west()) / dimension.x;\n    const originY =\n        (other.north() - this.north()) / dimension.y;\n\n    const scaleX =\n        Math.abs(\n            this.east() - this.west()) / dimension.x;\n\n    const scaleY =\n        Math.abs(\n            this.north() - this.south()) / dimension.y;\n\n    return target.set(originX, originY, scaleX, scaleY);\n};\n\nExtent.prototype.west = function west() {\n    return this._values[CARDINAL.WEST];\n};\n\nExtent.prototype.east = function east() {\n    return this._values[CARDINAL.EAST];\n};\n\nExtent.prototype.north = function north() {\n    return this._values[CARDINAL.NORTH];\n};\n\nExtent.prototype.south = function south() {\n    return this._values[CARDINAL.SOUTH];\n};\n\nExtent.prototype.crs = function crs() {\n    return this._crs;\n};\n\nExtent.prototype.center = function center(target) {\n    if (this.isTiledCrs()) {\n        throw new Error('Invalid operation for WMTS bbox');\n    }\n    let c;\n    if (target) {\n        Coordinates.call(target, this._crs, this._values[0], this._values[2]);\n        c = target;\n    } else {\n        c = new Coordinates(this._crs, this._values[0], this._values[2]);\n    }\n    const dim = this.dimensions();\n    c._values[0] += dim.x * 0.5;\n    c._values[1] += dim.y * 0.5;\n    return c;\n};\n\nExtent.prototype.dimensions = function dimensions(target) {\n    target = target || { x: 0, y: 0 };\n    target.x = Math.abs(this.east() - this.west());\n    target.y = Math.abs(this.north() - this.south());\n    return target;\n};\n\n/**\n * Return true if coord is inside the bounding box.\n *\n * @param {Coordinates} coord\n * @param {number} epsilon coord is inside the extent (+/- epsilon)\n * @return {boolean}\n */\nExtent.prototype.isPointInside = function isPointInside(coord, epsilon = 0) {\n    const c = (this.crs() == coord.crs) ? coord : coord.as(this.crs());\n    // TODO this ignores altitude\n    if (crsIsGeographic(this.crs())) {\n        return c.longitude() <= this.east() + epsilon &&\n               c.longitude() >= this.west() - epsilon &&\n               c.latitude() <= this.north() + epsilon &&\n               c.latitude() >= this.south() - epsilon;\n    } else {\n        return c.x() <= this.east() + epsilon &&\n               c.x() >= this.west() - epsilon &&\n               c.y() <= this.north() + epsilon &&\n               c.y() >= this.south() - epsilon;\n    }\n};\n\nExtent.prototype.isInside = function isInside(other, epsilon) {\n    if (this.isTiledCrs()) {\n        if (this.zoom == other.zoom) {\n            return this.row == other.row &&\n                this.col == other.col;\n        } else if (this.zoom < other.zoom) {\n            return false;\n        } else {\n            const diffLevel = this.zoom - other.zoom;\n            const diff = Math.pow(2, diffLevel);\n            const invDiff = 1 / diff;\n\n            const r = (this.row - (this.row % diff)) * invDiff;\n            const c = (this.col - (this.col % diff)) * invDiff;\n            return r == other.row && c == other.col;\n        }\n    } else {\n        const o = other.as(this._crs);\n        epsilon = epsilon == undefined ? reasonnableEpsilonForCRS(this._crs) : epsilon;\n        return this.east() - o.east() <= epsilon &&\n               o.west() - this.west() <= epsilon &&\n               this.north() - o.north() <= epsilon &&\n               o.south() - this.south() <= epsilon;\n    }\n};\n\nExtent.prototype.offsetScale = function offsetScale(bbox) {\n    if (bbox.crs() != this.crs()) {\n        throw new Error('unsupported offscale between 2 diff crs');\n    }\n\n    const dimension = {\n        x: Math.abs(this.east() - this.west()),\n        y: Math.abs(this.north() - this.south()),\n    };\n\n    var originX = (bbox.west() - this.west()) / dimension.x;\n    var originY = (bbox.north() - this.north()) / dimension.y;\n\n    var scaleX = Math.abs(bbox.east() - bbox.west()) / dimension.x;\n    var scaleY = Math.abs(bbox.north() - bbox.south()) / dimension.y;\n\n    return new THREE.Vector4(originX, originY, scaleX, scaleY);\n};\n\n/**\n * @documentation: Return true if this bounding box intersect with the bouding box parameter\n * @param {type} bbox\n * @returns {Boolean}\n */\nExtent.prototype.intersectsExtent = function intersectsExtent(bbox) {\n    const other = bbox.crs() == this.crs() ? bbox : bbox.as(this.crs());\n    return !(this.west() >= other.east() ||\n             this.east() <= other.west() ||\n             this.south() >= other.north() ||\n             this.north() <= other.south());\n};\n\n/**\n * @documentation: Return the intersection of this extent with another one\n * @param {type} other\n * @returns {Boolean}\n */\nExtent.prototype.intersect = function intersect(other) {\n    if (!this.intersectsExtent(other)) {\n        return new Extent(this.crs(), 0, 0, 0, 0);\n    }\n    if (other.crs() != this.crs()) {\n        other = other.as(this.crs());\n    }\n    const extent = new Extent(this.crs(),\n        Math.max(this.west(), other.west()),\n        Math.min(this.east(), other.east()),\n        Math.max(this.south(), other.south()),\n        Math.min(this.north(), other.north()));\n\n    return extent;\n};\n\n\nExtent.prototype.set = function set(...values) {\n    if (this.isTiledCrs()) {\n        this.zoom = values[0];\n        this.row = values[1];\n        this.col = values[2];\n    } else {\n        Object.keys(CARDINAL).forEach((key) => {\n            const cardinal = CARDINAL[key];\n            this._values[cardinal] = values[cardinal];\n        });\n    }\n    return this;\n};\n\nExtent.prototype.union = function union(extent) {\n    if (extent.crs() != this.crs()) {\n        throw new Error('unsupported union between 2 diff crs');\n    }\n    const west = extent.west();\n    if (west < this.west()) {\n        this._values[CARDINAL.WEST] = west;\n    }\n\n    const east = extent.east();\n    if (east > this.east()) {\n        this._values[CARDINAL.EAST] = east;\n    }\n\n    const south = extent.south();\n    if (south < this.south()) {\n        this._values[CARDINAL.SOUTH] = south;\n    }\n\n    const north = extent.north();\n    if (north > this.north()) {\n        this._values[CARDINAL.NORTH] = north;\n    }\n};\n\n/**\n * expandByPoint perfoms the minimal extension\n * for the point to belong to this Extent object\n * @param {Coordinates} coordinates  The coordinates to belong\n */\nconst c = new Coordinates('EPSG:4326', 0, 0, 0);\nExtent.prototype.expandByPoint = function expandByPoint(coordinates) {\n    const coords = coordinates.crs == this.crs() ? coordinates : coordinates.as(this.crs(), c);\n    const we = coords._values[0];\n    if (we < this.west()) {\n        this._values[CARDINAL.WEST] = we;\n    }\n    if (we > this.east()) {\n        this._values[CARDINAL.EAST] = we;\n    }\n    const sn = coords._values[1];\n    if (sn < this.south()) {\n        this._values[CARDINAL.SOUTH] = sn;\n    }\n    if (sn > this.north()) {\n        this._values[CARDINAL.NORTH] = sn;\n    }\n};\n\nExtent.fromBox3 = function fromBox3(crs, box) {\n    return new Extent(crs, {\n        west: box.min.x,\n        east: box.max.x,\n        south: box.min.y,\n        north: box.max.y,\n    });\n};\n\nExtent.prototype.extentParent = function extentParent(levelParent) {\n    if (this.isTiledCrs()) {\n        if (levelParent && levelParent < this.zoom) {\n            const diffLevel = this.zoom - levelParent;\n            const diff = Math.pow(2, diffLevel);\n            const invDiff = 1 / diff;\n\n            const r = (this.row - (this.row % diff)) * invDiff;\n            const c = (this.col - (this.col % diff)) * invDiff;\n\n            return new Extent(this.crs(), levelParent, r, c);\n        } else {\n            return this;\n        }\n    }\n};\n\nExtent.prototype.toString = function toString(separator = '') {\n    if (this.isTiledCrs()) {\n        return `${this.zoom}${separator}${this.row}${separator}${this.col}`;\n    } else {\n        return `${this.east()}${separator}${this.north()}${separator}${this.west()}${separator}${this.south()}`;\n    }\n};\n\nconst center = new Coordinates('EPSG:4326', 0, 0, 0);\n/**\n * Subdivide equally an extent from its center to return four extents:\n * north-west, north-east, south-west and south-east.\n *\n * @returns {Extent[]} An array containing the four sections of the extent. The\n * order of the sections is [NW, NE, SW, SE].\n */\nExtent.prototype.subdivision = function subdivision() {\n    this.center(center);\n\n    const northWest = new Extent(this.crs(),\n        this.west(), center._values[0],\n        center._values[1], this.north());\n    const northEast = new Extent(this.crs(),\n        center._values[0], this.east(),\n        center._values[1], this.north());\n    const southWest = new Extent(this.crs(),\n        this.west(), center._values[0],\n        this.south(), center._values[1]);\n    const southEast = new Extent(this.crs(),\n        center._values[0], this.east(),\n        this.south(), center._values[1]);\n\n    return [northWest, northEast, southWest, southEast];\n};\n\nexport default Extent;\n","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","var _typeof = require(\"../helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","import { TextureLoader, DataTexture, AlphaFormat, FloatType } from 'three';\n\nconst textureLoader = new TextureLoader();\nconst SIZE_TEXTURE_TILE = 256;\nfunction checkResponse(response) {\n    if (!response.ok) {\n        var error = new Error(`Error loading ${response.url}: status ${response.status}`);\n        error.response = response;\n        throw error;\n    }\n}\nconst arrayBuffer = (url, options = {}) => fetch(url, options).then((response) => {\n    checkResponse(response);\n    return response.arrayBuffer();\n});\n\nconst getTextureFloat = function getTextureFloat(buffer) {\n    const texture = new DataTexture(buffer, SIZE_TEXTURE_TILE, SIZE_TEXTURE_TILE, AlphaFormat, FloatType);\n    texture.needsUpdate = true;\n    return texture;\n};\n\nexport default {\n\n    /**\n     * Wrapper over fetch to get some text\n     *\n     * @param {string} url\n     * @param {Object} options - fetch options (passed directly to fetch)\n     *\n     * @return {Promise}\n     */\n    text(url, options = {}) {\n        return fetch(url, options).then((response) => {\n            checkResponse(response);\n            return response.text();\n        });\n    },\n\n    /**\n     * Little wrapper over fetch to get some json\n     *\n     * @param {string} url\n     * @param {Object} options - fetch options (passed directly to fetch)\n     *\n     * @return {Promise}\n     */\n    json(url, options = {}) {\n        return fetch(url, options).then((response) => {\n            checkResponse(response);\n            return response.json();\n        });\n    },\n\n    /**\n     * Wrapper over fetch to get some xml.\n     *\n     * @param {string} url\n     * @param {Object} options - fetch options (passed directly to fetch)\n     *\n     * @return {Promise}\n     */\n    xml(url, options = {}) {\n        return fetch(url, options).then((response) => {\n            checkResponse(response);\n            return response.text();\n        }).then(text => new window.DOMParser().parseFromString(text, 'text/xml'));\n    },\n\n    /**\n     * Wrapper around TextureLoader.\n     *\n     * @param {string} url\n     * @param {Object} options - options to pass to TextureLoader. Note that\n     * THREE.js docs mention withCredentials, but it is not actually used in TextureLoader.js.\n     * @param {string} options.crossOrigin - passed directly to html elements supporting it\n     *\n     * @return {Promise}\n     */\n    texture(url, options = {}) {\n        let res;\n        let rej;\n\n        textureLoader.crossOrigin = options.crossOrigin;\n\n        const promise = new Promise((resolve, reject) => {\n            res = resolve;\n            rej = reject;\n        });\n\n        textureLoader.load(url, res, () => {}, rej);\n        return promise;\n    },\n    /**\n     * Wrapper over fetch to get some ArrayBuffer\n     *\n     * @param {string} url\n     * @param {Object} options - fetch options (passed directly to fetch)\n     *\n     * @return {Promise}\n     */\n    arrayBuffer,\n    textureFloat(url, options = {}) {\n        return arrayBuffer(url, options).then((buffer) => {\n            const floatArray = new Float32Array(buffer);\n            const texture = getTextureFloat(floatArray);\n            return texture;\n        });\n    },\n};\n","import * as THREE from 'three';\nimport { STRATEGY_MIN_NETWORK_TRAFFIC } from './LayerUpdateStrategy';\nimport InfoLayer from './InfoLayer';\n\nclass Layer extends THREE.EventDispatcher {\n    /**\n     * Don't use directly constructor to instance a new Layer. Instead, use\n     * another available type of Layer, implement a new one inheriting from this\n     * one or use {@link View#addLayer}.\n     *\n     * @constructor\n     * @protected\n     *\n     * @param {string} id - The id of the layer, that should be unique. It is\n     * not mandatory, but an error will be emitted if this layer is added a\n     * {@link View} that already has a layer going by that id.\n     * @param {string} type - The type of the layer, used to determine\n     * operations to do on a layer later in the rendering loop. There are three\n     * type of layers in itowns:\n     * <ul>\n     *  <li><code>color</code>, used for simple layer containing a texture</li>\n     *  <li><code>elevation</code>, used for adding an elevation to the globe or\n     *  plane the layer is attached to</li>\n     *  <li><code>geometry</code>, used for complex layer containing meshes,\n     *  like a WFS layer with extruded buildings</li>\n     * <ul>\n     * @param {Object} [config] - Optional configuration, all elements in it\n     * will be merged as is in the layer. For example, if the configuration\n     * contains three elements <code>name, protocol, extent</code>, these\n     * elements will be available using <code>layer.name</code> or something\n     * else depending on the property name.\n     *\n     * @example\n     * // Add and create a new Layer\n     * const newLayer = view.addLayer({options});\n     *\n     * // Change layer's visibilty\n     * const layerToChange = view.getLayers(layer => layer.id == 'idLayerToChange')[0];\n     * layerToChange.visible = false;\n     * view.notifyChange(); // update viewer\n     *\n     * // Change layer's opacity\n     * const layerToChange = view.getLayers(layer => layer.id == 'idLayerToChange')[0];\n     * layerToChange.opacity = 0.5;\n     * view.notifyChange(); // update viewer\n     *\n     * // Listen properties\n     * const layerToListen = view.getLayers(layer => layer.id == 'idLayerToListen')[0];\n     * layerToListen.addEventListener('visible-property-changed', (event) => console.log(event));\n     * layerToListen.addEventListener('opacity-property-changed', (event) => console.log(event));\n     */\n    constructor(id, type, config = {}) {\n        super();\n\n        Object.assign(this, config);\n\n        Object.defineProperty(this, 'id', {\n            value: id,\n            writable: false,\n        });\n\n        Object.defineProperty(this, 'type', {\n            value: type,\n            writable: false,\n        });\n\n        // Default properties\n        this.options = config.options || {};\n\n        if (!this.updateStrategy) {\n            this.updateStrategy = {\n                type: STRATEGY_MIN_NETWORK_TRAFFIC,\n                options: {},\n            };\n        }\n\n        // TODO remove this warning and fallback after the release following v2.3.0\n        if (!this.format && this.options.mimetype) {\n            console.warn('layer.options.mimetype is deprecated, please use layer.format');\n            this.format = this.options.mimetype;\n        }\n\n        this.defineLayerProperty('frozen', false);\n\n        this.info = new InfoLayer(this);\n    }\n\n    /**\n     * Defines a property for this layer, with a default value and a callback\n     * executed when the property changes.\n     * <br><br>\n     * When changing the property, it also emits an event, named following this\n     * convention: <code>${propertyName}-property-changed</code>, with\n     * <code>${propertyName}</code> being replaced by the name of the property.\n     * For example, if the added property name is <code>frozen</code>, it will\n     * emit a <code>frozen-property-changed</code>.\n     * <br><br>\n     * @example <caption>The emitted event has some properties assigned to it</caption>\n     * event = {\n     *     new: {\n     *         ${propertyName}: * // the new value of the property\n     *     },\n     *     previous: {\n     *         ${propertyName}: * // the previous value of the property\n     *     },\n     *     target: Layer // the layer it has been dispatched from\n     *     type: string // the name of the emitted event\n     * }\n     *\n     * @param {string} propertyName - The name of the property, also used in\n     * the emitted event name.\n     * @param {*} defaultValue - The default set value.\n     * @param {function} [onChange] - The function executed when the property is\n     * changed. Parameters are the layer the property is defined on, and the\n     * name of the property.\n     */\n    defineLayerProperty(propertyName, defaultValue, onChange) {\n        const existing = Object.getOwnPropertyDescriptor(this, propertyName);\n        if (!existing || !existing.set) {\n            let property = this[propertyName] == undefined ? defaultValue : this[propertyName];\n\n            Object.defineProperty(\n                this,\n                propertyName,\n                {\n                    get: () => property,\n                    set: (newValue) => {\n                        if (property !== newValue) {\n                            const event = { type: `${propertyName}-property-changed`, previous: {}, new: {} };\n                            event.previous[propertyName] = property;\n                            event.new[propertyName] = newValue;\n                            property = newValue;\n                            if (onChange) {\n                                onChange(this, propertyName);\n                            }\n                            this.dispatchEvent(event);\n                        }\n                    },\n                });\n        }\n    }\n}\n\nexport default Layer;\n\nexport const ImageryLayers = {\n    // move this to new index\n    // After the modification :\n    //      * the minimum sequence will always be 0\n    //      * the maximum sequence will always be layers.lenght - 1\n    // the ordering of all layers (Except that specified) doesn't change\n    moveLayerToIndex: function moveLayerToIndex(layer, newIndex, imageryLayers) {\n        newIndex = Math.min(newIndex, imageryLayers.length - 1);\n        newIndex = Math.max(newIndex, 0);\n        const oldIndex = layer.sequence;\n\n        for (const imagery of imageryLayers) {\n            if (imagery.id === layer.id) {\n                // change index of specified layer\n                imagery.sequence = newIndex;\n            } else if (imagery.sequence > oldIndex && imagery.sequence <= newIndex) {\n                // down all layers between the old index and new index (to compensate the deletion of the old index)\n                imagery.sequence--;\n            } else if (imagery.sequence >= newIndex && imagery.sequence < oldIndex) {\n                // up all layers between the new index and old index (to compensate the insertion of the new index)\n                imagery.sequence++;\n            }\n        }\n    },\n\n    moveLayerDown: function moveLayerDown(layer, imageryLayers) {\n        if (layer.sequence > 0) {\n            this.moveLayerToIndex(layer, layer.sequence - 1, imageryLayers);\n        }\n    },\n\n    moveLayerUp: function moveLayerUp(layer, imageryLayers) {\n        const m = imageryLayers.length - 1;\n        if (layer.sequence < m) {\n            this.moveLayerToIndex(layer, layer.sequence + 1, imageryLayers);\n        }\n    },\n\n    getColorLayersIdOrderedBySequence: function getColorLayersIdOrderedBySequence(imageryLayers) {\n        const copy = Array.from(imageryLayers);\n        copy.sort((a, b) => a.sequence - b.sequence);\n        return copy.map(l => l.id);\n    },\n};\n\n","import { EventDispatcher } from 'three';\nimport Layer from '../Layer/Layer';\nimport Cache from '../Core/Scheduler/Cache';\n\nexport const RENDERING_PAUSED = 0;\nexport const RENDERING_SCHEDULED = 1;\n\n/**\n * MainLoop's update events list that are fired using\n * {@link View#execFrameRequesters}.\n *\n * @property UPDATE_START {string} fired at the start of the update\n * @property BEFORE_CAMERA_UPDATE {string} fired before the camera update\n * @property AFTER_CAMERA_UPDATE {string} fired after the camera update\n * @property BEFORE_LAYER_UPDATE {string} fired before the layer update\n * @property AFTER_LAYER_UPDATE {string} fired after the layer update\n * @property BEFORE_RENDER {string} fired before the render\n * @property AFTER_RENDER {string} fired after the render\n * @property UPDATE_END {string} fired at the end of the update\n */\n\nexport const MAIN_LOOP_EVENTS = {\n    UPDATE_START: 'update_start',\n    BEFORE_CAMERA_UPDATE: 'before_camera_update',\n    AFTER_CAMERA_UPDATE: 'after_camera_update',\n    BEFORE_LAYER_UPDATE: 'before_layer_update',\n    AFTER_LAYER_UPDATE: 'after_layer_update',\n    BEFORE_RENDER: 'before_render',\n    AFTER_RENDER: 'after_render',\n    UPDATE_END: 'update_end',\n};\n\nfunction MainLoop(scheduler, engine) {\n    this.renderingState = RENDERING_PAUSED;\n    this.needsRedraw = false;\n    this.scheduler = scheduler;\n    this.gfxEngine = engine; // TODO: remove me\n    this._updateLoopRestarted = true;\n}\n\nMainLoop.prototype = Object.create(EventDispatcher.prototype);\nMainLoop.prototype.constructor = MainLoop;\n\nMainLoop.prototype.scheduleViewUpdate = function scheduleViewUpdate(view, forceRedraw) {\n    this.needsRedraw |= forceRedraw;\n\n    if (this.renderingState !== RENDERING_SCHEDULED) {\n        this.renderingState = RENDERING_SCHEDULED;\n\n        if (__DEBUG__) {\n            document.title += ' ⌛';\n        }\n\n        requestAnimationFrame((timestamp) => { this._step(view, timestamp); });\n    }\n};\n\nfunction updateElements(context, geometryLayer, elements) {\n    if (!elements) {\n        return;\n    }\n    for (const element of elements) {\n        // update element\n        // TODO find a way to notify attachedLayers when geometryLayer deletes some elements\n        // and then update Debug.js:addGeometryLayerDebugFeatures\n        const newElementsToUpdate = geometryLayer.update(context, geometryLayer, element);\n\n        const sub = geometryLayer.getObjectToUpdateForAttachedLayers(element);\n\n        if (sub) {\n            if (sub.element) {\n                if (__DEBUG__) {\n                    if (!(sub.element.isObject3D)) {\n                        throw new Error(`\n                            Invalid object for attached layer to update.\n                            Must be a THREE.Object and have a THREE.Material`);\n                    }\n                }\n                // update attached layers\n                for (const attachedLayer of geometryLayer.attachedLayers) {\n                    if (attachedLayer.ready) {\n                        attachedLayer.update(context, attachedLayer, sub.element, sub.parent);\n                    }\n                }\n            } else if (sub.elements) {\n                for (let i = 0; i < sub.elements.length; i++) {\n                    if (!(sub.elements[i].isObject3D)) {\n                        throw new Error(`\n                            Invalid object for attached layer to update.\n                            Must be a THREE.Object and have a THREE.Material`);\n                    }\n                    // update attached layers\n                    for (const attachedLayer of geometryLayer.attachedLayers) {\n                        if (attachedLayer.ready) {\n                            attachedLayer.update(context, attachedLayer, sub.elements[i], sub.parent);\n                        }\n                    }\n                }\n            }\n        }\n        updateElements(context, geometryLayer, newElementsToUpdate);\n    }\n}\n\nfunction filterChangeSources(updateSources, geometryLayer) {\n    let fullUpdate = false;\n    const filtered = new Set();\n    updateSources.forEach((src) => {\n        if (src === geometryLayer || src.isCamera) {\n            geometryLayer.info.clear();\n            fullUpdate = true;\n        } else if (src.layer === geometryLayer) {\n            filtered.add(src);\n        }\n    });\n    return fullUpdate ? new Set([geometryLayer]) : filtered;\n}\n\nMainLoop.prototype._update = function _update(view, updateSources, dt) {\n    const context = {\n        camera: view.camera,\n        engine: this.gfxEngine,\n        scheduler: this.scheduler,\n        view,\n    };\n\n    // replace layer with their parent where needed\n    updateSources.forEach((src) => {\n        const layer = src.layer || src;\n        if (layer instanceof Layer) {\n            const parentLayer = view.getParentLayer(layer);\n            if (parentLayer) {\n                // add the parent layer to update sources\n                updateSources.add(parentLayer);\n            }\n        }\n    });\n\n    for (const geometryLayer of view.getLayers((x, y) => !y)) {\n        context.geometryLayer = geometryLayer;\n        if (geometryLayer.ready && geometryLayer.visible && !geometryLayer.frozen) {\n            view.execFrameRequesters(MAIN_LOOP_EVENTS.BEFORE_LAYER_UPDATE, dt, this._updateLoopRestarted, geometryLayer);\n\n            // Filter updateSources that are relevant for the geometryLayer\n            const srcs = filterChangeSources(updateSources, geometryLayer);\n            if (srcs.size > 0) {\n                // `preUpdate` returns an array of elements to update\n                const elementsToUpdate = geometryLayer.preUpdate(context, srcs);\n                // `update` is called in `updateElements`.\n                updateElements(context, geometryLayer, elementsToUpdate);\n                // `postUpdate` is called when this geom layer update process is finished\n                geometryLayer.postUpdate(context, geometryLayer, updateSources);\n            }\n\n            view.execFrameRequesters(MAIN_LOOP_EVENTS.AFTER_LAYER_UPDATE, dt, this._updateLoopRestarted, geometryLayer);\n        }\n    }\n};\n\nMainLoop.prototype._step = function _step(view, timestamp) {\n    const dt = timestamp - this._lastTimestamp;\n    view._executeFrameRequestersRemovals();\n\n    view.execFrameRequesters(MAIN_LOOP_EVENTS.UPDATE_START, dt, this._updateLoopRestarted);\n\n    const willRedraw = this.needsRedraw;\n    this._lastTimestamp = timestamp;\n\n    // Reset internal state before calling _update (so future calls to View.notifyChange()\n    // can properly change it)\n    this.needsRedraw = false;\n    this.renderingState = RENDERING_PAUSED;\n    const updateSources = new Set(view._changeSources);\n    view._changeSources.clear();\n\n    // update camera\n    const dim = this.gfxEngine.getWindowSize();\n\n    view.execFrameRequesters(MAIN_LOOP_EVENTS.BEFORE_CAMERA_UPDATE, dt, this._updateLoopRestarted);\n    view.camera.update(dim.x, dim.y);\n    view.execFrameRequesters(MAIN_LOOP_EVENTS.AFTER_CAMERA_UPDATE, dt, this._updateLoopRestarted);\n\n    // Disable camera's matrix auto update to make sure the camera's\n    // world matrix is never updated mid-update.\n    // Otherwise inconsistencies can appear because object visibility\n    // testing and object drawing could be performed using different\n    // camera matrixWorld.\n    // Note: this is required at least because WEBGLRenderer calls\n    // camera.updateMatrixWorld()\n    const oldAutoUpdate = view.camera.camera3D.matrixAutoUpdate;\n    view.camera.camera3D.matrixAutoUpdate = false;\n\n    // update data-structure\n    this._update(view, updateSources, dt);\n\n    if (this.scheduler.commandsWaitingExecutionCount() == 0) {\n        this.dispatchEvent({ type: 'command-queue-empty' });\n    }\n\n    // Redraw *only* if needed.\n    // (redraws only happen when this.needsRedraw is true, which in turn only happens when\n    // view.notifyChange() is called with redraw=true)\n    // As such there's no continuous update-loop, instead we use a ad-hoc update/render\n    // mechanism.\n    if (willRedraw) {\n        this._renderView(view, dt);\n    }\n\n    // next time, we'll consider that we've just started the loop if we are still PAUSED now\n    this._updateLoopRestarted = this.renderingState === RENDERING_PAUSED;\n\n    if (__DEBUG__) {\n        document.title = document.title.substr(0, document.title.length - 2);\n    }\n\n    view.camera.camera3D.matrixAutoUpdate = oldAutoUpdate;\n\n    // Clear the cache of expired resources\n    Cache.flush();\n\n    view.execFrameRequesters(MAIN_LOOP_EVENTS.UPDATE_END, dt, this._updateLoopRestarted);\n};\n\nMainLoop.prototype._renderView = function _renderView(view, dt) {\n    view.execFrameRequesters(MAIN_LOOP_EVENTS.BEFORE_RENDER, dt, this._updateLoopRestarted);\n\n    if (view.render) {\n        view.render();\n    } else {\n        // use default rendering method\n        this.gfxEngine.renderView(view);\n    }\n\n    view.execFrameRequesters(MAIN_LOOP_EVENTS.AFTER_RENDER, dt, this._updateLoopRestarted);\n};\n\nexport default MainLoop;\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n","/**\n * Wrapper around three.js camera to expose some geographic helpers.\n */\n\nimport * as THREE from 'three';\nimport Coordinates from '../Core/Geographic/Coordinates';\nimport DEMUtils from '../utils/DEMUtils';\n\nfunction Camera(crs, width, height, options = {}) {\n    Object.defineProperty(this, 'crs', { get: () => crs });\n\n    this.camera3D = options.camera ? options.camera : new THREE.PerspectiveCamera(30, width / height);\n\n    this._viewMatrix = new THREE.Matrix4();\n    this.width = width;\n    this.height = height;\n}\n\nfunction resize(camera, width, height) {\n    camera.width = width;\n    camera.height = height;\n    const ratio = width / height;\n\n    if (camera.camera3D.aspect !== ratio) {\n        camera.camera3D.aspect = ratio;\n        if (camera.camera3D.isOrthographicCamera) {\n            const halfH = (camera.camera3D.right - camera.camera3D.left) * 0.5 / ratio;\n            const y = (camera.camera3D.top + camera.camera3D.bottom) * 0.5;\n            camera.camera3D.top = y + halfH;\n            camera.camera3D.bottom = y - halfH;\n        }\n    }\n\n    if (camera.camera3D.updateProjectionMatrix) {\n        camera.camera3D.updateProjectionMatrix();\n    }\n}\n\nCamera.prototype.update = function update(width, height) {\n    resize(this, width, height);\n\n    // update matrix\n    this.camera3D.updateMatrixWorld();\n\n    // keep our visibility testing matrix ready\n    this._viewMatrix.multiplyMatrices(this.camera3D.projectionMatrix, this.camera3D.matrixWorldInverse);\n};\n\n/**\n * Return the position in the requested CRS, or in camera's CRS if undefined.\n * @param {string} crs if defined (e.g 'EPSG:4236') the camera position will be returned in this CRS\n * @return {Coordinates} Coordinates object holding camera's position\n */\nCamera.prototype.position = function position(crs) {\n    return new Coordinates(this.crs, this.camera3D.position).as(crs || this.crs);\n};\n\n/**\n * Set the position of the camera using a Coordinates object.\n * If you want to modify the position directly using x,y,z value then use camera.camera3D.position.set(x, y, z)\n * @param {Coordinates} position the new position of the camera\n */\nCamera.prototype.setPosition = function setPosition(position) {\n    this.camera3D.position.copy(position.as(this.crs).xyz());\n};\n\nconst tmp = {\n    frustum: new THREE.Frustum(),\n    matrix: new THREE.Matrix4(),\n    box3: new THREE.Box3(),\n};\n\nconst points = [\n    new THREE.Vector3(),\n    new THREE.Vector3(),\n    new THREE.Vector3(),\n    new THREE.Vector3(),\n    new THREE.Vector3(),\n    new THREE.Vector3(),\n    new THREE.Vector3(),\n    new THREE.Vector3(),\n];\n\nfunction projectBox3PointsInCameraSpace(camera, box3, matrixWorld) {\n    // Projects points in camera space\n    // We don't project directly on screen to avoid artifacts when projecting\n    // points behind the near plane.\n    let m = camera.camera3D.matrixWorldInverse;\n    if (matrixWorld) {\n        m = tmp.matrix.multiplyMatrices(camera.camera3D.matrixWorldInverse, matrixWorld);\n    }\n    points[0].set(box3.min.x, box3.min.y, box3.min.z).applyMatrix4(m);\n    points[1].set(box3.min.x, box3.min.y, box3.max.z).applyMatrix4(m);\n    points[2].set(box3.min.x, box3.max.y, box3.min.z).applyMatrix4(m);\n    points[3].set(box3.min.x, box3.max.y, box3.max.z).applyMatrix4(m);\n    points[4].set(box3.max.x, box3.min.y, box3.min.z).applyMatrix4(m);\n    points[5].set(box3.max.x, box3.min.y, box3.max.z).applyMatrix4(m);\n    points[6].set(box3.max.x, box3.max.y, box3.min.z).applyMatrix4(m);\n    points[7].set(box3.max.x, box3.max.y, box3.max.z).applyMatrix4(m);\n\n    // In camera space objects are along the -Z axis\n    // So if min.z is > -near, the object is invisible\n    let atLeastOneInFrontOfNearPlane = false;\n    for (let i = 0; i < 8; i++) {\n        if (points[i].z <= -camera.camera3D.near) {\n            atLeastOneInFrontOfNearPlane = true;\n        } else {\n            // Clamp to near plane\n            points[i].z = -camera.camera3D.near;\n        }\n    }\n\n    return atLeastOneInFrontOfNearPlane ? points : undefined;\n}\n\nconst ndcBox3 = new THREE.Box3(\n    new THREE.Vector3(-1, -1, -1),\n    new THREE.Vector3(1, 1, 1));\n\nCamera.prototype.isBox3Visible = function isBox3Visible(box3, matrixWorld) {\n    return this.box3SizeOnScreen(box3, matrixWorld).intersectsBox(ndcBox3);\n};\n\nCamera.prototype.isSphereVisible = function isSphereVisible(sphere, matrixWorld) {\n    if (matrixWorld) {\n        tmp.matrix.multiplyMatrices(this._viewMatrix, matrixWorld);\n        tmp.frustum.setFromMatrix(tmp.matrix);\n    } else {\n        tmp.frustum.setFromMatrix(this._viewMatrix);\n    }\n    return tmp.frustum.intersectsSphere(sphere);\n};\n\nCamera.prototype.box3SizeOnScreen = function box3SizeOnScreen(box3, matrixWorld) {\n    const pts = projectBox3PointsInCameraSpace(this, box3, matrixWorld);\n\n    // All points are in front of the near plane -> box3 is invisible\n    if (!pts) {\n        return tmp.box3.makeEmpty();\n    }\n\n    // Project points on screen\n    for (let i = 0; i < 8; i++) {\n        pts[i].applyMatrix4(this.camera3D.projectionMatrix);\n    }\n\n    return tmp.box3.setFromPoints(pts);\n};\n\n/**\n * Test for collision between camera and a geometry layer (DTM/DSM) to adjust camera position\n * It could be modified later to handle an array of geometry layers\n * TODO Improve Coordinates class to handle altitude for any coordinate system (even projected one)\n * @param {view} view where we test the collision between geometry layers and the camera\n * @param {elevationLayer} elevationLayer (DTM/DSM) used to test the collision with the camera. Could be another geometry layer\n * @param {minDistanceCollision} minDistanceCollision the minimum distance allowed between the camera and the surface\n */\nCamera.prototype.adjustAltitudeToAvoidCollisionWithLayer = function adjustAltitudeToAvoidCollisionWithLayer(view, elevationLayer, minDistanceCollision) {\n    // We put the camera location in geographic by default to easily handle altitude. (Should be improved in Coordinates class for all ref)\n    const camLocation = view.camera.position().as('EPSG:4326');\n    if (elevationLayer !== undefined) {\n        const elevationUnderCamera = DEMUtils.getElevationValueAt(elevationLayer, camLocation);\n        if (elevationUnderCamera != undefined) {\n            const difElevation = camLocation.altitude() - (elevationUnderCamera.z + minDistanceCollision);\n            // We move the camera to avoid collisions if too close to terrain\n            if (difElevation < 0) {\n                camLocation.setAltitude(elevationUnderCamera.z + minDistanceCollision);\n                view.camera.camera3D.position.copy(camLocation.as(view.referenceCrs).xyz());\n                view.notifyChange(this.camera3D);\n            }\n        }\n    }\n};\n\nexport default Camera;\n","/**\n * Generated On: 2015-10-5\n * Class: c3DEngine\n * Description: 3DEngine est l'interface avec le framework webGL.\n */\n\n/* global Uint8Array, Float64Array, document, window, Image */\n\nimport * as THREE from 'three';\nimport Capabilities from '../Core/System/Capabilities';\nimport { unpack1K } from './LayeredMaterial';\n\nfunction c3DEngine(rendererOrDiv, options = {}) {\n    const NOIE = !Capabilities.isInternetExplorer();\n    // pick sensible default options\n    if (options.antialias === undefined) {\n        options.antialias = true;\n    }\n    if (options.alpha === undefined) {\n        options.alpha = true;\n    }\n    if (options.logarithmicDepthBuffer === undefined) {\n        options.logarithmicDepthBuffer = this.gLDebug || NOIE;\n    }\n\n    const renderer = rendererOrDiv.domElement ? rendererOrDiv : undefined;\n    const viewerDiv = renderer ? undefined : rendererOrDiv;\n\n    this.width = (renderer ? renderer.domElement : viewerDiv).clientWidth;\n    this.height = (renderer ? renderer.domElement : viewerDiv).clientHeight;\n\n    this.positionBuffer = null;\n    this._nextThreejsLayer = 1;\n\n    this.fullSizeRenderTarget = new THREE.WebGLRenderTarget(this.width, this.height);\n    this.fullSizeRenderTarget.texture.minFilter = THREE.LinearFilter;\n    this.fullSizeRenderTarget.texture.magFilter = THREE.NearestFilter;\n    this.fullSizeRenderTarget.texture.generateMipmaps = false;\n    this.fullSizeRenderTarget.depthBuffer = true;\n    this.fullSizeRenderTarget.depthTexture = new THREE.DepthTexture();\n    this.fullSizeRenderTarget.depthTexture.type = THREE.UnsignedShortType;\n\n    this.renderView = function renderScene(view) {\n        this.renderer.setViewport(0, 0, this.width, this.height);\n        this.renderer.clear();\n        this.renderer.render(view.scene, view.camera.camera3D);\n    }.bind(this);\n\n    this.onWindowResize = function onWindowResize(w, h) {\n        this.width = w;\n        this.height = h;\n        this.fullSizeRenderTarget.setSize(this.width, this.height);\n        this.renderer.setSize(this.width, this.height);\n    }.bind(this);\n\n    // Create renderer\n    try {\n        this.renderer = renderer || new THREE.WebGLRenderer({\n            canvas: document.createElement('canvas'),\n            antialias: options.antialias,\n            alpha: options.alpha,\n            logarithmicDepthBuffer: options.logarithmicDepthBuffer,\n        });\n    } catch (ex) {\n        console.error('Failed to create WebGLRenderer', ex);\n        this.renderer = null;\n    }\n\n    if (!this.renderer) {\n        // from THREE/WebGL.js\n        const element = document.createElement('div');\n        element.id = 'webgl-error-message';\n        element.style.fontFamily = 'monospace';\n        element.style.fontSize = '13px';\n        element.style.fontWeight = 'normal';\n        element.style.textAlign = 'center';\n        element.style.background = '#fff';\n        element.style.color = '#000';\n        element.style.padding = '1.5em';\n        element.style.width = '400px';\n        element.style.margin = '5em auto 0';\n        element.innerHTML = window.WebGLRenderingContext ? [\n            'Your graphics card does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000\">WebGL</a>.<br />',\n            'Find out how to get it <a href=\"http://get.webgl.org/\" style=\"color:#000\">here</a>.<br>',\n            'See also <a href=\"https://www.khronos.org/webgl/wiki/BlacklistsAndWhitelists\">graphics card blacklisting</a>',\n        ].join('\\n') : [\n            'Your browser does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000\">WebGL</a>.<br/>',\n            'Find out how to get it <a href=\"http://get.webgl.org/\" style=\"color:#000\">here</a>.<br>',\n            'You can also try another browser like Firefox or Chrome.',\n        ].join('\\n');\n        viewerDiv.appendChild(element);\n        throw new Error('WebGL unsupported');\n    }\n\n    if (!renderer && options.logarithmicDepthBuffer) {\n        // We don't support logarithmicDepthBuffer when EXT_frag_depth is missing.\n        // So recreated a renderer if needed.\n        if (!this.renderer.extensions.get('EXT_frag_depth')) {\n            const _canvas = this.renderer.domElement;\n            this.renderer.dispose();\n            this.renderer = new THREE.WebGLRenderer({\n                canvas: _canvas,\n                antialias: options.antialias,\n                alpha: options.alpha,\n                logarithmicDepthBuffer: false,\n            });\n        }\n    }\n\n    // Let's allow our canvas to take focus\n    // The condition below looks weird, but it's correct: querying tabIndex\n    // returns -1 if not set, but we still need to explicitly set it to force\n    // the tabindex focus flag to true (see\n    // https://www.w3.org/TR/html5/editing.html#specially-focusable)\n    if (this.renderer.domElement.tabIndex === -1) {\n        this.renderer.domElement.tabIndex = -1;\n    }\n\n    Capabilities.updateCapabilities(this.renderer);\n\n    this.renderer.setClearColor(0x030508);\n    this.renderer.autoClear = false;\n    this.renderer.sortObjects = true;\n\n    if (!renderer) {\n        this.renderer.setPixelRatio(viewerDiv.devicePixelRatio);\n        this.renderer.setSize(viewerDiv.clientWidth, viewerDiv.clientHeight);\n        viewerDiv.appendChild(this.renderer.domElement);\n    }\n}\n\n/*\n * return\n */\nc3DEngine.prototype.getWindowSize = function getWindowSize() {\n    return new THREE.Vector2(this.width, this.height);\n};\n\n/**\n * return renderer THREE.js\n * @returns {undefined|c3DEngine_L7.THREE.WebGLRenderer}\n */\nc3DEngine.prototype.getRenderer = function getRenderer() {\n    return this.renderer;\n};\n\n/**\n * Render view to a Uint8Array.\n *\n * @param {View} view - The view to render\n * @param {object} [zone] - partial zone to render\n * @param {number} zone.x - x (in view coordinate)\n * @param {number} zone.y - y (in view coordinate)\n * @param {number} zone.width - width of area to render (in pixels)\n * @param {number} zone.height - height of area to render (in pixels)\n * @return {THREE.RenderTarget} - Uint8Array, 4 bytes per pixel. The first pixel in\n * the array is the bottom-left pixel.\n */\nc3DEngine.prototype.renderViewToBuffer = function renderViewToBuffer(view, zone) {\n    if (!zone) {\n        zone = {\n            x: 0,\n            y: 0,\n            width: this.width,\n            height: this.height,\n        };\n    }\n\n    this.renderViewToRenderTarget(view, this.fullSizeRenderTarget, zone);\n\n    const pixelBuffer = new Uint8Array(4 * zone.width * zone.height);\n    this.renderer.readRenderTargetPixels(\n        this.fullSizeRenderTarget,\n        zone.x, this.height - (zone.y + zone.height), zone.width, zone.height, pixelBuffer);\n\n    return pixelBuffer;\n};\n\n/**\n * Render view to a THREE.RenderTarget.\n *\n * @param {View} view - The view to render\n * @param {THREE.RenderTarget} [target] - destination render target. Default value: full size render target owned by c3DEngine.\n * @param {object} [zone] - partial zone to render (zone x/y uses view coordinates) Note: target must contain complete zone\n * @return {THREE.RenderTarget} - the destination render target\n */\nc3DEngine.prototype.renderViewToRenderTarget = function renderViewToRenderTarget(view, target, zone) {\n    if (!target) {\n        target = this.fullSizeRenderTarget;\n    }\n    const current = this.renderer.getRenderTarget();\n\n    // Don't use setViewport / setScissor on renderer because they would affect\n    // on screen rendering as well. Instead set them on the render target.\n    this.fullSizeRenderTarget.viewport.set(0, 0, target.width, target.height);\n    if (zone) {\n        this.fullSizeRenderTarget.scissor.set(\n            zone.x,\n            target.height - (zone.y + zone.height),\n            zone.width,\n            zone.height);\n        this.fullSizeRenderTarget.scissorTest = true;\n    }\n\n    this.renderer.setRenderTarget(target);\n    this.renderer.clear(true, true, false);\n    this.renderer.render(view.scene, view.camera.camera3D, target);\n    this.renderer.setRenderTarget(current);\n\n    this.fullSizeRenderTarget.scissorTest = false;\n    return target;\n};\n\nc3DEngine.prototype.bufferToImage = function bufferToImage(pixelBuffer, width, height) {\n    var canvas = document.createElement('canvas');\n    var ctx = canvas.getContext('2d');\n\n    // size the canvas to your desired image\n    canvas.width = width;\n    canvas.height = height;\n\n    var imgData = ctx.getImageData(0, 0, width, height);\n    imgData.data.set(pixelBuffer);\n\n    ctx.putImageData(imgData, 0, 0);\n\n    // create a new img object\n    var image = new Image();\n\n    // set the img.src to the canvas data url\n    image.src = canvas.toDataURL();\n\n    return image;\n};\n\nc3DEngine.prototype.getUniqueThreejsLayer = function getUniqueThreejsLayer() {\n    // We use three.js Object3D.layers feature to manage visibility of\n    // geometry layers; so we need an internal counter to assign a new\n    // one to each new geometry layer.\n    // Warning: only 32 ([0, 31]) different layers can exist.\n    if (this._nextThreejsLayer > 31) {\n        console.warn('Too much three.js layers. Starting from now all of them will use layerMask = 31');\n        this._nextThreejsLayer = 31;\n    }\n\n    const result = this._nextThreejsLayer++;\n\n    return result;\n};\n\nconst depthRGBA = new THREE.Vector4();\nc3DEngine.prototype.depthBufferRGBAValueToOrthoZ = function depthBufferRGBAValueToOrthoZ(depthBufferRGBA, camera) {\n    depthRGBA.fromArray(depthBufferRGBA).divideScalar(255.0);\n\n    if (Capabilities.isLogDepthBufferSupported()) {\n        const gl_FragDepthEXT = unpack1K(depthRGBA);\n        const logDepthBufFC = 2.0 / (Math.log(camera.far + 1.0) / Math.LN2);\n        // invert function : gl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n        return Math.pow(2.0, 2.0 * gl_FragDepthEXT / logDepthBufFC);\n    } else {\n        let gl_FragCoord_Z = unpack1K(depthRGBA);\n        gl_FragCoord_Z = gl_FragCoord_Z * 2.0 - 1.0;\n        return 2.0 * camera.near * camera.far / (camera.far + camera.near - gl_FragCoord_Z * (camera.far - camera.near));\n    }\n};\n\n\nexport default c3DEngine;\n","import * as THREE from 'three';\n\nconst pt = new THREE.Vector2();\n\nfunction _moveTo(ctx, x, y, scale, origin) {\n    pt.x = x - origin.x;\n    pt.y = y - origin.y;\n    pt.multiply(scale);\n    ctx.moveTo(Math.round(pt.x), Math.round(pt.y));\n}\n\nfunction _lineTo(ctx, x, y, scale, origin) {\n    pt.x = x - origin.x;\n\n    pt.y = y - origin.y;\n    pt.multiply(scale);\n    ctx.lineTo(Math.round(pt.x), Math.round(pt.y));\n}\n\nfunction drawPolygon(ctx, vertices, indices = [{ offset: 0, count: 1 }], origin, scale, properties, style = {}, size) {\n    if (vertices.length === 0) {\n        return;\n    }\n\n    if (style.length) {\n        for (const s of style) {\n            _drawPolygon(ctx, vertices, indices, origin, scale, properties, s, size);\n        }\n    } else {\n        _drawPolygon(ctx, vertices, indices, origin, scale, properties, style, size);\n    }\n}\n\nfunction _drawPolygon(ctx, vertices, indices, origin, scale, properties = {}, style, size) {\n    // build contour\n    ctx.beginPath();\n    for (const indice of indices) {\n        const offset = indice.offset * size;\n        const count = offset + indice.count * size;\n        _moveTo(ctx, vertices[offset], vertices[offset + 1], scale, origin);\n        for (let j = offset + size; j < count; j += size) {\n            _lineTo(ctx, vertices[j], vertices[j + 1], scale, origin);\n        }\n    }\n\n    // draw line polygon\n    if (style.stroke || properties.stroke) {\n        ctx.strokeStyle = style.stroke || properties.stroke;\n        ctx.lineWidth = style.strokeWidth || properties['stroke-width'] || 2.0;\n        ctx.globalAlpha = style.strokeOpacity || properties['stroke-opacity'] || 1.0;\n        ctx.stroke();\n    }\n\n    // fill polygon\n    if (indices && (style.fill || properties.fill)) {\n        ctx.fillStyle = style.fill || properties.fill;\n        ctx.globalAlpha = style.fillOpacity || properties['fill-opacity'] || 1.0;\n        ctx.fill();\n    }\n}\n\nfunction drawPoint(ctx, x, y, origin, scale, style = {}) {\n    pt.x = x - origin.x;\n    pt.y = y - origin.y;\n    pt.multiply(scale);\n\n    ctx.beginPath();\n    ctx.arc(Math.round(pt.x), Math.round(pt.y), Math.round(style.radius) || 3, 0, 2 * Math.PI, false);\n    ctx.fillStyle = style.fill || 'white';\n    ctx.fill();\n    ctx.lineWidth = style.lineWidth || 1.0;\n    ctx.strokeStyle = style.stroke || 'red';\n    ctx.stroke();\n}\n\nfunction drawFeature(ctx, feature, origin, scale, extent, style = {}) {\n    let gStyle = style;\n    for (const geometry of feature.geometry) {\n        const properties = geometry.properties;\n\n        if (typeof (style) == 'function') {\n            gStyle = style(properties, feature);\n        }\n        if (feature.type === 'point') {\n            drawPoint(ctx, feature.vertices[0], feature.vertices[1], origin, scale, gStyle);\n        } else if (feature.type === 'multipoint') {\n            for (var i = 0; i < feature.vertices.length; i += feature.size) {\n                drawPoint(ctx, feature.vertices[i], feature.vertices[i + 1], origin, scale, gStyle);\n            }\n        } else if (geometry.extent.intersectsExtent(extent)) {\n            drawPolygon(ctx, feature.vertices, geometry.indices, origin, scale, properties, gStyle, feature.size);\n        }\n    }\n}\n\nexport default {\n    // backgroundColor is a THREE.Color to specify a color to fill the texture\n    // with, given there is no feature passed in parameter\n    createTextureFromFeature(collection, extent, sizeTexture, style, backgroundColor) {\n        let texture;\n\n        if (collection) {\n            // A texture is instancied drawn canvas\n            // origin and dimension are used to transform the feature's coordinates to canvas's space\n            const origin = new THREE.Vector2(extent.west(), extent.south());\n            const dimension = extent.dimensions();\n            const c = document.createElement('canvas');\n\n            c.width = sizeTexture;\n            c.height = sizeTexture;\n            const ctx = c.getContext('2d');\n            if (backgroundColor) {\n                ctx.fillStyle = backgroundColor.getStyle();\n                ctx.fillRect(0, 0, sizeTexture, sizeTexture);\n            }\n            ctx.globalCompositeOperation = style.globalCompositeOperation || 'source-over';\n\n            const scale = new THREE.Vector2(ctx.canvas.width / dimension.x, ctx.canvas.width / dimension.y);\n\n            // Draw the canvas\n            for (const feature of collection.features) {\n                const ex = feature.crs == extent.crs() ? extent : extent.as(feature.crs);\n                drawFeature(ctx, feature, origin, scale, ex, style);\n            }\n\n            texture = new THREE.CanvasTexture(c);\n            texture.flipY = false;\n        } else if (backgroundColor) {\n            const data = new Uint8Array(3);\n            data[0] = backgroundColor.r * 255;\n            data[1] = backgroundColor.g * 255;\n            data[2] = backgroundColor.b * 255;\n            texture = new THREE.DataTexture(data, 1, 1, THREE.RGBFormat);\n            texture.needsUpdate = true;\n        } else {\n            texture = new THREE.Texture();\n        }\n\n        return texture;\n    },\n};\n\n","import * as THREE from 'three';\nimport Feature2Texture from '../Renderer/ThreeExtended/Feature2Texture';\n\nconst textureLayer = (texture) => {\n    texture.generateMipmaps = false;\n    texture.magFilter = THREE.LinearFilter;\n    texture.minFilter = THREE.LinearFilter;\n    return texture;\n};\n\nfunction textureColorLayer(texture, transparent) {\n    texture.anisotropy = 16;\n    texture.premultiplyAlpha = transparent;\n    return textureLayer(texture);\n}\n\nexport default {\n    convert(data, extentDestination, layer) {\n        let texture;\n        if (data.isFeature) {\n            const backgroundColor = (layer.backgroundLayer && layer.backgroundLayer.paint) ?\n                new THREE.Color(layer.backgroundLayer.paint['background-color']) :\n                undefined;\n\n            const extentTexture = extentDestination.as(layer.projection);\n            texture = Feature2Texture.createTextureFromFeature(data, extentTexture, 256, layer.style, backgroundColor);\n            texture.parsedData = data;\n            texture.coords = extentDestination;\n        } else if (data.isTexture) {\n            texture = data;\n        } else {\n            throw (new Error('Data type is not supported to convert into texture'));\n        }\n\n        if (layer.type === 'color') {\n            return textureColorLayer(texture, layer.transparent);\n        } else if (layer.type === 'elevation') {\n            if (texture.flipY) {\n                // DataTexture default to false, so make sure other Texture types\n                // do the same (eg image texture)\n                // See UV construction for more details\n                texture.flipY = false;\n            }\n            return textureLayer(texture);\n        }\n    },\n};\n","import Layer from './Layer';\nimport { updateLayeredMaterialNodeImagery } from '../Process/LayeredMaterialNodeProcessing';\nimport textureConverter from '../Parser/textureConverter';\n\n/**\n * Fires when the visiblity of the layer has changed.\n * @event ColorLayer#visible-property-changed\n */\n/**\n * Fires when the opacity of the layer has changed.\n * @event ColorLayer#opacity-property-changed\n */\n/**\n * Fires when the sequence of the layer has changed, meaning that the order of\n * the layer changed in the view it is attached to.\n * @event ColorLayer#sequence-property-changed\n */\n\nclass ColorLayer extends Layer {\n    /**\n     * A simple layer, usually managing a texture to display on a view. For example,\n     * it can be an aerial view of the ground or a simple transparent layer with the\n     * roads displayed.\n     *\n     * @constructor\n     * @extends Layer\n     *\n     * @param {string} id - The id of the layer, that should be unique. It is\n     * not mandatory, but an error will be emitted if this layer is added a\n     * {@link View} that already has a layer going by that id.\n     * @param {Object} [config] - Optional configuration, all elements in it\n     * will be merged as is in the layer. For example, if the configuration\n     * contains three elements <code>name, protocol, extent</code>, these\n     * elements will be available using <code>layer.name</code> or something\n     * else depending on the property name.\n     * @param {WMTSSource|WMSSource|WFSSource|TMSSource|FileSource} [config.source] data source\n     * @example\n     * // Create a ColorLayer\n     * const color = new ColorLayer('roads', {\n     *     source: {\n     *          protocol: 'wmts',\n     *          url: 'http://server.geo/wmts/SERVICE=WMTS&TILEMATRIX=%TILEMATRIX&TILEROW=%ROW&TILECOL=%COL',\n     *          format: 'image/png',\n     *     }\n     *     transparent: true\n     * });\n     *\n     * // Add the layer\n     * view.addLayer(color);\n     *\n     * @example\n     * // Add and create a ColorLayer\n     * view.addLayer({\n     *     id: 'roads',\n     *     type: 'color',\n     *     source: {\n     *          url: 'http://server.geo/wmts/SERVICE=WMTS&TILEMATRIX=%TILEMATRIX&TILEROW=%ROW&TILECOL=%COL',\n     *          protocol: 'wmts',\n     *          format: 'image/png',\n     *     }\n     *     transparent: true\n     * });\n     */\n    constructor(id, config = {}) {\n        super(id, 'color', config);\n        this.style = config.style || {};\n        this.defineLayerProperty('visible', true);\n        this.defineLayerProperty('opacity', 1.0);\n        this.defineLayerProperty('sequence', 0);\n        this.transparent = config.transparent || (this.opacity < 1.0);\n        this.noTextureParentOutsideLimit = config.source ? config.source.protocol == 'file' : false;\n    }\n\n    update(context, layer, node, parent) {\n        return updateLayeredMaterialNodeImagery(context, this, node, parent);\n    }\n\n    convert(data, extentDestination) {\n        return textureConverter.convert(data, extentDestination, this);\n    }\n}\n\nexport default ColorLayer;\n","import Layer from './Layer';\nimport { updateLayeredMaterialNodeElevation } from '../Process/LayeredMaterialNodeProcessing';\nimport textureConverter from '../Parser/textureConverter';\n\nclass ElevationLayer extends Layer {\n    /**\n     * A simple layer, managing an elevation texture to add some reliefs on the\n     * plane or globe view for example.\n     *\n     * @constructor\n     * @extends Layer\n     *\n     * @param {string} id - The id of the layer, that should be unique. It is\n     * not mandatory, but an error will be emitted if this layer is added a\n     * {@link View} that already has a layer going by that id.\n     * @param {Object} [config] - Optional configuration, all elements in it\n     * will be merged as is in the layer. For example, if the configuration\n     * contains three elements <code>name, protocol, extent</code>, these\n     * elements will be available using <code>layer.name</code> or something\n     * else depending on the property name.\n     * @param {WMTSSource|WMSSource|WFSSource|TMSSource|FileSource} [config.source] data source\n     *\n     * @example\n     * // Create an ElevationLayer\n     * const elevation = new ElevationLayer('IGN_MNT', {\n     *      source: {\n     *          url: 'http://server.geo/wmts/SERVICE=WMTS&TILEMATRIX=%TILEMATRIX&TILEROW=%ROW&TILECOL=%COL',\n     *          protocol: 'wmts',\n     *          format: 'image/x-bil;bits=32',\n     *      },\n     * });\n     *\n     * // Add the layer\n     * view.addLayer(elevation);\n     *\n     * @example\n     * // Add and create an ElevationLayer\n     * view.addLayer({\n     *     id: 'IGN_MNT',\n     *     type: 'elevation',\n     *     source: {\n     *          url: 'http://server.geo/wmts/SERVICE=WMTS&TILEMATRIX=%TILEMATRIX&TILEROW=%ROW&TILECOL=%COL',\n     *          protocol: 'wmts',\n     *          format: 'image/x-bil;bits=32',\n     *     },\n     * });\n     */\n    constructor(id, config = {}) {\n        super(id, 'elevation', config);\n    }\n\n    update(context, layer, node, parent) {\n        return updateLayeredMaterialNodeElevation(context, this, node, parent);\n    }\n\n    convert(data, extentDestination) {\n        return textureConverter.convert(data, extentDestination, this);\n    }\n}\n\nexport default ElevationLayer;\n","import Protobuf from 'pbf';\nimport { VectorTile } from '@mapbox/vector-tile';\nimport GeoJsonParser from './GeoJsonParser';\nimport Coordinates from '../Core/Geographic/Coordinates';\n\n// This part is freely adapted from vector-tile-js\n// https://github.com/mapbox/vector-tile-js/blob/master/lib/vectortilefeature.js\nfunction signedArea(ring) {\n    let sum = 0;\n    for (let i = 0, len = ring.length, j = len - 1, p1, p2; i < len; j = i++) {\n        p1 = ring[i];\n        p2 = ring[j];\n        sum += (p2.x - p1.x) * (p1.y + p2.y);\n    }\n    return sum;\n}\n\nfunction classifyRings(rings) {\n    const len = rings.length;\n\n    if (len <= 1) { return [rings]; }\n\n    const polygons = [];\n    let polygon;\n    let ccw;\n\n    for (var i = 0; i < len; i++) {\n        var area = signedArea(rings[i]);\n        if (area === 0) { continue; }\n\n        if (ccw === undefined) { ccw = area < 0; }\n\n        if (ccw === area < 0) {\n            if (polygon) { polygons.push(polygon); }\n            polygon = [rings[i]];\n        } else {\n            polygon.push(rings[i]);\n        }\n    }\n    if (polygon) { polygons.push(polygon); }\n\n    return polygons;\n}\n\nconst VectorTileFeature = { types: ['Unknown', 'Point', 'LineString', 'Polygon'] };\n// EPSG:3857\n// WGS84 bounds [-180.0, -85.06, 180.0, 85.06] (https://epsg.io/3857)\nconst coord = new Coordinates('EPSG:4326', 180, 85.06);\ncoord.as('EPSG:3857', coord);\n// Get bound dimension in 'EPSG:3857'\nconst sizeX = coord._values[0] * 2;\nconst sizeY = coord._values[1] * 2;\n\nfunction project(line, ox, oy, size) {\n    for (let j = 0; j < line.length; j++) {\n        const p = line[j];\n        line[j] = [((p.x + ox) / size - 0.5) * sizeX, (0.5 - (p.y + oy) / size) * sizeY];\n    }\n}\n\nfunction toGeoJSON(x, y, z) {\n    const size = this.extent * Math.pow(2, z);\n    const x0 = this.extent * x;\n    const y0 = this.extent * y;\n    let coords = this.loadGeometry();\n    let type = VectorTileFeature.types[this.type];\n\n\n    switch (this.type) {\n        case 1:\n            var points = [];\n            for (let i = 0; i < coords.length; i++) {\n                points[i] = coords[i][0];\n            }\n            coords = points;\n            project(coords, x0, y0, size);\n            break;\n\n        case 2:\n            for (let i = 0; i < coords.length; i++) {\n                project(coords[i], x0, y0, size);\n            }\n            break;\n\n        case 3:\n            coords = classifyRings(coords);\n            for (let i = 0; i < coords.length; i++) {\n                for (let j = 0; j < coords[i].length; j++) {\n                    project(coords[i][j], x0, y0, size);\n                }\n            }\n            break;\n        default:\n    }\n\n    if (coords.length === 1) {\n        coords = coords[0];\n    } else {\n        type = `Multi${type}`;\n    }\n\n    const result = {\n        type: 'Feature',\n        geometry: {\n            type,\n            coordinates: coords,\n        },\n        properties: this.properties,\n    };\n\n    if ('id' in this) {\n        result.id = this.id;\n    }\n\n    return result;\n}\n\n\nfunction readPBF(file, options) {\n    const vectorTile = new VectorTile(new Protobuf(file));\n    const extentSource = options.extentSource || file.coords;\n    const layers = Object.keys(vectorTile.layers);\n\n    if (layers.length < 1) { return; }\n\n    const crsInId = Number(options.crsIn.slice(5));\n\n    // We need to create a featureCollection as VectorTile does no support it\n    const geojson = {\n        type: 'FeatureCollection',\n        features: [],\n        crs: { type: 'EPSG', properties: { code: crsInId } },\n    };\n\n    layers.forEach((layer_id) => {\n        const l = vectorTile.layers[layer_id];\n\n        for (let i = 0; i < l.length; i++) {\n            let feature;\n            // We need to move from TMS to Google/Bing/OSM coordinates\n            // https://alastaira.wordpress.com/2011/07/06/converting-tms-tile-coordinates-to-googlebingosm-tile-coordinates/\n            // Only if the layer.origin is top\n            if (options.origin == 'top') {\n                feature = toGeoJSON.bind(l.feature(i))(extentSource.col, extentSource.row, extentSource.zoom);\n            } else {\n                const y = 1 << extentSource.zoom;\n                feature = toGeoJSON.bind(l.feature(i))(extentSource.col, y - extentSource.row - 1, extentSource.zoom);\n            }\n            if (layers.length > 1) {\n                feature.properties.vt_layer = layer_id;\n            }\n\n            geojson.features.push(feature);\n        }\n    });\n\n    return GeoJsonParser.parse(geojson, {\n        crsIn: options.crsIn,\n        crsOut: options.crsOut,\n        filteringExtent: options.filteringExtent,\n        filter: options.filter,\n        withNormal: options.withNormal,\n        withAltitude: options.withAltitude,\n        mergeFeatures: options.mergeFeatures,\n        buildExtent: true,\n    }).then((f) => {\n        f.extent.zoom = extentSource.zoom;\n        return f;\n    });\n}\n\n/**\n * @module VectorTileParser\n */\nexport default {\n    /**\n     * Parse a vector tile file and return a [Feature]{@link module:GeoJsonParser.Feature}\n     * or an array of Features. While multiple formats of vector tile are\n     * available, the only one supported for the moment is the\n     * [Mapbox Vector Tile]{@link https://www.mapbox.com/vector-tiles/specification/}.\n     *\n     * @param {ArrayBuffer} file - The vector tile file to parse.\n     * @param {Object} options - Options controlling the parsing.\n     * @param {Extent} options.extent - The Extent to convert the input coordinates to.\n     * @param {Extent} options.coords - Coordinates of the layer.\n     * @param {Extent=} options.filteringExtent - Optional filter to reject features\n     * outside of this extent.\n     * @param {boolean} [options.mergeFeatures=true] - If true all geometries are merged by type and multi-type\n     * @param {boolean} [options.withNormal=true] - If true each coordinate normal is computed\n     * @param {boolean} [options.withAltitude=true] - If true each coordinate altitude is kept\n     * @param {function=} options.filter - Filter function to remove features.\n     * @param {string=} options.origin - This option is to be set to the correct\n     * value, bottom or top (default being bottom), if the computation of the\n     * coordinates needs to be inverted to same scheme as OSM, Google Maps or\n     * other system. See [this link]{@link https://alastaira.wordpress.com/2011/07/06/converting-tms-tile-coordinates-to-googlebingosm-tile-coordinates} for more informations.\n     *\n     * @return {Promise} A Promise resolving with a Feature or an array a\n     * Features.\n     */\n    parse(file, options) {\n        return Promise.resolve(readPBF(file, options));\n    },\n};\n","import GeoJsonParser from '../Parser/GeoJsonParser';\nimport VectorTileParser from '../Parser/VectorTileParser';\nimport Fetcher from './Fetcher';\nimport Cache from '../Core/Scheduler/Cache';\nimport CancelledCommandException from '../Core/Scheduler/CancelledCommandException';\n\nexport const supportedFetchers = new Map([\n    ['image/png', Fetcher.texture],\n    ['image/jpg', Fetcher.texture],\n    ['image/jpeg', Fetcher.texture],\n    ['image/x-bil;bits=32', Fetcher.textureFloat],\n    ['geojson', Fetcher.json],\n    ['application/json', Fetcher.json],\n    ['application/json', Fetcher.json],\n    ['application/x-protobuf;type=mapbox-vector', Fetcher.arrayBuffer],\n]);\n\nfunction noParsingNeeded(data) {\n    return data;\n}\n\nconst supportedParsers = new Map([\n    ['geojson', GeoJsonParser.parse],\n    ['application/json', GeoJsonParser.parse],\n    ['application/x-protobuf;type=mapbox-vector', VectorTileParser.parse],\n    [true, noParsingNeeded],\n]);\n\nfunction isValidData(data, extentDestination, validFn) {\n    if (data && (!validFn || validFn(data, extentDestination))) {\n        return data;\n    }\n}\n\nfunction fetchData(url, format, networkOptions, extentSource) {\n    const fetcher = supportedFetchers.get(format);\n    if (fetcher) {\n        return fetcher(url, networkOptions).then((d) => {\n            d.coords = extentSource;\n            return d;\n        })\n        .catch((err) => {\n            console.error(err);\n        });\n    } else {\n        throw new Error('Not supported format, not found fetcher in DataSourceProvider.supportedFetchers');\n    }\n}\n\nfunction parseData(data, layer, extentDestination) {\n    const type = data.isTexture || data.isFeature || layer.source.format;\n    const options = {\n        buildExtent: layer.type !== 'geometry',\n        crsIn: layer.source.projection,\n        crsOut: layer.projection,\n        // TODO FIXME: error in filtering vector tile\n        // filteringExtent: extentDestination.as(layer.projection),\n        filteringExtent: layer.type === 'geometry' ? extentDestination : undefined,\n        filter: layer.filter,\n        origin: layer.source.origin,\n        mergeFeatures: layer.mergeFeatures === undefined ? true : layer.mergeFeatures,\n        withNormal: layer.type === 'geometry',\n        withAltitude: layer.type === 'geometry',\n    };\n    return supportedParsers.get(type)(data, options);\n}\n\nconst error = (err, url, source) => {\n    source.handlingError(err, url);\n    throw err;\n};\nfunction FetchAndConvertSourceData(url, layer, extentSource, extentDestination) {\n    const source = layer.source;\n    // Fetch data\n    return fetchData(url, source.format, source.networkOptions, extentSource)\n        .then(fetchedData =>\n        // Parse fetched data, it parses file to itowns's object\n            parseData(fetchedData, layer, extentDestination), err => error(err, url, source))\n        .then(parsedData =>\n        // Convert parsed data, it converts itowns's object to THREE's object\n            layer.convert(parsedData, extentDestination), err => error(err, url, source));\n}\n\nexport default {\n    executeCommand(command) {\n        const promises = [];\n        const layer = command.layer;\n        const source = layer.source;\n        const requester = command.requester;\n        const extentsSource = command.extentsSource;\n        const extentsDestination = command.extentsDestination || extentsSource;\n        const parsedData = command.parsedData || [];\n\n        // TODO: Find best place to cancel Command\n        if (requester &&\n            !requester.material) {\n            // request has been deleted\n            return Promise.reject(new CancelledCommandException(command));\n        }\n\n        for (let i = 0, max = extentsSource.length; i < max; i++) {\n            const extSource = extentsSource[i];\n            const extDest = extentsDestination[i];\n\n            // If source, we must fetch and convert data\n            // URL of the resource you want to fetch\n            const url = source.urlFromExtent(extSource);\n\n            // Already fetched and parsed data that can be used\n            const validedParsedData = isValidData(parsedData[i], extDest, layer.isValidData) || source.parsedData;\n\n            // Tag to Cache data\n            const tag = validedParsedData ? `${url},${extDest.toString(',')}` : url;\n\n            // Get converted source data, in cache\n            let convertedSourceData = Cache.get(tag);\n\n            // If data isn't in cache\n            if (!convertedSourceData) {\n                if (validedParsedData) {\n                    // Use parsed data\n                    convertedSourceData = layer.convert(validedParsedData, extDest, layer);\n                } else {\n                    // Fetch and convert\n                    convertedSourceData = FetchAndConvertSourceData(url, layer, extSource, extDest);\n                }\n                // Put converted data in cache\n                Cache.set(tag, convertedSourceData, Cache.POLICIES.TEXTURE);\n            }\n\n            // Verify some command is resolved\n            // See old WFSProvider : command.resolve(result)\n            promises.push(convertedSourceData);\n        }\n\n        return Promise.all(promises);\n    },\n};\n","import CancelledCommandException from '../Core/Scheduler/CancelledCommandException';\n\nexport default {\n    executeCommand(command) {\n        const promises = [];\n        const layer = command.layer;\n        const requester = command.requester;\n        const extentsSource = command.extentsSource;\n\n        if (requester &&\n            !requester.material) {\n            return Promise.reject(new CancelledCommandException(command));\n        }\n\n        for (let i = 0, size = extentsSource.length; i < size; i++) {\n            promises.push(layer.convert(requester, extentsSource[i]));\n        }\n\n        return Promise.all(promises);\n    },\n};\n","// This file is copy pasted from THREE\n/* CUSTOM ITOWNS */\n/* Add the extention _BATCHID */\n/* Removed the DDSLoader and BufferGeometryUtils calls */\n/* eslint-disable */\nimport * as THREE from 'three';\n/* END CUSTOM ITOWNS */\n/**\n * @author Rich Tibbett / https://github.com/richtr\n * @author mrdoob / http://mrdoob.com/\n * @author Tony Parisi / http://www.tonyparisi.com/\n * @author Takahiro / https://github.com/takahirox\n * @author Don McCurdy / https://www.donmccurdy.com\n */\n\nexport default ( function () {\n\n\tfunction GLTFLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\t\tthis.dracoLoader = null;\n\n\t}\n\n\tGLTFLoader.prototype = {\n\n\t\tconstructor: GLTFLoader,\n\n\t\tcrossOrigin: 'anonymous',\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar resourcePath;\n\n\t\t\tif ( this.resourcePath !== undefined ) {\n\n\t\t\t\tresourcePath = this.resourcePath;\n\n\t\t\t} else if ( this.path !== undefined ) {\n\n\t\t\t\tresourcePath = this.path;\n\n\t\t\t} else {\n\n\t\t\t\tresourcePath = THREE.LoaderUtils.extractUrlBase( url );\n\n\t\t\t}\n\n\t\t\t// Tells the LoadingManager to track an extra item, which resolves after\n\t\t\t// the model is fully loaded. This means the count of items loaded will\n\t\t\t// be incorrect, but ensures manager.onLoad() does not fire early.\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tvar _onError = function ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t};\n\n\t\t\tvar loader = new THREE.FileLoader( scope.manager );\n\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\t\tloader.load( url, function ( data ) {\n\n\t\t\t\ttry {\n\n\t\t\t\t\tscope.parse( data, resourcePath, function ( gltf ) {\n\n\t\t\t\t\t\tonLoad( gltf );\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t}, _onError );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t_onError( e );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, _onError );\n\n\t\t},\n\n\t\tsetCrossOrigin: function ( value ) {\n\n\t\t\tthis.crossOrigin = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetResourcePath: function ( value ) {\n\n\t\t\tthis.resourcePath = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetDRACOLoader: function ( dracoLoader ) {\n\n\t\t\tthis.dracoLoader = dracoLoader;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tparse: function ( data, path, onLoad, onError ) {\n\n\t\t\tvar content;\n\t\t\tvar extensions = {};\n\n\t\t\tif ( typeof data === 'string' ) {\n\n\t\t\t\tcontent = data;\n\n\t\t\t} else {\n\n\t\t\t\tvar magic = THREE.LoaderUtils.decodeText( new Uint8Array( data, 0, 4 ) );\n\n\t\t\t\tif ( magic === BINARY_EXTENSION_HEADER_MAGIC ) {\n\n\t\t\t\t\ttry {\n\n\t\t\t\t\t\textensions[ EXTENSIONS.KHR_BINARY_GLTF ] = new GLTFBinaryExtension( data );\n\n\t\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\t\tif ( onError ) onError( error );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontent = extensions[ EXTENSIONS.KHR_BINARY_GLTF ].content;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcontent = THREE.LoaderUtils.decodeText( new Uint8Array( data ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar json = JSON.parse( content );\n\n\t\t\tif ( json.asset === undefined || json.asset.version[ 0 ] < 2 ) {\n\n\t\t\t\tif ( onError ) onError( new Error( 'THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported. Use LegacyGLTFLoader instead.' ) );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( json.extensionsUsed ) {\n\n\t\t\t\tfor ( var i = 0; i < json.extensionsUsed.length; ++ i ) {\n\n\t\t\t\t\tvar extensionName = json.extensionsUsed[ i ];\n\t\t\t\t\tvar extensionsRequired = json.extensionsRequired || [];\n\n\t\t\t\t\tswitch ( extensionName ) {\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_LIGHTS_PUNCTUAL:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFLightsExtension( json );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MATERIALS_UNLIT:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMaterialsUnlitExtension( json );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMaterialsPbrSpecularGlossinessExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_DRACO_MESH_COMPRESSION:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFDracoMeshCompressionExtension( json, this.dracoLoader );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tif ( extensionsRequired.indexOf( extensionName ) >= 0 ) {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Unknown extension \"' + extensionName + '\".' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar parser = new GLTFParser( json, extensions, {\n\n\t\t\t\tpath: path || this.resourcePath || '',\n\t\t\t\tcrossOrigin: this.crossOrigin,\n\t\t\t\tmanager: this.manager\n\n\t\t\t} );\n\n\t\t\tparser.parse( function ( scene, scenes, cameras, animations, json ) {\n\n\t\t\t\tvar glTF = {\n\t\t\t\t\tscene: scene,\n\t\t\t\t\tscenes: scenes,\n\t\t\t\t\tcameras: cameras,\n\t\t\t\t\tanimations: animations,\n\t\t\t\t\tasset: json.asset,\n\t\t\t\t\tparser: parser,\n\t\t\t\t\tuserData: {}\n\t\t\t\t};\n\n\t\t\t\taddUnknownExtensionsToUserData( extensions, glTF, json );\n\n\t\t\t\tonLoad( glTF );\n\n\t\t\t}, onError );\n\n\t\t}\n\n\t};\n\n\t/* GLTFREGISTRY */\n\n\tfunction GLTFRegistry() {\n\n\t\tvar objects = {};\n\n\t\treturn\t{\n\n\t\t\tget: function ( key ) {\n\n\t\t\t\treturn objects[ key ];\n\n\t\t\t},\n\n\t\t\tadd: function ( key, object ) {\n\n\t\t\t\tobjects[ key ] = object;\n\n\t\t\t},\n\n\t\t\tremove: function ( key ) {\n\n\t\t\t\tdelete objects[ key ];\n\n\t\t\t},\n\n\t\t\tremoveAll: function () {\n\n\t\t\t\tobjects = {};\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/*********************************/\n\t/********** EXTENSIONS ***********/\n\t/*********************************/\n\n\tvar EXTENSIONS = {\n\t\tKHR_BINARY_GLTF: 'KHR_binary_glTF',\n\t\tKHR_DRACO_MESH_COMPRESSION: 'KHR_draco_mesh_compression',\n\t\tKHR_LIGHTS_PUNCTUAL: 'KHR_lights_punctual',\n\t\tKHR_MATERIALS_PBR_SPECULAR_GLOSSINESS: 'KHR_materials_pbrSpecularGlossiness',\n\t\tKHR_MATERIALS_UNLIT: 'KHR_materials_unlit',\n\t\tMSFT_TEXTURE_DDS: 'MSFT_texture_dds'\n\t};\n\n\t/**\n\t * Lights Extension\n\t *\n\t * Specification: PENDING\n\t */\n\tfunction GLTFLightsExtension( json ) {\n\n\t\tthis.name = EXTENSIONS.KHR_LIGHTS_PUNCTUAL;\n\n\t\tvar extension = ( json.extensions && json.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ] ) || {};\n\t\tthis.lightDefs = extension.lights || [];\n\n\t}\n\n\tGLTFLightsExtension.prototype.loadLight = function ( lightIndex ) {\n\n\t\tvar lightDef = this.lightDefs[ lightIndex ];\n\t\tvar lightNode;\n\n\t\tvar color = new THREE.Color( 0xffffff );\n\t\tif ( lightDef.color !== undefined ) color.fromArray( lightDef.color );\n\n\t\tvar range = lightDef.range !== undefined ? lightDef.range : 0;\n\n\t\tswitch ( lightDef.type ) {\n\n\t\t\tcase 'directional':\n\t\t\t\tlightNode = new THREE.DirectionalLight( color );\n\t\t\t\tlightNode.target.position.set( 0, 0, -1 );\n\t\t\t\tlightNode.add( lightNode.target );\n\t\t\t\tbreak;\n\n\t\t\tcase 'point':\n\t\t\t\tlightNode = new THREE.PointLight( color );\n\t\t\t\tlightNode.distance = range;\n\t\t\t\tbreak;\n\n\t\t\tcase 'spot':\n\t\t\t\tlightNode = new THREE.SpotLight( color );\n\t\t\t\tlightNode.distance = range;\n\t\t\t\t// Handle spotlight properties.\n\t\t\t\tlightDef.spot = lightDef.spot || {};\n\t\t\t\tlightDef.spot.innerConeAngle = lightDef.spot.innerConeAngle !== undefined ? lightDef.spot.innerConeAngle : 0;\n\t\t\t\tlightDef.spot.outerConeAngle = lightDef.spot.outerConeAngle !== undefined ? lightDef.spot.outerConeAngle : Math.PI / 4.0;\n\t\t\t\tlightNode.angle = lightDef.spot.outerConeAngle;\n\t\t\t\tlightNode.penumbra = 1.0 - lightDef.spot.innerConeAngle / lightDef.spot.outerConeAngle;\n\t\t\t\tlightNode.target.position.set( 0, 0, -1 );\n\t\t\t\tlightNode.add( lightNode.target );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Unexpected light type, \"' + lightDef.type + '\".' );\n\n\t\t}\n\n\t\tlightNode.decay = 2;\n\n\t\tif ( lightDef.intensity !== undefined ) lightNode.intensity = lightDef.intensity;\n\n\t\tlightNode.name = lightDef.name || ( 'light_' + lightIndex );\n\n\t\treturn Promise.resolve( lightNode );\n\n\t};\n\n\t/**\n\t * Unlit Materials Extension (pending)\n\t *\n\t * PR: https://github.com/KhronosGroup/glTF/pull/1163\n\t */\n\tfunction GLTFMaterialsUnlitExtension( json ) {\n\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_UNLIT;\n\n\t}\n\n\tGLTFMaterialsUnlitExtension.prototype.getMaterialType = function ( material ) {\n\n\t\treturn THREE.MeshBasicMaterial;\n\n\t};\n\n\tGLTFMaterialsUnlitExtension.prototype.extendParams = function ( materialParams, material, parser ) {\n\n\t\tvar pending = [];\n\n\t\tmaterialParams.color = new THREE.Color( 1.0, 1.0, 1.0 );\n\t\tmaterialParams.opacity = 1.0;\n\n\t\tvar metallicRoughness = material.pbrMetallicRoughness;\n\n\t\tif ( metallicRoughness ) {\n\n\t\t\tif ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\n\n\t\t\t\tvar array = metallicRoughness.baseColorFactor;\n\n\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t}\n\n\t\t\tif ( metallicRoughness.baseColorTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture.index ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t};\n\n\t/* BINARY EXTENSION */\n\n\tvar BINARY_EXTENSION_BUFFER_NAME = 'binary_glTF';\n\tvar BINARY_EXTENSION_HEADER_MAGIC = 'glTF';\n\tvar BINARY_EXTENSION_HEADER_LENGTH = 12;\n\tvar BINARY_EXTENSION_CHUNK_TYPES = { JSON: 0x4E4F534A, BIN: 0x004E4942 };\n\n\tfunction GLTFBinaryExtension( data ) {\n\n\t\tthis.name = EXTENSIONS.KHR_BINARY_GLTF;\n\t\tthis.content = null;\n\t\tthis.body = null;\n\n\t\tvar headerView = new DataView( data, 0, BINARY_EXTENSION_HEADER_LENGTH );\n\n\t\tthis.header = {\n\t\t\tmagic: THREE.LoaderUtils.decodeText( new Uint8Array( data.slice( 0, 4 ) ) ),\n\t\t\tversion: headerView.getUint32( 4, true ),\n\t\t\tlength: headerView.getUint32( 8, true )\n\t\t};\n\n\t\tif ( this.header.magic !== BINARY_EXTENSION_HEADER_MAGIC ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Unsupported glTF-Binary header.' );\n\n\t\t} else if ( this.header.version < 2.0 ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Legacy binary file detected. Use LegacyGLTFLoader instead.' );\n\n\t\t}\n\n\t\tvar chunkView = new DataView( data, BINARY_EXTENSION_HEADER_LENGTH );\n\t\tvar chunkIndex = 0;\n\n\t\twhile ( chunkIndex < chunkView.byteLength ) {\n\n\t\t\tvar chunkLength = chunkView.getUint32( chunkIndex, true );\n\t\t\tchunkIndex += 4;\n\n\t\t\tvar chunkType = chunkView.getUint32( chunkIndex, true );\n\t\t\tchunkIndex += 4;\n\n\t\t\tif ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.JSON ) {\n\n\t\t\t\tvar contentArray = new Uint8Array( data, BINARY_EXTENSION_HEADER_LENGTH + chunkIndex, chunkLength );\n\t\t\t\tthis.content = THREE.LoaderUtils.decodeText( contentArray );\n\n\t\t\t} else if ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.BIN ) {\n\n\t\t\t\tvar byteOffset = BINARY_EXTENSION_HEADER_LENGTH + chunkIndex;\n\t\t\t\tthis.body = data.slice( byteOffset, byteOffset + chunkLength );\n\n\t\t\t}\n\n\t\t\t// Clients must ignore chunks with unknown types.\n\n\t\t\tchunkIndex += chunkLength;\n\n\t\t}\n\n\t\tif ( this.content === null ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: JSON content not found.' );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * DRACO Mesh Compression Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/pull/874\n\t */\n\tfunction GLTFDracoMeshCompressionExtension( json, dracoLoader ) {\n\n\t\tif ( ! dracoLoader ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: No DRACOLoader instance provided.' );\n\n\t\t}\n\n\t\tthis.name = EXTENSIONS.KHR_DRACO_MESH_COMPRESSION;\n\t\tthis.json = json;\n\t\tthis.dracoLoader = dracoLoader;\n\n\t}\n\n\tGLTFDracoMeshCompressionExtension.prototype.decodePrimitive = function ( primitive, parser ) {\n\n\t\tvar json = this.json;\n\t\tvar dracoLoader = this.dracoLoader;\n\t\tvar bufferViewIndex = primitive.extensions[ this.name ].bufferView;\n\t\tvar gltfAttributeMap = primitive.extensions[ this.name ].attributes;\n\t\tvar threeAttributeMap = {};\n\t\tvar attributeNormalizedMap = {};\n\t\tvar attributeTypeMap = {};\n\n\t\tfor ( var attributeName in gltfAttributeMap ) {\n\n\t\t\tif ( ! ( attributeName in ATTRIBUTES ) ) continue;\n\n\t\t\tthreeAttributeMap[ ATTRIBUTES[ attributeName ] ] = gltfAttributeMap[ attributeName ];\n\n\t\t}\n\n\t\tfor ( attributeName in primitive.attributes ) {\n\n\t\t\tif ( ATTRIBUTES[ attributeName ] !== undefined && gltfAttributeMap[ attributeName ] !== undefined ) {\n\n\t\t\t\tvar accessorDef = json.accessors[ primitive.attributes[ attributeName ] ];\n\t\t\t\tvar componentType = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\n\n\t\t\t\tattributeTypeMap[ ATTRIBUTES[ attributeName ] ] = componentType;\n\t\t\t\tattributeNormalizedMap[ ATTRIBUTES[ attributeName ] ] = accessorDef.normalized === true;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn parser.getDependency( 'bufferView', bufferViewIndex ).then( function ( bufferView ) {\n\n\t\t\treturn new Promise( function ( resolve ) {\n\n\t\t\t\tdracoLoader.decodeDracoFile( bufferView, function ( geometry ) {\n\n\t\t\t\t\tfor ( var attributeName in geometry.attributes ) {\n\n\t\t\t\t\t\tvar attribute = geometry.attributes[ attributeName ];\n\t\t\t\t\t\tvar normalized = attributeNormalizedMap[ attributeName ];\n\n\t\t\t\t\t\tif ( normalized !== undefined ) attribute.normalized = normalized;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve( geometry );\n\n\t\t\t\t}, threeAttributeMap, attributeTypeMap );\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specular-Glossiness Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_pbrSpecularGlossiness\n\t */\n\tfunction GLTFMaterialsPbrSpecularGlossinessExtension() {\n\n\t\treturn {\n\n\t\t\tname: EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS,\n\n\t\t\tspecularGlossinessParams: [\n\t\t\t\t'color',\n\t\t\t\t'map',\n\t\t\t\t'lightMap',\n\t\t\t\t'lightMapIntensity',\n\t\t\t\t'aoMap',\n\t\t\t\t'aoMapIntensity',\n\t\t\t\t'emissive',\n\t\t\t\t'emissiveIntensity',\n\t\t\t\t'emissiveMap',\n\t\t\t\t'bumpMap',\n\t\t\t\t'bumpScale',\n\t\t\t\t'normalMap',\n\t\t\t\t'displacementMap',\n\t\t\t\t'displacementScale',\n\t\t\t\t'displacementBias',\n\t\t\t\t'specularMap',\n\t\t\t\t'specular',\n\t\t\t\t'glossinessMap',\n\t\t\t\t'glossiness',\n\t\t\t\t'alphaMap',\n\t\t\t\t'envMap',\n\t\t\t\t'envMapIntensity',\n\t\t\t\t'refractionRatio',\n\t\t\t],\n\n\t\t\tgetMaterialType: function () {\n\n\t\t\t\treturn THREE.ShaderMaterial;\n\n\t\t\t},\n\n\t\t\textendParams: function ( params, material, parser ) {\n\n\t\t\t\tvar pbrSpecularGlossiness = material.extensions[ this.name ];\n\n\t\t\t\tvar shader = THREE.ShaderLib[ 'standard' ];\n\n\t\t\t\tvar uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\n\t\t\t\tvar specularMapParsFragmentChunk = [\n\t\t\t\t\t'#ifdef USE_SPECULARMAP',\n\t\t\t\t\t'\tuniform sampler2D specularMap;',\n\t\t\t\t\t'#endif'\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tvar glossinessMapParsFragmentChunk = [\n\t\t\t\t\t'#ifdef USE_GLOSSINESSMAP',\n\t\t\t\t\t'\tuniform sampler2D glossinessMap;',\n\t\t\t\t\t'#endif'\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tvar specularMapFragmentChunk = [\n\t\t\t\t\t'vec3 specularFactor = specular;',\n\t\t\t\t\t'#ifdef USE_SPECULARMAP',\n\t\t\t\t\t'\tvec4 texelSpecular = texture2D( specularMap, vUv );',\n\t\t\t\t\t'\ttexelSpecular = sRGBToLinear( texelSpecular );',\n\t\t\t\t\t'\t// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture',\n\t\t\t\t\t'\tspecularFactor *= texelSpecular.rgb;',\n\t\t\t\t\t'#endif'\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tvar glossinessMapFragmentChunk = [\n\t\t\t\t\t'float glossinessFactor = glossiness;',\n\t\t\t\t\t'#ifdef USE_GLOSSINESSMAP',\n\t\t\t\t\t'\tvec4 texelGlossiness = texture2D( glossinessMap, vUv );',\n\t\t\t\t\t'\t// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture',\n\t\t\t\t\t'\tglossinessFactor *= texelGlossiness.a;',\n\t\t\t\t\t'#endif'\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tvar lightPhysicalFragmentChunk = [\n\t\t\t\t\t'PhysicalMaterial material;',\n\t\t\t\t\t'material.diffuseColor = diffuseColor.rgb;',\n\t\t\t\t\t'material.specularRoughness = clamp( 1.0 - glossinessFactor, 0.04, 1.0 );',\n\t\t\t\t\t'material.specularColor = specularFactor.rgb;',\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tvar fragmentShader = shader.fragmentShader\n\t\t\t\t\t.replace( 'uniform float roughness;', 'uniform vec3 specular;' )\n\t\t\t\t\t.replace( 'uniform float metalness;', 'uniform float glossiness;' )\n\t\t\t\t\t.replace( '#include <roughnessmap_pars_fragment>', specularMapParsFragmentChunk )\n\t\t\t\t\t.replace( '#include <metalnessmap_pars_fragment>', glossinessMapParsFragmentChunk )\n\t\t\t\t\t.replace( '#include <roughnessmap_fragment>', specularMapFragmentChunk )\n\t\t\t\t\t.replace( '#include <metalnessmap_fragment>', glossinessMapFragmentChunk )\n\t\t\t\t\t.replace( '#include <lights_physical_fragment>', lightPhysicalFragmentChunk );\n\n\t\t\t\tdelete uniforms.roughness;\n\t\t\t\tdelete uniforms.metalness;\n\t\t\t\tdelete uniforms.roughnessMap;\n\t\t\t\tdelete uniforms.metalnessMap;\n\n\t\t\t\tuniforms.specular = { value: new THREE.Color().setHex( 0x111111 ) };\n\t\t\t\tuniforms.glossiness = { value: 0.5 };\n\t\t\t\tuniforms.specularMap = { value: null };\n\t\t\t\tuniforms.glossinessMap = { value: null };\n\n\t\t\t\tparams.vertexShader = shader.vertexShader;\n\t\t\t\tparams.fragmentShader = fragmentShader;\n\t\t\t\tparams.uniforms = uniforms;\n\t\t\t\tparams.defines = { 'STANDARD': '' };\n\n\t\t\t\tparams.color = new THREE.Color( 1.0, 1.0, 1.0 );\n\t\t\t\tparams.opacity = 1.0;\n\n\t\t\t\tvar pending = [];\n\n\t\t\t\tif ( Array.isArray( pbrSpecularGlossiness.diffuseFactor ) ) {\n\n\t\t\t\t\tvar array = pbrSpecularGlossiness.diffuseFactor;\n\n\t\t\t\t\tparams.color.fromArray( array );\n\t\t\t\t\tparams.opacity = array[ 3 ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( pbrSpecularGlossiness.diffuseTexture !== undefined ) {\n\n\t\t\t\t\tpending.push( parser.assignTexture( params, 'map', pbrSpecularGlossiness.diffuseTexture.index ) );\n\n\t\t\t\t}\n\n\t\t\t\tparams.emissive = new THREE.Color( 0.0, 0.0, 0.0 );\n\t\t\t\tparams.glossiness = pbrSpecularGlossiness.glossinessFactor !== undefined ? pbrSpecularGlossiness.glossinessFactor : 1.0;\n\t\t\t\tparams.specular = new THREE.Color( 1.0, 1.0, 1.0 );\n\n\t\t\t\tif ( Array.isArray( pbrSpecularGlossiness.specularFactor ) ) {\n\n\t\t\t\t\tparams.specular.fromArray( pbrSpecularGlossiness.specularFactor );\n\n\t\t\t\t}\n\n\t\t\t\tif ( pbrSpecularGlossiness.specularGlossinessTexture !== undefined ) {\n\n\t\t\t\t\tvar specGlossIndex = pbrSpecularGlossiness.specularGlossinessTexture.index;\n\t\t\t\t\tpending.push( parser.assignTexture( params, 'glossinessMap', specGlossIndex ) );\n\t\t\t\t\tpending.push( parser.assignTexture( params, 'specularMap', specGlossIndex ) );\n\n\t\t\t\t}\n\n\t\t\t\treturn Promise.all( pending );\n\n\t\t\t},\n\n\t\t\tcreateMaterial: function ( params ) {\n\n\t\t\t\t// setup material properties based on MeshStandardMaterial for Specular-Glossiness\n\n\t\t\t\tvar material = new THREE.ShaderMaterial( {\n\t\t\t\t\tdefines: params.defines,\n\t\t\t\t\tvertexShader: params.vertexShader,\n\t\t\t\t\tfragmentShader: params.fragmentShader,\n\t\t\t\t\tuniforms: params.uniforms,\n\t\t\t\t\tfog: true,\n\t\t\t\t\tlights: true,\n\t\t\t\t\topacity: params.opacity,\n\t\t\t\t\ttransparent: params.transparent\n\t\t\t\t} );\n\n\t\t\t\tmaterial.isGLTFSpecularGlossinessMaterial = true;\n\n\t\t\t\tmaterial.color = params.color;\n\n\t\t\t\tmaterial.map = params.map === undefined ? null : params.map;\n\n\t\t\t\tmaterial.lightMap = null;\n\t\t\t\tmaterial.lightMapIntensity = 1.0;\n\n\t\t\t\tmaterial.aoMap = params.aoMap === undefined ? null : params.aoMap;\n\t\t\t\tmaterial.aoMapIntensity = 1.0;\n\n\t\t\t\tmaterial.emissive = params.emissive;\n\t\t\t\tmaterial.emissiveIntensity = 1.0;\n\t\t\t\tmaterial.emissiveMap = params.emissiveMap === undefined ? null : params.emissiveMap;\n\n\t\t\t\tmaterial.bumpMap = params.bumpMap === undefined ? null : params.bumpMap;\n\t\t\t\tmaterial.bumpScale = 1;\n\n\t\t\t\tmaterial.normalMap = params.normalMap === undefined ? null : params.normalMap;\n\t\t\t\tif ( params.normalScale ) material.normalScale = params.normalScale;\n\n\t\t\t\tmaterial.displacementMap = null;\n\t\t\t\tmaterial.displacementScale = 1;\n\t\t\t\tmaterial.displacementBias = 0;\n\n\t\t\t\tmaterial.specularMap = params.specularMap === undefined ? null : params.specularMap;\n\t\t\t\tmaterial.specular = params.specular;\n\n\t\t\t\tmaterial.glossinessMap = params.glossinessMap === undefined ? null : params.glossinessMap;\n\t\t\t\tmaterial.glossiness = params.glossiness;\n\n\t\t\t\tmaterial.alphaMap = null;\n\n\t\t\t\tmaterial.envMap = params.envMap === undefined ? null : params.envMap;\n\t\t\t\tmaterial.envMapIntensity = 1.0;\n\n\t\t\t\tmaterial.refractionRatio = 0.98;\n\n\t\t\t\tmaterial.extensions.derivatives = true;\n\n\t\t\t\treturn material;\n\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Clones a GLTFSpecularGlossinessMaterial instance. The ShaderMaterial.copy() method can\n\t\t\t * copy only properties it knows about or inherits, and misses many properties that would\n\t\t\t * normally be defined by MeshStandardMaterial.\n\t\t\t *\n\t\t\t * This method allows GLTFSpecularGlossinessMaterials to be cloned in the process of\n\t\t\t * loading a glTF model, but cloning later (e.g. by the user) would require these changes\n\t\t\t * AND also updating `.onBeforeRender` on the parent mesh.\n\t\t\t *\n\t\t\t * @param  {THREE.ShaderMaterial} source\n\t\t\t * @return {THREE.ShaderMaterial}\n\t\t\t */\n\t\t\tcloneMaterial: function ( source ) {\n\n\t\t\t\tvar target = source.clone();\n\n\t\t\t\ttarget.isGLTFSpecularGlossinessMaterial = true;\n\n\t\t\t\tvar params = this.specularGlossinessParams;\n\n\t\t\t\tfor ( var i = 0, il = params.length; i < il; i ++ ) {\n\n\t\t\t\t\ttarget[ params[ i ] ] = source[ params[ i ] ];\n\n\t\t\t\t}\n\n\t\t\t\treturn target;\n\n\t\t\t},\n\n\t\t\t// Here's based on refreshUniformsCommon() and refreshUniformsStandard() in WebGLRenderer.\n\t\t\trefreshUniforms: function ( renderer, scene, camera, geometry, material, group ) {\n\n\t\t\t\tif ( material.isGLTFSpecularGlossinessMaterial !== true ) {\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tvar uniforms = material.uniforms;\n\t\t\t\tvar defines = material.defines;\n\n\t\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t\t\tuniforms.diffuse.value.copy( material.color );\n\t\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t\t\tuniforms.map.value = material.map;\n\t\t\t\tuniforms.specularMap.value = material.specularMap;\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t\t\t// uv repeat and offset setting priorities\n\t\t\t\t// 1. color map\n\t\t\t\t// 2. specular map\n\t\t\t\t// 3. normal map\n\t\t\t\t// 4. bump map\n\t\t\t\t// 5. alpha map\n\t\t\t\t// 6. emissive map\n\n\t\t\t\tvar uvScaleMap;\n\n\t\t\t\tif ( material.map ) {\n\n\t\t\t\t\tuvScaleMap = material.map;\n\n\t\t\t\t} else if ( material.specularMap ) {\n\n\t\t\t\t\tuvScaleMap = material.specularMap;\n\n\t\t\t\t} else if ( material.displacementMap ) {\n\n\t\t\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t\t\t} else if ( material.normalMap ) {\n\n\t\t\t\t\tuvScaleMap = material.normalMap;\n\n\t\t\t\t} else if ( material.bumpMap ) {\n\n\t\t\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t\t\t} else if ( material.glossinessMap ) {\n\n\t\t\t\t\tuvScaleMap = material.glossinessMap;\n\n\t\t\t\t} else if ( material.alphaMap ) {\n\n\t\t\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t\t\t} else if ( material.emissiveMap ) {\n\n\t\t\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t\t\t}\n\n\t\t\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t\t\t// backwards compatibility\n\t\t\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t\t\t}\n\n\t\t\t\tuniforms.envMap.value = material.envMap;\n\t\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\t\t\t\tuniforms.flipEnvMap.value = ( material.envMap && material.envMap.isCubeTexture ) ? - 1 : 1;\n\n\t\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t\t\tuniforms.specular.value.copy( material.specular );\n\t\t\t\tuniforms.glossiness.value = material.glossiness;\n\n\t\t\t\tuniforms.glossinessMap.value = material.glossinessMap;\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t\tif ( uniforms.glossinessMap.value !== null && defines.USE_GLOSSINESSMAP === undefined ) {\n\n\t\t\t\t\tdefines.USE_GLOSSINESSMAP = '';\n\t\t\t\t\t// set USE_ROUGHNESSMAP to enable vUv\n\t\t\t\t\tdefines.USE_ROUGHNESSMAP = '';\n\n\t\t\t\t}\n\n\t\t\t\tif ( uniforms.glossinessMap.value === null && defines.USE_GLOSSINESSMAP !== undefined ) {\n\n\t\t\t\t\tdelete defines.USE_GLOSSINESSMAP;\n\t\t\t\t\tdelete defines.USE_ROUGHNESSMAP;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/*********************************/\n\t/********** INTERPOLATION ********/\n\t/*********************************/\n\n\t// Spline Interpolation\n\t// Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#appendix-c-spline-interpolation\n\tfunction GLTFCubicSplineInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tTHREE.Interpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tGLTFCubicSplineInterpolant.prototype = Object.create( THREE.Interpolant.prototype );\n\tGLTFCubicSplineInterpolant.prototype.constructor = GLTFCubicSplineInterpolant;\n\n\tGLTFCubicSplineInterpolant.prototype.copySampleValue_ = function ( index ) {\n\n\t\t// Copies a sample value to the result buffer. See description of glTF\n\t\t// CUBICSPLINE values layout in interpolate_() function below.\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tvalueSize = this.valueSize,\n\t\t\toffset = index * valueSize * 3 + valueSize;\n\n\t\tfor ( var i = 0; i !== valueSize; i ++ ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t};\n\n\tGLTFCubicSplineInterpolant.prototype.beforeStart_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n\tGLTFCubicSplineInterpolant.prototype.afterEnd_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n\tGLTFCubicSplineInterpolant.prototype.interpolate_ = function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer;\n\t\tvar values = this.sampleValues;\n\t\tvar stride = this.valueSize;\n\n\t\tvar stride2 = stride * 2;\n\t\tvar stride3 = stride * 3;\n\n\t\tvar td = t1 - t0;\n\n\t\tvar p = ( t - t0 ) / td;\n\t\tvar pp = p * p;\n\t\tvar ppp = pp * p;\n\n\t\tvar offset1 = i1 * stride3;\n\t\tvar offset0 = offset1 - stride3;\n\n\t\tvar s0 = 2 * ppp - 3 * pp + 1;\n\t\tvar s1 = ppp - 2 * pp + p;\n\t\tvar s2 = - 2 * ppp + 3 * pp;\n\t\tvar s3 = ppp - pp;\n\n\t\t// Layout of keyframe output values for CUBICSPLINE animations:\n\t\t//   [ inTangent_1, splineVertex_1, outTangent_1, inTangent_2, splineVertex_2, ... ]\n\t\tfor ( var i = 0; i !== stride; i ++ ) {\n\n\t\t\tvar p0 = values[ offset0 + i + stride ]; // splineVertex_k\n\t\t\tvar m0 = values[ offset0 + i + stride2 ] * td; // outTangent_k * (t_k+1 - t_k)\n\t\t\tvar p1 = values[ offset1 + i + stride ]; // splineVertex_k+1\n\t\t\tvar m1 = values[ offset1 + i ] * td; // inTangent_k+1 * (t_k+1 - t_k)\n\n\t\t\tresult[ i ] = s0 * p0 + s1 * m0 + s2 * p1 + s3 * m1;\n\n\t\t}\n\n\t\treturn result;\n\n\t};\n\n\t/*********************************/\n\t/********** INTERNALS ************/\n\t/*********************************/\n\n\t/* CONSTANTS */\n\n\tvar WEBGL_CONSTANTS = {\n\t\tFLOAT: 5126,\n\t\t//FLOAT_MAT2: 35674,\n\t\tFLOAT_MAT3: 35675,\n\t\tFLOAT_MAT4: 35676,\n\t\tFLOAT_VEC2: 35664,\n\t\tFLOAT_VEC3: 35665,\n\t\tFLOAT_VEC4: 35666,\n\t\tLINEAR: 9729,\n\t\tREPEAT: 10497,\n\t\tSAMPLER_2D: 35678,\n\t\tPOINTS: 0,\n\t\tLINES: 1,\n\t\tLINE_LOOP: 2,\n\t\tLINE_STRIP: 3,\n\t\tTRIANGLES: 4,\n\t\tTRIANGLE_STRIP: 5,\n\t\tTRIANGLE_FAN: 6,\n\t\tUNSIGNED_BYTE: 5121,\n\t\tUNSIGNED_SHORT: 5123\n\t};\n\n\tvar WEBGL_TYPE = {\n\t\t5126: Number,\n\t\t//35674: THREE.Matrix2,\n\t\t35675: THREE.Matrix3,\n\t\t35676: THREE.Matrix4,\n\t\t35664: THREE.Vector2,\n\t\t35665: THREE.Vector3,\n\t\t35666: THREE.Vector4,\n\t\t35678: THREE.Texture\n\t};\n\n\tvar WEBGL_COMPONENT_TYPES = {\n\t\t5120: Int8Array,\n\t\t5121: Uint8Array,\n\t\t5122: Int16Array,\n\t\t5123: Uint16Array,\n\t\t5125: Uint32Array,\n\t\t5126: Float32Array\n\t};\n\n\tvar WEBGL_FILTERS = {\n\t\t9728: THREE.NearestFilter,\n\t\t9729: THREE.LinearFilter,\n\t\t9984: THREE.NearestMipMapNearestFilter,\n\t\t9985: THREE.LinearMipMapNearestFilter,\n\t\t9986: THREE.NearestMipMapLinearFilter,\n\t\t9987: THREE.LinearMipMapLinearFilter\n\t};\n\n\tvar WEBGL_WRAPPINGS = {\n\t\t33071: THREE.ClampToEdgeWrapping,\n\t\t33648: THREE.MirroredRepeatWrapping,\n\t\t10497: THREE.RepeatWrapping\n\t};\n\n\tvar WEBGL_SIDES = {\n\t\t1028: THREE.BackSide, // Culling front\n\t\t1029: THREE.FrontSide // Culling back\n\t\t//1032: THREE.NoSide   // Culling front and back, what to do?\n\t};\n\n\tvar WEBGL_DEPTH_FUNCS = {\n\t\t512: THREE.NeverDepth,\n\t\t513: THREE.LessDepth,\n\t\t514: THREE.EqualDepth,\n\t\t515: THREE.LessEqualDepth,\n\t\t516: THREE.GreaterEqualDepth,\n\t\t517: THREE.NotEqualDepth,\n\t\t518: THREE.GreaterEqualDepth,\n\t\t519: THREE.AlwaysDepth\n\t};\n\n\tvar WEBGL_BLEND_EQUATIONS = {\n\t\t32774: THREE.AddEquation,\n\t\t32778: THREE.SubtractEquation,\n\t\t32779: THREE.ReverseSubtractEquation\n\t};\n\n\tvar WEBGL_BLEND_FUNCS = {\n\t\t0: THREE.ZeroFactor,\n\t\t1: THREE.OneFactor,\n\t\t768: THREE.SrcColorFactor,\n\t\t769: THREE.OneMinusSrcColorFactor,\n\t\t770: THREE.SrcAlphaFactor,\n\t\t771: THREE.OneMinusSrcAlphaFactor,\n\t\t772: THREE.DstAlphaFactor,\n\t\t773: THREE.OneMinusDstAlphaFactor,\n\t\t774: THREE.DstColorFactor,\n\t\t775: THREE.OneMinusDstColorFactor,\n\t\t776: THREE.SrcAlphaSaturateFactor\n\t\t// The followings are not supported by Three.js yet\n\t\t//32769: CONSTANT_COLOR,\n\t\t//32770: ONE_MINUS_CONSTANT_COLOR,\n\t\t//32771: CONSTANT_ALPHA,\n\t\t//32772: ONE_MINUS_CONSTANT_COLOR\n\t};\n\n\tvar WEBGL_TYPE_SIZES = {\n\t\t'SCALAR': 1,\n\t\t'VEC2': 2,\n\t\t'VEC3': 3,\n\t\t'VEC4': 4,\n\t\t'MAT2': 4,\n\t\t'MAT3': 9,\n\t\t'MAT4': 16\n\t};\n\n\tvar ATTRIBUTES = {\n\t\tPOSITION: 'position',\n\t\tNORMAL: 'normal',\n\t\tTEXCOORD_0: 'uv',\n\t\tTEXCOORD0: 'uv', // deprecated\n\t\tTEXCOORD: 'uv', // deprecated\n\t\tTEXCOORD_1: 'uv2',\n\t\tCOLOR_0: 'color',\n\t\tCOLOR0: 'color', // deprecated\n\t\tCOLOR: 'color', // deprecated\n\t\tWEIGHTS_0: 'skinWeight',\n\t\tWEIGHT: 'skinWeight', // deprecated\n\t\tJOINTS_0: 'skinIndex',\n\t\tJOINT: 'skinIndex', // deprecated\n\t\t_BATCHID: '_BATCHID'\n\t};\n\n\tvar PATH_PROPERTIES = {\n\t\tscale: 'scale',\n\t\ttranslation: 'position',\n\t\trotation: 'quaternion',\n\t\tweights: 'morphTargetInfluences'\n\t};\n\n\tvar INTERPOLATION = {\n\t\tCUBICSPLINE: THREE.InterpolateSmooth, // We use custom interpolation GLTFCubicSplineInterpolation for CUBICSPLINE.\n\t\t                                      // KeyframeTrack.optimize() can't handle glTF Cubic Spline output values layout,\n\t\t                                      // using THREE.InterpolateSmooth for KeyframeTrack instantiation to prevent optimization.\n\t\t                                      // See KeyframeTrack.optimize() for the detail.\n\t\tLINEAR: THREE.InterpolateLinear,\n\t\tSTEP: THREE.InterpolateDiscrete\n\t};\n\n\tvar STATES_ENABLES = {\n\t\t2884: 'CULL_FACE',\n\t\t2929: 'DEPTH_TEST',\n\t\t3042: 'BLEND',\n\t\t3089: 'SCISSOR_TEST',\n\t\t32823: 'POLYGON_OFFSET_FILL',\n\t\t32926: 'SAMPLE_ALPHA_TO_COVERAGE'\n\t};\n\n\tvar ALPHA_MODES = {\n\t\tOPAQUE: 'OPAQUE',\n\t\tMASK: 'MASK',\n\t\tBLEND: 'BLEND'\n\t};\n\n\tvar MIME_TYPE_FORMATS = {\n\t\t'image/png': THREE.RGBAFormat,\n\t\t'image/jpeg': THREE.RGBFormat\n\t};\n\n\t/* UTILITY FUNCTIONS */\n\n\tfunction resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#default-material\n\t */\n\tfunction createDefaultMaterial() {\n\n\t\treturn new THREE.MeshStandardMaterial( {\n\t\t\tcolor: 0xFFFFFF,\n\t\t\temissive: 0x000000,\n\t\t\tmetalness: 1,\n\t\t\troughness: 1,\n\t\t\ttransparent: false,\n\t\t\tdepthTest: true,\n\t\t\tside: THREE.FrontSide\n\t\t} );\n\n\t}\n\n\tfunction addUnknownExtensionsToUserData( knownExtensions, object, objectDef ) {\n\n\t\t// Add unknown glTF extensions to an object's userData.\n\n\t\tfor ( var name in objectDef.extensions ) {\n\n\t\t\tif ( knownExtensions[ name ] === undefined ) {\n\n\t\t\t\tobject.userData.gltfExtensions = object.userData.gltfExtensions || {};\n\t\t\t\tobject.userData.gltfExtensions[ name ] = objectDef.extensions[ name ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @param {THREE.Object3D|THREE.Material|THREE.BufferGeometry} object\n\t * @param {GLTF.definition} gltfDef\n\t */\n\tfunction assignExtrasToUserData( object, gltfDef ) {\n\n\t\tif ( gltfDef.extras !== undefined ) {\n\n\t\t\tif ( typeof gltfDef.extras === 'object' ) {\n\n\t\t\t\tobject.userData = gltfDef.extras;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Ignoring primitive type .extras, ' + gltfDef.extras );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#morph-targets\n\t *\n\t * @param {THREE.BufferGeometry} geometry\n\t * @param {Array<GLTF.Target>} targets\n\t * @param {GLTFParser} parser\n\t * @return {Promise<THREE.BufferGeometry>}\n\t */\n\tfunction addMorphTargets( geometry, targets, parser ) {\n\n\t\tvar hasMorphPosition = false;\n\t\tvar hasMorphNormal = false;\n\n\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\tvar target = targets[ i ];\n\n\t\t\tif ( target.POSITION !== undefined ) hasMorphPosition = true;\n\t\t\tif ( target.NORMAL !== undefined ) hasMorphNormal = true;\n\n\t\t\tif ( hasMorphPosition && hasMorphNormal ) break;\n\n\t\t}\n\n\t\tif ( ! hasMorphPosition && ! hasMorphNormal ) return Promise.resolve( geometry );\n\n\t\tvar pendingPositionAccessors = [];\n\t\tvar pendingNormalAccessors = [];\n\n\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\tvar target = targets[ i ];\n\n\t\t\tif ( hasMorphPosition ) {\n\n\t\t\t\tvar accessor = target.POSITION !== undefined\n\t\t\t\t\t? parser.getDependency( 'accessor', target.POSITION )\n\t\t\t\t\t\t.then( function ( accessor ) {\n\t\t\t\t\t\t\t// Cloning not to pollute original accessor below\n\t\t\t\t\t\t\treturn cloneBufferAttribute( accessor );\n\t\t\t\t\t\t} )\n\t\t\t\t\t: geometry.attributes.position;\n\n\t\t\t\tpendingPositionAccessors.push( accessor );\n\n\t\t\t}\n\n\t\t\tif ( hasMorphNormal ) {\n\n\t\t\t\tvar accessor = target.NORMAL !== undefined\n\t\t\t\t\t? parser.getDependency( 'accessor', target.NORMAL )\n\t\t\t\t\t\t.then( function ( accessor ) {\n\t\t\t\t\t\t\treturn cloneBufferAttribute( accessor );\n\t\t\t\t\t\t} )\n\t\t\t\t\t: geometry.attributes.normal;\n\n\t\t\t\tpendingNormalAccessors.push( accessor );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( [\n\t\t\tPromise.all( pendingPositionAccessors ),\n\t\t\tPromise.all( pendingNormalAccessors )\n\t\t] ).then( function ( accessors ) {\n\n\t\t\tvar morphPositions = accessors[ 0 ];\n\t\t\tvar morphNormals = accessors[ 1 ];\n\n\t\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\t\tvar target = targets[ i ];\n\t\t\t\tvar attributeName = 'morphTarget' + i;\n\n\t\t\t\tif ( hasMorphPosition ) {\n\n\t\t\t\t\t// Three.js morph position is absolute value. The formula is\n\t\t\t\t\t//   basePosition\n\t\t\t\t\t//     + weight0 * ( morphPosition0 - basePosition )\n\t\t\t\t\t//     + weight1 * ( morphPosition1 - basePosition )\n\t\t\t\t\t//     ...\n\t\t\t\t\t// while the glTF one is relative\n\t\t\t\t\t//   basePosition\n\t\t\t\t\t//     + weight0 * glTFmorphPosition0\n\t\t\t\t\t//     + weight1 * glTFmorphPosition1\n\t\t\t\t\t//     ...\n\t\t\t\t\t// then we need to convert from relative to absolute here.\n\n\t\t\t\t\tif ( target.POSITION !== undefined ) {\n\n\t\t\t\t\t\tvar positionAttribute = morphPositions[ i ];\n\t\t\t\t\t\tpositionAttribute.name = attributeName;\n\n\t\t\t\t\t\tvar position = geometry.attributes.position;\n\n\t\t\t\t\t\tfor ( var j = 0, jl = positionAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tpositionAttribute.setXYZ(\n\t\t\t\t\t\t\t\tj,\n\t\t\t\t\t\t\t\tpositionAttribute.getX( j ) + position.getX( j ),\n\t\t\t\t\t\t\t\tpositionAttribute.getY( j ) + position.getY( j ),\n\t\t\t\t\t\t\t\tpositionAttribute.getZ( j ) + position.getZ( j )\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasMorphNormal ) {\n\n\t\t\t\t\t// see target.POSITION's comment\n\n\t\t\t\t\tif ( target.NORMAL !== undefined ) {\n\n\t\t\t\t\t\tvar normalAttribute = morphNormals[ i ];\n\t\t\t\t\t\tnormalAttribute.name = attributeName;\n\n\t\t\t\t\t\tvar normal = geometry.attributes.normal;\n\n\t\t\t\t\t\tfor ( var j = 0, jl = normalAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tnormalAttribute.setXYZ(\n\t\t\t\t\t\t\t\tj,\n\t\t\t\t\t\t\t\tnormalAttribute.getX( j ) + normal.getX( j ),\n\t\t\t\t\t\t\t\tnormalAttribute.getY( j ) + normal.getY( j ),\n\t\t\t\t\t\t\t\tnormalAttribute.getZ( j ) + normal.getZ( j )\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasMorphPosition ) geometry.morphAttributes.position = morphPositions;\n\t\t\tif ( hasMorphNormal ) geometry.morphAttributes.normal = morphNormals;\n\n\t\t\treturn geometry;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * @param {THREE.Mesh} mesh\n\t * @param {GLTF.Mesh} meshDef\n\t */\n\tfunction updateMorphTargets( mesh, meshDef ) {\n\n\t\tmesh.updateMorphTargets();\n\n\t\tif ( meshDef.weights !== undefined ) {\n\n\t\t\tfor ( var i = 0, il = meshDef.weights.length; i < il; i ++ ) {\n\n\t\t\t\tmesh.morphTargetInfluences[ i ] = meshDef.weights[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// .extras has user-defined data, so check that .extras.targetNames is an array.\n\t\tif ( meshDef.extras && Array.isArray( meshDef.extras.targetNames ) ) {\n\n\t\t\tvar targetNames = meshDef.extras.targetNames;\n\n\t\t\tif ( mesh.morphTargetInfluences.length === targetNames.length ) {\n\n\t\t\t\tmesh.morphTargetDictionary = {};\n\n\t\t\t\tfor ( var i = 0, il = targetNames.length; i < il; i ++ ) {\n\n\t\t\t\t\tmesh.morphTargetDictionary[ targetNames[ i ] ] = i;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction isPrimitiveEqual( a, b ) {\n\n\t\tif ( a.indices !== b.indices ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn isObjectEqual( a.attributes, b.attributes );\n\n\t}\n\n\tfunction isObjectEqual( a, b ) {\n\n\t\tif ( Object.keys( a ).length !== Object.keys( b ).length ) return false;\n\n\t\tfor ( var key in a ) {\n\n\t\t\tif ( a[ key ] !== b[ key ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfunction isArrayEqual( a, b ) {\n\n\t\tif ( a.length !== b.length ) return false;\n\n\t\tfor ( var i = 0, il = a.length; i < il; i ++ ) {\n\n\t\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfunction getCachedGeometry( cache, newPrimitive ) {\n\n\t\tfor ( var i = 0, il = cache.length; i < il; i ++ ) {\n\n\t\t\tvar cached = cache[ i ];\n\n\t\t\tif ( isPrimitiveEqual( cached.primitive, newPrimitive ) ) return cached.promise;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tfunction getCachedCombinedGeometry( cache, geometries ) {\n\n\t\tfor ( var i = 0, il = cache.length; i < il; i ++ ) {\n\n\t\t\tvar cached = cache[ i ];\n\n\t\t\tif ( isArrayEqual( geometries, cached.baseGeometries ) ) return cached.geometry;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tfunction getCachedMultiPassGeometry( cache, geometry, primitives ) {\n\n\t\tfor ( var i = 0, il = cache.length; i < il; i ++ ) {\n\n\t\t\tvar cached = cache[ i ];\n\n\t\t\tif ( geometry === cached.baseGeometry && isArrayEqual( primitives, cached.primitives ) ) return cached.geometry;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tfunction cloneBufferAttribute( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\tvar count = attribute.count;\n\t\t\tvar itemSize = attribute.itemSize;\n\t\t\tvar array = attribute.array.slice( 0, count * itemSize );\n\n\t\t\tfor ( var i = 0; i < count; ++ i ) {\n\n\t\t\t\tarray[ i ] = attribute.getX( i );\n\t\t\t\tif ( itemSize >= 2 ) array[ i + 1 ] = attribute.getY( i );\n\t\t\t\tif ( itemSize >= 3 ) array[ i + 2 ] = attribute.getZ( i );\n\t\t\t\tif ( itemSize >= 4 ) array[ i + 3 ] = attribute.getW( i );\n\n\t\t\t}\n\n\t\t\treturn new THREE.BufferAttribute( array, itemSize, attribute.normalized );\n\n\t\t}\n\n\t\treturn attribute.clone();\n\n\t}\n\n\t/**\n\t * Checks if we can build a single Mesh with MultiMaterial from multiple primitives.\n\t * Returns true if all primitives use the same attributes/morphAttributes/mode\n\t * and also have index. Otherwise returns false.\n\t *\n\t * @param {Array<GLTF.Primitive>} primitives\n\t * @return {Boolean}\n\t */\n\tfunction isMultiPassGeometry( primitives ) {\n\n\t\tif ( primitives.length < 2 ) return false;\n\n\t\tvar primitive0 = primitives[ 0 ];\n\t\tvar targets0 = primitive0.targets || [];\n\n\t\tif ( primitive0.indices === undefined ) return false;\n\n\t\tfor ( var i = 1, il = primitives.length; i < il; i ++ ) {\n\n\t\t\tvar primitive = primitives[ i ];\n\n\t\t\tif ( primitive0.mode !== primitive.mode ) return false;\n\t\t\tif ( primitive.indices === undefined ) return false;\n\t\t\tif ( ! isObjectEqual( primitive0.attributes, primitive.attributes ) ) return false;\n\n\t\t\tvar targets = primitive.targets || [];\n\n\t\t\tif ( targets0.length !== targets.length ) return false;\n\n\t\t\tfor ( var j = 0, jl = targets0.length; j < jl; j ++ ) {\n\n\t\t\t\tif ( ! isObjectEqual( targets0[ j ], targets[ j ] ) ) return false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\t/* GLTF PARSER */\n\n\tfunction GLTFParser( json, extensions, options ) {\n\n\t\tthis.json = json || {};\n\t\tthis.extensions = extensions || {};\n\t\tthis.options = options || {};\n\n\t\t// loader object cache\n\t\tthis.cache = new GLTFRegistry();\n\n\t\t// BufferGeometry caching\n\t\tthis.primitiveCache = [];\n\t\tthis.multiplePrimitivesCache = [];\n\t\tthis.multiPassGeometryCache = [];\n\n\t\tthis.textureLoader = new THREE.TextureLoader( this.options.manager );\n\t\tthis.textureLoader.setCrossOrigin( this.options.crossOrigin );\n\n\t\tthis.fileLoader = new THREE.FileLoader( this.options.manager );\n\t\tthis.fileLoader.setResponseType( 'arraybuffer' );\n\n\t}\n\n\tGLTFParser.prototype.parse = function ( onLoad, onError ) {\n\n\t\tvar json = this.json;\n\n\t\t// Clear the loader cache\n\t\tthis.cache.removeAll();\n\n\t\t// Mark the special nodes/meshes in json for efficient parse\n\t\tthis.markDefs();\n\n\t\t// Fire the callback on complete\n\t\tthis.getMultiDependencies( [\n\n\t\t\t'scene',\n\t\t\t'animation',\n\t\t\t'camera'\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\tvar scenes = dependencies.scenes || [];\n\t\t\tvar scene = scenes[ json.scene || 0 ];\n\t\t\tvar animations = dependencies.animations || [];\n\t\t\tvar cameras = dependencies.cameras || [];\n\n\t\t\tonLoad( scene, scenes, cameras, animations, json );\n\n\t\t} ).catch( onError );\n\n\t};\n\n\t/**\n\t * Marks the special nodes/meshes in json for efficient parse.\n\t */\n\tGLTFParser.prototype.markDefs = function () {\n\n\t\tvar nodeDefs = this.json.nodes || [];\n\t\tvar skinDefs = this.json.skins || [];\n\t\tvar meshDefs = this.json.meshes || [];\n\n\t\tvar meshReferences = {};\n\t\tvar meshUses = {};\n\n\t\t// Nothing in the node definition indicates whether it is a Bone or an\n\t\t// Object3D. Use the skins' joint references to mark bones.\n\t\tfor ( var skinIndex = 0, skinLength = skinDefs.length; skinIndex < skinLength; skinIndex ++ ) {\n\n\t\t\tvar joints = skinDefs[ skinIndex ].joints;\n\n\t\t\tfor ( var i = 0, il = joints.length; i < il; i ++ ) {\n\n\t\t\t\tnodeDefs[ joints[ i ] ].isBone = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Meshes can (and should) be reused by multiple nodes in a glTF asset. To\n\t\t// avoid having more than one THREE.Mesh with the same name, count\n\t\t// references and rename instances below.\n\t\t//\n\t\t// Example: CesiumMilkTruck sample model reuses \"Wheel\" meshes.\n\t\tfor ( var nodeIndex = 0, nodeLength = nodeDefs.length; nodeIndex < nodeLength; nodeIndex ++ ) {\n\n\t\t\tvar nodeDef = nodeDefs[ nodeIndex ];\n\n\t\t\tif ( nodeDef.mesh !== undefined ) {\n\n\t\t\t\tif ( meshReferences[ nodeDef.mesh ] === undefined ) {\n\n\t\t\t\t\tmeshReferences[ nodeDef.mesh ] = meshUses[ nodeDef.mesh ] = 0;\n\n\t\t\t\t}\n\n\t\t\t\tmeshReferences[ nodeDef.mesh ] ++;\n\n\t\t\t\t// Nothing in the mesh definition indicates whether it is\n\t\t\t\t// a SkinnedMesh or Mesh. Use the node's mesh reference\n\t\t\t\t// to mark SkinnedMesh if node has skin.\n\t\t\t\tif ( nodeDef.skin !== undefined ) {\n\n\t\t\t\t\tmeshDefs[ nodeDef.mesh ].isSkinnedMesh = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.json.meshReferences = meshReferences;\n\t\tthis.json.meshUses = meshUses;\n\n\t};\n\n\t/**\n\t * Requests the specified dependency asynchronously, with caching.\n\t * @param {string} type\n\t * @param {number} index\n\t * @return {Promise<THREE.Object3D|THREE.Material|THREE.Texture|THREE.AnimationClip|ArrayBuffer|Object>}\n\t */\n\tGLTFParser.prototype.getDependency = function ( type, index ) {\n\n\t\tvar cacheKey = type + ':' + index;\n\t\tvar dependency = this.cache.get( cacheKey );\n\n\t\tif ( ! dependency ) {\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 'scene':\n\t\t\t\t\tdependency = this.loadScene( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'node':\n\t\t\t\t\tdependency = this.loadNode( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'mesh':\n\t\t\t\t\tdependency = this.loadMesh( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'accessor':\n\t\t\t\t\tdependency = this.loadAccessor( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bufferView':\n\t\t\t\t\tdependency = this.loadBufferView( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'buffer':\n\t\t\t\t\tdependency = this.loadBuffer( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'material':\n\t\t\t\t\tdependency = this.loadMaterial( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'texture':\n\t\t\t\t\tdependency = this.loadTexture( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'skin':\n\t\t\t\t\tdependency = this.loadSkin( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'animation':\n\t\t\t\t\tdependency = this.loadAnimation( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'camera':\n\t\t\t\t\tdependency = this.loadCamera( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'light':\n\t\t\t\t\tdependency = this.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].loadLight( index );\n\t\t\t\t\tbreak\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error( 'Unknown type: ' + type );\n\n\t\t\t}\n\n\t\t\tthis.cache.add( cacheKey, dependency );\n\n\t\t}\n\n\t\treturn dependency;\n\n\t};\n\n\t/**\n\t * Requests all dependencies of the specified type asynchronously, with caching.\n\t * @param {string} type\n\t * @return {Promise<Array<Object>>}\n\t */\n\tGLTFParser.prototype.getDependencies = function ( type ) {\n\n\t\tvar dependencies = this.cache.get( type );\n\n\t\tif ( ! dependencies ) {\n\n\t\t\tvar parser = this;\n\t\t\tvar defs = this.json[ type + ( type === 'mesh' ? 'es' : 's' ) ] || [];\n\n\t\t\tdependencies = Promise.all( defs.map( function ( def, index ) {\n\n\t\t\t\treturn parser.getDependency( type, index );\n\n\t\t\t} ) );\n\n\t\t\tthis.cache.add( type, dependencies );\n\n\t\t}\n\n\t\treturn dependencies;\n\n\t};\n\n\t/**\n\t * Requests all multiple dependencies of the specified types asynchronously, with caching.\n\t * @param {Array<string>} types\n\t * @return {Promise<Object<Array<Object>>>}\n\t */\n\tGLTFParser.prototype.getMultiDependencies = function ( types ) {\n\n\t\tvar results = {};\n\t\tvar pending = [];\n\n\t\tfor ( var i = 0, il = types.length; i < il; i ++ ) {\n\n\t\t\tvar type = types[ i ];\n\t\t\tvar value = this.getDependencies( type );\n\n\t\t\tvalue = value.then( function ( key, value ) {\n\n\t\t\t\tresults[ key ] = value;\n\n\t\t\t}.bind( this, type + ( type === 'mesh' ? 'es' : 's' ) ) );\n\n\t\t\tpending.push( value );\n\n\t\t}\n\n\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\treturn results;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n\t * @param {number} bufferIndex\n\t * @return {Promise<ArrayBuffer>}\n\t */\n\tGLTFParser.prototype.loadBuffer = function ( bufferIndex ) {\n\n\t\tvar bufferDef = this.json.buffers[ bufferIndex ];\n\t\tvar loader = this.fileLoader;\n\n\t\tif ( bufferDef.type && bufferDef.type !== 'arraybuffer' ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: ' + bufferDef.type + ' buffer type is not supported.' );\n\n\t\t}\n\n\t\t// If present, GLB container is required to be the first buffer.\n\t\tif ( bufferDef.uri === undefined && bufferIndex === 0 ) {\n\n\t\t\treturn Promise.resolve( this.extensions[ EXTENSIONS.KHR_BINARY_GLTF ].body );\n\n\t\t}\n\n\t\tvar options = this.options;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tloader.load( resolveURL( bufferDef.uri, options.path ), resolve, undefined, function () {\n\n\t\t\t\treject( new Error( 'THREE.GLTFLoader: Failed to load buffer \"' + bufferDef.uri + '\".' ) );\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n\t * @param {number} bufferViewIndex\n\t * @return {Promise<ArrayBuffer>}\n\t */\n\tGLTFParser.prototype.loadBufferView = function ( bufferViewIndex ) {\n\n\t\tvar bufferViewDef = this.json.bufferViews[ bufferViewIndex ];\n\n\t\treturn this.getDependency( 'buffer', bufferViewDef.buffer ).then( function ( buffer ) {\n\n\t\t\tvar byteLength = bufferViewDef.byteLength || 0;\n\t\t\tvar byteOffset = bufferViewDef.byteOffset || 0;\n\t\t\treturn buffer.slice( byteOffset, byteOffset + byteLength );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#accessors\n\t * @param {number} accessorIndex\n\t * @return {Promise<THREE.BufferAttribute|THREE.InterleavedBufferAttribute>}\n\t */\n\tGLTFParser.prototype.loadAccessor = function ( accessorIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\n\t\tvar accessorDef = this.json.accessors[ accessorIndex ];\n\n\t\tif ( accessorDef.bufferView === undefined && accessorDef.sparse === undefined ) {\n\n\t\t\t// Ignore empty accessors, which may be used to declare runtime\n\t\t\t// information about attributes coming from another source (e.g. Draco\n\t\t\t// compression extension).\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar pendingBufferViews = [];\n\n\t\tif ( accessorDef.bufferView !== undefined ) {\n\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.bufferView ) );\n\n\t\t} else {\n\n\t\t\tpendingBufferViews.push( null );\n\n\t\t}\n\n\t\tif ( accessorDef.sparse !== undefined ) {\n\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.indices.bufferView ) );\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.values.bufferView ) );\n\n\t\t}\n\n\t\treturn Promise.all( pendingBufferViews ).then( function ( bufferViews ) {\n\n\t\t\tvar bufferView = bufferViews[ 0 ];\n\n\t\t\tvar itemSize = WEBGL_TYPE_SIZES[ accessorDef.type ];\n\t\t\tvar TypedArray = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\n\n\t\t\t// For VEC3: itemSize is 3, elementBytes is 4, itemBytes is 12.\n\t\t\tvar elementBytes = TypedArray.BYTES_PER_ELEMENT;\n\t\t\tvar itemBytes = elementBytes * itemSize;\n\t\t\tvar byteOffset = accessorDef.byteOffset || 0;\n\t\t\tvar byteStride = accessorDef.bufferView !== undefined ? json.bufferViews[ accessorDef.bufferView ].byteStride : undefined;\n\t\t\tvar normalized = accessorDef.normalized === true;\n\t\t\tvar array, bufferAttribute;\n\n\t\t\t// The buffer is not interleaved if the stride is the item size in bytes.\n\t\t\tif ( byteStride && byteStride !== itemBytes ) {\n\n\t\t\t\tvar ibCacheKey = 'InterleavedBuffer:' + accessorDef.bufferView + ':' + accessorDef.componentType;\n\t\t\t\tvar ib = parser.cache.get( ibCacheKey );\n\n\t\t\t\tif ( ! ib ) {\n\n\t\t\t\t\t// Use the full buffer if it's interleaved.\n\t\t\t\t\tarray = new TypedArray( bufferView );\n\n\t\t\t\t\t// Integer parameters to IB/IBA are in array elements, not bytes.\n\t\t\t\t\tib = new THREE.InterleavedBuffer( array, byteStride / elementBytes );\n\n\t\t\t\t\tparser.cache.add( ibCacheKey, ib );\n\n\t\t\t\t}\n\n\t\t\t\tbufferAttribute = new THREE.InterleavedBufferAttribute( ib, itemSize, byteOffset / elementBytes, normalized );\n\n\t\t\t} else {\n\n\t\t\t\tif ( bufferView === null ) {\n\n\t\t\t\t\tarray = new TypedArray( accessorDef.count * itemSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tarray = new TypedArray( bufferView, byteOffset, accessorDef.count * itemSize );\n\n\t\t\t\t}\n\n\t\t\t\tbufferAttribute = new THREE.BufferAttribute( array, itemSize, normalized );\n\n\t\t\t}\n\n\t\t\t// https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#sparse-accessors\n\t\t\tif ( accessorDef.sparse !== undefined ) {\n\n\t\t\t\tvar itemSizeIndices = WEBGL_TYPE_SIZES.SCALAR;\n\t\t\t\tvar TypedArrayIndices = WEBGL_COMPONENT_TYPES[ accessorDef.sparse.indices.componentType ];\n\n\t\t\t\tvar byteOffsetIndices = accessorDef.sparse.indices.byteOffset || 0;\n\t\t\t\tvar byteOffsetValues = accessorDef.sparse.values.byteOffset || 0;\n\n\t\t\t\tvar sparseIndices = new TypedArrayIndices( bufferViews[ 1 ], byteOffsetIndices, accessorDef.sparse.count * itemSizeIndices );\n\t\t\t\tvar sparseValues = new TypedArray( bufferViews[ 2 ], byteOffsetValues, accessorDef.sparse.count * itemSize );\n\n\t\t\t\tif ( bufferView !== null ) {\n\n\t\t\t\t\t// Avoid modifying the original ArrayBuffer, if the bufferView wasn't initialized with zeroes.\n\t\t\t\t\tbufferAttribute.setArray( bufferAttribute.array.slice() );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0, il = sparseIndices.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar index = sparseIndices[ i ];\n\n\t\t\t\t\tbufferAttribute.setX( index, sparseValues[ i * itemSize ] );\n\t\t\t\t\tif ( itemSize >= 2 ) bufferAttribute.setY( index, sparseValues[ i * itemSize + 1 ] );\n\t\t\t\t\tif ( itemSize >= 3 ) bufferAttribute.setZ( index, sparseValues[ i * itemSize + 2 ] );\n\t\t\t\t\tif ( itemSize >= 4 ) bufferAttribute.setW( index, sparseValues[ i * itemSize + 3 ] );\n\t\t\t\t\tif ( itemSize >= 5 ) throw new Error( 'THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn bufferAttribute;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#textures\n\t * @param {number} textureIndex\n\t * @return {Promise<THREE.Texture>}\n\t */\n\tGLTFParser.prototype.loadTexture = function ( textureIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar options = this.options;\n\t\tvar textureLoader = this.textureLoader;\n\n\t\tvar URL = window.URL || window.webkitURL;\n\n\t\tvar textureDef = json.textures[ textureIndex ];\n\n\t\tvar textureExtensions = textureDef.extensions || {};\n\n\t\tvar source;\n\n\t\tif ( textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ] ) {\n\n\t\t\tsource = json.images[ textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ].source ];\n\n\t\t} else {\n\n\t\t\tsource = json.images[ textureDef.source ];\n\n\t\t}\n\n\t\tvar sourceURI = source.uri;\n\t\tvar isObjectURL = false;\n\n\t\tif ( source.bufferView !== undefined ) {\n\n\t\t\t// Load binary image data from bufferView, if provided.\n\n\t\t\tsourceURI = parser.getDependency( 'bufferView', source.bufferView ).then( function ( bufferView ) {\n\n\t\t\t\tisObjectURL = true;\n\t\t\t\tvar blob = new Blob( [ bufferView ], { type: source.mimeType } );\n\t\t\t\tsourceURI = URL.createObjectURL( blob );\n\t\t\t\treturn sourceURI;\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn Promise.resolve( sourceURI ).then( function ( sourceURI ) {\n\n\t\t\t// Load Texture resource.\n\n\t\t\tvar loader = THREE.Loader.Handlers.get( sourceURI );\n\n\t\t\tif ( ! loader ) {\n\n\t\t\t\tloader = textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ]\n\t\t\t\t\t? parser.extensions[ EXTENSIONS.MSFT_TEXTURE_DDS ].ddsLoader\n\t\t\t\t\t: textureLoader;\n\n\t\t\t}\n\n\t\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\t\tloader.load( resolveURL( sourceURI, options.path ), resolve, undefined, reject );\n\n\t\t\t} );\n\n\t\t} ).then( function ( texture ) {\n\n\t\t\t// Clean up resources and configure Texture.\n\n\t\t\tif ( isObjectURL === true ) {\n\n\t\t\t\tURL.revokeObjectURL( sourceURI );\n\n\t\t\t}\n\n\t\t\ttexture.flipY = false;\n\n\t\t\tif ( textureDef.name !== undefined ) texture.name = textureDef.name;\n\n\t\t\t// Ignore unknown mime types, like DDS files.\n\t\t\tif ( source.mimeType in MIME_TYPE_FORMATS ) {\n\n\t\t\t\ttexture.format = MIME_TYPE_FORMATS[ source.mimeType ];\n\n\t\t\t}\n\n\t\t\tvar samplers = json.samplers || {};\n\t\t\tvar sampler = samplers[ textureDef.sampler ] || {};\n\n\t\t\ttexture.magFilter = WEBGL_FILTERS[ sampler.magFilter ] || THREE.LinearFilter;\n\t\t\ttexture.minFilter = WEBGL_FILTERS[ sampler.minFilter ] || THREE.LinearMipMapLinearFilter;\n\t\t\ttexture.wrapS = WEBGL_WRAPPINGS[ sampler.wrapS ] || THREE.RepeatWrapping;\n\t\t\ttexture.wrapT = WEBGL_WRAPPINGS[ sampler.wrapT ] || THREE.RepeatWrapping;\n\n\t\t\treturn texture;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Asynchronously assigns a texture to the given material parameters.\n\t * @param {Object} materialParams\n\t * @param {string} textureName\n\t * @param {number} textureIndex\n\t * @return {Promise<THREE.Texture>}\n\t */\n\tGLTFParser.prototype.assignTexture = function ( materialParams, textureName, textureIndex ) {\n\n\t\treturn this.getDependency( 'texture', textureIndex ).then( function ( texture ) {\n\n\t\t\tmaterialParams[ textureName ] = texture;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#materials\n\t * @param {number} materialIndex\n\t * @return {Promise<THREE.Material>}\n\t */\n\tGLTFParser.prototype.loadMaterial = function ( materialIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\t\tvar materialDef = json.materials[ materialIndex ];\n\n\t\tvar materialType;\n\t\tvar materialParams = {};\n\t\tvar materialExtensions = materialDef.extensions || {};\n\n\t\tvar pending = [];\n\n\t\tif ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ] ) {\n\n\t\t\tvar sgExtension = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ];\n\t\t\tmaterialType = sgExtension.getMaterialType( materialDef );\n\t\t\tpending.push( sgExtension.extendParams( materialParams, materialDef, parser ) );\n\n\t\t} else if ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ] ) {\n\n\t\t\tvar kmuExtension = extensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ];\n\t\t\tmaterialType = kmuExtension.getMaterialType( materialDef );\n\t\t\tpending.push( kmuExtension.extendParams( materialParams, materialDef, parser ) );\n\n\t\t} else {\n\n\t\t\t// Specification:\n\t\t\t// https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#metallic-roughness-material\n\n\t\t\tmaterialType = THREE.MeshStandardMaterial;\n\n\t\t\tvar metallicRoughness = materialDef.pbrMetallicRoughness || {};\n\n\t\t\tmaterialParams.color = new THREE.Color( 1.0, 1.0, 1.0 );\n\t\t\tmaterialParams.opacity = 1.0;\n\n\t\t\tif ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\n\n\t\t\t\tvar array = metallicRoughness.baseColorFactor;\n\n\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t}\n\n\t\t\tif ( metallicRoughness.baseColorTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture.index ) );\n\n\t\t\t}\n\n\t\t\tmaterialParams.metalness = metallicRoughness.metallicFactor !== undefined ? metallicRoughness.metallicFactor : 1.0;\n\t\t\tmaterialParams.roughness = metallicRoughness.roughnessFactor !== undefined ? metallicRoughness.roughnessFactor : 1.0;\n\n\t\t\tif ( metallicRoughness.metallicRoughnessTexture !== undefined ) {\n\n\t\t\t\tvar textureIndex = metallicRoughness.metallicRoughnessTexture.index;\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'metalnessMap', textureIndex ) );\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'roughnessMap', textureIndex ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.doubleSided === true ) {\n\n\t\t\tmaterialParams.side = THREE.DoubleSide;\n\n\t\t}\n\n\t\tvar alphaMode = materialDef.alphaMode || ALPHA_MODES.OPAQUE;\n\n\t\tif ( alphaMode === ALPHA_MODES.BLEND ) {\n\n\t\t\tmaterialParams.transparent = true;\n\n\t\t} else {\n\n\t\t\tmaterialParams.transparent = false;\n\n\t\t\tif ( alphaMode === ALPHA_MODES.MASK ) {\n\n\t\t\t\tmaterialParams.alphaTest = materialDef.alphaCutoff !== undefined ? materialDef.alphaCutoff : 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.normalTexture !== undefined && materialType !== THREE.MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'normalMap', materialDef.normalTexture.index ) );\n\n\t\t\tmaterialParams.normalScale = new THREE.Vector2( 1, 1 );\n\n\t\t\tif ( materialDef.normalTexture.scale !== undefined ) {\n\n\t\t\t\tmaterialParams.normalScale.set( materialDef.normalTexture.scale, materialDef.normalTexture.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.occlusionTexture !== undefined && materialType !== THREE.MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'aoMap', materialDef.occlusionTexture.index ) );\n\n\t\t\tif ( materialDef.occlusionTexture.strength !== undefined ) {\n\n\t\t\t\tmaterialParams.aoMapIntensity = materialDef.occlusionTexture.strength;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.emissiveFactor !== undefined && materialType !== THREE.MeshBasicMaterial ) {\n\n\t\t\tmaterialParams.emissive = new THREE.Color().fromArray( materialDef.emissiveFactor );\n\n\t\t}\n\n\t\tif ( materialDef.emissiveTexture !== undefined && materialType !== THREE.MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'emissiveMap', materialDef.emissiveTexture.index ) );\n\n\t\t}\n\n\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\tvar material;\n\n\t\t\tif ( materialType === THREE.ShaderMaterial ) {\n\n\t\t\t\tmaterial = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].createMaterial( materialParams );\n\n\t\t\t} else {\n\n\t\t\t\tmaterial = new materialType( materialParams );\n\n\t\t\t}\n\n\t\t\tif ( materialDef.name !== undefined ) material.name = materialDef.name;\n\n\t\t\t// Normal map textures use OpenGL conventions:\n\t\t\t// https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#materialnormaltexture\n\t\t\tif ( material.normalScale ) {\n\n\t\t\t\tmaterial.normalScale.y = - material.normalScale.y;\n\n\t\t\t}\n\n\t\t\t// baseColorTexture, emissiveTexture, and specularGlossinessTexture use sRGB encoding.\n\t\t\tif ( material.map ) material.map.encoding = THREE.sRGBEncoding;\n\t\t\tif ( material.emissiveMap ) material.emissiveMap.encoding = THREE.sRGBEncoding;\n\t\t\tif ( material.specularMap ) material.specularMap.encoding = THREE.sRGBEncoding;\n\n\t\t\tassignExtrasToUserData( material, materialDef );\n\n\t\t\tif ( materialDef.extensions ) addUnknownExtensionsToUserData( extensions, material, materialDef );\n\n\t\t\treturn material;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * @param {THREE.BufferGeometry} geometry\n\t * @param {GLTF.Primitive} primitiveDef\n\t * @param {GLTFParser} parser\n\t * @return {Promise<THREE.BufferGeometry>}\n\t */\n\tfunction addPrimitiveAttributes( geometry, primitiveDef, parser ) {\n\n\t\tvar attributes = primitiveDef.attributes;\n\n\t\tvar pending = [];\n\n\t\tfunction assignAttributeAccessor( accessorIndex, attributeName ) {\n\n\t\t\treturn parser.getDependency( 'accessor', accessorIndex )\n\t\t\t\t.then( function ( accessor ) {\n\n\t\t\t\t\tgeometry.addAttribute( attributeName, accessor );\n\n\t\t\t\t} );\n\n\t\t}\n\n\t\tfor ( var gltfAttributeName in attributes ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ gltfAttributeName ];\n\n\t\t\tif ( ! threeAttributeName ) continue;\n\n\t\t\t// Skip attributes already provided by e.g. Draco extension.\n\t\t\tif ( threeAttributeName in geometry.attributes ) continue;\n\n\t\t\tpending.push( assignAttributeAccessor( attributes[ gltfAttributeName ], threeAttributeName ) );\n\n\t\t}\n\n\t\tif ( primitiveDef.indices !== undefined && ! geometry.index ) {\n\n\t\t\tvar accessor = parser.getDependency( 'accessor', primitiveDef.indices ).then( function ( accessor ) {\n\n\t\t\t\tgeometry.setIndex( accessor );\n\n\t\t\t} );\n\n\t\t\tpending.push( accessor );\n\n\t\t}\n\n\t\tassignExtrasToUserData( geometry, primitiveDef );\n\n\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\treturn primitiveDef.targets !== undefined\n\t\t\t\t? addMorphTargets( geometry, primitiveDef.targets, parser )\n\t\t\t\t: geometry;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#geometry\n\t *\n\t * Creates BufferGeometries from primitives.\n\t * If we can build a single BufferGeometry with .groups from multiple primitives, returns one BufferGeometry.\n\t * Otherwise, returns BufferGeometries without .groups as many as primitives.\n\t *\n\t * @param {Array<GLTF.Primitive>} primitives\n\t * @return {Promise<Array<THREE.BufferGeometry>>}\n\t */\n\tGLTFParser.prototype.loadGeometries = function ( primitives ) {\n\n\t\tvar parser = this;\n\t\tvar extensions = this.extensions;\n\t\tvar cache = this.primitiveCache;\n\n\t\tvar isMultiPass = isMultiPassGeometry( primitives );\n\t\tvar originalPrimitives;\n\n\t\tif ( isMultiPass ) {\n\n\t\t\toriginalPrimitives = primitives; // save original primitives and use later\n\n\t\t\t// We build a single BufferGeometry with .groups from multiple primitives\n\t\t\t// because all primitives share the same attributes/morph/mode and have indices.\n\n\t\t\tprimitives = [ primitives[ 0 ] ];\n\n\t\t\t// Sets .groups and combined indices to a geometry later in this method.\n\n\t\t}\n\n\t\tvar pending = [];\n\n\t\tfor ( var i = 0, il = primitives.length; i < il; i ++ ) {\n\n\t\t\tvar primitive = primitives[ i ];\n\n\t\t\t// See if we've already created this geometry\n\t\t\tvar cached = getCachedGeometry( cache, primitive );\n\n\t\t\tif ( cached ) {\n\n\t\t\t\t// Use the cached geometry if it exists\n\t\t\t\tpending.push( cached );\n\n\t\t\t} else {\n\n\t\t\t\tvar geometryPromise;\n\n\t\t\t\tif ( primitive.extensions && primitive.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ] ) {\n\n\t\t\t\t\t// Use DRACO geometry if available\n\t\t\t\t\tgeometryPromise = extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ]\n\t\t\t\t\t\t.decodePrimitive( primitive, parser )\n\t\t\t\t\t\t.then( function ( geometry ) {\n\n\t\t\t\t\t\t\treturn addPrimitiveAttributes( geometry, primitive, parser );\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Otherwise create a new geometry\n\t\t\t\t\tgeometryPromise = addPrimitiveAttributes( new THREE.BufferGeometry(), primitive, parser );\n\n\t\t\t\t}\n\n\t\t\t\t// Cache this geometry\n\t\t\t\tcache.push( { primitive: primitive, promise: geometryPromise } );\n\n\t\t\t\tpending.push( geometryPromise );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending ).then( function ( geometries ) {\n\n\t\t\tif ( isMultiPass ) {\n\n\t\t\t\tvar baseGeometry = geometries[ 0 ];\n\n\t\t\t\t// See if we've already created this combined geometry\n\t\t\t\tvar cache = parser.multiPassGeometryCache;\n\t\t\t\tvar cached = getCachedMultiPassGeometry( cache, baseGeometry, originalPrimitives );\n\n\t\t\t\tif ( cached !== null ) return [ cached.geometry ];\n\n\t\t\t\t// Cloning geometry because of index override.\n\t\t\t\t// Attributes can be reused so cloning by myself here.\n\t\t\t\tvar geometry = new THREE.BufferGeometry();\n\n\t\t\t\tgeometry.name = baseGeometry.name;\n\t\t\t\tgeometry.userData = baseGeometry.userData;\n\n\t\t\t\tfor ( var key in baseGeometry.attributes ) geometry.addAttribute( key, baseGeometry.attributes[ key ] );\n\t\t\t\tfor ( var key in baseGeometry.morphAttributes ) geometry.morphAttributes[ key ] = baseGeometry.morphAttributes[ key ];\n\n\t\t\t\tvar pendingIndices = [];\n\n\t\t\t\tfor ( var i = 0, il = originalPrimitives.length; i < il; i ++ ) {\n\n\t\t\t\t\tpendingIndices.push( parser.getDependency( 'accessor', originalPrimitives[ i ].indices ) );\n\n\t\t\t\t}\n\n\t\t\t\treturn Promise.all( pendingIndices ).then( function ( accessors ) {\n\n\t\t\t\t\tvar indices = [];\n\t\t\t\t\tvar offset = 0;\n\n\t\t\t\t\tfor ( var i = 0, il = originalPrimitives.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar accessor = accessors[ i ];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = accessor.count; j < jl; j ++ ) indices.push( accessor.array[ j ] );\n\n\t\t\t\t\t\tgeometry.addGroup( offset, accessor.count, i );\n\n\t\t\t\t\t\toffset += accessor.count;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.setIndex( indices );\n\n\t\t\t\t\tcache.push( { geometry: geometry, baseGeometry: baseGeometry, primitives: originalPrimitives } );\n\n\t\t\t\t\treturn [ geometry ];\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn geometries;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#meshes\n\t * @param {number} meshIndex\n\t * @return {Promise<THREE.Group|THREE.Mesh|THREE.SkinnedMesh>}\n\t */\n\tGLTFParser.prototype.loadMesh = function ( meshIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\n\t\tvar meshDef = json.meshes[ meshIndex ];\n\t\tvar primitives = meshDef.primitives;\n\n\t\tvar pending = [];\n\n\t\tfor ( var i = 0, il = primitives.length; i < il; i ++ ) {\n\n\t\t\tvar material = primitives[ i ].material === undefined\n\t\t\t\t? createDefaultMaterial()\n\t\t\t\t: this.getDependency( 'material', primitives[ i ].material );\n\n\t\t\tpending.push( material );\n\n\t\t}\n\n\t\treturn Promise.all( pending ).then( function ( originalMaterials ) {\n\n\t\t\treturn parser.loadGeometries( primitives ).then( function ( geometries ) {\n\n\t\t\t\tvar isMultiMaterial = geometries.length === 1 && geometries[ 0 ].groups.length > 0;\n\n\t\t\t\tvar meshes = [];\n\n\t\t\t\tfor ( var i = 0, il = geometries.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar geometry = geometries[ i ];\n\t\t\t\t\tvar primitive = primitives[ i ];\n\n\t\t\t\t\t// 1. create Mesh\n\n\t\t\t\t\tvar mesh;\n\n\t\t\t\t\tvar material = isMultiMaterial ? originalMaterials : originalMaterials[ i ];\n\n\t\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLES ||\n\t\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ||\n\t\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ||\n\t\t\t\t\t\tprimitive.mode === undefined ) {\n\n\t\t\t\t\t\t// .isSkinnedMesh isn't in glTF spec. See .markDefs()\n\t\t\t\t\t\tmesh = meshDef.isSkinnedMesh === true\n\t\t\t\t\t\t\t? new THREE.SkinnedMesh( geometry, material )\n\t\t\t\t\t\t\t: new THREE.Mesh( geometry, material );\n\n\t\t\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ) {\n\n\t\t\t\t\t\t\tmesh.drawMode = THREE.TriangleStripDrawMode;\n\n\t\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ) {\n\n\t\t\t\t\t\t\tmesh.drawMode = THREE.TriangleFanDrawMode;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINES ) {\n\n\t\t\t\t\t\tmesh = new THREE.LineSegments( geometry, material );\n\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINE_STRIP ) {\n\n\t\t\t\t\t\tmesh = new THREE.Line( geometry, material );\n\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINE_LOOP ) {\n\n\t\t\t\t\t\tmesh = new THREE.LineLoop( geometry, material );\n\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.POINTS ) {\n\n\t\t\t\t\t\tmesh = new THREE.Points( geometry, material );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Primitive mode unsupported: ' + primitive.mode );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( Object.keys( mesh.geometry.morphAttributes ).length > 0 ) {\n\n\t\t\t\t\t\tupdateMorphTargets( mesh, meshDef );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmesh.name = meshDef.name || ( 'mesh_' + meshIndex );\n\n\t\t\t\t\tif ( geometries.length > 1 ) mesh.name += '_' + i;\n\n\t\t\t\t\tassignExtrasToUserData( mesh, meshDef );\n\n\t\t\t\t\tmeshes.push( mesh );\n\n\t\t\t\t\t// 2. update Material depending on Mesh and BufferGeometry\n\n\t\t\t\t\tvar materials = isMultiMaterial ? mesh.material : [ mesh.material ];\n\n\t\t\t\t\tvar useVertexColors = geometry.attributes.color !== undefined;\n\t\t\t\t\tvar useFlatShading = geometry.attributes.normal === undefined;\n\t\t\t\t\tvar useSkinning = mesh.isSkinnedMesh === true;\n\t\t\t\t\tvar useMorphTargets = Object.keys( geometry.morphAttributes ).length > 0;\n\t\t\t\t\tvar useMorphNormals = useMorphTargets && geometry.morphAttributes.normal !== undefined;\n\n\t\t\t\t\tfor ( var j = 0, jl = materials.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar material = materials[ j ];\n\n\t\t\t\t\t\tif ( mesh.isPoints ) {\n\n\t\t\t\t\t\t\tvar cacheKey = 'PointsMaterial:' + material.uuid;\n\n\t\t\t\t\t\t\tvar pointsMaterial = parser.cache.get( cacheKey );\n\n\t\t\t\t\t\t\tif ( ! pointsMaterial ) {\n\n\t\t\t\t\t\t\t\tpointsMaterial = new THREE.PointsMaterial();\n\t\t\t\t\t\t\t\tTHREE.Material.prototype.copy.call( pointsMaterial, material );\n\t\t\t\t\t\t\t\tpointsMaterial.color.copy( material.color );\n\t\t\t\t\t\t\t\tpointsMaterial.map = material.map;\n\t\t\t\t\t\t\t\tpointsMaterial.lights = false; // PointsMaterial doesn't support lights yet\n\n\t\t\t\t\t\t\t\tparser.cache.add( cacheKey, pointsMaterial );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tmaterial = pointsMaterial;\n\n\t\t\t\t\t\t} else if ( mesh.isLine ) {\n\n\t\t\t\t\t\t\tvar cacheKey = 'LineBasicMaterial:' + material.uuid;\n\n\t\t\t\t\t\t\tvar lineMaterial = parser.cache.get( cacheKey );\n\n\t\t\t\t\t\t\tif ( ! lineMaterial ) {\n\n\t\t\t\t\t\t\t\tlineMaterial = new THREE.LineBasicMaterial();\n\t\t\t\t\t\t\t\tTHREE.Material.prototype.copy.call( lineMaterial, material );\n\t\t\t\t\t\t\t\tlineMaterial.color.copy( material.color );\n\t\t\t\t\t\t\t\tlineMaterial.lights = false; // LineBasicMaterial doesn't support lights yet\n\n\t\t\t\t\t\t\t\tparser.cache.add( cacheKey, lineMaterial );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tmaterial = lineMaterial;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Clone the material if it will be modified\n\t\t\t\t\t\tif ( useVertexColors || useFlatShading || useSkinning || useMorphTargets ) {\n\n\t\t\t\t\t\t\tvar cacheKey = 'ClonedMaterial:' + material.uuid + ':';\n\n\t\t\t\t\t\t\tif ( material.isGLTFSpecularGlossinessMaterial ) cacheKey += 'specular-glossiness:';\n\t\t\t\t\t\t\tif ( useSkinning ) cacheKey += 'skinning:';\n\t\t\t\t\t\t\tif ( useVertexColors ) cacheKey += 'vertex-colors:';\n\t\t\t\t\t\t\tif ( useFlatShading ) cacheKey += 'flat-shading:';\n\t\t\t\t\t\t\tif ( useMorphTargets ) cacheKey += 'morph-targets:';\n\t\t\t\t\t\t\tif ( useMorphNormals ) cacheKey += 'morph-normals:';\n\n\t\t\t\t\t\t\tvar cachedMaterial = parser.cache.get( cacheKey );\n\n\t\t\t\t\t\t\tif ( ! cachedMaterial ) {\n\n\t\t\t\t\t\t\t\tcachedMaterial = material.isGLTFSpecularGlossinessMaterial\n\t\t\t\t\t\t\t\t\t? extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].cloneMaterial( material )\n\t\t\t\t\t\t\t\t\t: material.clone();\n\n\t\t\t\t\t\t\t\tif ( useSkinning ) cachedMaterial.skinning = true;\n\t\t\t\t\t\t\t\tif ( useVertexColors ) cachedMaterial.vertexColors = THREE.VertexColors;\n\t\t\t\t\t\t\t\tif ( useFlatShading ) cachedMaterial.flatShading = true;\n\t\t\t\t\t\t\t\tif ( useMorphTargets ) cachedMaterial.morphTargets = true;\n\t\t\t\t\t\t\t\tif ( useMorphNormals ) cachedMaterial.morphNormals = true;\n\n\t\t\t\t\t\t\t\tparser.cache.add( cacheKey, cachedMaterial );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tmaterial = cachedMaterial;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaterials[ j ] = material;\n\n\t\t\t\t\t\t// workarounds for mesh and geometry\n\n\t\t\t\t\t\tif ( material.aoMap && geometry.attributes.uv2 === undefined && geometry.attributes.uv !== undefined ) {\n\n\t\t\t\t\t\t\tconsole.log( 'THREE.GLTFLoader: Duplicating UVs to support aoMap.' );\n\t\t\t\t\t\t\tgeometry.addAttribute( 'uv2', new THREE.BufferAttribute( geometry.attributes.uv.array, 2 ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( material.isGLTFSpecularGlossinessMaterial ) {\n\n\t\t\t\t\t\t\t// for GLTFSpecularGlossinessMaterial(ShaderMaterial) uniforms runtime update\n\t\t\t\t\t\t\tmesh.onBeforeRender = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].refreshUniforms;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmesh.material = isMultiMaterial ? materials : materials[ 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( meshes.length === 1 ) {\n\n\t\t\t\t\treturn meshes[ 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tvar group = new THREE.Group();\n\n\t\t\t\tfor ( var i = 0, il = meshes.length; i < il; i ++ ) {\n\n\t\t\t\t\tgroup.add( meshes[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn group;\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#cameras\n\t * @param {number} cameraIndex\n\t * @return {Promise<THREE.Camera>}\n\t */\n\tGLTFParser.prototype.loadCamera = function ( cameraIndex ) {\n\n\t\tvar camera;\n\t\tvar cameraDef = this.json.cameras[ cameraIndex ];\n\t\tvar params = cameraDef[ cameraDef.type ];\n\n\t\tif ( ! params ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing camera parameters.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( cameraDef.type === 'perspective' ) {\n\n\t\t\tcamera = new THREE.PerspectiveCamera( THREE.Math.radToDeg( params.yfov ), params.aspectRatio || 1, params.znear || 1, params.zfar || 2e6 );\n\n\t\t} else if ( cameraDef.type === 'orthographic' ) {\n\n\t\t\tcamera = new THREE.OrthographicCamera( params.xmag / - 2, params.xmag / 2, params.ymag / 2, params.ymag / - 2, params.znear, params.zfar );\n\n\t\t}\n\n\t\tif ( cameraDef.name !== undefined ) camera.name = cameraDef.name;\n\n\t\tassignExtrasToUserData( camera, cameraDef );\n\n\t\treturn Promise.resolve( camera );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#skins\n\t * @param {number} skinIndex\n\t * @return {Promise<Object>}\n\t */\n\tGLTFParser.prototype.loadSkin = function ( skinIndex ) {\n\n\t\tvar skinDef = this.json.skins[ skinIndex ];\n\n\t\tvar skinEntry = { joints: skinDef.joints };\n\n\t\tif ( skinDef.inverseBindMatrices === undefined ) {\n\n\t\t\treturn Promise.resolve( skinEntry );\n\n\t\t}\n\n\t\treturn this.getDependency( 'accessor', skinDef.inverseBindMatrices ).then( function ( accessor ) {\n\n\t\t\tskinEntry.inverseBindMatrices = accessor;\n\n\t\t\treturn skinEntry;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#animations\n\t * @param {number} animationIndex\n\t * @return {Promise<THREE.AnimationClip>}\n\t */\n\tGLTFParser.prototype.loadAnimation = function ( animationIndex ) {\n\n\t\tvar json = this.json;\n\n\t\tvar animationDef = json.animations[ animationIndex ];\n\n\t\tvar pendingNodes = [];\n\t\tvar pendingInputAccessors = [];\n\t\tvar pendingOutputAccessors = [];\n\t\tvar pendingSamplers = [];\n\t\tvar pendingTargets = [];\n\n\t\tfor ( var i = 0, il = animationDef.channels.length; i < il; i ++ ) {\n\n\t\t\tvar channel = animationDef.channels[ i ];\n\t\t\tvar sampler = animationDef.samplers[ channel.sampler ];\n\t\t\tvar target = channel.target;\n\t\t\tvar name = target.node !== undefined ? target.node : target.id; // NOTE: target.id is deprecated.\n\t\t\tvar input = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.input ] : sampler.input;\n\t\t\tvar output = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.output ] : sampler.output;\n\n\t\t\tpendingNodes.push( this.getDependency( 'node', name ) );\n\t\t\tpendingInputAccessors.push( this.getDependency( 'accessor', input ) );\n\t\t\tpendingOutputAccessors.push( this.getDependency( 'accessor', output ) );\n\t\t\tpendingSamplers.push( sampler );\n\t\t\tpendingTargets.push( target );\n\n\t\t}\n\n\t\treturn Promise.all( [\n\n\t\t\tPromise.all( pendingNodes ),\n\t\t\tPromise.all( pendingInputAccessors ),\n\t\t\tPromise.all( pendingOutputAccessors ),\n\t\t\tPromise.all( pendingSamplers ),\n\t\t\tPromise.all( pendingTargets )\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\tvar nodes = dependencies[ 0 ];\n\t\t\tvar inputAccessors = dependencies[ 1 ];\n\t\t\tvar outputAccessors = dependencies[ 2 ];\n\t\t\tvar samplers = dependencies[ 3 ];\n\t\t\tvar targets = dependencies[ 4 ];\n\n\t\t\tvar tracks = [];\n\n\t\t\tfor ( var i = 0, il = nodes.length; i < il; i ++ ) {\n\n\t\t\t\tvar node = nodes[ i ];\n\t\t\t\tvar inputAccessor = inputAccessors[ i ];\n\t\t\t\tvar outputAccessor = outputAccessors[ i ];\n\t\t\t\tvar sampler = samplers[ i ];\n\t\t\t\tvar target = targets[ i ];\n\n\t\t\t\tif ( node === undefined ) continue;\n\n\t\t\t\tnode.updateMatrix();\n\t\t\t\tnode.matrixAutoUpdate = true;\n\n\t\t\t\tvar TypedKeyframeTrack;\n\n\t\t\t\tswitch ( PATH_PROPERTIES[ target.path ] ) {\n\n\t\t\t\t\tcase PATH_PROPERTIES.weights:\n\n\t\t\t\t\t\tTypedKeyframeTrack = THREE.NumberKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PATH_PROPERTIES.rotation:\n\n\t\t\t\t\t\tTypedKeyframeTrack = THREE.QuaternionKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PATH_PROPERTIES.position:\n\t\t\t\t\tcase PATH_PROPERTIES.scale:\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tTypedKeyframeTrack = THREE.VectorKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tvar targetName = node.name ? node.name : node.uuid;\n\n\t\t\t\tvar interpolation = sampler.interpolation !== undefined ? INTERPOLATION[ sampler.interpolation ] : THREE.InterpolateLinear;\n\n\t\t\t\tvar targetNames = [];\n\n\t\t\t\tif ( PATH_PROPERTIES[ target.path ] === PATH_PROPERTIES.weights ) {\n\n\t\t\t\t\t// node can be THREE.Group here but\n\t\t\t\t\t// PATH_PROPERTIES.weights(morphTargetInfluences) should be\n\t\t\t\t\t// the property of a mesh object under group.\n\n\t\t\t\t\tnode.traverse( function ( object ) {\n\n\t\t\t\t\t\tif ( object.isMesh === true && object.morphTargetInfluences ) {\n\n\t\t\t\t\t\t\ttargetNames.push( object.name ? object.name : object.uuid );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttargetNames.push( targetName );\n\n\t\t\t\t}\n\n\t\t\t\t// KeyframeTrack.optimize() will modify given 'times' and 'values'\n\t\t\t\t// buffers before creating a truncated copy to keep. Because buffers may\n\t\t\t\t// be reused by other tracks, make copies here.\n\t\t\t\tfor ( var j = 0, jl = targetNames.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar track = new TypedKeyframeTrack(\n\t\t\t\t\t\ttargetNames[ j ] + '.' + PATH_PROPERTIES[ target.path ],\n\t\t\t\t\t\tTHREE.AnimationUtils.arraySlice( inputAccessor.array, 0 ),\n\t\t\t\t\t\tTHREE.AnimationUtils.arraySlice( outputAccessor.array, 0 ),\n\t\t\t\t\t\tinterpolation\n\t\t\t\t\t);\n\n\t\t\t\t\t// Here is the trick to enable custom interpolation.\n\t\t\t\t\t// Overrides .createInterpolant in a factory method which creates custom interpolation.\n\t\t\t\t\tif ( sampler.interpolation === 'CUBICSPLINE' ) {\n\n\t\t\t\t\t\ttrack.createInterpolant = function InterpolantFactoryMethodGLTFCubicSpline( result ) {\n\n\t\t\t\t\t\t\t// A CUBICSPLINE keyframe in glTF has three output values for each input value,\n\t\t\t\t\t\t\t// representing inTangent, splineVertex, and outTangent. As a result, track.getValueSize()\n\t\t\t\t\t\t\t// must be divided by three to get the interpolant's sampleSize argument.\n\n\t\t\t\t\t\t\treturn new GLTFCubicSplineInterpolant( this.times, this.values, this.getValueSize() / 3, result );\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// Workaround, provide an alternate way to know if the interpolant type is cubis spline to track.\n\t\t\t\t\t\t// track.getInterpolation() doesn't return valid value for custom interpolant.\n\t\t\t\t\t\ttrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( track );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar name = animationDef.name !== undefined ? animationDef.name : 'animation_' + animationIndex;\n\n\t\t\treturn new THREE.AnimationClip( name, undefined, tracks );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#nodes-and-hierarchy\n\t * @param {number} nodeIndex\n\t * @return {Promise<THREE.Object3D>}\n\t */\n\tGLTFParser.prototype.loadNode = function ( nodeIndex ) {\n\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\t\tvar parser = this;\n\n\t\tvar meshReferences = json.meshReferences;\n\t\tvar meshUses = json.meshUses;\n\n\t\tvar nodeDef = json.nodes[ nodeIndex ];\n\n\t\treturn new Promise( function ( resolve ) {\n\n\t\t\t// .isBone isn't in glTF spec. See .markDefs\n\t\t\tif ( nodeDef.isBone === true ) {\n\n\t\t\t\tresolve( new THREE.Bone() );\n\n\t\t\t} else if ( nodeDef.mesh !== undefined ) {\n\n\t\t\t\tparser.getDependency( 'mesh', nodeDef.mesh ).then( function ( mesh ) {\n\n\t\t\t\t\tvar node;\n\n\t\t\t\t\tif ( meshReferences[ nodeDef.mesh ] > 1 ) {\n\n\t\t\t\t\t\tvar instanceNum = meshUses[ nodeDef.mesh ] ++;\n\n\t\t\t\t\t\tnode = mesh.clone();\n\t\t\t\t\t\tnode.name += '_instance_' + instanceNum;\n\n\t\t\t\t\t\t// onBeforeRender copy for Specular-Glossiness\n\t\t\t\t\t\tnode.onBeforeRender = mesh.onBeforeRender;\n\n\t\t\t\t\t\tfor ( var i = 0, il = node.children.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tnode.children[ i ].name += '_instance_' + instanceNum;\n\t\t\t\t\t\t\tnode.children[ i ].onBeforeRender = mesh.children[ i ].onBeforeRender;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tnode = mesh;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve( node );\n\n\t\t\t\t} );\n\n\t\t\t} else if ( nodeDef.camera !== undefined ) {\n\n\t\t\t\tparser.getDependency( 'camera', nodeDef.camera ).then( resolve );\n\n\t\t\t} else if ( nodeDef.extensions\n\t\t\t\t&& nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ]\n\t\t\t\t&& nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].light !== undefined ) {\n\n\t\t\t\tparser.getDependency( 'light', nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].light ).then( resolve );\n\n\t\t\t} else {\n\n\t\t\t\tresolve( new THREE.Object3D() );\n\n\t\t\t}\n\n\t\t} ).then( function ( node ) {\n\n\t\t\tif ( nodeDef.name !== undefined ) {\n\n\t\t\t\tnode.name = THREE.PropertyBinding.sanitizeNodeName( nodeDef.name );\n\n\t\t\t}\n\n\t\t\tassignExtrasToUserData( node, nodeDef );\n\n\t\t\tif ( nodeDef.extensions ) addUnknownExtensionsToUserData( extensions, node, nodeDef );\n\n\t\t\tif ( nodeDef.matrix !== undefined ) {\n\n\t\t\t\tvar matrix = new THREE.Matrix4();\n\t\t\t\tmatrix.fromArray( nodeDef.matrix );\n\t\t\t\tnode.applyMatrix( matrix );\n\n\t\t\t} else {\n\n\t\t\t\tif ( nodeDef.translation !== undefined ) {\n\n\t\t\t\t\tnode.position.fromArray( nodeDef.translation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( nodeDef.rotation !== undefined ) {\n\n\t\t\t\t\tnode.quaternion.fromArray( nodeDef.rotation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( nodeDef.scale !== undefined ) {\n\n\t\t\t\t\tnode.scale.fromArray( nodeDef.scale );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn node;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#scenes\n\t * @param {number} sceneIndex\n\t * @return {Promise<THREE.Scene>}\n\t */\n\tGLTFParser.prototype.loadScene = function () {\n\n\t\t// scene node hierachy builder\n\n\t\tfunction buildNodeHierachy( nodeId, parentObject, json, parser ) {\n\n\t\t\tvar nodeDef = json.nodes[ nodeId ];\n\n\t\t\treturn parser.getDependency( 'node', nodeId ).then( function ( node ) {\n\n\t\t\t\tif ( nodeDef.skin === undefined ) return node;\n\n\t\t\t\t// build skeleton here as well\n\n\t\t\t\tvar skinEntry;\n\n\t\t\t\treturn parser.getDependency( 'skin', nodeDef.skin ).then( function ( skin ) {\n\n\t\t\t\t\tskinEntry = skin;\n\n\t\t\t\t\tvar pendingJoints = [];\n\n\t\t\t\t\tfor ( var i = 0, il = skinEntry.joints.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tpendingJoints.push( parser.getDependency( 'node', skinEntry.joints[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Promise.all( pendingJoints );\n\n\t\t\t\t} ).then( function ( jointNodes ) {\n\n\t\t\t\t\tvar meshes = node.isGroup === true ? node.children : [ node ];\n\n\t\t\t\t\tfor ( var i = 0, il = meshes.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar mesh = meshes[ i ];\n\n\t\t\t\t\t\tvar bones = [];\n\t\t\t\t\t\tvar boneInverses = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = jointNodes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar jointNode = jointNodes[ j ];\n\n\t\t\t\t\t\t\tif ( jointNode ) {\n\n\t\t\t\t\t\t\t\tbones.push( jointNode );\n\n\t\t\t\t\t\t\t\tvar mat = new THREE.Matrix4();\n\n\t\t\t\t\t\t\t\tif ( skinEntry.inverseBindMatrices !== undefined ) {\n\n\t\t\t\t\t\t\t\t\tmat.fromArray( skinEntry.inverseBindMatrices.array, j * 16 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tboneInverses.push( mat );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Joint \"%s\" could not be found.', skinEntry.joints[ j ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmesh.bind( new THREE.Skeleton( bones, boneInverses ), mesh.matrixWorld );\n\n\t\t\t\t\t};\n\n\t\t\t\t\treturn node;\n\n\t\t\t\t} );\n\n\t\t\t} ).then( function ( node ) {\n\n\t\t\t\t// build node hierachy\n\n\t\t\t\tparentObject.add( node );\n\n\t\t\t\tvar pending = [];\n\n\t\t\t\tif ( nodeDef.children ) {\n\n\t\t\t\t\tvar children = nodeDef.children;\n\n\t\t\t\t\tfor ( var i = 0, il = children.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar child = children[ i ];\n\t\t\t\t\t\tpending.push( buildNodeHierachy( child, node, json, parser ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn Promise.all( pending );\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn function loadScene( sceneIndex ) {\n\n\t\t\tvar json = this.json;\n\t\t\tvar extensions = this.extensions;\n\t\t\tvar sceneDef = this.json.scenes[ sceneIndex ];\n\t\t\tvar parser = this;\n\n\t\t\tvar scene = new THREE.Scene();\n\t\t\tif ( sceneDef.name !== undefined ) scene.name = sceneDef.name;\n\n\t\t\tassignExtrasToUserData( scene, sceneDef );\n\n\t\t\tif ( sceneDef.extensions ) addUnknownExtensionsToUserData( extensions, scene, sceneDef );\n\n\t\t\tvar nodeIds = sceneDef.nodes || [];\n\n\t\t\tvar pending = [];\n\n\t\t\tfor ( var i = 0, il = nodeIds.length; i < il; i ++ ) {\n\n\t\t\t\tpending.push( buildNodeHierachy( nodeIds[ i ], scene, json, parser ) );\n\n\t\t\t}\n\n\t\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\t\treturn scene;\n\n\t\t\t} );\n\n\t\t};\n\n\t}();\n\n\treturn GLTFLoader;\n\n} )();\n","// This file is copy pasted from THREE\n/* CUSTOM ITOWNS */\n/* Add the extention _BATCHID */\n/* eslint-disable */\nimport * as THREE from 'three';\n/* END CUSTOM ITOWNS */\n/**\n * @author Rich Tibbett / https://github.com/richtr\n * @author mrdoob / http://mrdoob.com/\n * @author Tony Parisi / http://www.tonyparisi.com/\n * @author Takahiro / https://github.com/takahirox\n */\n\nexport default ( function () {\n\n\tfunction LegacyGLTFLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n\t}\n\n\tLegacyGLTFLoader.prototype = {\n\n\t\tconstructor: LegacyGLTFLoader,\n\n\t\tcrossOrigin: 'Anonymous',\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar path = this.path && ( typeof this.path === \"string\" ) ? this.path : THREE.LoaderUtils.extractUrlBase( url );\n\n\t\t\tvar loader = new THREE.FileLoader( scope.manager );\n\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\t\tloader.load( url, function ( data ) {\n\n\t\t\t\tscope.parse( data, onLoad, path );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tsetCrossOrigin: function ( value ) {\n\n\t\t\tthis.crossOrigin = value;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\n\t\t},\n\n\t\tparse: function ( data, callback, path ) {\n\n\t\t\tvar content;\n\t\t\tvar extensions = {};\n\n\t\t\tvar magic = THREE.LoaderUtils.decodeText( new Uint8Array( data, 0, 4 ) );\n\n\t\t\tif ( magic === BINARY_EXTENSION_HEADER_DEFAULTS.magic ) {\n\n\t\t\t\textensions[ EXTENSIONS.KHR_BINARY_GLTF ] = new GLTFBinaryExtension( data );\n\t\t\t\tcontent = extensions[ EXTENSIONS.KHR_BINARY_GLTF ].content;\n\n\t\t\t} else {\n\n\t\t\t\tcontent = THREE.LoaderUtils.decodeText( new Uint8Array( data ) );\n\n\t\t\t}\n\n\t\t\tvar json = JSON.parse( content );\n\n\t\t\tif ( json.extensionsUsed && json.extensionsUsed.indexOf( EXTENSIONS.KHR_MATERIALS_COMMON ) >= 0 ) {\n\n\t\t\t\textensions[ EXTENSIONS.KHR_MATERIALS_COMMON ] = new GLTFMaterialsCommonExtension( json );\n\n\t\t\t}\n\n\t\t\tconsole.time( 'LegacyGLTFLoader' );\n\n\t\t\tvar parser = new GLTFParser( json, extensions, {\n\n\t\t\t\tpath: path || this.path,\n\t\t\t\tcrossOrigin: this.crossOrigin\n\n\t\t\t} );\n\n\t\t\tparser.parse( function ( scene, scenes, cameras, animations ) {\n\n\t\t\t\tconsole.timeEnd( 'LegacyGLTFLoader' );\n\n\t\t\t\tvar glTF = {\n\t\t\t\t\t\"scene\": scene,\n\t\t\t\t\t\"scenes\": scenes,\n\t\t\t\t\t\"cameras\": cameras,\n\t\t\t\t\t\"animations\": animations\n\t\t\t\t};\n\n\t\t\t\tcallback( glTF );\n\n\t\t\t} );\n\n\t\t}\n\n\t};\n\n\t/* GLTFREGISTRY */\n\n\tfunction GLTFRegistry() {\n\n\t\tvar objects = {};\n\n\t\treturn\t{\n\n\t\t\tget: function ( key ) {\n\n\t\t\t\treturn objects[ key ];\n\n\t\t\t},\n\n\t\t\tadd: function ( key, object ) {\n\n\t\t\t\tobjects[ key ] = object;\n\n\t\t\t},\n\n\t\t\tremove: function ( key ) {\n\n\t\t\t\tdelete objects[ key ];\n\n\t\t\t},\n\n\t\t\tremoveAll: function () {\n\n\t\t\t\tobjects = {};\n\n\t\t\t},\n\n\t\t\tupdate: function ( scene, camera ) {\n\n\t\t\t\tfor ( var name in objects ) {\n\n\t\t\t\t\tvar object = objects[ name ];\n\n\t\t\t\t\tif ( object.update ) {\n\n\t\t\t\t\t\tobject.update( scene, camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/* GLTFSHADERS */\n\n\tLegacyGLTFLoader.Shaders = {\n\n\t\tupdate: function () {\n\n\t\t\tconsole.warn( 'THREE.LegacyGLTFLoader.Shaders has been deprecated, and now updates automatically.' );\n\n\t\t}\n\n\t};\n\n\t/* GLTFSHADER */\n\n\tfunction GLTFShader( targetNode, allNodes ) {\n\n\t\tvar boundUniforms = {};\n\n\t\t// bind each uniform to its source node\n\n\t\tvar uniforms = targetNode.material.uniforms;\n\n\t\tfor ( var uniformId in uniforms ) {\n\n\t\t\tvar uniform = uniforms[ uniformId ];\n\n\t\t\tif ( uniform.semantic ) {\n\n\t\t\t\tvar sourceNodeRef = uniform.node;\n\n\t\t\t\tvar sourceNode = targetNode;\n\n\t\t\t\tif ( sourceNodeRef ) {\n\n\t\t\t\t\tsourceNode = allNodes[ sourceNodeRef ];\n\n\t\t\t\t}\n\n\t\t\t\tboundUniforms[ uniformId ] = {\n\t\t\t\t\tsemantic: uniform.semantic,\n\t\t\t\t\tsourceNode: sourceNode,\n\t\t\t\t\ttargetNode: targetNode,\n\t\t\t\t\tuniform: uniform\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.boundUniforms = boundUniforms;\n\t\tthis._m4 = new THREE.Matrix4();\n\n\t}\n\n\t// Update - update all the uniform values\n\tGLTFShader.prototype.update = function ( scene, camera ) {\n\n\t\tvar boundUniforms = this.boundUniforms;\n\n\t\tfor ( var name in boundUniforms ) {\n\n\t\t\tvar boundUniform = boundUniforms[ name ];\n\n\t\t\tswitch ( boundUniform.semantic ) {\n\n\t\t\t\tcase \"MODELVIEW\":\n\n\t\t\t\t\tvar m4 = boundUniform.uniform.value;\n\t\t\t\t\tm4.multiplyMatrices( camera.matrixWorldInverse, boundUniform.sourceNode.matrixWorld );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"MODELVIEWINVERSETRANSPOSE\":\n\n\t\t\t\t\tvar m3 = boundUniform.uniform.value;\n\t\t\t\t\tthis._m4.multiplyMatrices( camera.matrixWorldInverse, boundUniform.sourceNode.matrixWorld );\n\t\t\t\t\tm3.getNormalMatrix( this._m4 );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"PROJECTION\":\n\n\t\t\t\t\tvar m4 = boundUniform.uniform.value;\n\t\t\t\t\tm4.copy( camera.projectionMatrix );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"JOINTMATRIX\":\n\n\t\t\t\t\tvar m4v = boundUniform.uniform.value;\n\n\t\t\t\t\tfor ( var mi = 0; mi < m4v.length; mi ++ ) {\n\n\t\t\t\t\t\t// So it goes like this:\n\t\t\t\t\t\t// SkinnedMesh world matrix is already baked into MODELVIEW;\n\t\t\t\t\t\t// transform joints to local space,\n\t\t\t\t\t\t// then transform using joint's inverse\n\t\t\t\t\t\tm4v[ mi ]\n\t\t\t\t\t\t\t.getInverse( boundUniform.sourceNode.matrixWorld )\n\t\t\t\t\t\t\t.multiply( boundUniform.targetNode.skeleton.bones[ mi ].matrixWorld )\n\t\t\t\t\t\t\t.multiply( boundUniform.targetNode.skeleton.boneInverses[ mi ] )\n\t\t\t\t\t\t\t.multiply( boundUniform.targetNode.bindMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault :\n\n\t\t\t\t\tconsole.warn( \"Unhandled shader semantic: \" + boundUniform.semantic );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\n\t/* ANIMATION */\n\n\tLegacyGLTFLoader.Animations = {\n\n\t\tupdate: function () {\n\n\t\t\tconsole.warn( 'THREE.LegacyGLTFLoader.Animation has been deprecated. Use THREE.AnimationMixer instead.' );\n\n\t\t}\n\n\t};\n\n\t/*********************************/\n\t/********** EXTENSIONS ***********/\n\t/*********************************/\n\n\tvar EXTENSIONS = {\n\t\tKHR_BINARY_GLTF: 'KHR_binary_glTF',\n\t\tKHR_MATERIALS_COMMON: 'KHR_materials_common'\n\t};\n\n\t/* MATERIALS COMMON EXTENSION */\n\n\tfunction GLTFMaterialsCommonExtension( json ) {\n\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_COMMON;\n\n\t\tthis.lights = {};\n\n\t\tvar extension = ( json.extensions && json.extensions[ EXTENSIONS.KHR_MATERIALS_COMMON ] ) || {};\n\t\tvar lights = extension.lights || {};\n\n\t\tfor ( var lightId in lights ) {\n\n\t\t\tvar light = lights[ lightId ];\n\t\t\tvar lightNode;\n\n\t\t\tvar lightParams = light[ light.type ];\n\t\t\tvar color = new THREE.Color().fromArray( lightParams.color );\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase \"directional\":\n\t\t\t\t\tlightNode = new THREE.DirectionalLight( color );\n\t\t\t\t\tlightNode.position.set( 0, 0, 1 );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"point\":\n\t\t\t\t\tlightNode = new THREE.PointLight( color );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"spot\":\n\t\t\t\t\tlightNode = new THREE.SpotLight( color );\n\t\t\t\t\tlightNode.position.set( 0, 0, 1 );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"ambient\":\n\t\t\t\t\tlightNode = new THREE.AmbientLight( color );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( lightNode ) {\n\n\t\t\t\tthis.lights[ lightId ] = lightNode;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/* BINARY EXTENSION */\n\n\tvar BINARY_EXTENSION_BUFFER_NAME = 'binary_glTF';\n\n\tvar BINARY_EXTENSION_HEADER_DEFAULTS = { magic: 'glTF', version: 1, contentFormat: 0 };\n\n\tvar BINARY_EXTENSION_HEADER_LENGTH = 20;\n\n\tfunction GLTFBinaryExtension( data ) {\n\n\t\tthis.name = EXTENSIONS.KHR_BINARY_GLTF;\n\n\t\tvar headerView = new DataView( data, 0, BINARY_EXTENSION_HEADER_LENGTH );\n\n\t\tvar header = {\n\t\t\tmagic: THREE.LoaderUtils.decodeText( new Uint8Array( data.slice( 0, 4 ) ) ),\n\t\t\tversion: headerView.getUint32( 4, true ),\n\t\t\tlength: headerView.getUint32( 8, true ),\n\t\t\tcontentLength: headerView.getUint32( 12, true ),\n\t\t\tcontentFormat: headerView.getUint32( 16, true )\n\t\t};\n\n\t\tfor ( var key in BINARY_EXTENSION_HEADER_DEFAULTS ) {\n\n\t\t\tvar value = BINARY_EXTENSION_HEADER_DEFAULTS[ key ];\n\n\t\t\tif ( header[ key ] !== value ) {\n\n\t\t\t\tthrow new Error( 'Unsupported glTF-Binary header: Expected \"%s\" to be \"%s\".', key, value );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar contentArray = new Uint8Array( data, BINARY_EXTENSION_HEADER_LENGTH, header.contentLength );\n\n\t\tthis.header = header;\n\t\tthis.content = THREE.LoaderUtils.decodeText( contentArray );\n\t\tthis.body = data.slice( BINARY_EXTENSION_HEADER_LENGTH + header.contentLength, header.length );\n\n\t}\n\n\tGLTFBinaryExtension.prototype.loadShader = function ( shader, bufferViews ) {\n\n\t\tvar bufferView = bufferViews[ shader.extensions[ EXTENSIONS.KHR_BINARY_GLTF ].bufferView ];\n\t\tvar array = new Uint8Array( bufferView );\n\n\t\treturn THREE.LoaderUtils.decodeText( array );\n\n\t};\n\n\tGLTFBinaryExtension.prototype.loadTextureSourceUri = function ( source, bufferViews ) {\n\n\t\tvar metadata = source.extensions[ EXTENSIONS.KHR_BINARY_GLTF ];\n\t\tvar bufferView = bufferViews[ metadata.bufferView ];\n\t\tvar stringData = THREE.LoaderUtils.decodeText( new Uint8Array( bufferView ) );\n\n\t\treturn 'data:' + metadata.mimeType + ';base64,' + btoa( stringData );\n\n\t};\n\n\t/*********************************/\n\t/********** INTERNALS ************/\n\t/*********************************/\n\n\t/* CONSTANTS */\n\n\tvar WEBGL_CONSTANTS = {\n\t\tFLOAT: 5126,\n\t\t//FLOAT_MAT2: 35674,\n\t\tFLOAT_MAT3: 35675,\n\t\tFLOAT_MAT4: 35676,\n\t\tFLOAT_VEC2: 35664,\n\t\tFLOAT_VEC3: 35665,\n\t\tFLOAT_VEC4: 35666,\n\t\tLINEAR: 9729,\n\t\tREPEAT: 10497,\n\t\tSAMPLER_2D: 35678,\n\t\tTRIANGLES: 4,\n\t\tLINES: 1,\n\t\tUNSIGNED_BYTE: 5121,\n\t\tUNSIGNED_SHORT: 5123,\n\n\t\tVERTEX_SHADER: 35633,\n\t\tFRAGMENT_SHADER: 35632\n\t};\n\n\tvar WEBGL_TYPE = {\n\t\t5126: Number,\n\t\t//35674: THREE.Matrix2,\n\t\t35675: THREE.Matrix3,\n\t\t35676: THREE.Matrix4,\n\t\t35664: THREE.Vector2,\n\t\t35665: THREE.Vector3,\n\t\t35666: THREE.Vector4,\n\t\t35678: THREE.Texture\n\t};\n\n\tvar WEBGL_COMPONENT_TYPES = {\n\t\t5120: Int8Array,\n\t\t5121: Uint8Array,\n\t\t5122: Int16Array,\n\t\t5123: Uint16Array,\n\t\t5125: Uint32Array,\n\t\t5126: Float32Array\n\t};\n\n\tvar WEBGL_FILTERS = {\n\t\t9728: THREE.NearestFilter,\n\t\t9729: THREE.LinearFilter,\n\t\t9984: THREE.NearestMipMapNearestFilter,\n\t\t9985: THREE.LinearMipMapNearestFilter,\n\t\t9986: THREE.NearestMipMapLinearFilter,\n\t\t9987: THREE.LinearMipMapLinearFilter\n\t};\n\n\tvar WEBGL_WRAPPINGS = {\n\t\t33071: THREE.ClampToEdgeWrapping,\n\t\t33648: THREE.MirroredRepeatWrapping,\n\t\t10497: THREE.RepeatWrapping\n\t};\n\n\tvar WEBGL_TEXTURE_FORMATS = {\n\t\t6406: THREE.AlphaFormat,\n\t\t6407: THREE.RGBFormat,\n\t\t6408: THREE.RGBAFormat,\n\t\t6409: THREE.LuminanceFormat,\n\t\t6410: THREE.LuminanceAlphaFormat\n\t};\n\n\tvar WEBGL_TEXTURE_DATATYPES = {\n\t\t5121: THREE.UnsignedByteType,\n\t\t32819: THREE.UnsignedShort4444Type,\n\t\t32820: THREE.UnsignedShort5551Type,\n\t\t33635: THREE.UnsignedShort565Type\n\t};\n\n\tvar WEBGL_SIDES = {\n\t\t1028: THREE.BackSide,  // Culling front\n\t\t1029: THREE.FrontSide  // Culling back\n\t\t//1032: THREE.NoSide   // Culling front and back, what to do?\n\t};\n\n\tvar WEBGL_DEPTH_FUNCS = {\n\t\t512: THREE.NeverDepth,\n\t\t513: THREE.LessDepth,\n\t\t514: THREE.EqualDepth,\n\t\t515: THREE.LessEqualDepth,\n\t\t516: THREE.GreaterEqualDepth,\n\t\t517: THREE.NotEqualDepth,\n\t\t518: THREE.GreaterEqualDepth,\n\t\t519: THREE.AlwaysDepth\n\t};\n\n\tvar WEBGL_BLEND_EQUATIONS = {\n\t\t32774: THREE.AddEquation,\n\t\t32778: THREE.SubtractEquation,\n\t\t32779: THREE.ReverseSubtractEquation\n\t};\n\n\tvar WEBGL_BLEND_FUNCS = {\n\t\t0: THREE.ZeroFactor,\n\t\t1: THREE.OneFactor,\n\t\t768: THREE.SrcColorFactor,\n\t\t769: THREE.OneMinusSrcColorFactor,\n\t\t770: THREE.SrcAlphaFactor,\n\t\t771: THREE.OneMinusSrcAlphaFactor,\n\t\t772: THREE.DstAlphaFactor,\n\t\t773: THREE.OneMinusDstAlphaFactor,\n\t\t774: THREE.DstColorFactor,\n\t\t775: THREE.OneMinusDstColorFactor,\n\t\t776: THREE.SrcAlphaSaturateFactor\n\t\t// The followings are not supported by Three.js yet\n\t\t//32769: CONSTANT_COLOR,\n\t\t//32770: ONE_MINUS_CONSTANT_COLOR,\n\t\t//32771: CONSTANT_ALPHA,\n\t\t//32772: ONE_MINUS_CONSTANT_COLOR\n\t};\n\n\tvar WEBGL_TYPE_SIZES = {\n\t\t'SCALAR': 1,\n\t\t'VEC2': 2,\n\t\t'VEC3': 3,\n\t\t'VEC4': 4,\n\t\t'MAT2': 4,\n\t\t'MAT3': 9,\n\t\t'MAT4': 16\n\t};\n\n\tvar PATH_PROPERTIES = {\n\t\tscale: 'scale',\n\t\ttranslation: 'position',\n\t\trotation: 'quaternion'\n\t};\n\n\tvar INTERPOLATION = {\n\t\tLINEAR: THREE.InterpolateLinear,\n\t\tSTEP: THREE.InterpolateDiscrete\n\t};\n\n\tvar STATES_ENABLES = {\n\t\t2884: 'CULL_FACE',\n\t\t2929: 'DEPTH_TEST',\n\t\t3042: 'BLEND',\n\t\t3089: 'SCISSOR_TEST',\n\t\t32823: 'POLYGON_OFFSET_FILL',\n\t\t32926: 'SAMPLE_ALPHA_TO_COVERAGE'\n\t};\n\n\t/* UTILITY FUNCTIONS */\n\n\tfunction _each( object, callback, thisObj ) {\n\n\t\tif ( !object ) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tvar results;\n\t\tvar fns = [];\n\n\t\tif ( Object.prototype.toString.call( object ) === '[object Array]' ) {\n\n\t\t\tresults = [];\n\n\t\t\tvar length = object.length;\n\n\t\t\tfor ( var idx = 0; idx < length; idx ++ ) {\n\n\t\t\t\tvar value = callback.call( thisObj || this, object[ idx ], idx );\n\n\t\t\t\tif ( value ) {\n\n\t\t\t\t\tfns.push( value );\n\n\t\t\t\t\tif ( value instanceof Promise ) {\n\n\t\t\t\t\t\tvalue.then( function( key, value ) {\n\n\t\t\t\t\t\t\tresults[ key ] = value;\n\n\t\t\t\t\t\t}.bind( this, idx ));\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tresults[ idx ] = value;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tresults = {};\n\n\t\t\tfor ( var key in object ) {\n\n\t\t\t\tif ( object.hasOwnProperty( key ) ) {\n\n\t\t\t\t\tvar value = callback.call( thisObj || this, object[ key ], key );\n\n\t\t\t\t\tif ( value ) {\n\n\t\t\t\t\t\tfns.push( value );\n\n\t\t\t\t\t\tif ( value instanceof Promise ) {\n\n\t\t\t\t\t\t\tvalue.then( function( key, value ) {\n\n\t\t\t\t\t\t\t\tresults[ key ] = value;\n\n\t\t\t\t\t\t\t}.bind( this, key ));\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tresults[ key ] = value;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( fns ).then( function() {\n\n\t\t\treturn results;\n\n\t\t});\n\n\t}\n\n\tfunction resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' )\n\t\t\treturn '';\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) {\n\n\t\t\treturn url;\n\n\t\t}\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) {\n\n\t\t\treturn url;\n\n\t\t}\n\n\t\t// Relative URL\n\t\treturn ( path || '' ) + url;\n\n\t}\n\n\t// Three.js seems too dependent on attribute names so globally\n\t// replace those in the shader code\n\tfunction replaceTHREEShaderAttributes( shaderText, technique ) {\n\n\t\t// Expected technique attributes\n\t\tvar attributes = {};\n\n\t\tfor ( var attributeId in technique.attributes ) {\n\n\t\t\tvar pname = technique.attributes[ attributeId ];\n\n\t\t\tvar param = technique.parameters[ pname ];\n\t\t\tvar atype = param.type;\n\t\t\tvar semantic = param.semantic;\n\n\t\t\tattributes[ attributeId ] = {\n\t\t\t\ttype: atype,\n\t\t\t\tsemantic: semantic\n\t\t\t};\n\n\t\t}\n\n\t\t// Figure out which attributes to change in technique\n\n\t\tvar shaderParams = technique.parameters;\n\t\tvar shaderAttributes = technique.attributes;\n\t\tvar params = {};\n\n\t\tfor ( var attributeId in attributes ) {\n\n\t\t\tvar pname = shaderAttributes[ attributeId ];\n\t\t\tvar shaderParam = shaderParams[ pname ];\n\t\t\tvar semantic = shaderParam.semantic;\n\t\t\tif ( semantic ) {\n\n\t\t\t\tparams[ attributeId ] = shaderParam;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( var pname in params ) {\n\n\t\t\tvar param = params[ pname ];\n\t\t\tvar semantic = param.semantic;\n\n\t\t\tvar regEx = new RegExp( \"\\\\b\" + pname + \"\\\\b\", \"g\" );\n\n\t\t\tswitch ( semantic ) {\n\n\t\t\t\tcase \"POSITION\":\n\n\t\t\t\t\tshaderText = shaderText.replace( regEx, 'position' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"NORMAL\":\n\n\t\t\t\t\tshaderText = shaderText.replace( regEx, 'normal' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'TEXCOORD_0':\n\t\t\t\tcase 'TEXCOORD0':\n\t\t\t\tcase 'TEXCOORD':\n\n\t\t\t\t\tshaderText = shaderText.replace( regEx, 'uv' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'TEXCOORD_1':\n\n\t\t\t\t\tshaderText = shaderText.replace( regEx, 'uv2' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'COLOR_0':\n\t\t\t\tcase 'COLOR0':\n\t\t\t\tcase 'COLOR':\n\n\t\t\t\t\tshaderText = shaderText.replace( regEx, 'color' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"WEIGHT\":\n\n\t\t\t\t\tshaderText = shaderText.replace( regEx, 'skinWeight' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"JOINT\":\n\n\t\t\t\t\tshaderText = shaderText.replace( regEx, 'skinIndex' );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shaderText;\n\n\t}\n\n\tfunction createDefaultMaterial() {\n\n\t\treturn new THREE.MeshPhongMaterial( {\n\t\t\tcolor: 0x00000,\n\t\t\temissive: 0x888888,\n\t\t\tspecular: 0x000000,\n\t\t\tshininess: 0,\n\t\t\ttransparent: false,\n\t\t\tdepthTest: true,\n\t\t\tside: THREE.FrontSide\n\t\t} );\n\n\t}\n\n\t// Deferred constructor for RawShaderMaterial types\n\tfunction DeferredShaderMaterial( params ) {\n\n\t\tthis.isDeferredShaderMaterial = true;\n\n\t\tthis.params = params;\n\n\t}\n\n\tDeferredShaderMaterial.prototype.create = function () {\n\n\t\tvar uniforms = THREE.UniformsUtils.clone( this.params.uniforms );\n\n\t\tfor ( var uniformId in this.params.uniforms ) {\n\n\t\t\tvar originalUniform = this.params.uniforms[ uniformId ];\n\n\t\t\tif ( originalUniform.value instanceof THREE.Texture ) {\n\n\t\t\t\tuniforms[ uniformId ].value = originalUniform.value;\n\t\t\t\tuniforms[ uniformId ].value.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tuniforms[ uniformId ].semantic = originalUniform.semantic;\n\t\t\tuniforms[ uniformId ].node = originalUniform.node;\n\n\t\t}\n\n\t\tthis.params.uniforms = uniforms;\n\n\t\treturn new THREE.RawShaderMaterial( this.params );\n\n\t};\n\n\t/* GLTF PARSER */\n\n\tfunction GLTFParser( json, extensions, options ) {\n\n\t\tthis.json = json || {};\n\t\tthis.extensions = extensions || {};\n\t\tthis.options = options || {};\n\n\t\t// loader object cache\n\t\tthis.cache = new GLTFRegistry();\n\n\t}\n\n\tGLTFParser.prototype._withDependencies = function ( dependencies ) {\n\n\t\tvar _dependencies = {};\n\n\t\tfor ( var i = 0; i < dependencies.length; i ++ ) {\n\n\t\t\tvar dependency = dependencies[ i ];\n\t\t\tvar fnName = \"load\" + dependency.charAt( 0 ).toUpperCase() + dependency.slice( 1 );\n\n\t\t\tvar cached = this.cache.get( dependency );\n\n\t\t\tif ( cached !== undefined ) {\n\n\t\t\t\t_dependencies[ dependency ] = cached;\n\n\t\t\t} else if ( this[ fnName ] ) {\n\n\t\t\t\tvar fn = this[ fnName ]();\n\t\t\t\tthis.cache.add( dependency, fn );\n\n\t\t\t\t_dependencies[ dependency ] = fn;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn _each( _dependencies, function ( dependency ) {\n\n\t\t\treturn dependency;\n\n\t\t} );\n\n\t};\n\n\tGLTFParser.prototype.parse = function ( callback ) {\n\n\t\tvar json = this.json;\n\n\t\t// Clear the loader cache\n\t\tthis.cache.removeAll();\n\n\t\t// Fire the callback on complete\n\t\tthis._withDependencies( [\n\n\t\t\t\"scenes\",\n\t\t\t\"cameras\",\n\t\t\t\"animations\"\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\tvar scenes = [];\n\n\t\t\tfor ( var name in dependencies.scenes ) {\n\n\t\t\t\tscenes.push( dependencies.scenes[ name ] );\n\n\t\t\t}\n\n\t\t\tvar scene = json.scene !== undefined ? dependencies.scenes[ json.scene ] : scenes[ 0 ];\n\n\t\t\tvar cameras = [];\n\n\t\t\tfor ( var name in dependencies.cameras ) {\n\n\t\t\t\tvar camera = dependencies.cameras[ name ];\n\t\t\t\tcameras.push( camera );\n\n\t\t\t}\n\n\t\t\tvar animations = [];\n\n\t\t\tfor ( var name in dependencies.animations ) {\n\n\t\t\t\tanimations.push( dependencies.animations[ name ] );\n\n\t\t\t}\n\n\t\t\tcallback( scene, scenes, cameras, animations );\n\n\t\t} );\n\n\t};\n\n\tGLTFParser.prototype.loadShaders = function () {\n\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\t\tvar options = this.options;\n\n\t\treturn this._withDependencies( [\n\n\t\t\t\"bufferViews\"\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\treturn _each( json.shaders, function ( shader ) {\n\n\t\t\t\tif ( shader.extensions && shader.extensions[ EXTENSIONS.KHR_BINARY_GLTF ] ) {\n\n\t\t\t\t\treturn extensions[ EXTENSIONS.KHR_BINARY_GLTF ].loadShader( shader, dependencies.bufferViews );\n\n\t\t\t\t}\n\n\t\t\t\treturn new Promise( function ( resolve ) {\n\n\t\t\t\t\tvar loader = new THREE.FileLoader();\n\t\t\t\t\tloader.setResponseType( 'text' );\n\t\t\t\t\tloader.load( resolveURL( shader.uri, options.path ), function ( shaderText ) {\n\n\t\t\t\t\t\tresolve( shaderText );\n\n\t\t\t\t\t} );\n\n\t\t\t\t} );\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\tGLTFParser.prototype.loadBuffers = function () {\n\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\t\tvar options = this.options;\n\n\t\treturn _each( json.buffers, function ( buffer, name ) {\n\n\t\t\tif ( name === BINARY_EXTENSION_BUFFER_NAME ) {\n\n\t\t\t\treturn extensions[ EXTENSIONS.KHR_BINARY_GLTF ].body;\n\n\t\t\t}\n\n\t\t\tif ( buffer.type === 'arraybuffer' || buffer.type === undefined ) {\n\n\t\t\t\treturn new Promise( function ( resolve ) {\n\n\t\t\t\t\tvar loader = new THREE.FileLoader();\n\t\t\t\t\tloader.setResponseType( 'arraybuffer' );\n\t\t\t\t\tloader.load( resolveURL( buffer.uri, options.path ), function ( buffer ) {\n\n\t\t\t\t\t\tresolve( buffer );\n\n\t\t\t\t\t} );\n\n\t\t\t\t} );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.LegacyGLTFLoader: ' + buffer.type + ' buffer type is not supported' );\n\n\t\t\t}\n\n\t\t} );\n\n\t};\n\n\tGLTFParser.prototype.loadBufferViews = function () {\n\n\t\tvar json = this.json;\n\n\t\treturn this._withDependencies( [\n\n\t\t\t\"buffers\"\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\treturn _each( json.bufferViews, function ( bufferView ) {\n\n\t\t\t\tvar arraybuffer = dependencies.buffers[ bufferView.buffer ];\n\n\t\t\t\tvar byteLength = bufferView.byteLength !== undefined ? bufferView.byteLength : 0;\n\n\t\t\t\treturn arraybuffer.slice( bufferView.byteOffset, bufferView.byteOffset + byteLength );\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\tGLTFParser.prototype.loadAccessors = function () {\n\n\t\tvar json = this.json;\n\n\t\treturn this._withDependencies( [\n\n\t\t\t\"bufferViews\"\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\treturn _each( json.accessors, function ( accessor ) {\n\n\t\t\t\tvar arraybuffer = dependencies.bufferViews[ accessor.bufferView ];\n\t\t\t\tvar itemSize = WEBGL_TYPE_SIZES[ accessor.type ];\n\t\t\t\tvar TypedArray = WEBGL_COMPONENT_TYPES[ accessor.componentType ];\n\n\t\t\t\t// For VEC3: itemSize is 3, elementBytes is 4, itemBytes is 12.\n\t\t\t\tvar elementBytes = TypedArray.BYTES_PER_ELEMENT;\n\t\t\t\tvar itemBytes = elementBytes * itemSize;\n\n\t\t\t\t// The buffer is not interleaved if the stride is the item size in bytes.\n\t\t\t\tif ( accessor.byteStride && accessor.byteStride !== itemBytes ) {\n\n\t\t\t\t\t// Use the full buffer if it's interleaved.\n\t\t\t\t\tvar array = new TypedArray( arraybuffer );\n\n\t\t\t\t\t// Integer parameters to IB/IBA are in array elements, not bytes.\n\t\t\t\t\tvar ib = new THREE.InterleavedBuffer( array, accessor.byteStride / elementBytes );\n\n\t\t\t\t\treturn new THREE.InterleavedBufferAttribute( ib, itemSize, accessor.byteOffset / elementBytes );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tarray = new TypedArray( arraybuffer, accessor.byteOffset, accessor.count * itemSize );\n\n\t\t\t\t\treturn new THREE.BufferAttribute( array, itemSize );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\tGLTFParser.prototype.loadTextures = function () {\n\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\t\tvar options = this.options;\n\n\t\treturn this._withDependencies( [\n\n\t\t\t\"bufferViews\"\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\treturn _each( json.textures, function ( texture ) {\n\n\t\t\t\tif ( texture.source ) {\n\n\t\t\t\t\treturn new Promise( function ( resolve ) {\n\n\t\t\t\t\t\tvar source = json.images[ texture.source ];\n\t\t\t\t\t\tvar sourceUri = source.uri;\n\n\t\t\t\t\t\tif ( source.extensions && source.extensions[ EXTENSIONS.KHR_BINARY_GLTF ] ) {\n\n\t\t\t\t\t\t\tsourceUri = extensions[ EXTENSIONS.KHR_BINARY_GLTF ].loadTextureSourceUri( source, dependencies.bufferViews );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar textureLoader = THREE.Loader.Handlers.get( sourceUri );\n\n\t\t\t\t\t\tif ( textureLoader === null ) {\n\n\t\t\t\t\t\t\ttextureLoader = new THREE.TextureLoader();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttextureLoader.setCrossOrigin( options.crossOrigin );\n\n\t\t\t\t\t\ttextureLoader.load( resolveURL( sourceUri, options.path ), function ( _texture ) {\n\n\t\t\t\t\t\t\t_texture.flipY = false;\n\n\t\t\t\t\t\t\tif ( texture.name !== undefined ) _texture.name = texture.name;\n\n\t\t\t\t\t\t\t_texture.format = texture.format !== undefined ? WEBGL_TEXTURE_FORMATS[ texture.format ] : THREE.RGBAFormat;\n\n\t\t\t\t\t\t\tif ( texture.internalFormat !== undefined && _texture.format !== WEBGL_TEXTURE_FORMATS[ texture.internalFormat ] ) {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.LegacyGLTFLoader: Three.js doesn\\'t support texture internalFormat which is different from texture format. ' +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'internalFormat will be forced to be the same value as format.' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_texture.type = texture.type !== undefined ? WEBGL_TEXTURE_DATATYPES[ texture.type ] : THREE.UnsignedByteType;\n\n\t\t\t\t\t\t\tif ( texture.sampler ) {\n\n\t\t\t\t\t\t\t\tvar sampler = json.samplers[ texture.sampler ];\n\n\t\t\t\t\t\t\t\t_texture.magFilter = WEBGL_FILTERS[ sampler.magFilter ] || THREE.LinearFilter;\n\t\t\t\t\t\t\t\t_texture.minFilter = WEBGL_FILTERS[ sampler.minFilter ] || THREE.NearestMipMapLinearFilter;\n\t\t\t\t\t\t\t\t_texture.wrapS = WEBGL_WRAPPINGS[ sampler.wrapS ] || THREE.RepeatWrapping;\n\t\t\t\t\t\t\t\t_texture.wrapT = WEBGL_WRAPPINGS[ sampler.wrapT ] || THREE.RepeatWrapping;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tresolve( _texture );\n\n\t\t\t\t\t\t}, undefined, function () {\n\n\t\t\t\t\t\t\tresolve();\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\tGLTFParser.prototype.loadMaterials = function () {\n\n\t\tvar json = this.json;\n\n\t\treturn this._withDependencies( [\n\n\t\t\t\"shaders\",\n\t\t\t\"textures\"\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\treturn _each( json.materials, function ( material ) {\n\n\t\t\t\tvar materialType;\n\t\t\t\tvar materialValues = {};\n\t\t\t\tvar materialParams = {};\n\n\t\t\t\tvar khr_material;\n\n\t\t\t\tif ( material.extensions && material.extensions[ EXTENSIONS.KHR_MATERIALS_COMMON ] ) {\n\n\t\t\t\t\tkhr_material = material.extensions[ EXTENSIONS.KHR_MATERIALS_COMMON ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( khr_material ) {\n\n\t\t\t\t\t// don't copy over unused values to avoid material warning spam\n\t\t\t\t\tvar keys = [ 'ambient', 'emission', 'transparent', 'transparency', 'doubleSided' ];\n\n\t\t\t\t\tswitch ( khr_material.technique ) {\n\n\t\t\t\t\t\tcase 'BLINN' :\n\t\t\t\t\t\tcase 'PHONG' :\n\t\t\t\t\t\t\tmaterialType = THREE.MeshPhongMaterial;\n\t\t\t\t\t\t\tkeys.push( 'diffuse', 'specular', 'shininess' );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'LAMBERT' :\n\t\t\t\t\t\t\tmaterialType = THREE.MeshLambertMaterial;\n\t\t\t\t\t\t\tkeys.push( 'diffuse' );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'CONSTANT' :\n\t\t\t\t\t\tdefault :\n\t\t\t\t\t\t\tmaterialType = THREE.MeshBasicMaterial;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tkeys.forEach( function( v ) {\n\n\t\t\t\t\t\tif ( khr_material.values[ v ] !== undefined ) materialValues[ v ] = khr_material.values[ v ];\n\n\t\t\t\t\t} );\n\n\t\t\t\t\tif ( khr_material.doubleSided || materialValues.doubleSided ) {\n\n\t\t\t\t\t\tmaterialParams.side = THREE.DoubleSide;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( khr_material.transparent || materialValues.transparent ) {\n\n\t\t\t\t\t\tmaterialParams.transparent = true;\n\t\t\t\t\t\tmaterialParams.opacity = ( materialValues.transparency !== undefined ) ? materialValues.transparency : 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.technique === undefined ) {\n\n\t\t\t\t\tmaterialType = THREE.MeshPhongMaterial;\n\n\t\t\t\t\tObject.assign( materialValues, material.values );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tmaterialType = DeferredShaderMaterial;\n\n\t\t\t\t\tvar technique = json.techniques[ material.technique ];\n\n\t\t\t\t\tmaterialParams.uniforms = {};\n\n\t\t\t\t\tvar program = json.programs[ technique.program ];\n\n\t\t\t\t\tif ( program ) {\n\n\t\t\t\t\t\tmaterialParams.fragmentShader = dependencies.shaders[ program.fragmentShader ];\n\n\t\t\t\t\t\tif ( ! materialParams.fragmentShader ) {\n\n\t\t\t\t\t\t\tconsole.warn( \"ERROR: Missing fragment shader definition:\", program.fragmentShader );\n\t\t\t\t\t\t\tmaterialType = THREE.MeshPhongMaterial;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar vertexShader = dependencies.shaders[ program.vertexShader ];\n\n\t\t\t\t\t\tif ( ! vertexShader ) {\n\n\t\t\t\t\t\t\tconsole.warn( \"ERROR: Missing vertex shader definition:\", program.vertexShader );\n\t\t\t\t\t\t\tmaterialType = THREE.MeshPhongMaterial;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// IMPORTANT: FIX VERTEX SHADER ATTRIBUTE DEFINITIONS\n\t\t\t\t\t\tmaterialParams.vertexShader = replaceTHREEShaderAttributes( vertexShader, technique );\n\n\t\t\t\t\t\tvar uniforms = technique.uniforms;\n\n\t\t\t\t\t\tfor ( var uniformId in uniforms ) {\n\n\t\t\t\t\t\t\tvar pname = uniforms[ uniformId ];\n\t\t\t\t\t\t\tvar shaderParam = technique.parameters[ pname ];\n\n\t\t\t\t\t\t\tvar ptype = shaderParam.type;\n\n\t\t\t\t\t\t\tif ( WEBGL_TYPE[ ptype ] ) {\n\n\t\t\t\t\t\t\t\tvar pcount = shaderParam.count;\n\t\t\t\t\t\t\t\tvar value;\n\n\t\t\t\t\t\t\t\tif ( material.values !== undefined ) value = material.values[ pname ];\n\n\t\t\t\t\t\t\t\tvar uvalue = new WEBGL_TYPE[ ptype ]();\n\t\t\t\t\t\t\t\tvar usemantic = shaderParam.semantic;\n\t\t\t\t\t\t\t\tvar unode = shaderParam.node;\n\n\t\t\t\t\t\t\t\tswitch ( ptype ) {\n\n\t\t\t\t\t\t\t\t\tcase WEBGL_CONSTANTS.FLOAT:\n\n\t\t\t\t\t\t\t\t\t\tuvalue = shaderParam.value;\n\n\t\t\t\t\t\t\t\t\t\tif ( pname == \"transparency\" ) {\n\n\t\t\t\t\t\t\t\t\t\t\tmaterialParams.transparent = true;\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\t\t\t\t\t\tuvalue = value;\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase WEBGL_CONSTANTS.FLOAT_VEC2:\n\t\t\t\t\t\t\t\t\tcase WEBGL_CONSTANTS.FLOAT_VEC3:\n\t\t\t\t\t\t\t\t\tcase WEBGL_CONSTANTS.FLOAT_VEC4:\n\t\t\t\t\t\t\t\t\tcase WEBGL_CONSTANTS.FLOAT_MAT3:\n\n\t\t\t\t\t\t\t\t\t\tif ( shaderParam && shaderParam.value ) {\n\n\t\t\t\t\t\t\t\t\t\t\tuvalue.fromArray( shaderParam.value );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif ( value ) {\n\n\t\t\t\t\t\t\t\t\t\t\tuvalue.fromArray( value );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase WEBGL_CONSTANTS.FLOAT_MAT2:\n\n\t\t\t\t\t\t\t\t\t\t// what to do?\n\t\t\t\t\t\t\t\t\t\tconsole.warn( \"FLOAT_MAT2 is not a supported uniform type\" );\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase WEBGL_CONSTANTS.FLOAT_MAT4:\n\n\t\t\t\t\t\t\t\t\t\tif ( pcount ) {\n\n\t\t\t\t\t\t\t\t\t\t\tuvalue = new Array( pcount );\n\n\t\t\t\t\t\t\t\t\t\t\tfor ( var mi = 0; mi < pcount; mi ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\tuvalue[ mi ] = new WEBGL_TYPE[ ptype ]();\n\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\tif ( shaderParam && shaderParam.value ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\tvar m4v = shaderParam.value;\n\t\t\t\t\t\t\t\t\t\t\t\tuvalue.fromArray( m4v );\n\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\tif ( value ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\tuvalue.fromArray( value );\n\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t\tif ( shaderParam && shaderParam.value ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\tvar m4 = shaderParam.value;\n\t\t\t\t\t\t\t\t\t\t\t\tuvalue.fromArray( m4 );\n\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\tif ( value ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\tuvalue.fromArray( value );\n\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase WEBGL_CONSTANTS.SAMPLER_2D:\n\n\t\t\t\t\t\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\t\t\t\t\t\tuvalue = dependencies.textures[ value ];\n\n\t\t\t\t\t\t\t\t\t\t} else if ( shaderParam.value !== undefined ) {\n\n\t\t\t\t\t\t\t\t\t\t\tuvalue = dependencies.textures[ shaderParam.value ];\n\n\t\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t\tuvalue = null;\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tmaterialParams.uniforms[ uniformId ] = {\n\t\t\t\t\t\t\t\t\tvalue: uvalue,\n\t\t\t\t\t\t\t\t\tsemantic: usemantic,\n\t\t\t\t\t\t\t\t\tnode: unode\n\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tthrow new Error( \"Unknown shader uniform param type: \" + ptype );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar states = technique.states || {};\n\t\t\t\t\t\tvar enables = states.enable || [];\n\t\t\t\t\t\tvar functions = states.functions || {};\n\n\t\t\t\t\t\tvar enableCullFace = false;\n\t\t\t\t\t\tvar enableDepthTest = false;\n\t\t\t\t\t\tvar enableBlend = false;\n\n\t\t\t\t\t\tfor ( var i = 0, il = enables.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tvar enable = enables[ i ];\n\n\t\t\t\t\t\t\tswitch ( STATES_ENABLES[ enable ] ) {\n\n\t\t\t\t\t\t\t\tcase 'CULL_FACE':\n\n\t\t\t\t\t\t\t\t\tenableCullFace = true;\n\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 'DEPTH_TEST':\n\n\t\t\t\t\t\t\t\t\tenableDepthTest = true;\n\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 'BLEND':\n\n\t\t\t\t\t\t\t\t\tenableBlend = true;\n\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t// TODO: implement\n\t\t\t\t\t\t\t\tcase 'SCISSOR_TEST':\n\t\t\t\t\t\t\t\tcase 'POLYGON_OFFSET_FILL':\n\t\t\t\t\t\t\t\tcase 'SAMPLE_ALPHA_TO_COVERAGE':\n\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\t\tthrow new Error( \"Unknown technique.states.enable: \" + enable );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( enableCullFace ) {\n\n\t\t\t\t\t\t\tmaterialParams.side = functions.cullFace !== undefined ? WEBGL_SIDES[ functions.cullFace ] : THREE.FrontSide;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tmaterialParams.side = THREE.DoubleSide;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaterialParams.depthTest = enableDepthTest;\n\t\t\t\t\t\tmaterialParams.depthFunc = functions.depthFunc !== undefined ? WEBGL_DEPTH_FUNCS[ functions.depthFunc ] : THREE.LessDepth;\n\t\t\t\t\t\tmaterialParams.depthWrite = functions.depthMask !== undefined ? functions.depthMask[ 0 ] : true;\n\n\t\t\t\t\t\tmaterialParams.blending = enableBlend ? THREE.CustomBlending : THREE.NoBlending;\n\t\t\t\t\t\tmaterialParams.transparent = enableBlend;\n\n\t\t\t\t\t\tvar blendEquationSeparate = functions.blendEquationSeparate;\n\n\t\t\t\t\t\tif ( blendEquationSeparate !== undefined ) {\n\n\t\t\t\t\t\t\tmaterialParams.blendEquation = WEBGL_BLEND_EQUATIONS[ blendEquationSeparate[ 0 ] ];\n\t\t\t\t\t\t\tmaterialParams.blendEquationAlpha = WEBGL_BLEND_EQUATIONS[ blendEquationSeparate[ 1 ] ];\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tmaterialParams.blendEquation = THREE.AddEquation;\n\t\t\t\t\t\t\tmaterialParams.blendEquationAlpha = THREE.AddEquation;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar blendFuncSeparate = functions.blendFuncSeparate;\n\n\t\t\t\t\t\tif ( blendFuncSeparate !== undefined ) {\n\n\t\t\t\t\t\t\tmaterialParams.blendSrc = WEBGL_BLEND_FUNCS[ blendFuncSeparate[ 0 ] ];\n\t\t\t\t\t\t\tmaterialParams.blendDst = WEBGL_BLEND_FUNCS[ blendFuncSeparate[ 1 ] ];\n\t\t\t\t\t\t\tmaterialParams.blendSrcAlpha = WEBGL_BLEND_FUNCS[ blendFuncSeparate[ 2 ] ];\n\t\t\t\t\t\t\tmaterialParams.blendDstAlpha = WEBGL_BLEND_FUNCS[ blendFuncSeparate[ 3 ] ];\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tmaterialParams.blendSrc = THREE.OneFactor;\n\t\t\t\t\t\t\tmaterialParams.blendDst = THREE.ZeroFactor;\n\t\t\t\t\t\t\tmaterialParams.blendSrcAlpha = THREE.OneFactor;\n\t\t\t\t\t\t\tmaterialParams.blendDstAlpha = THREE.ZeroFactor;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( Array.isArray( materialValues.diffuse ) ) {\n\n\t\t\t\t\tmaterialParams.color = new THREE.Color().fromArray( materialValues.diffuse );\n\n\t\t\t\t} else if ( typeof( materialValues.diffuse ) === 'string' ) {\n\n\t\t\t\t\tmaterialParams.map = dependencies.textures[ materialValues.diffuse ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete materialParams.diffuse;\n\n\t\t\t\tif ( typeof( materialValues.reflective ) === 'string' ) {\n\n\t\t\t\t\tmaterialParams.envMap = dependencies.textures[ materialValues.reflective ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( typeof( materialValues.bump ) === 'string' ) {\n\n\t\t\t\t\tmaterialParams.bumpMap = dependencies.textures[ materialValues.bump ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( Array.isArray( materialValues.emission ) ) {\n\n\t\t\t\t\tif ( materialType === THREE.MeshBasicMaterial ) {\n\n\t\t\t\t\t\tmaterialParams.color = new THREE.Color().fromArray( materialValues.emission );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tmaterialParams.emissive = new THREE.Color().fromArray( materialValues.emission );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( typeof( materialValues.emission ) === 'string' ) {\n\n\t\t\t\t\tif ( materialType === THREE.MeshBasicMaterial ) {\n\n\t\t\t\t\t\tmaterialParams.map = dependencies.textures[ materialValues.emission ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tmaterialParams.emissiveMap = dependencies.textures[ materialValues.emission ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( Array.isArray( materialValues.specular ) ) {\n\n\t\t\t\t\tmaterialParams.specular = new THREE.Color().fromArray( materialValues.specular );\n\n\t\t\t\t} else if ( typeof( materialValues.specular ) === 'string' ) {\n\n\t\t\t\t\tmaterialParams.specularMap = dependencies.textures[ materialValues.specular ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( materialValues.shininess !== undefined ) {\n\n\t\t\t\t\tmaterialParams.shininess = materialValues.shininess;\n\n\t\t\t\t}\n\n\t\t\t\tvar _material = new materialType( materialParams );\n\t\t\t\tif ( material.name !== undefined ) _material.name = material.name;\n\n\t\t\t\treturn _material;\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\tGLTFParser.prototype.loadMeshes = function () {\n\n\t\tvar json = this.json;\n\n\t\treturn this._withDependencies( [\n\n\t\t\t\"accessors\",\n\t\t\t\"materials\"\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\treturn _each( json.meshes, function ( mesh ) {\n\n\t\t\t\tvar group = new THREE.Group();\n\t\t\t\tif ( mesh.name !== undefined ) group.name = mesh.name;\n\n\t\t\t\tif ( mesh.extras ) group.userData = mesh.extras;\n\n\t\t\t\tvar primitives = mesh.primitives || [];\n\n\t\t\t\tfor ( var name in primitives ) {\n\n\t\t\t\t\tvar primitive = primitives[ name ];\n\n\t\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLES || primitive.mode === undefined ) {\n\n\t\t\t\t\t\tvar geometry = new THREE.BufferGeometry();\n\n\t\t\t\t\t\tvar attributes = primitive.attributes;\n\n\t\t\t\t\t\tfor ( var attributeId in attributes ) {\n\n\t\t\t\t\t\t\tvar attributeEntry = attributes[ attributeId ];\n\n\t\t\t\t\t\t\tif ( ! attributeEntry ) return;\n\n\t\t\t\t\t\t\tvar bufferAttribute = dependencies.accessors[ attributeEntry ];\n\n\t\t\t\t\t\t\tswitch ( attributeId ) {\n\n\t\t\t\t\t\t\t\tcase 'POSITION':\n\t\t\t\t\t\t\t\t\tgeometry.addAttribute( 'position', bufferAttribute );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 'NORMAL':\n\t\t\t\t\t\t\t\t\tgeometry.addAttribute( 'normal', bufferAttribute );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 'TEXCOORD_0':\n\t\t\t\t\t\t\t\tcase 'TEXCOORD0':\n\t\t\t\t\t\t\t\tcase 'TEXCOORD':\n\t\t\t\t\t\t\t\t\tgeometry.addAttribute( 'uv', bufferAttribute );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 'TEXCOORD_1':\n\t\t\t\t\t\t\t\t\tgeometry.addAttribute( 'uv2', bufferAttribute );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 'COLOR_0':\n\t\t\t\t\t\t\t\tcase 'COLOR0':\n\t\t\t\t\t\t\t\tcase 'COLOR':\n\t\t\t\t\t\t\t\t\tgeometry.addAttribute( 'color', bufferAttribute );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 'WEIGHT':\n\t\t\t\t\t\t\t\t\tgeometry.addAttribute( 'skinWeight', bufferAttribute );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 'JOINT':\n\t\t\t\t\t\t\t\t\tgeometry.addAttribute( 'skinIndex', bufferAttribute );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase '_BATCHID':\n\t\t\t\t\t\t\t\t\tgeometry.addAttribute( '_BATCHID', bufferAttribute );\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( primitive.indices ) {\n\n\t\t\t\t\t\t\tgeometry.setIndex( dependencies.accessors[ primitive.indices ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar material = dependencies.materials !== undefined ? dependencies.materials[ primitive.material ] : createDefaultMaterial();\n\n\t\t\t\t\t\tvar meshNode = new THREE.Mesh( geometry, material );\n\t\t\t\t\t\tmeshNode.castShadow = true;\n\t\t\t\t\t\tmeshNode.name = ( name === \"0\" ? group.name : group.name + name );\n\n\t\t\t\t\t\tif ( primitive.extras ) meshNode.userData = primitive.extras;\n\n\t\t\t\t\t\tgroup.add( meshNode );\n\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINES ) {\n\n\t\t\t\t\t\tvar geometry = new THREE.BufferGeometry();\n\n\t\t\t\t\t\tvar attributes = primitive.attributes;\n\n\t\t\t\t\t\tfor ( var attributeId in attributes ) {\n\n\t\t\t\t\t\t\tvar attributeEntry = attributes[ attributeId ];\n\n\t\t\t\t\t\t\tif ( ! attributeEntry ) return;\n\n\t\t\t\t\t\t\tvar bufferAttribute = dependencies.accessors[ attributeEntry ];\n\n\t\t\t\t\t\t\tswitch ( attributeId ) {\n\n\t\t\t\t\t\t\t\tcase 'POSITION':\n\t\t\t\t\t\t\t\t\tgeometry.addAttribute( 'position', bufferAttribute );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 'COLOR_0':\n\t\t\t\t\t\t\t\tcase 'COLOR0':\n\t\t\t\t\t\t\t\tcase 'COLOR':\n\t\t\t\t\t\t\t\t\tgeometry.addAttribute( 'color', bufferAttribute );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar material = dependencies.materials[ primitive.material ];\n\n\t\t\t\t\t\tvar meshNode;\n\n\t\t\t\t\t\tif ( primitive.indices ) {\n\n\t\t\t\t\t\t\tgeometry.setIndex( dependencies.accessors[ primitive.indices ] );\n\n\t\t\t\t\t\t\tmeshNode = new THREE.LineSegments( geometry, material );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tmeshNode = new THREE.Line( geometry, material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmeshNode.name = ( name === \"0\" ? group.name : group.name + name );\n\n\t\t\t\t\t\tif ( primitive.extras ) meshNode.userData = primitive.extras;\n\n\t\t\t\t\t\tgroup.add( meshNode );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( \"Only triangular and line primitives are supported\" );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn group;\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\tGLTFParser.prototype.loadCameras = function () {\n\n\t\tvar json = this.json;\n\n\t\treturn _each( json.cameras, function ( camera ) {\n\n\t\t\tif ( camera.type == \"perspective\" && camera.perspective ) {\n\n\t\t\t\tvar yfov = camera.perspective.yfov;\n\t\t\t\tvar aspectRatio = camera.perspective.aspectRatio !== undefined ? camera.perspective.aspectRatio : 1;\n\n\t\t\t\t// According to COLLADA spec...\n\t\t\t\t// aspectRatio = xfov / yfov\n\t\t\t\tvar xfov = yfov * aspectRatio;\n\n\t\t\t\tvar _camera = new THREE.PerspectiveCamera( THREE.Math.radToDeg( xfov ), aspectRatio, camera.perspective.znear || 1, camera.perspective.zfar || 2e6 );\n\t\t\t\tif ( camera.name !== undefined ) _camera.name = camera.name;\n\n\t\t\t\tif ( camera.extras ) _camera.userData = camera.extras;\n\n\t\t\t\treturn _camera;\n\n\t\t\t} else if ( camera.type == \"orthographic\" && camera.orthographic ) {\n\n\t\t\t\tvar _camera = new THREE.OrthographicCamera( window.innerWidth / - 2, window.innerWidth / 2, window.innerHeight / 2, window.innerHeight / - 2, camera.orthographic.znear, camera.orthographic.zfar );\n\t\t\t\tif ( camera.name !== undefined ) _camera.name = camera.name;\n\n\t\t\t\tif ( camera.extras ) _camera.userData = camera.extras;\n\n\t\t\t\treturn _camera;\n\n\t\t\t}\n\n\t\t} );\n\n\t};\n\n\tGLTFParser.prototype.loadSkins = function () {\n\n\t\tvar json = this.json;\n\n\t\treturn this._withDependencies( [\n\n\t\t\t\"accessors\"\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\treturn _each( json.skins, function ( skin ) {\n\n\t\t\t\tvar bindShapeMatrix = new THREE.Matrix4();\n\n\t\t\t\tif ( skin.bindShapeMatrix !== undefined ) bindShapeMatrix.fromArray( skin.bindShapeMatrix );\n\n\t\t\t\tvar _skin = {\n\t\t\t\t\tbindShapeMatrix: bindShapeMatrix,\n\t\t\t\t\tjointNames: skin.jointNames,\n\t\t\t\t\tinverseBindMatrices: dependencies.accessors[ skin.inverseBindMatrices ]\n\t\t\t\t};\n\n\t\t\t\treturn _skin;\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\tGLTFParser.prototype.loadAnimations = function () {\n\n\t\tvar json = this.json;\n\n\t\treturn this._withDependencies( [\n\n\t\t\t\"accessors\",\n\t\t\t\"nodes\"\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\treturn _each( json.animations, function ( animation, animationId ) {\n\n\t\t\t\tvar tracks = [];\n\n\t\t\t\tfor ( var channelId in animation.channels ) {\n\n\t\t\t\t\tvar channel = animation.channels[ channelId ];\n\t\t\t\t\tvar sampler = animation.samplers[ channel.sampler ];\n\n\t\t\t\t\tif ( sampler ) {\n\n\t\t\t\t\t\tvar target = channel.target;\n\t\t\t\t\t\tvar name = target.id;\n\t\t\t\t\t\tvar input = animation.parameters !== undefined ? animation.parameters[ sampler.input ] : sampler.input;\n\t\t\t\t\t\tvar output = animation.parameters !== undefined ? animation.parameters[ sampler.output ] : sampler.output;\n\n\t\t\t\t\t\tvar inputAccessor = dependencies.accessors[ input ];\n\t\t\t\t\t\tvar outputAccessor = dependencies.accessors[ output ];\n\n\t\t\t\t\t\tvar node = dependencies.nodes[ name ];\n\n\t\t\t\t\t\tif ( node ) {\n\n\t\t\t\t\t\t\tnode.updateMatrix();\n\t\t\t\t\t\t\tnode.matrixAutoUpdate = true;\n\n\t\t\t\t\t\t\tvar TypedKeyframeTrack = PATH_PROPERTIES[ target.path ] === PATH_PROPERTIES.rotation\n\t\t\t\t\t\t\t\t? THREE.QuaternionKeyframeTrack\n\t\t\t\t\t\t\t\t: THREE.VectorKeyframeTrack;\n\n\t\t\t\t\t\t\tvar targetName = node.name ? node.name : node.uuid;\n\t\t\t\t\t\t\tvar interpolation = sampler.interpolation !== undefined ? INTERPOLATION[ sampler.interpolation ] : THREE.InterpolateLinear;\n\n\t\t\t\t\t\t\t// KeyframeTrack.optimize() will modify given 'times' and 'values'\n\t\t\t\t\t\t\t// buffers before creating a truncated copy to keep. Because buffers may\n\t\t\t\t\t\t\t// be reused by other tracks, make copies here.\n\t\t\t\t\t\t\ttracks.push( new TypedKeyframeTrack(\n\t\t\t\t\t\t\t\ttargetName + '.' + PATH_PROPERTIES[ target.path ],\n\t\t\t\t\t\t\t\tTHREE.AnimationUtils.arraySlice( inputAccessor.array, 0 ),\n\t\t\t\t\t\t\t\tTHREE.AnimationUtils.arraySlice( outputAccessor.array, 0 ),\n\t\t\t\t\t\t\t\tinterpolation\n\t\t\t\t\t\t\t) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar name = animation.name !== undefined ? animation.name : \"animation_\" + animationId;\n\n\t\t\t\treturn new THREE.AnimationClip( name, undefined, tracks );\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\tGLTFParser.prototype.loadNodes = function () {\n\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\t\tvar scope = this;\n\n\t\treturn _each( json.nodes, function ( node ) {\n\n\t\t\tvar matrix = new THREE.Matrix4();\n\n\t\t\tvar _node;\n\n\t\t\tif ( node.jointName ) {\n\n\t\t\t\t_node = new THREE.Bone();\n\t\t\t\t_node.name = node.name !== undefined ? node.name : node.jointName;\n\t\t\t\t_node.jointName = node.jointName;\n\n\t\t\t} else {\n\n\t\t\t\t_node = new THREE.Object3D();\n\t\t\t\tif ( node.name !== undefined ) _node.name = node.name;\n\n\t\t\t}\n\n\t\t\tif ( node.extras ) _node.userData = node.extras;\n\n\t\t\tif ( node.matrix !== undefined ) {\n\n\t\t\t\tmatrix.fromArray( node.matrix );\n\t\t\t\t_node.applyMatrix( matrix );\n\n\t\t\t} else {\n\n\t\t\t\tif ( node.translation !== undefined ) {\n\n\t\t\t\t\t_node.position.fromArray( node.translation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( node.rotation !== undefined ) {\n\n\t\t\t\t\t_node.quaternion.fromArray( node.rotation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( node.scale !== undefined ) {\n\n\t\t\t\t\t_node.scale.fromArray( node.scale );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn _node;\n\n\t\t} ).then( function ( __nodes ) {\n\n\t\t\treturn scope._withDependencies( [\n\n\t\t\t\t\"meshes\",\n\t\t\t\t\"skins\",\n\t\t\t\t\"cameras\"\n\n\t\t\t] ).then( function ( dependencies ) {\n\n\t\t\t\treturn _each( __nodes, function ( _node, nodeId ) {\n\n\t\t\t\t\tvar node = json.nodes[ nodeId ];\n\n\t\t\t\t\tif ( node.meshes !== undefined ) {\n\n\t\t\t\t\t\tfor ( var meshId in node.meshes ) {\n\n\t\t\t\t\t\t\tvar mesh = node.meshes[ meshId ];\n\t\t\t\t\t\t\tvar group = dependencies.meshes[ mesh ];\n\n\t\t\t\t\t\t\tif ( group === undefined ) {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'LegacyGLTFLoader: Couldn\\'t find node \"' + mesh + '\".' );\n\t\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tfor ( var childrenId in group.children ) {\n\n\t\t\t\t\t\t\t\tvar child = group.children[ childrenId ];\n\n\t\t\t\t\t\t\t\t// clone Mesh to add to _node\n\n\t\t\t\t\t\t\t\tvar originalMaterial = child.material;\n\t\t\t\t\t\t\t\tvar originalGeometry = child.geometry;\n\t\t\t\t\t\t\t\tvar originalUserData = child.userData;\n\t\t\t\t\t\t\t\tvar originalName = child.name;\n\n\t\t\t\t\t\t\t\tvar material;\n\n\t\t\t\t\t\t\t\tif ( originalMaterial.isDeferredShaderMaterial ) {\n\n\t\t\t\t\t\t\t\t\toriginalMaterial = material = originalMaterial.create();\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tmaterial = originalMaterial;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tswitch ( child.type ) {\n\n\t\t\t\t\t\t\t\t\tcase 'LineSegments':\n\t\t\t\t\t\t\t\t\t\tchild = new THREE.LineSegments( originalGeometry, material );\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase 'LineLoop':\n\t\t\t\t\t\t\t\t\t\tchild = new THREE.LineLoop( originalGeometry, material );\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase 'Line':\n\t\t\t\t\t\t\t\t\t\tchild = new THREE.Line( originalGeometry, material );\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\tchild = new THREE.Mesh( originalGeometry, material );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tchild.castShadow = true;\n\t\t\t\t\t\t\t\tchild.userData = originalUserData;\n\t\t\t\t\t\t\t\tchild.name = originalName;\n\n\t\t\t\t\t\t\t\tvar skinEntry;\n\n\t\t\t\t\t\t\t\tif ( node.skin ) {\n\n\t\t\t\t\t\t\t\t\tskinEntry = dependencies.skins[ node.skin ];\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// Replace Mesh with SkinnedMesh in library\n\t\t\t\t\t\t\t\tif ( skinEntry ) {\n\n\t\t\t\t\t\t\t\t\tvar getJointNode = function ( jointId ) {\n\n\t\t\t\t\t\t\t\t\t\tvar keys = Object.keys( __nodes );\n\n\t\t\t\t\t\t\t\t\t\tfor ( var i = 0, il = keys.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\tvar n = __nodes[ keys[ i ] ];\n\n\t\t\t\t\t\t\t\t\t\t\tif ( n.jointName === jointId ) return n;\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t\tvar geometry = originalGeometry;\n\t\t\t\t\t\t\t\t\tvar material = originalMaterial;\n\t\t\t\t\t\t\t\t\tmaterial.skinning = true;\n\n\t\t\t\t\t\t\t\t\tchild = new THREE.SkinnedMesh( geometry, material );\n\t\t\t\t\t\t\t\t\tchild.castShadow = true;\n\t\t\t\t\t\t\t\t\tchild.userData = originalUserData;\n\t\t\t\t\t\t\t\t\tchild.name = originalName;\n\n\t\t\t\t\t\t\t\t\tvar bones = [];\n\t\t\t\t\t\t\t\t\tvar boneInverses = [];\n\n\t\t\t\t\t\t\t\t\tfor ( var i = 0, l = skinEntry.jointNames.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\tvar jointId = skinEntry.jointNames[ i ];\n\t\t\t\t\t\t\t\t\t\tvar jointNode = getJointNode( jointId );\n\n\t\t\t\t\t\t\t\t\t\tif ( jointNode ) {\n\n\t\t\t\t\t\t\t\t\t\t\tbones.push( jointNode );\n\n\t\t\t\t\t\t\t\t\t\t\tvar m = skinEntry.inverseBindMatrices.array;\n\t\t\t\t\t\t\t\t\t\t\tvar mat = new THREE.Matrix4().fromArray( m, i * 16 );\n\t\t\t\t\t\t\t\t\t\t\tboneInverses.push( mat );\n\n\t\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t\tconsole.warn( \"WARNING: joint: '\" + jointId + \"' could not be found\" );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tchild.bind( new THREE.Skeleton( bones, boneInverses ), skinEntry.bindShapeMatrix );\n\n\t\t\t\t\t\t\t\t\tvar buildBoneGraph = function ( parentJson, parentObject, property ) {\n\n\t\t\t\t\t\t\t\t\t\tvar children = parentJson[ property ];\n\n\t\t\t\t\t\t\t\t\t\tif ( children === undefined ) return;\n\n\t\t\t\t\t\t\t\t\t\tfor ( var i = 0, il = children.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\tvar nodeId = children[ i ];\n\t\t\t\t\t\t\t\t\t\t\tvar bone = __nodes[ nodeId ];\n\t\t\t\t\t\t\t\t\t\t\tvar boneJson = json.nodes[ nodeId ];\n\n\t\t\t\t\t\t\t\t\t\t\tif ( bone !== undefined && bone.isBone === true && boneJson !== undefined ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\tparentObject.add( bone );\n\t\t\t\t\t\t\t\t\t\t\t\tbuildBoneGraph( boneJson, bone, 'children' );\n\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t\tbuildBoneGraph( node, child, 'skeletons' );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t_node.add( child );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( node.camera !== undefined ) {\n\n\t\t\t\t\t\tvar camera = dependencies.cameras[ node.camera ];\n\n\t\t\t\t\t\t_node.add( camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( node.extensions\n\t\t\t\t\t\t\t && node.extensions[ EXTENSIONS.KHR_MATERIALS_COMMON ]\n\t\t\t\t\t\t\t && node.extensions[ EXTENSIONS.KHR_MATERIALS_COMMON ].light ) {\n\n\t\t\t\t\t\tvar extensionLights = extensions[ EXTENSIONS.KHR_MATERIALS_COMMON ].lights;\n\t\t\t\t\t\tvar light = extensionLights[ node.extensions[ EXTENSIONS.KHR_MATERIALS_COMMON ].light ];\n\n\t\t\t\t\t\t_node.add( light );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn _node;\n\n\t\t\t\t} );\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\tGLTFParser.prototype.loadScenes = function () {\n\n\t\tvar json = this.json;\n\n\t\t// scene node hierachy builder\n\n\t\tfunction buildNodeHierachy( nodeId, parentObject, allNodes ) {\n\n\t\t\tvar _node = allNodes[ nodeId ];\n\t\t\tparentObject.add( _node );\n\n\t\t\tvar node = json.nodes[ nodeId ];\n\n\t\t\tif ( node.children ) {\n\n\t\t\t\tvar children = node.children;\n\n\t\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar child = children[ i ];\n\t\t\t\t\tbuildNodeHierachy( child, _node, allNodes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this._withDependencies( [\n\n\t\t\t\"nodes\"\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\treturn _each( json.scenes, function ( scene ) {\n\n\t\t\t\tvar _scene = new THREE.Scene();\n\t\t\t\tif ( scene.name !== undefined ) _scene.name = scene.name;\n\n\t\t\t\tif ( scene.extras ) _scene.userData = scene.extras;\n\n\t\t\t\tvar nodes = scene.nodes || [];\n\n\t\t\t\tfor ( var i = 0, l = nodes.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar nodeId = nodes[ i ];\n\t\t\t\t\tbuildNodeHierachy( nodeId, _scene, dependencies.nodes );\n\n\t\t\t\t}\n\n\t\t\t\t_scene.traverse( function ( child ) {\n\n\t\t\t\t\t// Register raw material meshes with LegacyGLTFLoader.Shaders\n\t\t\t\t\tif ( child.material && child.material.isRawShaderMaterial ) {\n\n\t\t\t\t\t\tchild.gltfShader = new GLTFShader( child, dependencies.nodes );\n\t\t\t\t\t\tchild.onBeforeRender = function(renderer, scene, camera){\n\t\t\t\t\t\t\tthis.gltfShader.update(scene, camera);\n\t\t\t\t\t\t};\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\treturn _scene;\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\treturn LegacyGLTFLoader;\n\n} )();\n","import utf8Decoder from '../utils/Utf8Decoder';\n\nexport default {\n    /** @module BatchTableParser */\n    /** Parse batch table buffer and convert to JSON\n     * @function parse\n     * @param {ArrayBuffer} buffer - the batch table buffer.\n     * @return {Promise} - a promise that resolves with a JSON object.\n     *\n     */\n    parse(buffer) {\n        const content = utf8Decoder.decode(new Uint8Array(buffer));\n        const json = JSON.parse(content);\n        return Promise.resolve(json);\n    },\n};\n","import * as THREE from 'three';\nimport GLTFLoader from './GLTFLoader';\nimport LegacyGLTFLoader from './LegacyGLTFLoader';\nimport BatchTableParser from './BatchTableParser';\nimport Capabilities from '../Core/System/Capabilities';\nimport shaderUtils from '../Renderer/Shader/ShaderUtils';\nimport utf8Decoder from '../utils/Utf8Decoder';\n\nconst matrixChangeUpVectorZtoY = (new THREE.Matrix4()).makeRotationX(Math.PI / 2);\n// For gltf rotation\nconst matrixChangeUpVectorZtoX = (new THREE.Matrix4()).makeRotationZ(-Math.PI / 2);\n\nconst glTFLoader = new GLTFLoader();\n\nconst legacyGLTFLoader = new LegacyGLTFLoader();\n\nfunction filterUnsupportedSemantics(obj) {\n    // see GLTFLoader GLTFShader.prototype.update function\n    const supported = [\n        'MODELVIEW',\n        'MODELVIEWINVERSETRANSPOSE',\n        'PROJECTION',\n        'JOINTMATRIX'];\n\n    if (obj.gltfShader) {\n        const names = [];\n        // eslint-disable-next-line guard-for-in\n        for (const name in obj.gltfShader.boundUniforms) {\n            names.push(name);\n        }\n        for (const name of names) {\n            const semantic = obj.gltfShader.boundUniforms[name].semantic;\n            if (supported.indexOf(semantic) < 0) {\n                delete obj.gltfShader.boundUniforms[name];\n            }\n        }\n    }\n}\n// parse for RTC values\nfunction applyOptionalCesiumRTC(data, gltf) {\n    const headerView = new DataView(data, 0, 20);\n    const contentArray = new Uint8Array(data, 20, headerView.getUint32(12, true));\n    const content = utf8Decoder.decode(new Uint8Array(contentArray));\n    const json = JSON.parse(content);\n    if (json.extensions && json.extensions.CESIUM_RTC) {\n        gltf.position.fromArray(json.extensions.CESIUM_RTC.center);\n        gltf.updateMatrixWorld(true);\n    }\n}\n\nexport default {\n    /** @module B3dmParser */\n    /** Parse b3dm buffer and extract THREE.Scene and batch table\n     * @function parse\n     * @param {ArrayBuffer} buffer - the b3dm buffer.\n     * @param {Object} options - additional properties.\n     * @param {string=} [options.gltfUpAxis='Y'] - embedded glTF model up axis.\n     * @param {string} options.urlBase - the base url of the b3dm file (used to fetch textures for the embedded glTF model).\n     * @param {boolean=} [options.doNotPatchMaterial='false'] - disable patching material with logarithmic depth buffer support.\n     * @param {float} [options.opacity=1.0] - the b3dm opacity.\n     * @param {boolean|Material=} [options.overrideMaterials='false'] - override b3dm's embedded glTF materials. If overrideMaterials is a three.js material, it will be the material used to override.\n     * @return {Promise} - a promise that resolves with an object containig a THREE.Scene (gltf) and a batch table (batchTable).\n     *\n     */\n    parse(buffer, options) {\n        const gltfUpAxis = options.gltfUpAxis;\n        const urlBase = options.urlBase;\n        if (!buffer) {\n            throw new Error('No array buffer provided.');\n        }\n\n        const view = new DataView(buffer, 4);   // starts after magic\n\n        let byteOffset = 0;\n        const b3dmHeader = {};\n\n        // Magic type is unsigned char [4]\n        b3dmHeader.magic = utf8Decoder.decode(new Uint8Array(buffer, 0, 4));\n        if (b3dmHeader.magic) {\n            // Version, byteLength, batchTableJSONByteLength, batchTableBinaryByteLength and batchTable types are uint32\n            b3dmHeader.version = view.getUint32(byteOffset, true);\n            byteOffset += Uint32Array.BYTES_PER_ELEMENT;\n\n            b3dmHeader.byteLength = view.getUint32(byteOffset, true);\n            byteOffset += Uint32Array.BYTES_PER_ELEMENT;\n\n            b3dmHeader.FTJSONLength = view.getUint32(byteOffset, true);\n            byteOffset += Uint32Array.BYTES_PER_ELEMENT;\n\n            b3dmHeader.FTBinaryLength = view.getUint32(byteOffset, true);\n            byteOffset += Uint32Array.BYTES_PER_ELEMENT;\n\n            b3dmHeader.BTJSONLength = view.getUint32(byteOffset, true);\n            byteOffset += Uint32Array.BYTES_PER_ELEMENT;\n\n            b3dmHeader.BTBinaryLength = view.getUint32(byteOffset, true);\n            byteOffset += Uint32Array.BYTES_PER_ELEMENT;\n\n            const promises = [];\n            if (b3dmHeader.BTJSONLength > 0) {\n                const sizeBegin = 28 + b3dmHeader.FTJSONLength + b3dmHeader.FTBinaryLength;\n                promises.push(BatchTableParser.parse(\n                    buffer.slice(sizeBegin, b3dmHeader.BTJSONLength + sizeBegin)));\n            } else {\n                promises.push(Promise.resolve({}));\n            }\n            // TODO: missing feature table\n            promises.push(new Promise((resolve/* , reject */) => {\n                const onload = (gltf) => {\n                    for (const scene of gltf.scenes) {\n                        scene.traverse(filterUnsupportedSemantics);\n                    }\n                    // Rotation managed\n                    if (gltfUpAxis === undefined || gltfUpAxis === 'Y') {\n                        gltf.scene.applyMatrix(matrixChangeUpVectorZtoY);\n                    } else if (gltfUpAxis === 'X') {\n                        gltf.scene.applyMatrix(matrixChangeUpVectorZtoX);\n                    }\n\n                    // RTC managed\n                    applyOptionalCesiumRTC(buffer.slice(28 + b3dmHeader.FTJSONLength +\n                        b3dmHeader.FTBinaryLength + b3dmHeader.BTJSONLength +\n                        b3dmHeader.BTBinaryLength), gltf.scene);\n\n                    const init_mesh = function f_init(mesh) {\n                        mesh.frustumCulled = false;\n                        if (mesh.material) {\n                            if (options.overrideMaterials) {\n                                mesh.material.dispose();\n                                if (typeof (options.overrideMaterials) === 'object' &&\n                                    options.overrideMaterials.isMaterial) {\n                                    mesh.material = options.overrideMaterials.clone();\n                                } else {\n                                    mesh.material = new THREE.MeshLambertMaterial({ color: 0xffffff });\n                                }\n                            } else if (Capabilities.isLogDepthBufferSupported()\n                                        && mesh.material.isRawShaderMaterial\n                                        && !options.doNotPatchMaterial) {\n                                shaderUtils.patchMaterialForLogDepthSupport(mesh.material);\n                                console.warn('b3dm shader has been patched to add log depth buffer support');\n                            }\n                            mesh.material.transparent = options.opacity < 1.0;\n                            mesh.material.opacity = options.opacity;\n                        }\n                    };\n                    gltf.scene.traverse(init_mesh);\n\n                    resolve(gltf);\n                };\n\n                const gltfBuffer = buffer.slice(28 + b3dmHeader.FTJSONLength +\n                    b3dmHeader.FTBinaryLength + b3dmHeader.BTJSONLength +\n                    b3dmHeader.BTBinaryLength);\n\n                const version = new DataView(gltfBuffer, 0, 20).getUint32(4, true);\n\n                if (version === 1) {\n                    legacyGLTFLoader.parse(gltfBuffer, onload, urlBase);\n                } else {\n                    glTFLoader.parse(gltfBuffer, urlBase, onload);\n                }\n            }));\n            return Promise.all(promises).then(values => ({ gltf: values[1], batchTable: values[0] }));\n        } else {\n            throw new Error('Invalid b3dm file.');\n        }\n    },\n};\n","import * as THREE from 'three';\nimport BatchTableParser from './BatchTableParser';\nimport utf8Decoder from '../utils/Utf8Decoder';\n\nexport default {\n    /** @module PntsParser */\n    /** Parse pnts buffer and extract THREE.Points and batch table\n     * @function parse\n     * @param {ArrayBuffer} buffer - the pnts buffer.\n     * @return {Promise} - a promise that resolves with an object containig a THREE.Points (point) and a batch table (batchTable).\n     *\n     */\n    parse: function parse(buffer) {\n        if (!buffer) {\n            throw new Error('No array buffer provided.');\n        }\n        const view = new DataView(buffer);\n\n        let byteOffset = 0;\n        const pntsHeader = {};\n        let batchTable = {};\n        let point = {};\n\n        // Magic type is unsigned char [4]\n        pntsHeader.magic = utf8Decoder.decode(new Uint8Array(buffer, byteOffset, 4));\n        byteOffset += 4;\n\n        if (pntsHeader.magic) {\n            // Version, byteLength, batchTableJSONByteLength, batchTableBinaryByteLength and batchTable types are uint32\n            pntsHeader.version = view.getUint32(byteOffset, true);\n            byteOffset += Uint32Array.BYTES_PER_ELEMENT;\n\n            pntsHeader.byteLength = view.getUint32(byteOffset, true);\n            byteOffset += Uint32Array.BYTES_PER_ELEMENT;\n\n            pntsHeader.FTJSONLength = view.getUint32(byteOffset, true);\n            byteOffset += Uint32Array.BYTES_PER_ELEMENT;\n\n            pntsHeader.FTBinaryLength = view.getUint32(byteOffset, true);\n            byteOffset += Uint32Array.BYTES_PER_ELEMENT;\n\n            pntsHeader.BTJSONLength = view.getUint32(byteOffset, true);\n            byteOffset += Uint32Array.BYTES_PER_ELEMENT;\n\n            pntsHeader.BTBinaryLength = view.getUint32(byteOffset, true);\n            byteOffset += Uint32Array.BYTES_PER_ELEMENT;\n\n            // binary table\n            if (pntsHeader.FTBinaryLength > 0) {\n                point = parseFeatureBinary(buffer, byteOffset, pntsHeader.FTJSONLength);\n            }\n\n            // batch table\n            if (pntsHeader.BTJSONLength > 0) {\n                const sizeBegin = 28 + pntsHeader.FTJSONLength + pntsHeader.FTBinaryLength;\n                batchTable = BatchTableParser.parse(\n                    buffer.slice(sizeBegin, pntsHeader.BTJSONLength + sizeBegin));\n            }\n\n            const pnts = { point, batchTable };\n            return Promise.resolve(pnts);\n        } else {\n            throw new Error('Invalid pnts file.');\n        }\n    },\n};\n\nfunction parseFeatureBinary(array, byteOffset, FTJSONLength) {\n    // Init geometry\n    const geometry = new THREE.BufferGeometry();\n\n    // init Array feature binary\n    const subArrayJson = utf8Decoder.decode(new Uint8Array(array, byteOffset, FTJSONLength));\n    const parseJSON = JSON.parse(subArrayJson);\n    let lengthFeature;\n    if (parseJSON.POINTS_LENGTH) {\n        lengthFeature = parseJSON.POINTS_LENGTH;\n    }\n    if (parseJSON.POSITION) {\n        const byteOffsetPos = (parseJSON.POSITION.byteOffset + subArrayJson.length + byteOffset);\n        const positionArray = new Float32Array(array, byteOffsetPos, lengthFeature * 3);\n        geometry.addAttribute('position', new THREE.BufferAttribute(positionArray, 3));\n    }\n    if (parseJSON.RGB) {\n        const byteOffsetCol = parseJSON.RGB.byteOffset + subArrayJson.length + byteOffset;\n        const colorArray = new Uint8Array(array, byteOffsetCol, lengthFeature * 3);\n        geometry.addAttribute('color', new THREE.BufferAttribute(colorArray, 3, true));\n    }\n    if (parseJSON.POSITION_QUANTIZED) {\n        throw new Error('For pnts loader, POSITION_QUANTIZED: not yet managed');\n    }\n    if (parseJSON.RGBA) {\n        throw new Error('For pnts loader, RGBA: not yet managed');\n    }\n    if (parseJSON.RGB565) {\n        throw new Error('For pnts loader, RGB565: not yet managed');\n    }\n    if (parseJSON.NORMAL) {\n        throw new Error('For pnts loader, NORMAL: not yet managed');\n    }\n    if (parseJSON.NORMAL_OCT16P) {\n        throw new Error('For pnts loader, NORMAL_OCT16P: not yet managed');\n    }\n    if (parseJSON.BATCH_ID) {\n        throw new Error('For pnts loader, BATCH_ID: not yet managed');\n    }\n\n    // Add RTC feature\n    const offset = parseJSON.RTC_CENTER ?\n        new THREE.Vector3().fromArray(parseJSON.RTC_CENTER) : undefined;\n\n    return {\n        geometry,\n        offset,\n    };\n}\n","import * as THREE from 'three';\nimport B3dmParser from '../Parser/B3dmParser';\nimport PntsParser from '../Parser/PntsParser';\nimport Fetcher from './Fetcher';\nimport OBB from '../Renderer/ThreeExtended/OBB';\nimport Extent from '../Core/Geographic/Extent';\nimport { pre3dTilesUpdate, process3dTilesNode, init3dTilesLayer } from '../Process/3dTilesProcessing';\nimport utf8Decoder from '../utils/Utf8Decoder';\n\n\nexport function $3dTilesIndex(tileset, baseURL) {\n    let counter = 1;\n    this.index = {};\n    const inverseTileTransform = new THREE.Matrix4();\n    const recurse = function recurse_f(node, baseURL, parent) {\n        // compute transform (will become Object3D.matrix when the object is downloaded)\n        node.transform = node.transform ? (new THREE.Matrix4()).fromArray(node.transform) : undefined;\n\n        // The only reason to store _worldFromLocalTransform is because of extendTileset where we need the\n        // transform chain for one node.\n        node._worldFromLocalTransform = node.transform;\n        if (parent && parent._worldFromLocalTransform) {\n            if (node.transform) {\n                node._worldFromLocalTransform = new THREE.Matrix4().multiplyMatrices(\n                    parent._worldFromLocalTransform, node.transform);\n            } else {\n                node._worldFromLocalTransform = parent._worldFromLocalTransform;\n            }\n        }\n\n        // getBox only use inverseTileTransform for volume.region so let's not\n        // compute the inverse matrix each time\n        if ((node.viewerRequestVolume && node.viewerRequestVolume.region)\n            || (node.boundingVolume && node.boundingVolume.region)) {\n            if (node._worldFromLocalTransform) {\n                inverseTileTransform.getInverse(node._worldFromLocalTransform);\n            } else {\n                inverseTileTransform.identity();\n            }\n        }\n\n        node.viewerRequestVolume = node.viewerRequestVolume ? getBox(node.viewerRequestVolume, inverseTileTransform) : undefined;\n        node.boundingVolume = getBox(node.boundingVolume, inverseTileTransform);\n\n        this.index[counter] = node;\n        node.tileId = counter;\n        node.baseURL = baseURL;\n        counter++;\n        if (node.children) {\n            for (const child of node.children) {\n                recurse(child, baseURL, node);\n            }\n        }\n    }.bind(this);\n    recurse(tileset.root, baseURL);\n\n    this.extendTileset = function extendTileset(tileset, nodeId, baseURL) {\n        recurse(tileset.root, baseURL, this.index[nodeId]);\n        this.index[nodeId].children = [tileset.root];\n        this.index[nodeId].isTileset = true;\n    };\n}\n\nexport function getObjectToUpdateForAttachedLayers(meta) {\n    if (meta.content) {\n        const result = [];\n        meta.content.traverse((obj) => {\n            if (obj.isObject3D && obj.material && obj.layer == meta.layer) {\n                result.push(obj);\n            }\n        });\n        const p = meta.parent;\n        if (p && p.content) {\n            return {\n                elements: result,\n                parent: p.content,\n            };\n        } else {\n            return {\n                elements: result,\n            };\n        }\n    }\n}\n\nfunction preprocessDataLayer(layer, view, scheduler) {\n    layer.preUpdate = layer.preUpdate || pre3dTilesUpdate;\n    layer.update = layer.update || process3dTilesNode();\n    layer.sseThreshold = layer.sseThreshold || 16;\n    layer.cleanupDelay = layer.cleanupDelay || 1000;\n    // override the default method, since updated objects are metadata in this case\n    layer.getObjectToUpdateForAttachedLayers = getObjectToUpdateForAttachedLayers;\n\n    layer._cleanableTiles = [];\n    return Fetcher.json(layer.url, layer.networkOptions).then((tileset) => {\n        layer.tileset = tileset;\n        const urlPrefix = layer.url.slice(0, layer.url.lastIndexOf('/') + 1);\n        layer.tileIndex = new $3dTilesIndex(tileset, urlPrefix);\n        layer.asset = tileset.asset;\n        return init3dTilesLayer(view, scheduler, layer, tileset.root);\n    });\n}\n\nfunction getBox(volume, inverseTileTransform) {\n    if (volume.region) {\n        const region = volume.region;\n        const extent = new Extent('EPSG:4326',\n            THREE.Math.radToDeg(region[0]),\n            THREE.Math.radToDeg(region[2]),\n            THREE.Math.radToDeg(region[1]),\n            THREE.Math.radToDeg(region[3]));\n        const box = OBB.extentToOBB(extent, region[4], region[5]);\n        // at this point box.matrix = box.epsg4978_from_local, so\n        // we transform it in parent_from_local by using parent's epsg4978_from_local\n        // which from our point of view is epsg4978_from_parent.\n        // box.matrix = (epsg4978_from_parent ^ -1) * epsg4978_from_local\n        //            =  parent_from_epsg4978 * epsg4978_from_local\n        //            =  parent_from_local\n        box.matrix.premultiply(inverseTileTransform);\n        // update position, rotation and scale\n        box.matrix.decompose(box.position, box.quaternion, box.scale);\n        return { region: box };\n    } else if (volume.box) {\n        // TODO: only works for axis aligned boxes\n        const box = volume.box;\n        // box[0], box[1], box[2] = center of the box\n        // box[3], box[4], box[5] = x axis direction and half-length\n        // box[6], box[7], box[8] = y axis direction and half-length\n        // box[9], box[10], box[11] = z axis direction and half-length\n        const center = new THREE.Vector3(box[0], box[1], box[2]);\n        const w = center.x - box[3];\n        const e = center.x + box[3];\n        const s = center.y - box[7];\n        const n = center.y + box[7];\n        const b = center.z - box[11];\n        const t = center.z + box[11];\n\n        return { box: new THREE.Box3(new THREE.Vector3(w, s, b), new THREE.Vector3(e, n, t)) };\n    } else if (volume.sphere) {\n        const sphere = new THREE.Sphere(new THREE.Vector3(volume.sphere[0], volume.sphere[1], volume.sphere[2]), volume.sphere[3]);\n        return { sphere };\n    }\n}\n\nfunction b3dmToMesh(data, layer, url) {\n    const urlBase = THREE.LoaderUtils.extractUrlBase(url);\n    const options = {\n        gltfUpAxis: layer.asset.gltfUpAxis,\n        urlBase,\n        overrideMaterials: layer.overrideMaterials,\n        doNotPatchMaterial: layer.doNotPatchMaterial,\n        opacity: layer.opacity,\n    };\n    return B3dmParser.parse(data, options).then((result) => {\n        const batchTable = result.batchTable;\n        const object3d = result.gltf.scene;\n        return { batchTable, object3d };\n    });\n}\n\nfunction pntsParse(data, layer) {\n    return PntsParser.parse(data).then((result) => {\n        const material = layer.material ?\n            layer.material.clone() :\n            new THREE.PointsMaterial({ size: 0.05, vertexColors: THREE.VertexColors });\n\n        // creation points with geometry and material\n        const points = new THREE.Points(result.point.geometry, material);\n\n        if (result.point.offset) {\n            points.position.copy(result.point.offset);\n        }\n\n        return { object3d: points };\n    });\n}\n\nexport function configureTile(tile, layer, metadata, parent) {\n    tile.frustumCulled = false;\n    tile.layer = layer;\n\n    // parse metadata\n    if (metadata.transform) {\n        tile.applyMatrix(metadata.transform);\n    }\n    tile.geometricError = metadata.geometricError;\n    tile.tileId = metadata.tileId;\n    if (metadata.refine) {\n        tile.additiveRefinement = (metadata.refine.toUpperCase() === 'ADD');\n    } else {\n        tile.additiveRefinement = parent ? (parent.additiveRefinement) : false;\n    }\n    tile.viewerRequestVolume = metadata.viewerRequestVolume;\n    tile.boundingVolume = metadata.boundingVolume;\n    if (tile.boundingVolume.region) {\n        tile.add(tile.boundingVolume.region);\n    }\n    tile.updateMatrixWorld();\n}\n\nfunction executeCommand(command) {\n    const layer = command.layer;\n    const metadata = command.metadata;\n    const tile = new THREE.Object3D();\n    configureTile(tile, layer, metadata, command.requester);\n    const path = metadata.content ? metadata.content.url : undefined;\n\n    const setLayer = (obj) => {\n        obj.layers.set(layer.threejsLayer);\n        obj.userData.metadata = metadata;\n        obj.layer = layer;\n        if (obj.material) {\n            obj.material.transparent = layer.opacity < 1.0;\n            obj.material.opacity = layer.opacity;\n            obj.material.wireframe = layer.wireframe;\n        }\n    };\n    if (path) {\n        // Check if we have relative or absolute url (with tileset's lopocs for example)\n        const url = path.startsWith('http') ? path : metadata.baseURL + path;\n        const supportedFormats = {\n            b3dm: b3dmToMesh,\n            pnts: pntsParse,\n        };\n        return Fetcher.arrayBuffer(url, layer.networkOptions).then((result) => {\n            if (result !== undefined) {\n                let func;\n                const magic = utf8Decoder.decode(new Uint8Array(result, 0, 4));\n                if (magic[0] === '{') {\n                    result = JSON.parse(utf8Decoder.decode(new Uint8Array(result)));\n                    const newPrefix = url.slice(0, url.lastIndexOf('/') + 1);\n                    layer.tileIndex.extendTileset(result, metadata.tileId, newPrefix);\n                } else if (magic == 'b3dm') {\n                    func = supportedFormats.b3dm;\n                } else if (magic == 'pnts') {\n                    func = supportedFormats.pnts;\n                } else {\n                    return Promise.reject(`Unsupported magic code ${magic}`);\n                }\n                if (func) {\n                    // TODO: request should be delayed if there is a viewerRequestVolume\n                    return func(result, layer, url).then((content) => {\n                        tile.content = content.object3d;\n                        if (content.batchTable) {\n                            tile.batchTable = content.batchTable;\n                        }\n                        tile.add(content.object3d);\n                        tile.traverse(setLayer);\n                        return tile;\n                    });\n                }\n            }\n            tile.traverse(setLayer);\n            return tile;\n        });\n    } else {\n        tile.traverse(setLayer);\n        return Promise.resolve(tile);\n    }\n}\n\nexport default {\n    preprocessDataLayer,\n    executeCommand,\n};\n","import * as THREE from 'three';\n\n// See the different constants holding ordinal, name, numElements, byteSize in PointAttributes.cpp in PotreeConverter\n// elementByteSize is byteSize / numElements\nconst POINT_ATTTRIBUTES = {\n    POSITION_CARTESIAN: {\n        numElements: 3,\n        arrayType: Float32Array,\n        attributeName: 'position',\n    },\n    COLOR_PACKED: {\n        numElements: 4,\n        arrayType: Uint8Array,\n        attributeName: 'color',\n        normalized: true,\n    },\n    INTENSITY: {\n        numElements: 1,\n        numByte: 2,\n        // using Float32Array because Float16Array doesn't exist\n        arrayType: Float32Array,\n        attributeName: 'intensity',\n        normalized: true,\n    },\n    CLASSIFICATION: {\n        numElements: 1,\n        arrayType: Uint8Array,\n        attributeName: 'classification',\n    },\n    // Note: at the time of writing, PotreeConverter will only generate normals in Oct16 format\n    // see PotreeConverter.cpp:121\n    // we keep all the historical value to still supports old conversion\n    NORMAL_SPHEREMAPPED: {\n        numElements: 2,\n        arrayType: Uint8Array,\n        attributeName: 'sphereMappedNormal',\n    },\n    // see https://web.archive.org/web/20150303053317/http://lgdv.cs.fau.de/get/1602\n    NORMAL_OCT16: {\n        numElements: 2,\n        arrayType: Uint8Array,\n        attributeName: 'oct16Normal',\n    },\n    NORMAL: {\n        numElements: 3,\n        arrayType: Float32Array,\n        attributeName: 'normal',\n    },\n};\n\nfor (const potreeName of Object.keys(POINT_ATTTRIBUTES)) {\n    const attr = POINT_ATTTRIBUTES[potreeName];\n    attr.potreeName = potreeName;\n    attr.numByte = attr.numByte || attr.arrayType.BYTES_PER_ELEMENT;\n    attr.byteSize = attr.numElements * attr.numByte;\n    attr.normalized = attr.normalized || false;\n    // chrome is known to perform badly when we call a method without respecting its arity\n    const fnName = `getUint${attr.numByte * 8}`;\n    attr.getValue = attr.numByte === 1 ?\n        function getValue(view, offset) { return view[fnName](offset); } :\n        function getValue(view, offset) { return view[fnName](offset, true); };\n}\n\nexport default {\n    /** @module PotreeBinParser */\n    /** Parse .bin PotreeConverter format and convert to a THREE.BufferGeometry\n     * @function parse\n     * @param {ArrayBuffer} buffer - the bin buffer.\n     * @param {Object} pointAttributes - the point attributes information contained in layer.metadata coming from cloud.js\n     * @return {Promise} - a promise that resolves with a THREE.BufferGeometry.\n     *\n     */\n    parse: function parse(buffer, pointAttributes) {\n        if (!buffer) {\n            throw new Error('No array buffer provided.');\n        }\n\n        const view = new DataView(buffer);\n        // Format: X1,Y1,Z1,R1,G1,B1,A1,[...],XN,YN,ZN,RN,GN,BN,AN\n        let pointByteSize = 0;\n        for (const potreeName of pointAttributes) {\n            pointByteSize += POINT_ATTTRIBUTES[potreeName].byteSize;\n        }\n        const numPoints = Math.floor(buffer.byteLength / pointByteSize);\n\n        const geometry = new THREE.BufferGeometry();\n        let elemOffset = 0;\n        let attrOffset = 0;\n        for (const potreeName of pointAttributes) {\n            const attr = POINT_ATTTRIBUTES[potreeName];\n            const arrayLength = attr.numElements * numPoints;\n            const array = new attr.arrayType(arrayLength);\n            for (let arrayOffset = 0; arrayOffset < arrayLength; arrayOffset += attr.numElements) {\n                for (let elemIdx = 0; elemIdx < attr.numElements; elemIdx++) {\n                    array[arrayOffset + elemIdx] = attr.getValue(view, attrOffset + elemIdx * attr.numByte);\n                }\n                attrOffset += pointByteSize;\n            }\n            elemOffset += attr.byteSize;\n            attrOffset = elemOffset;\n            geometry.addAttribute(attr.attributeName, new THREE.BufferAttribute(array, attr.numElements, attr.normalized));\n        }\n\n        geometry.computeBoundingBox();\n\n        return Promise.resolve(geometry);\n    },\n};\n","import * as THREE from 'three';\n\nexport default {\n    /** @module PotreeCinParser */\n    /** Parse .cin PotreeConverter format (see {@link https://github.com/peppsac/PotreeConverter/tree/custom_bin}) and convert to a THREE.BufferGeometry\n     * @function parse\n     * @param {ArrayBuffer} buffer - the cin buffer.\n     * @return {Promise} - a promise that resolves with a THREE.BufferGeometry.\n     *\n     */\n    parse: function parse(buffer) {\n        if (!buffer) {\n            throw new Error('No array buffer provided.');\n        }\n\n        // Format: MinX,MinY,MinZ,MaxX,MaxY,MaxZ,X1,Y1,Z1,[...],XN,YN,ZN,R1,G1,B1,A1,[...],RN,GN,BN,AN\n        const view = new DataView(buffer, 0, 6 * 4);\n        const min = new THREE.Vector3(view.getFloat32(0, true), view.getFloat32(4, true), view.getFloat32(8, true));\n        const max = new THREE.Vector3(view.getFloat32(12, true), view.getFloat32(16, true), view.getFloat32(20, true));\n        const box = new THREE.Box3(min, max);\n\n        const numPoints = Math.floor((buffer.byteLength - 24) / 16);\n\n        const positions = new Float32Array(buffer, 24, 3 * numPoints);\n        const colors = new Uint8Array(buffer, 24 + 3 * 4 * numPoints, 4 * numPoints);\n\n        const geometry = new THREE.BufferGeometry();\n        geometry.addAttribute('position', new THREE.BufferAttribute(positions, 3));\n        geometry.addAttribute('color', new THREE.BufferAttribute(colors, 4, true));\n        geometry.boundingBox = box;\n\n        return Promise.resolve(geometry);\n    },\n};\n","import * as THREE from 'three';\nimport Fetcher from './Fetcher';\nimport PointCloudProcessing from '../Process/PointCloudProcessing';\nimport PotreeBinParser from '../Parser/PotreeBinParser';\nimport PotreeCinParser from '../Parser/PotreeCinParser';\nimport PointsMaterial, { MODE } from '../Renderer/PointsMaterial';\nimport Picking from '../Core/Picking';\nimport Extent from '../Core/Geographic/Extent';\n\n// Create an A(xis)A(ligned)B(ounding)B(ox) for the child `childIndex` of one aabb.\n// (PotreeConverter protocol builds implicit octree hierarchy by applying the same\n// subdivision algo recursively)\nfunction createChildAABB(aabb, childIndex) {\n    // Code taken from potree\n    var min = aabb.min;\n    var max = aabb.max;\n    var dHalfLength = new THREE.Vector3().copy(max).sub(min).multiplyScalar(0.5);\n    var xHalfLength = new THREE.Vector3(dHalfLength.x, 0, 0);\n    var yHalfLength = new THREE.Vector3(0, dHalfLength.y, 0);\n    var zHalfLength = new THREE.Vector3(0, 0, dHalfLength.z);\n\n    var cmin = min;\n    var cmax = new THREE.Vector3().add(min).add(dHalfLength);\n\n    if (childIndex === 1) {\n        min = new THREE.Vector3().copy(cmin).add(zHalfLength);\n        max = new THREE.Vector3().copy(cmax).add(zHalfLength);\n    } else if (childIndex === 3) {\n        min = new THREE.Vector3().copy(cmin).add(zHalfLength).add(yHalfLength);\n        max = new THREE.Vector3().copy(cmax).add(zHalfLength).add(yHalfLength);\n    } else if (childIndex === 0) {\n        min = cmin;\n        max = cmax;\n    } else if (childIndex === 2) {\n        min = new THREE.Vector3().copy(cmin).add(yHalfLength);\n        max = new THREE.Vector3().copy(cmax).add(yHalfLength);\n    } else if (childIndex === 5) {\n        min = new THREE.Vector3().copy(cmin).add(zHalfLength).add(xHalfLength);\n        max = new THREE.Vector3().copy(cmax).add(zHalfLength).add(xHalfLength);\n    } else if (childIndex === 7) {\n        min = new THREE.Vector3().copy(cmin).add(dHalfLength);\n        max = new THREE.Vector3().copy(cmax).add(dHalfLength);\n    } else if (childIndex === 4) {\n        min = new THREE.Vector3().copy(cmin).add(xHalfLength);\n        max = new THREE.Vector3().copy(cmax).add(xHalfLength);\n    } else if (childIndex === 6) {\n        min = new THREE.Vector3().copy(cmin).add(xHalfLength).add(yHalfLength);\n        max = new THREE.Vector3().copy(cmax).add(xHalfLength).add(yHalfLength);\n    }\n\n    return new THREE.Box3(min, max);\n}\n\n\nfunction parseOctree(layer, hierarchyStepSize, root) {\n    return Fetcher.arrayBuffer(`${root.baseurl}/r${root.name}.hrc`, layer.fetchOptions).then((blob) => {\n        const view = new DataView(blob);\n\n        const stack = [];\n\n        let offset = 0;\n\n        root.childrenBitField = view.getUint8(0); offset += 1;\n        root.numPoints = view.getUint32(1, true); offset += 4;\n        root.children = [];\n\n        stack.push(root);\n\n        while (stack.length && offset < blob.byteLength) {\n            const snode = stack.shift();\n            // look up 8 children\n            for (let i = 0; i < 8; i++) {\n                // does snode have a #i child ?\n                if (snode.childrenBitField & (1 << i) && (offset + 5) <= blob.byteLength) {\n                    const c = view.getUint8(offset); offset += 1;\n                    let n = view.getUint32(offset, true); offset += 4;\n                    if (n == 0) {\n                        n = root.numPoints;\n                    }\n                    const childname = snode.name + i;\n                    const bounds = createChildAABB(snode.bbox, i);\n\n                    let url = root.baseurl;\n                    if ((childname.length % hierarchyStepSize) == 0) {\n                        const myname = childname.substr(root.name.length);\n                        url = `${root.baseurl}/${myname}`;\n                    }\n                    const item = {\n                        numPoints: n,\n                        childrenBitField: c,\n                        children: [],\n                        name: childname,\n                        baseurl: url,\n                        bbox: bounds,\n                        layer,\n                        parent: snode,\n                    };\n                    snode.children.push(item);\n                    stack.push(item);\n                }\n            }\n        }\n\n        return root;\n    });\n}\n\nfunction findChildrenByName(node, name) {\n    if (node.name === name) {\n        return node;\n    }\n    const charIndex = node.name.length;\n    for (let i = 0; i < node.children.length; i++) {\n        if (node.children[i].name[charIndex] == name[charIndex]) {\n            return findChildrenByName(node.children[i], name);\n        }\n    }\n    throw new Error(`Cannot find node with name '${name}'`);\n}\n\nlet nextuuid = 1;\nfunction addPickingAttribute(points) {\n    // generate unique id for picking\n    const numPoints = points.geometry.attributes.position.count;\n    const ids = new Uint8Array(4 * numPoints);\n    const baseId = nextuuid++;\n    if (numPoints > 0xffff || baseId > 0xffff) {\n        // TODO: fixme\n        console.warn('Currently picking is limited to Points with less than 65535 elements and less than 65535 Points instances');\n        return points;\n    }\n    for (let i = 0; i < numPoints; i++) {\n        // todo numpoints > 16bits\n        const v = (baseId << 16) | i;\n        ids[4 * i + 0] = (v & 0xff000000) >> 24;\n        ids[4 * i + 1] = (v & 0x00ff0000) >> 16;\n        ids[4 * i + 2] = (v & 0x0000ff00) >> 8;\n        ids[4 * i + 3] = (v & 0x000000ff) >> 0;\n    }\n\n    points.baseId = baseId;\n    points.geometry.addAttribute('unique_id', new THREE.BufferAttribute(ids, 4, true));\n    return points;\n}\n\nfunction computeBbox(layer) {\n    let bbox;\n    if (layer.isFromPotreeConverter) {\n        bbox = new THREE.Box3(\n            new THREE.Vector3(layer.metadata.boundingBox.lx, layer.metadata.boundingBox.ly, layer.metadata.boundingBox.lz),\n            new THREE.Vector3(layer.metadata.boundingBox.ux, layer.metadata.boundingBox.uy, layer.metadata.boundingBox.uz));\n    } else {\n        // lopocs\n        let idx = 0;\n        for (const entry of layer.metadata) {\n            if (entry.table == layer.table) {\n                break;\n            }\n            idx++;\n        }\n        bbox = new THREE.Box3(\n            new THREE.Vector3(layer.metadata[idx].bbox.xmin, layer.metadata[idx].bbox.ymin, layer.metadata[idx].bbox.zmin),\n            new THREE.Vector3(layer.metadata[idx].bbox.xmax, layer.metadata[idx].bbox.ymax, layer.metadata[idx].bbox.zmax));\n    }\n    return bbox;\n}\n\nfunction parseMetadata(metadata, layer) {\n    layer.metadata = metadata;\n\n    var customBinFormat = true;\n\n    // Lopocs pointcloud server can expose the same file structure as PotreeConverter output.\n    // The only difference is the metadata root file (cloud.js vs infos/sources), and we can\n    // check for the existence of a `scale` field.\n    // (if `scale` is defined => we're fetching files from PotreeConverter)\n    if (layer.metadata.scale != undefined) {\n        layer.isFromPotreeConverter = true;\n        // PotreeConverter format\n        customBinFormat = layer.metadata.pointAttributes === 'CIN';\n        // do we have normal information\n        const normal = Array.isArray(layer.metadata.pointAttributes) &&\n            layer.metadata.pointAttributes.find(elem => elem.startsWith('NORMAL'));\n        if (normal) {\n            layer.material.defines[normal] = 1;\n        }\n    } else {\n        // Lopocs\n        layer.metadata.scale = 1;\n        layer.metadata.octreeDir = `itowns/${layer.table}.points`;\n        layer.metadata.hierarchyStepSize = 1000000; // ignore this with lopocs\n        customBinFormat = true;\n    }\n\n    layer.parse = customBinFormat ? PotreeCinParser.parse : PotreeBinParser.parse;\n    layer.extension = customBinFormat ? 'cin' : 'bin';\n    layer.supportsProgressiveDisplay = customBinFormat;\n}\n\nexport function getObjectToUpdateForAttachedLayers(meta) {\n    if (meta.obj) {\n        const p = meta.parent;\n        if (p && p.obj) {\n            return {\n                element: meta.obj,\n                parent: p.obj,\n            };\n        } else {\n            return {\n                element: meta.obj,\n            };\n        }\n    }\n}\n\nexport default {\n    preprocessDataLayer(layer, view) {\n        if (!layer.file) {\n            layer.file = 'cloud.js';\n        }\n        if (!layer.group) {\n            layer.group = new THREE.Group();\n            layer.object3d.add(layer.group);\n            layer.group.updateMatrixWorld();\n        }\n\n        if (!layer.bboxes) {\n            layer.bboxes = new THREE.Group();\n            layer.object3d.add(layer.bboxes);\n            layer.bboxes.updateMatrixWorld();\n            layer.bboxes.visible = false;\n        }\n\n        // default options\n        layer.fetchOptions = layer.fetchOptions || {};\n        layer.octreeDepthLimit = layer.octreeDepthLimit || -1;\n        layer.pointBudget = layer.pointBudget || 2000000;\n        layer.pointSize = layer.pointSize === 0 || !isNaN(layer.pointSize) ? layer.pointSize : 4;\n        layer.sseThreshold = layer.sseThreshold || 2;\n        layer.material = layer.material || {};\n        layer.material = layer.material.isMaterial ? layer.material : new PointsMaterial(layer.material);\n        layer.material.defines = layer.material.defines || {};\n        layer.mode = MODE.COLOR;\n\n        // default update methods\n        layer.preUpdate = PointCloudProcessing.preUpdate;\n        layer.update = PointCloudProcessing.update;\n        layer.postUpdate = PointCloudProcessing.postUpdate;\n\n        // override the default method, since updated objects are metadata in this case\n        layer.getObjectToUpdateForAttachedLayers = getObjectToUpdateForAttachedLayers;\n\n        // this probably needs to be moved to somewhere else\n        layer.pickObjectsAt = (view, mouse, radius) => Picking.pickPointsAt(view, mouse, radius, layer);\n\n        return Fetcher.json(`${layer.url}/${layer.file}`, layer.fetchOptions)\n            .then((metadata) => {\n                parseMetadata(metadata, layer);\n                const bbox = computeBbox(layer);\n                return parseOctree(layer, layer.metadata.hierarchyStepSize, { baseurl: `${layer.url}/${layer.metadata.octreeDir}/r`, name: '', bbox });\n            })\n            .then((root) => {\n                // eslint-disable-next-line no-console\n                console.log('LAYER metadata:', root);\n                layer.root = root;\n                root.findChildrenByName = findChildrenByName.bind(root, root);\n                layer.extent = Extent.fromBox3(view.referenceCrs, root.bbox);\n\n                return layer;\n            });\n    },\n\n    executeCommand(command) {\n        const layer = command.layer;\n        const metadata = command.requester;\n\n        // Query HRC if we don't have children metadata yet.\n        if (metadata.childrenBitField && metadata.children.length === 0) {\n            parseOctree(layer, layer.metadata.hierarchyStepSize, metadata).then(() => command.view.notifyChange(layer, false));\n        }\n\n        // `isLeaf` is for lopocs and allows the pointcloud server to consider that the current\n        // node is the last one, even if we could subdivide even further.\n        // It's necessary because lopocs doens't know about the hierarchy (it generates it on the fly\n        // when we request .hrc files)\n        const url = `${metadata.baseurl}/r${metadata.name}.${layer.extension}?isleaf=${command.isLeaf ? 1 : 0}`;\n\n        return Fetcher.arrayBuffer(url, layer.fetchOptions).then(buffer => layer.parse(buffer, layer.metadata.pointAttributes)).then((geometry) => {\n            const points = new THREE.Points(geometry, layer.material.clone());\n            addPickingAttribute(points);\n            points.frustumCulled = false;\n            points.matrixAutoUpdate = false;\n            points.position.copy(metadata.bbox.min);\n            points.scale.set(layer.metadata.scale, layer.metadata.scale, layer.metadata.scale);\n            points.updateMatrix();\n            points.tightbbox = geometry.boundingBox.applyMatrix4(points.matrix);\n            points.layers.set(layer.threejsLayer);\n            points.layer = layer;\n            points.extent = Extent.fromBox3(command.view.referenceCrs, metadata.bbox);\n            points.userData.metadata = metadata;\n            return points;\n        });\n    },\n};\n\nexport const _testing = {\n    parseMetadata,\n};\n","/**\n * Generated On: 2015-10-5\n * Class: Scheduler\n * Description: Cette classe singleton gère les requetes/Commandes  de la scène. Ces commandes peuvent etre synchrone ou asynchrone. Elle permet d'executer, de prioriser  et d'annuler les commandes de la pile. Les commandes executées sont placées dans une autre file d'attente.\n */\n\nimport PriorityQueue from 'js-priority-queue';\nimport DataSourceProvider from '../../Provider/DataSourceProvider';\nimport TileProvider from '../../Provider/TileProvider';\nimport $3dTilesProvider from '../../Provider/3dTilesProvider';\nimport PointCloudProvider from '../../Provider/PointCloudProvider';\nimport CancelledCommandException from './CancelledCommandException';\n\nvar instanceScheduler = null;\n\nfunction queueOrdering(a, b) {\n    const cmp = b.priority - a.priority;\n    // Prioritize recent commands\n    if (cmp === 0) {\n        return b.timestamp - a.timestamp;\n    }\n    return cmp;\n}\n\nfunction drawNextLayer(storages) {\n    // Dithering algorithm to select the next layer\n    // see https://gamedev.stackexchange.com/a/95696 for more details\n    let sum = 0;\n    let selected;\n    let max;\n    for (const item of storages) {\n        const st = item[1];\n        if (st.q.length > 0) {\n            sum += st.priority;\n            st.accumulator += st.priority;\n            // Select the biggest accumulator\n            if (!selected || st.accumulator > max) {\n                selected = st;\n                max = st.accumulator;\n            }\n        }\n    }\n\n    if (selected) {\n        selected.accumulator -= sum;\n        return selected.q;\n    }\n}\n\nfunction _instanciateQueue() {\n    return {\n        queue(command) {\n            const layer = command.layer;\n            let st = this.storages.get(layer.id);\n            if (!st) {\n                st = {\n                    q: new PriorityQueue({ comparator: queueOrdering }),\n                    priority: 1,\n                    accumulator: 0,\n                };\n                this.storages.set(layer.id, st);\n            }\n            // update priority (layer.priority may have changed)\n            st.priority = layer.priority || 1;\n            st.q.queue(command);\n            this.counters.pending++;\n        },\n        storages: new Map(),\n        counters: {\n            // commands in progress\n            executing: 0,\n            // commands successfully executed\n            executed: 0,\n            // commands failed\n            failed: 0,\n            // commands cancelled\n            cancelled: 0,\n            // commands pending\n            pending: 0,\n        },\n        execute(cmd, provider) {\n            this.counters.pending--;\n            this.counters.executing++;\n            return provider.executeCommand(cmd).then((result) => {\n                this.counters.executing--;\n                cmd.resolve(result);\n                // only count successul commands\n                this.counters.executed++;\n            }, (err) => {\n                this.counters.executing--;\n                cmd.reject(err);\n                this.counters.failed++;\n                if (__DEBUG__ && this.counters.failed < 3) {\n                    console.error(err);\n                }\n            });\n        },\n    };\n}\n\n/**\n * The Scheduler is in charge of managing the [Providers]{@link Provider} that\n * are used to gather resources needed to display the layers on a {@link View}.\n * There is only one instance of a Scheduler per webview, and it is instanciated\n * with the creation of the first view.\n *\n * @constructor\n */\nfunction Scheduler() {\n    // Constructor\n    if (instanceScheduler !== null) {\n        throw new Error('Cannot instantiate more than one Scheduler');\n    }\n\n    this.defaultQueue = _instanciateQueue();\n    this.hostQueues = new Map();\n\n    this.providers = {};\n\n    this.maxCommandsPerHost = 6;\n\n    // TODO: add an options to not instanciate default providers\n    this.initDefaultProviders();\n}\n\nScheduler.prototype.constructor = Scheduler;\n\nScheduler.prototype.initDefaultProviders = function initDefaultProviders() {\n    // Register all providers\n    this.addProtocolProvider('tile', TileProvider);\n    this.addProtocolProvider('3d-tiles', $3dTilesProvider);\n    this.addProtocolProvider('potreeconverter', PointCloudProvider);\n};\n\nScheduler.prototype.runCommand = function runCommand(command, queue, executingCounterUpToDate) {\n    const protocol = command.layer.protocol || command.layer.source.protocol;\n    const provider = this.getProtocolProvider(protocol);\n\n    if (!provider) {\n        throw new Error('No known provider for layer', command.layer.id);\n    }\n\n    queue.execute(command, provider, executingCounterUpToDate).then(() => {\n        // notify view that one command ended.\n        command.view.notifyChange(command.requester, command.redraw);\n\n        // try to execute next command\n        if (queue.counters.executing < this.maxCommandsPerHost) {\n            const cmd = this.deQueue(queue);\n            if (cmd) {\n                this.runCommand(cmd, queue);\n            }\n        }\n    });\n};\n\nScheduler.prototype.execute = function execute(command) {\n    // TODO: check for mandatory commands fields\n\n\n    // parse host\n    const layer = command.layer;\n    const host = layer.url ? new URL(layer.url, document.location).host : undefined;\n\n    command.promise = new Promise((resolve, reject) => {\n        command.resolve = resolve;\n        command.reject = reject;\n    });\n\n    // init queue if needed\n    if (host && !(this.hostQueues.has(host))) {\n        this.hostQueues.set(host, _instanciateQueue());\n    }\n\n    const q = host ? this.hostQueues.get(host) : this.defaultQueue;\n\n    command.timestamp = Date.now();\n    q.queue(command);\n\n    if (q.counters.executing < this.maxCommandsPerHost) {\n        // Defer the processing after the end of the current frame.\n        // Promise.resolve or setTimeout(..., 0) will do the job, the difference\n        // is:\n        //   - setTimeout is a new task, queued in the event-loop queues\n        //   - Promise is a micro-task, executed before other tasks\n        Promise.resolve().then(() => {\n            if (q.counters.executing < this.maxCommandsPerHost) {\n                const cmd = this.deQueue(q);\n                if (cmd) {\n                    this.runCommand(cmd, q);\n                }\n            }\n        });\n    }\n\n    return command.promise;\n};\n\n/**\n * A Provider has the responsability to handle protocols and datablobs. Given a\n * data request (see {@link Provider#executeCommand} for details about this\n * request), it fetches serialized datasets, file content or even file chunks.\n *\n * @interface Provider\n */\n\n/**\n * When adding a layer to a view, some preprocessing can be done on it, before\n * fetching or creating resources attached to it. For example, in the WMTS and\n * WFS providers (included in iTowns), default options to the layer are added if\n * some are missing.\n *\n * @function\n * @name Provider#preprocessDataLayer\n *\n * @param {Layer} layer\n * @param {View} [view]\n * @param {Scheduler} [scheduler]\n * @param {Layer} [parentLayer]\n */\n\n/**\n * In the {@link Scheduler} loop, this function is called every time the layer\n * needs new information about itself. For tiled layers, it gets the necessary\n * tiles, given the current position of the camera on the map. For simple layers\n * like a GPX trace, it gets the data once.\n * <br><br>\n * It passes a <code>command</code> object as a parameter, with the\n * <code>view</code> and the <code>layer</code> always present. The other\n * parameters are optional.\n *\n * @function\n * @name Provider#executeCommand\n *\n * @param {Object} command\n * @param {View} command.view\n * @param {Layer} command.layer\n * @param {TileMesh} [command.requester] - Every layer is attached to a tile.\n * @param {number} [command.targetLevel] - The target level is used when there\n * is a tiled layer, such as WMTS or TMS, but not in case like a GPX layer.\n *\n * @return {Promise} The {@link Scheduler} always expect a Promise as a result,\n * resolving to an object containing sufficient information for the associated\n * processing to the current layer. For example, see the\n * [LayeredMaterialNodeProcessing#updateLayeredMaterialNodeElevation]{@link\n * https://github.com/iTowns/itowns/blob/master/src/Process/LayeredMaterialNodeProcessing.js}\n * class or other processing class.\n */\n\n/**\n * Adds a provider for a specified protocol. The provider will be used when\n * executing the queue to provide resources. See {@link Provider} for more\n * informations.\n * By default, some protocols are already set in iTowns: WMTS, WMS, WFS, TMS,\n * XYZ, PotreeConverter, Rasterizer, 3D-Tiles and Static.\n * <br><br>\n * Warning: if the specified protocol has already a provider attached to it, the\n * current provider will be overwritten by the given provider.\n *\n * @param {string} protocol - The name of the protocol to add. This is the\n * <code>protocol</code> parameter put inside the configuration when adding a\n * layer. The capitalization of the name is not taken into account here.\n * @param {Provider} provider - The provider to link to the protocol, that must\n * respect the {@link Provider} interface description.\n *\n * @throws {Error} an error if any method of the {@link Provider} is not present\n * in the provider.\n */\nScheduler.prototype.addProtocolProvider = function addProtocolProvider(protocol, provider) {\n    if (typeof (provider.executeCommand) !== 'function') {\n        throw new Error(`Can't add provider for ${protocol}: missing a executeCommand function.`);\n    }\n\n    this.providers[protocol] = provider;\n};\n\n/**\n * Get a specific {@link Provider} given a particular protocol.\n *\n * @param {string} protocol\n *\n * @return {Provider}\n */\nScheduler.prototype.getProtocolProvider = function getProtocolProvider(protocol) {\n    return this.providers[protocol] || DataSourceProvider;\n};\n\nScheduler.prototype.commandsWaitingExecutionCount = function commandsWaitingExecutionCount() {\n    let sum = this.defaultQueue.counters.pending + this.defaultQueue.counters.executing;\n    for (var q of this.hostQueues) {\n        sum += q[1].counters.pending + q[1].counters.executing;\n    }\n    return sum;\n};\n\nScheduler.prototype.commandsRunningCount = function commandsRunningCount() {\n    let sum = this.defaultQueue.counters.executing;\n\n    for (var q of this.hostQueues) {\n        sum += q[1].counters.executing;\n    }\n    return sum;\n};\n\nScheduler.prototype.resetCommandsCount = function resetCommandsCount(type) {\n    let sum = this.defaultQueue.counters[type];\n    this.defaultQueue.counters[type] = 0;\n    for (var q of this.hostQueues) {\n        sum += q[1].counters[type];\n        q[1].counters[type] = 0;\n    }\n    return sum;\n};\n\nScheduler.prototype.deQueue = function deQueue(queue) {\n    var st = drawNextLayer(queue.storages);\n    while (st && st.length > 0) {\n        var cmd = st.dequeue();\n\n        if (cmd.earlyDropFunction && cmd.earlyDropFunction(cmd)) {\n            queue.counters.pending--;\n            queue.counters.cancelled++;\n            cmd.reject(new CancelledCommandException(cmd));\n        } else {\n            return cmd;\n        }\n    }\n\n    return undefined;\n};\n\nexport default Scheduler;\n","import Extent from '../Core/Geographic/Extent';\n/**\n * @typedef {Object} NetworkOptions - Options for fetching resources over the\n * network. For json or xml fetching, this object is passed as it is to fetch\n * as the init object, see [fetch documentation]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters}.\n * @property {string} crossOrigin For textures, only this property is used. Its\n * value is directly assigned to the crossorigin property of html tags.\n * @property * Same properties as the init parameter of fetch\n */\n\n/**\n * @typedef {object} sourceParams\n * @property {string} protocol source's protocol (wmts, wms, wfs, file, tms, static)\n * @property {string} url Base URL of the repository or of the file(s) to load\n * @property {NetworkOptions} [networkOptions = { crossOrigin: 'anonymous' }] the base url to fetch data source\n * @property {string} [projection] data's projection\n * @property {Extent} [extent] data's extent\n * @property {Attribution} [attribution] Attribution The intellectual property rights for the source\n * @property {string} [format] data format\n *\n */\n\nclass Source {\n    /**\n     * Source are parameters to fetch source\n     *\n     * To extend {@link Source}, it is necessary to implement 2 functions:\n     * {@link Source#urlFromExtent} and {@link Source#extentInsideLimit}\n     * @param  {sourceParams}  source  object to set source\n     *\n     */\n    constructor(source) {\n        if (!source.protocol) {\n            throw new Error('New Source: protocol is required');\n        }\n\n        if (!source.url) {\n            throw new Error('New Source: url is required');\n        }\n\n        this.format = source.format;\n        this.protocol = source.protocol;\n        this.networkOptions = source.networkOptions || { crossOrigin: 'anonymous' };\n        this.projection = source.projection;\n        this.attribution = source.attribution;\n        if (source.extent && !(source.extent instanceof Extent)) {\n            if (Array.isArray(source.extent)) {\n                this.extent = new Extent(this.projection, ...source.extent);\n            } else {\n                this.extent = new Extent(this.projection, source.extent);\n            }\n        } else {\n            this.extent = source.extent;\n        }\n    }\n\n    handlingError(err) {\n        console.warn(`err ${this}`, err);\n    }\n    /**\n     * Generate url from extent. This url is link to fetch data inside the extent.\n     *\n     * @param      {Extent}  extent  extent to convert in url\n     * @return     {string}  url from extent\n     */\n    // eslint-disable-next-line\n    urlFromExtent(extent) {\n        throw new Error('In extented Source, you have to implement the method urlFromExtent!');\n    }\n\n    /**\n     * test if the extent is inside data's source\n     *\n     * @param      {Extent}   extent extent to test\n     * @return     {boolean}  return of test\n     */\n    // eslint-disable-next-line\n    extentInsideLimit(extent) {\n        throw new Error('In extented Source, you have to implement the method extentInsideLimit!');\n    }\n\n    /**\n     * test if all extents are inside data's source\n     *\n     * @param      {Array.<Extent>}   extents  The extents to test\n     * @return     {boolean}  test result\n     */\n    extentsInsideLimit(extents) {\n        for (const extent of extents) {\n            if (!this.extentInsideLimit(extent)) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n\nexport default Source;\n","/**\n * @module URLBuilder\n */\nexport default {\n    /**\n     * Builds an URL knowing the coordinates and the layer to query.\n     * <br><br>\n     * The layer object needs to have an url property, which should have some\n     * specific strings that will be replaced by coordinates.\n     * <ul>\n     * <li><code>${x}</code> or <code>%COL</code> will be replaced by\n     * <code>coords.col</code></li>\n     * <li><code>${y}</code> or <code>%ROW</code> will be replaced by\n     * <code>coords.row</code></li>\n     * <li><code>${z}</code> or <code>%TILEMATRIX</code> will be replaced by\n     * <code>coords.zoom</code></li>\n     * </ul>\n     *\n     * @example\n     * coords = new Coordinates('WMTS:WGS84', 12, 1410, 2072);\n     * layer.url = 'http://server.geo/wmts/SERVICE=WMTS&TILEMATRIX=%TILEMATRIX&TILEROW=%ROW&TILECOL=%COL';\n     * url = URLBuilder.xyz(coords, layer);\n     *\n     * // The resulting url is:\n     * // http://server.geo/wmts/SERVICE=WMTS&TILEMATRIX=12&TILEROW=1410&TILECOL=2072;\n     *\n     * @example\n     * coords = new Extent('TMS', 15, 2142, 3412);\n     * layer.url = 'http://server.geo/tms/${z}/${y}/${x}.jpg';\n     * url = URLBuilder.xyz(coords, layer);\n     *\n     * // The resulting url is:\n     * // http://server.geo/tms/15/2142/3412.jpg;\n     *\n     * @param {Extent} coords - the coordinates\n     * @param {Layer} layer\n     *\n     * @return {string} the formed url\n     */\n    xyz: function xyz(coords, layer) {\n        return layer.url.replace(/(\\$\\{z\\}|%TILEMATRIX)/, coords.zoom)\n            .replace(/(\\$\\{y\\}|%ROW)/, coords.row)\n            .replace(/(\\$\\{x\\}|%COL)/, coords.col);\n    },\n\n    /**\n     * Builds an URL knowing the bounding box and the layer to query.\n     * <br><br>\n     * The layer object needs to have an url property, which should have the\n     * string <code>%bbox</code> in it. This string will be replaced by the four\n     * cardinal points composing the bounding box.\n     * <br><br>\n     * Order of the points can be specified in the <code>axisOrder</code>\n     * property in layer, using the letters <code>w, s, e, n</code> respectively\n     * for <code>WEST, SOUTH, EAST, NORTH</code>. The default order is\n     * <code>wsen</code>.\n     *\n     * @example\n     * extent = new Extent('EPSG:4326', 12, 14, 35, 46);\n     * layer.projection = 'EPSG:4326';\n     * layer.url = 'http://server.geo/wms/BBOX=%bbox&FORMAT=jpg&SERVICE=WMS';\n     * url = URLBuilder.bbox(extent, layer);\n     *\n     * // The resulting url is:\n     * // http://server.geo/wms/BBOX=12,35,14,46&FORMAT=jpg&SERVICE=WMS\n     *\n     * @param {Extent} bbox - the bounding box\n     * @param {Layer} layer\n     *\n     * @return {string} the formed url\n     */\n    bbox: function bbox(bbox, layer) {\n        const precision = layer.projection == 'EPSG:4326' ? 9 : 2;\n        const box = bbox.as(layer.projection);\n        const w = box.west().toFixed(precision);\n        const s = box.south().toFixed(precision);\n        const e = box.east().toFixed(precision);\n        const n = box.north().toFixed(precision);\n\n        let bboxInUnit = layer.axisOrder || 'wsen';\n        bboxInUnit = bboxInUnit.replace('w', `${w},`)\n            .replace('s', `${s},`)\n            .replace('e', `${e},`)\n            .replace('n', `${n},`)\n            .slice(0, -1);\n\n        return layer.url.replace('%bbox', bboxInUnit);\n    },\n};\n","import Source from './Source';\nimport URLBuilder from '../Provider/URLBuilder';\n\nclass WMTSSource extends Source {\n    /**\n     * Tiles images source\n     * @constructor\n     * @extends Source\n     * @param {sourceParams}  source\n     * @param {string} source.name name of layer wmts\n     * @param {string} source.tileMatrixSet  define tile matrix set of wmts layer (ex: 'PM', 'WGS84')\n     * @param {Array.<Object>} [source.tileMatrixSetLimits] The limits for the tile matrix set\n     * @param {number} source.tileMatrixSetLimits.minTileRow Minimum row for tiles at the level\n     * @param {number} source.tileMatrixSetLimits.maxTileRow Maximum row for tiles at the level\n     * @param {number} source.tileMatrixSetLimits.minTileCol Minimum col for tiles at the level\n     * @param {number} source.tileMatrixSetLimits.maxTileCol Maximum col for tiles at the level\n     * @param {Object} [source.zoom]\n     * @param {number} [source.zoom.min] layer's zoom minimum\n     * @param {number} [source.zoom.max] layer's zoom maximum\n     *\n     * @example <caption>Add color layer with wmts source</caption>\n     * const colorlayer = new ColorLayer('darkmap', {\n     *     source: {\n     *          protocol: 'wmts',\n     *          name: 'DARK',\n     *          tileMatrixSet: 'PM',\n     *          url: 'http://server.geo/wmts',\n     *          format: 'image/jpg',\n     *     }\n     * });\n     * // Add the layer\n     * view.addLayer(colorlayer);\n     *\n     */\n    constructor(source) {\n        super(source);\n\n        if (!source.name) {\n            throw new Error('New WMTSSource: name is required');\n        }\n\n        this.format = this.format || 'image/png';\n        this.version = source.version || '1.0.0';\n        this.tileMatrixSet = source.tileMatrixSet || 'WGS84';\n        this.style = source.style || 'normal';\n        this.name = source.name;\n        this.url = `${source.url}` +\n            `?LAYER=${this.name}` +\n            `&FORMAT=${this.format}` +\n            '&SERVICE=WMTS' +\n            `&VERSION=${this.version}` +\n            '&REQUEST=GetTile' +\n            `&STYLE=${this.style}` +\n            `&TILEMATRIXSET=${this.tileMatrixSet}` +\n            '&TILEMATRIX=%TILEMATRIX&TILEROW=%ROW&TILECOL=%COL';\n\n        this.zoom = source.zoom;\n        this.tileMatrixSetLimits = source.tileMatrixSetLimits;\n\n        // If the projection is undefined,\n        // It is deduced from the tileMatrixSet,\n        // The projection is coherent with the projection\n        if (!this.projection) {\n            if (this.tileMatrixSet === 'WGS84' || this.tileMatrixSet === 'WGS84G') {\n                this.projection = 'EPSG:4326';\n            } else {\n                this.projection = 'EPSG:3857';\n            }\n        }\n\n        if (!this.zoom) {\n            if (this.tileMatrixSetLimits) {\n                const arrayLimits = Object.keys(this.tileMatrixSetLimits);\n                const size = arrayLimits.length;\n                const maxZoom = Number(arrayLimits[size - 1]);\n                const minZoom = maxZoom - size + 1;\n\n                this.zoom = {\n                    min: minZoom,\n                    max: maxZoom,\n                };\n            } else {\n                this.zoom = { min: 2, max: 20 };\n            }\n        }\n    }\n\n    urlFromExtent(extent) {\n        return URLBuilder.xyz(extent, this);\n    }\n\n    extentInsideLimit(extent) {\n        return extent.zoom >= this.zoom.min && extent.zoom <= this.zoom.max &&\n                (this.tileMatrixSetLimits == undefined ||\n                (extent.row >= this.tileMatrixSetLimits[extent.zoom].minTileRow &&\n                    extent.row <= this.tileMatrixSetLimits[extent.zoom].maxTileRow &&\n                    extent.col >= this.tileMatrixSetLimits[extent.zoom].minTileCol &&\n                    extent.col <= this.tileMatrixSetLimits[extent.zoom].maxTileCol));\n    }\n}\n\nexport default WMTSSource;\n","import Source from './Source';\nimport URLBuilder from '../Provider/URLBuilder';\n\nclass WMSSource extends Source {\n    /**\n     * Images source\n     * @constructor\n     * @extends Source\n     * @param {sourceParams}  source\n     * @param {string} source.name name of layer wms\n     * @param {Extent} source.extent extent of wms source\n     * @param {string} [source.style=''] style of layer wms\n     * @param {number} [source.heightMapWidth=256] size texture in pixel\n     * @param {string} [source.version='1.3.0'] wms version\n     * @param {string} [source.axisOrder] wms axis order ('wsen' or 'swne')\n     * @param {boolean} [source.transparent=false] source return texture with transparence\n     * @param {Object} [source.zoom]\n     * @param {number} [source.zoom.min] layer's zoom minimum\n     * @param {number} [source.zoom.max] layer's zoom maximum\n     *\n     * @example <caption>Add color layer with wms source</caption>\n     * const colorlayer = new ColorLayer('Region', {\n     *     source: {\n     *         url: 'https://wxs.fr/wms',\n     *         protocol: 'wms',\n     *         version: '1.3.0',\n     *         name: 'REGION.2016',\n     *         style: '',\n     *         projection: 'EPSG:3857',\n     *         extent: {\n     *             west: '-6880639.13557728',\n     *             east: '6215707.87974825',\n     *             south: '-2438399.00148845',\n     *             north: '7637050.03850605',\n     *         },\n     *         transparent: true,\n     *     },\n     * });\n     * // Add the layer\n     * view.addLayer(colorlayer);\n     *\n    */\n    constructor(source) {\n        if (!source.name) {\n            throw new Error('source.name is required.');\n        }\n\n        if (!source.extent) {\n            throw new Error('source.extent is required');\n        }\n\n        if (!source.projection) {\n            throw new Error('source.projection is required');\n        }\n        super(source);\n\n        this.name = source.name;\n        this.zoom = source.zoom || { min: 0, max: 21 };\n        this.format = this.format || 'image/png';\n        this.style = source.style || '';\n        this.width = source.heightMapWidth || 256;\n        this.version = source.version || '1.3.0';\n        this.transparent = source.transparent || false;\n\n        if (!source.axisOrder) {\n        // 4326 (lat/long) axis order depends on the WMS version used\n            if (source.projection == 'EPSG:4326') {\n            // EPSG 4326 x = lat, long = y\n            // version 1.1.0 long/lat while version 1.3.0 mandates xy (so lat,long)\n                this.axisOrder = (this.version === '1.1.0' ? 'wsen' : 'swne');\n            } else {\n            // xy,xy order\n                this.axisOrder = 'wsen';\n            }\n        }\n\n        const crsPropName = (this.version === '1.3.0') ? 'CRS' : 'SRS';\n\n        this.url = `${source.url}?SERVICE=WMS&REQUEST=GetMap&LAYERS=${\n            this.name}&VERSION=${\n            this.version}&STYLES=${\n            this.style}&FORMAT=${\n            this.format}&TRANSPARENT=${\n            this.transparent}&BBOX=%bbox&${\n            crsPropName}=${\n            this.projection}&WIDTH=${this.width}&HEIGHT=${this.width}`;\n    }\n\n    urlFromExtent(extent) {\n        return URLBuilder.bbox(extent, this);\n    }\n\n    extentInsideLimit(extent) {\n        const localExtent = this.projection == extent.crs() ? extent : extent.as(this.projection);\n        return (extent.zoom == undefined || !(extent.zoom < this.zoom.min || extent.zoom > this.zoom.max)) &&\n            this.extent.intersectsExtent(localExtent);\n    }\n}\n\nexport default WMSSource;\n","import Source from './Source';\nimport URLBuilder from '../Provider/URLBuilder';\n\nclass WFSSource extends Source {\n    /**\n     * Features source\n     * @constructor\n     * @extends Source\n     *\n     * @param {sourceParams}  source\n     * @param {string} source.typeName Name of the feature type to describe\n     * @param {string} source.projection crs of wfs\n     * @param {string} [source.version='2.0.2'] wfs protocol version\n     * @param {Object} [source.zoom]\n     * @param {number} [source.zoom.min] layer's zoom minimum\n     * @param {number} [source.zoom.max] layer's zoom maximum\n     *\n     * @example <caption>Add color layer with wfs source</caption>\n     * const colorlayer = new ColorLayer('color_build', {\n     *     style: {\n     *         fill: 'red',\n     *         fillOpacity: 0.5,\n     *         stroke: 'white',\n     *     },\n     *     source: {\n     *        url: 'http://wxs.fr/wfs',\n     *        protocol: 'wfs',\n     *        version: '2.0.0',\n     *        typeName: 'BDTOPO_BDD_WLD_WGS84G:bati_remarquable',\n     *        projection: 'EPSG:4326',\n     *        extent: {\n     *            west: 4.568,\n     *            east: 5.18,\n     *            south: 45.437,\n     *            north: 46.03,\n     *        },\n     *        format: 'application/json',\n     *     }\n     * });\n     * // Add the layer\n     * view.addLayer(colorlayer);\n     *\n     * @example <caption>Add geometry layer with wfs source</caption>\n     * const geometrylayer = new GeometryLayer('mesh_build', {\n     *     update: itowns.FeatureProcessing.update,\n     *     convert: itowns.Feature2Mesh.convert({ extrude: () => 50 }),\n     *     source: {\n     *        protocol: 'wfs',\n     *        url: 'http://wxs.fr/wfs',\n     *        version: '2.0.0',\n     *        typeName: 'BDTOPO_BDD_WLD_WGS84G:bati_remarquable',\n     *        projection: 'EPSG:4326',\n     *        extent: {\n     *            west: 4.568,\n     *            east: 5.18,\n     *            south: 45.437,\n     *            north: 46.03,\n     *        },\n     *        zoom: { min: 14, max: 14 },\n     *        format: 'application/json',\n     *     }\n     * });\n     * // Add the layer\n     * view.addLayer(geometrylayer);\n    */\n    constructor(source) {\n        if (!source.typeName) {\n            throw new Error('source.typeName is required in wfs source.');\n        }\n\n        if (!source.projection) {\n            throw new Error('source.projection is required in wfs source');\n        }\n        super(source);\n\n        this.typeName = source.typeName;\n        this.format = this.format || 'application/json';\n        this.version = source.version || '2.0.2';\n\n        this.url = `${source.url\n        }SERVICE=WFS&REQUEST=GetFeature&typeName=${this.typeName\n        }&VERSION=${this.version\n        }&SRSNAME=${this.projection\n        }&outputFormat=${this.format\n        }&BBOX=%bbox,${this.projection}`;\n\n        this.zoom = source.zoom || { min: 0, max: 21 };\n    }\n\n    handlingError(err, url) {\n        if (err.response && err.response.status == 400) {\n            return err.response.text().then((text) => {\n                const getCapUrl = `${this.url}SERVICE=WFS&REQUEST=GetCapabilities&VERSION=${this.version}`;\n                const xml = new DOMParser().parseFromString(text, 'application/xml');\n                const errorElem = xml.querySelector('Exception');\n                const errorCode = errorElem.getAttribute('exceptionCode');\n                const errorMessage = errorElem.querySelector('ExceptionText').textContent;\n                console.error(`Source ${this.typeName}: bad request when fetching data. Server says: \"${errorCode}: ${errorMessage}\". \\nReviewing ${getCapUrl} may help.`, err);\n                throw err;\n            });\n        } else {\n            console.error(`Source ${this.typeName}: error while trying to fetch/parse/convert WFS data. Url was ${url}.`, err);\n            throw err;\n        }\n    }\n\n    urlFromExtent(extent) {\n        return URLBuilder.bbox(extent.as(this.projection), this);\n    }\n\n    extentInsideLimit(extent) {\n        return (extent.zoom == undefined || (extent.zoom >= this.zoom.min && extent.zoom <= this.zoom.max))\n            && this.extent.intersectsExtent(extent);\n    }\n}\n\nexport default WFSSource;\n\n","import Source from './Source';\nimport URLBuilder from '../Provider/URLBuilder';\nimport Extent from '../Core/Geographic/Extent';\n\nclass TMSSource extends Source {\n    /**\n     * Tiled images source\n     * @constructor\n     * @extends Source\n     * @param {sourceParams}  source\n     * @param {string} [source.origin] origin row coordinate: 'top' or 'bottom'\n     * @param {Object} [source.zoom]\n     * @param {number} [source.zoom.min] layer's zoom minimum\n     * @param {number} [source.zoom.max] layer's zoom maximum\n     * @param {string} [source.tileMatrixSet='WGS84']  define tile matrix set of tms layer (ex: 'PM', 'WGS84')\n     *\n     * @example <caption>Add color layer with tms source</caption>\n     * const colorlayer = new ColorLayer('OPENSM', {\n     *     source: {\n     *         protocol: 'xyz',\n     *         format: 'image/png',\n     *         url: 'http://osm.io/styles/${z}/${x}/${y}.png',\n     *         attribution: {\n     *             name: 'OpenStreetMap',\n     *             url: 'http://www.openstreetmap.org/',\n     *         },\n     *         tileMatrixSet: 'PM',\n     *     }\n     * });\n     * // Add the layer\n     * view.addLayer(colorlayer);\n    */\n    constructor(source) {\n        super(source);\n        if (!source.extent) {\n        // default to the full 3857 extent\n            this.extent = new Extent('EPSG:3857',\n                -20037508.342789244, 20037508.342789244,\n                -20037508.342789255, 20037508.342789244);\n        }\n\n        this.zoom = source.zoom || { min: 0, max: 18 };\n\n        this.origin = source.origin || (source.protocol == 'xyz' ? 'top' : 'bottom');\n\n        this.format = this.format || 'image/png';\n        this.url = source.url;\n        if (source.tileMatrixSet) {\n            this.tileMatrixSet = source.tileMatrixSet;\n        } else if (this.projection == 'EPSG:3857') {\n            this.tileMatrixSet = 'PM';\n        } else {\n            this.tileMatrixSet = 'WGS84';\n        }\n    }\n\n    urlFromExtent(extent) {\n        return URLBuilder.xyz(extent, this);\n    }\n\n    handlingError(err) {\n        console.warn(`err ${this.url}`, err);\n    }\n\n    extentInsideLimit(extent) {\n        // This layer provides data starting at level = layer.source.zoom.min\n        // (the zoom.max property is used when building the url to make\n        //  sure we don't use invalid levels)\n        // TODO: add extent limit\n        return extent.zoom >= this.zoom.min && extent.zoom <= this.zoom.max;\n    }\n}\n\nexport default TMSSource;\n","\nexport default class FlatQueue {\n\n    constructor() {\n        this.ids = [];\n        this.values = [];\n        this.length = 0;\n    }\n\n    clear() {\n        this.length = this.ids.length = this.values.length = 0;\n    }\n\n    push(id, value) {\n        this.ids.push(id);\n        this.values.push(value);\n\n        let pos = this.length++;\n        while (pos > 0) {\n            const parent = (pos - 1) >> 1;\n            const parentValue = this.values[parent];\n            if (value >= parentValue) break;\n            this.ids[pos] = this.ids[parent];\n            this.values[pos] = parentValue;\n            pos = parent;\n        }\n\n        this.ids[pos] = id;\n        this.values[pos] = value;\n    }\n\n    pop() {\n        if (this.length === 0) return undefined;\n\n        const top = this.ids[0];\n        this.length--;\n\n        if (this.length > 0) {\n            const id = this.ids[0] = this.ids[this.length];\n            const value = this.values[0] = this.values[this.length];\n            const halfLength = this.length >> 1;\n            let pos = 0;\n\n            while (pos < halfLength) {\n                let left = (pos << 1) + 1;\n                const right = left + 1;\n                let bestIndex = this.ids[left];\n                let bestValue = this.values[left];\n                const rightValue = this.values[right];\n\n                if (right < this.length && rightValue < bestValue) {\n                    left = right;\n                    bestIndex = this.ids[right];\n                    bestValue = rightValue;\n                }\n                if (bestValue >= value) break;\n\n                this.ids[pos] = bestIndex;\n                this.values[pos] = bestValue;\n                pos = left;\n            }\n\n            this.ids[pos] = id;\n            this.values[pos] = value;\n        }\n\n        this.ids.pop();\n        this.values.pop();\n\n        return top;\n    }\n\n    peek() {\n        return this.ids[0];\n    }\n\n    peekValue() {\n        return this.values[0];\n    }\n}\n","\nimport FlatQueue from 'flatqueue';\n\nconst ARRAY_TYPES = [\n    Int8Array, Uint8Array, Uint8ClampedArray, Int16Array, Uint16Array,\n    Int32Array, Uint32Array, Float32Array, Float64Array\n];\n\nconst VERSION = 3; // serialized format version\n\nexport default class Flatbush {\n\n    static from(data) {\n        if (!(data instanceof ArrayBuffer)) {\n            throw new Error('Data must be an instance of ArrayBuffer.');\n        }\n        const [magic, versionAndType] = new Uint8Array(data, 0, 2);\n        if (magic !== 0xfb) {\n            throw new Error('Data does not appear to be in a Flatbush format.');\n        }\n        if (versionAndType >> 4 !== VERSION) {\n            throw new Error(`Got v${versionAndType >> 4} data when expected v${VERSION}.`);\n        }\n        const [nodeSize] = new Uint16Array(data, 2, 1);\n        const [numItems] = new Uint32Array(data, 4, 1);\n\n        return new Flatbush(numItems, nodeSize, ARRAY_TYPES[versionAndType & 0x0f], data);\n    }\n\n    constructor(numItems, nodeSize = 16, ArrayType = Float64Array, data) {\n        if (numItems === undefined) throw new Error('Missing required argument: numItems.');\n        if (isNaN(numItems) || numItems <= 0) throw new Error(`Unpexpected numItems value: ${numItems}.`);\n\n        this.numItems = +numItems;\n        this.nodeSize = Math.min(Math.max(+nodeSize, 2), 65535);\n\n        // calculate the total number of nodes in the R-tree to allocate space for\n        // and the index of each tree level (used in search later)\n        let n = numItems;\n        let numNodes = n;\n        this._levelBounds = [n * 4];\n        do {\n            n = Math.ceil(n / this.nodeSize);\n            numNodes += n;\n            this._levelBounds.push(numNodes * 4);\n        } while (n !== 1);\n\n        this.ArrayType = ArrayType || Float64Array;\n        this.IndexArrayType = numNodes < 16384 ? Uint16Array : Uint32Array;\n\n        const arrayTypeIndex = ARRAY_TYPES.indexOf(this.ArrayType);\n        const nodesByteSize = numNodes * 4 * this.ArrayType.BYTES_PER_ELEMENT;\n\n        if (arrayTypeIndex < 0) {\n            throw new Error(`Unexpected typed array class: ${ArrayType}.`);\n        }\n\n        if (data && (data instanceof ArrayBuffer)) {\n            this.data = data;\n            this._boxes = new this.ArrayType(this.data, 8, numNodes * 4);\n            this._indices = new this.IndexArrayType(this.data, 8 + nodesByteSize, numNodes);\n\n            this._pos = numNodes * 4;\n            this.minX = this._boxes[this._pos - 4];\n            this.minY = this._boxes[this._pos - 3];\n            this.maxX = this._boxes[this._pos - 2];\n            this.maxY = this._boxes[this._pos - 1];\n\n        } else {\n            this.data = new ArrayBuffer(8 + nodesByteSize + numNodes * this.IndexArrayType.BYTES_PER_ELEMENT);\n            this._boxes = new this.ArrayType(this.data, 8, numNodes * 4);\n            this._indices = new this.IndexArrayType(this.data, 8 + nodesByteSize, numNodes);\n            this._pos = 0;\n            this.minX = Infinity;\n            this.minY = Infinity;\n            this.maxX = -Infinity;\n            this.maxY = -Infinity;\n\n            new Uint8Array(this.data, 0, 2).set([0xfb, (VERSION << 4) + arrayTypeIndex]);\n            new Uint16Array(this.data, 2, 1)[0] = nodeSize;\n            new Uint32Array(this.data, 4, 1)[0] = numItems;\n        }\n\n        // a priority queue for k-nearest-neighbors queries\n        this.queue = new FlatQueue();\n    }\n\n    add(minX, minY, maxX, maxY) {\n        const index = this._pos >> 2;\n        this._indices[index] = index;\n        this._boxes[this._pos++] = minX;\n        this._boxes[this._pos++] = minY;\n        this._boxes[this._pos++] = maxX;\n        this._boxes[this._pos++] = maxY;\n\n        if (minX < this.minX) this.minX = minX;\n        if (minY < this.minY) this.minY = minY;\n        if (maxX > this.maxX) this.maxX = maxX;\n        if (maxY > this.maxY) this.maxY = maxY;\n    }\n\n    finish() {\n        if (this._pos >> 2 !== this.numItems) {\n            throw new Error(`Added ${this._pos >> 2} items when expected ${this.numItems}.`);\n        }\n\n        const width = this.maxX - this.minX;\n        const height = this.maxY - this.minY;\n        const hilbertValues = new Uint32Array(this.numItems);\n        const hilbertMax = (1 << 16) - 1;\n\n        // map item centers into Hilbert coordinate space and calculate Hilbert values\n        for (let i = 0; i < this.numItems; i++) {\n            let pos = 4 * i;\n            const minX = this._boxes[pos++];\n            const minY = this._boxes[pos++];\n            const maxX = this._boxes[pos++];\n            const maxY = this._boxes[pos++];\n            const x = Math.floor(hilbertMax * ((minX + maxX) / 2 - this.minX) / width);\n            const y = Math.floor(hilbertMax * ((minY + maxY) / 2 - this.minY) / height);\n            hilbertValues[i] = hilbert(x, y);\n        }\n\n        // sort items by their Hilbert value (for packing later)\n        sort(hilbertValues, this._boxes, this._indices, 0, this.numItems - 1);\n\n        // generate nodes at each tree level, bottom-up\n        for (let i = 0, pos = 0; i < this._levelBounds.length - 1; i++) {\n            const end = this._levelBounds[i];\n\n            // generate a parent node for each block of consecutive <nodeSize> nodes\n            while (pos < end) {\n                let nodeMinX = Infinity;\n                let nodeMinY = Infinity;\n                let nodeMaxX = -Infinity;\n                let nodeMaxY = -Infinity;\n                const nodeIndex = pos;\n\n                // calculate bbox for the new node\n                for (let i = 0; i < this.nodeSize && pos < end; i++) {\n                    const minX = this._boxes[pos++];\n                    const minY = this._boxes[pos++];\n                    const maxX = this._boxes[pos++];\n                    const maxY = this._boxes[pos++];\n                    if (minX < nodeMinX) nodeMinX = minX;\n                    if (minY < nodeMinY) nodeMinY = minY;\n                    if (maxX > nodeMaxX) nodeMaxX = maxX;\n                    if (maxY > nodeMaxY) nodeMaxY = maxY;\n                }\n\n                // add the new node to the tree data\n                this._indices[this._pos >> 2] = nodeIndex;\n                this._boxes[this._pos++] = nodeMinX;\n                this._boxes[this._pos++] = nodeMinY;\n                this._boxes[this._pos++] = nodeMaxX;\n                this._boxes[this._pos++] = nodeMaxY;\n            }\n        }\n    }\n\n    search(minX, minY, maxX, maxY, filterFn) {\n        if (this._pos !== this._boxes.length) {\n            throw new Error('Data not yet indexed - call index.finish().');\n        }\n\n        let nodeIndex = this._boxes.length - 4;\n        let level = this._levelBounds.length - 1;\n        const queue = [];\n        const results = [];\n\n        while (nodeIndex !== undefined) {\n            // find the end index of the node\n            const end = Math.min(nodeIndex + this.nodeSize * 4, this._levelBounds[level]);\n\n            // search through child nodes\n            for (let pos = nodeIndex; pos < end; pos += 4) {\n                const index = this._indices[pos >> 2];\n\n                // check if node bbox intersects with query bbox\n                if (maxX < this._boxes[pos]) continue; // maxX < nodeMinX\n                if (maxY < this._boxes[pos + 1]) continue; // maxY < nodeMinY\n                if (minX > this._boxes[pos + 2]) continue; // minX > nodeMaxX\n                if (minY > this._boxes[pos + 3]) continue; // minY > nodeMaxY\n\n                if (nodeIndex < this.numItems * 4) {\n                    if (filterFn === undefined || filterFn(index)) {\n                        results.push(index); // leaf item\n                    }\n\n                } else {\n                    queue.push(index); // node; add it to the search queue\n                    queue.push(level - 1);\n                }\n            }\n\n            level = queue.pop();\n            nodeIndex = queue.pop();\n        }\n\n        return results;\n    }\n\n    neighbors(x, y, maxResults = Infinity, maxDistance = Infinity, filterFn) {\n        if (this._pos !== this._boxes.length) {\n            throw new Error('Data not yet indexed - call index.finish().');\n        }\n\n        let nodeIndex = this._boxes.length - 4;\n        const q = this.queue;\n        const results = [];\n        const maxDistSquared = maxDistance * maxDistance;\n\n        while (nodeIndex !== undefined) {\n            // find the end index of the node\n            const end = Math.min(nodeIndex + this.nodeSize * 4, upperBound(nodeIndex, this._levelBounds));\n\n            // add child nodes to the queue\n            for (let pos = nodeIndex; pos < end; pos += 4) {\n                const index = this._indices[pos >> 2];\n\n                const dx = axisDist(x, this._boxes[pos], this._boxes[pos + 2]);\n                const dy = axisDist(y, this._boxes[pos + 1], this._boxes[pos + 3]);\n                const dist = dx * dx + dy * dy;\n\n                if (nodeIndex < this.numItems * 4) { // leaf node\n                    if (filterFn === undefined || filterFn(index)) {\n                        // put a negative index if it's an item rather than a node, to recognize later\n                        q.push(-index - 1, dist);\n                    }\n                } else {\n                    q.push(index, dist);\n                }\n            }\n\n            // pop items from the queue\n            while (q.length && q.peek() < 0) {\n                const dist = q.peekValue();\n                if (dist > maxDistSquared) {\n                    q.clear();\n                    return results;\n                }\n                results.push(-q.pop() - 1);\n\n                if (results.length === maxResults) {\n                    q.clear();\n                    return results;\n                }\n            }\n\n            nodeIndex = q.pop();\n        }\n\n        q.clear();\n        return results;\n    }\n}\n\nfunction axisDist(k, min, max) {\n    return k < min ? min - k : k <= max ? 0 : k - max;\n}\n\n// binary search for the first value in the array bigger than the given\nfunction upperBound(value, arr) {\n    let i = 0;\n    let j = arr.length - 1;\n    while (i < j) {\n        const m = (i + j) >> 1;\n        if (arr[m] > value) {\n            j = m;\n        } else {\n            i = m + 1;\n        }\n    }\n    return arr[i];\n}\n\n// custom quicksort that sorts bbox data alongside the hilbert values\nfunction sort(values, boxes, indices, left, right) {\n    if (left >= right) return;\n\n    const pivot = values[(left + right) >> 1];\n    let i = left - 1;\n    let j = right + 1;\n\n    while (true) {\n        do i++; while (values[i] < pivot);\n        do j--; while (values[j] > pivot);\n        if (i >= j) break;\n        swap(values, boxes, indices, i, j);\n    }\n\n    sort(values, boxes, indices, left, j);\n    sort(values, boxes, indices, j + 1, right);\n}\n\n// swap two values and two corresponding boxes\nfunction swap(values, boxes, indices, i, j) {\n    const temp = values[i];\n    values[i] = values[j];\n    values[j] = temp;\n\n    const k = 4 * i;\n    const m = 4 * j;\n\n    const a = boxes[k];\n    const b = boxes[k + 1];\n    const c = boxes[k + 2];\n    const d = boxes[k + 3];\n    boxes[k] = boxes[m];\n    boxes[k + 1] = boxes[m + 1];\n    boxes[k + 2] = boxes[m + 2];\n    boxes[k + 3] = boxes[m + 3];\n    boxes[m] = a;\n    boxes[m + 1] = b;\n    boxes[m + 2] = c;\n    boxes[m + 3] = d;\n\n    const e = indices[i];\n    indices[i] = indices[j];\n    indices[j] = e;\n}\n\n// Fast Hilbert curve algorithm by http://threadlocalmutex.com/\n// Ported from C++ https://github.com/rawrunprotected/hilbert_curves (public domain)\nfunction hilbert(x, y) {\n    let a = x ^ y;\n    let b = 0xFFFF ^ a;\n    let c = 0xFFFF ^ (x | y);\n    let d = x & (y ^ 0xFFFF);\n\n    let A = a | (b >> 1);\n    let B = (a >> 1) ^ a;\n    let C = ((c >> 1) ^ (b & (d >> 1))) ^ c;\n    let D = ((a & (c >> 1)) ^ (d >> 1)) ^ d;\n\n    a = A; b = B; c = C; d = D;\n    A = ((a & (a >> 2)) ^ (b & (b >> 2)));\n    B = ((a & (b >> 2)) ^ (b & ((a ^ b) >> 2)));\n    C ^= ((a & (c >> 2)) ^ (b & (d >> 2)));\n    D ^= ((b & (c >> 2)) ^ ((a ^ b) & (d >> 2)));\n\n    a = A; b = B; c = C; d = D;\n    A = ((a & (a >> 4)) ^ (b & (b >> 4)));\n    B = ((a & (b >> 4)) ^ (b & ((a ^ b) >> 4)));\n    C ^= ((a & (c >> 4)) ^ (b & (d >> 4)));\n    D ^= ((b & (c >> 4)) ^ ((a ^ b) & (d >> 4)));\n\n    a = A; b = B; c = C; d = D;\n    C ^= ((a & (c >> 8)) ^ (b & (d >> 8)));\n    D ^= ((b & (c >> 8)) ^ ((a ^ b) & (d >> 8)));\n\n    a = C ^ (C >> 1);\n    b = D ^ (D >> 1);\n\n    let i0 = x ^ y;\n    let i1 = b | (0xFFFF ^ (i0 | a));\n\n    i0 = (i0 | (i0 << 8)) & 0x00FF00FF;\n    i0 = (i0 | (i0 << 4)) & 0x0F0F0F0F;\n    i0 = (i0 | (i0 << 2)) & 0x33333333;\n    i0 = (i0 | (i0 << 1)) & 0x55555555;\n\n    i1 = (i1 | (i1 << 8)) & 0x00FF00FF;\n    i1 = (i1 | (i1 << 4)) & 0x0F0F0F0F;\n    i1 = (i1 | (i1 << 2)) & 0x33333333;\n    i1 = (i1 | (i1 << 1)) & 0x55555555;\n\n    return ((i1 << 1) | i0) >>> 0;\n}\n","import flatbush from 'flatbush';\nimport Source from './Source';\nimport Fetcher from '../Provider/Fetcher';\nimport Extent from '../Core/Geographic/Extent';\n\nfunction _selectImagesFromSpatialIndex(index, images, extent) {\n    return index.search(\n        extent.west(), extent.south(),\n        extent.east(), extent.north()).map(i => images[i]);\n}\n\nfunction buildUrl(layer, image) {\n    return layer.url.href.substr(0, layer.url.href.lastIndexOf('/') + 1)\n        + image;\n}\n\nclass StaticSource extends Source {\n    /**\n     * Images source to panorama layer {@link PanoramaLayer}\n     *\n     * @constructor\n     * @extends Source\n     * @param {sourceParams}  source  The source\n     * @param {string}  source.extent It's extent of panoramic's images\n    */\n    constructor(source) {\n        if (!source.extent) {\n            throw new Error('layer.extent is required');\n        }\n        super(source);\n\n        this.zoom = { min: 0, max: 0 };\n        this.url = new URL(source.url, window.location);\n        this.whenReady = Fetcher.json(this.url.href).then((metadata) => {\n            this.images = [];\n            // eslint-disable-next-line guard-for-in\n            for (const image in metadata) {\n                const extent = new Extent(this.projection, ...metadata[image]);\n                this.images.push({\n                    image,\n                    extent,\n                });\n            }\n            if (!this.images.length) {\n                return;\n            }\n            this._spatialIndex = new flatbush(this.images.length);\n            for (const image of this.images) {\n                this._spatialIndex.add(\n                    image.extent.west(),\n                    image.extent.south(),\n                    image.extent.east(),\n                    image.extent.north());\n            }\n            this._spatialIndex.finish();\n        }).then(() => {\n            if (!this.format) {\n                // fetch the first image to detect format\n                if (this.images.length) {\n                    const url = buildUrl(this, this.images[0].image);\n                    return fetch(url, this.networkOptions).then((response) => {\n                        this.format = response.headers.get('Content-type');\n                        if (this.format === 'application/octet-stream') {\n                            this.format = 'image/x-bil';\n                        }\n                        if (!this.format) {\n                            throw new Error(`${this.name}: could not detect layer format, please configure 'layer.format'.`);\n                        }\n                    });\n                }\n            }\n        });\n    }\n\n    urlFromExtent(extent) {\n        const selection = this.getSourceExtents(extent);\n        return this.url.href.substr(0, this.url.href.lastIndexOf('/') + 1) + selection.image;\n    }\n\n    handlingError(err, url) {\n        console.error(`Source static: ${this.url}, ${err.response.status} error while trying to fetch data. Url was ${url}.`, err);\n    }\n\n    canTileTextureBeImproved(extent, texture) {\n        if (!this.images) {\n            return false;\n        }\n        const s = this.getSourceExtents(extent);\n\n        if (!s) {\n            return false;\n        }\n        if (!texture.image) {\n            return true;\n        }\n\n        const urlTexture = texture.image.currentSrc;\n        const urlSource = this.url.href.substr(0, this.url.href.lastIndexOf('/') + 1) + s.image;\n        const canBeImproved = urlSource != urlTexture;\n        return canBeImproved;\n    }\n\n    getSourceExtents(extent) {\n        // select the smallest image entirely covering the tile\n        extent = extent.crs() === this.extent.crs() ? extent : extent.as(this.extent.crs());\n        const candidates =\n        _selectImagesFromSpatialIndex(\n            this._spatialIndex, this.images, extent);\n\n        let selection;\n        for (const entry of candidates) {\n            if (extent.isInside(entry.extent)) {\n                if (!selection) {\n                    selection = entry;\n                } else {\n                    const d = selection.extent.dimensions();\n                    const e = entry.extent.dimensions();\n                    if (e.x <= d.x && e.y <= d.y) {\n                        selection = entry;\n                    }\n                }\n            }\n        }\n        return selection;\n    }\n\n    extentInsideLimit(extent) {\n        return extent.intersectsExtent(this.extent);\n    }\n}\n\nexport default StaticSource;\n","import togeojson from '@mapbox/togeojson';\nimport Source from './Source';\nimport Fetcher from '../Provider/Fetcher';\nimport Extent from '../Core/Geographic/Extent';\nimport GeoJsonParser from '../Parser/GeoJsonParser';\n\nfunction getExtentFromGpxFile(file) {\n    const bound = file.getElementsByTagName('bounds')[0];\n    if (bound) {\n        const west = bound.getAttribute('minlon');\n        const east = bound.getAttribute('maxlon');\n        const south = bound.getAttribute('minlat');\n        const north = bound.getAttribute('maxlat');\n        return new Extent('EPSG:4326', west, east, south, north);\n    }\n    return new Extent('EPSG:4326', -180, 180, -90, 90);\n}\n\n// TODO move and refacto\nfunction fileParser(text) {\n    let parsedFile;\n    const trimmedText = text.trim();\n    // We test the start of the string to choose a parser\n    if (trimmedText.startsWith('<')) {\n        // if it's an xml file, then it can be kml or gpx\n        const parser = new DOMParser();\n        const file = parser.parseFromString(text, 'application/xml');\n        if (file.documentElement.tagName.toLowerCase() === 'kml') {\n            parsedFile = togeojson.kml(file);\n        } else if (file.documentElement.tagName.toLowerCase() === 'gpx') {\n            parsedFile = togeojson.gpx(file);\n            const line = parsedFile.features.find(e => e.geometry.type == 'LineString');\n            line.properties.stroke = 'red';\n            parsedFile.extent = getExtentFromGpxFile(file);\n        } else if (file.documentElement.tagName.toLowerCase() === 'parsererror') {\n            throw new Error('Error parsing XML document');\n        } else {\n            throw new Error('Unsupported xml file, only valid KML and GPX are supported, but no <gpx> or <kml> tag found.',\n                file);\n        }\n    } else if (trimmedText.startsWith('{') || trimmedText.startsWith('[')) {\n        parsedFile = JSON.parse(text);\n        if (parsedFile.type !== 'Feature' && parsedFile.type !== 'FeatureCollection') {\n            throw new Error('This json is not a GeoJSON');\n        }\n    } else {\n        throw new Error('Unsupported file: only well-formed KML, GPX or GeoJSON are supported');\n    }\n\n    return parsedFile;\n}\n\nclass FileSource extends Source {\n    /**\n     * File source to use file in {@link GeometryLayer}, {@link ColorLayer} or {@link ElevationLayer}.\n     * @constructor\n     * @extends Source\n     *\n     * @param      {sourceParams}  source  The source\n     * @param      {string}  source.projection  Data system projection, it needed to parse data\n     * @param      {string}  crsOut  crd output data\n     *\n     * @example <caption>add geometry layer with geojson file </caption>\n     * const ariege = new itowns.GeometryLayer('ariege', new itowns.THREE.Group());\n     * ariege.update = itowns.FeatureProcessing.update;\n     * ariege.convert = itowns.Feature2Mesh.convert({\n     *      color: () => new itowns.THREE.Color(0xffcc00),\n     *      extrude: () => 5000,\n     * });\n     * ariege.source = {\n     *      protocol: 'file',\n     *      url: 'https://raw.githubusercontent.com/gregoiredavid/france-geojson/master/departements/09-ariege/departement-09-ariege.geojson',\n     *      projection: 'EPSG:4326',\n     *      format: 'application/json',\n     *      zoom: { min: 7, max: 7 },\n     * };\n     * view.addLayer(ariege);\n     *\n     * @example <caption>add color layer with geojson file </caption>\n     * globeView.addLayer({\n     *     type: 'color',\n     *     id: 'Gpx',\n     *     name: 'Ultra 2009',\n     *     transparent: true,\n     *     source: {\n     *         url: 'https://raw.githubusercontent.com/iTowns/iTowns2-sample-data/master/ULTRA2009.gpx',\n     *         protocol: 'file',\n     *         projection: 'EPSG:4326',\n     *     },\n     * });\n     *\n     */\n    constructor(source, crsOut) {\n        if (!source.projection) {\n            throw new Error('source.projection is required in FileSource');\n        }\n        super(source);\n\n        this.url = source.url;\n        this.parsedData = [];\n        this.zoom = source.zoom || { min: 5, max: 21 };\n        const options = {\n            buildExtent: true,\n            crsIn: this.projection,\n            crsOut,\n            withNormal: !source.toTexture,\n            withAltitude: !source.toTexture,\n            mergeFeatures: true,\n        };\n\n        this.whenReady = Fetcher.text(this.url, source.networkOptions).then(fileParser).then(parsedFile =>\n            GeoJsonParser.parse(parsedFile, options).then((feature) => {\n                feature.style = parsedFile.style;\n                this.parsedData = feature;\n            }));\n    }\n\n    urlFromExtent(extent) {\n        return `${this.url},${extent.crs()}`;\n    }\n\n    extentInsideLimit(extent) {\n        const dataExtent = this.parsedData.extent;\n        const localExtent = this.projection == extent.crs() ? extent : extent.as(this.projection);\n        return (extent.zoom == undefined || !(extent.zoom < this.zoom.min || extent.zoom > this.zoom.max)) &&\n            dataExtent.intersectsExtent(localExtent);\n    }\n}\n\nexport default FileSource;\n","/* global window */\nimport * as THREE from 'three';\nimport Camera from '../Renderer/Camera';\nimport MainLoop, { MAIN_LOOP_EVENTS, RENDERING_PAUSED } from './MainLoop';\nimport c3DEngine from '../Renderer/c3DEngine';\nimport RendererConstant from '../Renderer/RendererConstant';\n\nimport { getMaxColorSamplerUnitsCount } from '../Renderer/LayeredMaterial';\n\nimport Layer from '../Layer/Layer';\nimport ColorLayer from '../Layer/ColorLayer';\nimport ElevationLayer from '../Layer/ElevationLayer';\nimport GeometryLayer from '../Layer/GeometryLayer';\n\nimport Scheduler from './Scheduler/Scheduler';\nimport Picking from './Picking';\nimport WMTSSource from '../Source/WMTSSource';\nimport WMSSource from '../Source/WMSSource';\nimport WFSSource from '../Source/WFSSource';\nimport TMSSource from '../Source/TMSSource';\nimport StaticSource from '../Source/StaticSource';\nimport FileSource from '../Source/FileSource';\n\nconst supportedSource = new Map([\n    ['wmts', WMTSSource],\n    ['file', FileSource],\n    ['wfs', WFSSource],\n    ['wms', WMSSource],\n    ['tms', TMSSource],\n    ['xyz', TMSSource],\n    ['static', StaticSource],\n]);\n\nexport const VIEW_EVENTS = {\n    /**\n     * Fires when all the layers of the view are considered initialized.\n     * Initialized in this context means: all layers are ready to be\n     * displayed (no pending network access, no visual improvement to be\n     * expected, ...).\n     * If you add new layers, the event will be fired again when all\n     * layers are ready.\n     * @event View#layers-initialized\n     * @property type {string} layers-initialized\n     */\n    LAYERS_INITIALIZED: 'layers-initialized',\n};\n\n/**\n * Constructs an Itowns View instance\n *\n * @param {string} crs - The default CRS of Three.js coordinates. Should be a cartesian CRS.\n * @param {HTMLElement} viewerDiv - Where to instanciate the Three.js scene in the DOM\n * @param {Object=} options - Optional properties.\n * @param {?MainLoop} options.mainLoop - {@link MainLoop} instance to use, otherwise a default one will be constructed\n * @param {?(WebGLRenderer|object)} options.renderer - {@link WebGLRenderer} instance to use, otherwise\n * a default one will be constructed. In this case, if options.renderer is an object, it will be used to\n * configure the renderer (see {@link c3DEngine}.  If not present, a new <canvas> will be created and\n * added to viewerDiv (mutually exclusive with mainLoop)\n * @param {?Scene} options.scene3D - {@link Scene} instance to use, otherwise a default one will be constructed\n * @constructor\n */\nfunction View(crs, viewerDiv, options = {}) {\n    if (!viewerDiv) {\n        throw new Error('Invalid viewerDiv parameter (must non be null/undefined)');\n    }\n\n    this.referenceCrs = crs;\n\n    let engine;\n    // options.renderer can be 2 separate things:\n    //   - an actual renderer (in this case we don't use viewerDiv)\n    //   - options for the renderer to be created\n    if (options.renderer && options.renderer.domElement) {\n        engine = new c3DEngine(options.renderer);\n    } else {\n        engine = new c3DEngine(viewerDiv, options.renderer);\n    }\n\n    this.mainLoop = options.mainLoop || new MainLoop(new Scheduler(), engine);\n\n    this.scene = options.scene3D || new THREE.Scene();\n    if (!options.scene3D) {\n        this.scene.autoUpdate = false;\n    }\n\n    this.camera = new Camera(\n        this.referenceCrs,\n        this.mainLoop.gfxEngine.getWindowSize().x,\n        this.mainLoop.gfxEngine.getWindowSize().y,\n        options);\n\n    this._frameRequesters = { };\n    this._layers = [];\n\n    window.addEventListener('resize', () => {\n        // If the user gave us a container (<div>) then itowns' size is\n        // the container's size. Otherwise we use window' size.\n        const newSize = new THREE.Vector2(viewerDiv.clientWidth, viewerDiv.clientHeight);\n        this.mainLoop.gfxEngine.onWindowResize(newSize.x, newSize.y);\n        this.notifyChange(this.camera.camera3D);\n    }, false);\n\n    this._changeSources = new Set();\n\n    if (__DEBUG__) {\n        this.isDebugMode = true;\n    }\n\n    this._delayedFrameRequesterRemoval = [];\n\n    this._allLayersAreReadyCallback = () => {\n        // all layers must be ready\n        const allReady = this.getLayers().every(layer => layer.ready);\n        if (allReady &&\n                this.mainLoop.scheduler.commandsWaitingExecutionCount() == 0 &&\n                this.mainLoop.renderingState == RENDERING_PAUSED) {\n            this.dispatchEvent({ type: VIEW_EVENTS.LAYERS_INITIALIZED });\n            this.removeFrameRequester(MAIN_LOOP_EVENTS.UPDATE_END, this._allLayersAreReadyCallback);\n        }\n    };\n}\n\nView.prototype = Object.create(THREE.EventDispatcher.prototype);\nView.prototype.constructor = View;\n\nfunction _createLayerFromConfig(config) {\n    switch (config.type) {\n        case 'color':\n            return new ColorLayer(config.id, config);\n        case 'elevation':\n            return new ElevationLayer(config.id, config);\n        case 'geometry':\n            return new GeometryLayer(config.id, new THREE.Group(), config);\n        case 'debug':\n            return new Layer(config.id, 'debug', config);\n        default:\n            throw new Error(`Unknown layer type ${config.type}: please\n                specify a valid one`);\n    }\n}\n\nconst _syncGeometryLayerVisibility = function _syncGeometryLayerVisibility(layer, view) {\n    if (layer.object3d) {\n        layer.object3d.visible = layer.visible;\n    }\n\n    if (layer.threejsLayer) {\n        if (layer.visible) {\n            view.camera.camera3D.layers.enable(layer.threejsLayer);\n        } else {\n            view.camera.camera3D.layers.disable(layer.threejsLayer);\n        }\n    }\n};\n\nfunction _preprocessLayer(view, layer, provider, parentLayer) {\n    if (!(layer instanceof Layer)) {\n        layer = _createLayerFromConfig(layer);\n    }\n\n    if (parentLayer && !layer.extent) {\n        layer.extent = parentLayer.extent;\n        if (layer.source && !layer.source.extent) {\n            layer.source.extent = parentLayer.extent;\n        }\n    }\n\n    if (layer.type == 'geometry' || layer.type == 'debug') {\n        if (parentLayer || layer.type == 'debug') {\n            // layer.threejsLayer *must* be assigned before preprocessing,\n            // because TileProvider.preprocessDataLayer function uses it.\n            layer.threejsLayer = view.mainLoop.gfxEngine.getUniqueThreejsLayer();\n        }\n        layer.defineLayerProperty('visible', true, () => _syncGeometryLayerVisibility(layer, view));\n        _syncGeometryLayerVisibility(layer, view);\n        // Find projection layer, this is projection destination\n        layer.projection = view.referenceCrs;\n    } else if (layer.source.tileMatrixSet === 'PM') {\n        layer.projection = 'EPSG:3857';\n    } else {\n        layer.projection = parentLayer.extent.crs();\n    }\n\n    if (!layer.whenReady) {\n        let providerPreprocessing = Promise.resolve();\n        if (provider && provider.preprocessDataLayer) {\n            providerPreprocessing = provider.preprocessDataLayer(layer, view, view.mainLoop.scheduler, parentLayer);\n            if (!(providerPreprocessing && providerPreprocessing.then)) {\n                providerPreprocessing = Promise.resolve();\n            }\n        } else if (layer.source) {\n            // TODO: move to dataSourceProvider\n            // Tempory fix, because sourceFile loads data in his constructor\n            // while it should be loaded in the provider\n            layer.source.toTexture = layer.type != 'geometry';\n            const protocol = layer.source.protocol;\n            layer.source = new (supportedSource.get(protocol))(layer.source, layer.projection);\n            providerPreprocessing = layer.source.whenReady || providerPreprocessing;\n        }\n\n        // the last promise in the chain must return the layer\n        layer.whenReady = providerPreprocessing.then(() => {\n            layer.ready = true;\n            return layer;\n        });\n    }\n\n\n    return layer;\n}\n\n/**\n * Add layer in viewer.\n * The layer id must be unique.\n *\n * This function calls `preprocessDataLayer` of the relevant provider with this\n * layer and set `layer.whenReady` to a promise that resolves when\n * the preprocessing operation is done. This promise is also returned by\n * `addLayer` allowing to chain call.\n *\n * @example\n * // Add Color Layer\n * view.addLayer({\n *      type: 'elevation',\n *      id: 'iElevation',\n * });\n *\n * // Example to add an OPENSM Layer\n * view.addLayer({\n *   type: 'color',\n *   id: 'OPENSM',\n *   fx: 2.5,\n *   source: {\n *      protocol:   'xyz',\n *      url:  'http://b.tile.openstreetmap.fr/osmfr/${z}/${x}/${y}.png',\n *      format: 'image/png',\n *       attribution : {\n *           name: 'OpenStreetMap',\n *           url: 'http://www.openstreetmap.org/',\n *       },\n *       tileMatrixSet: 'PM',\n *    },\n * });\n *\n * // Add Elevation Layer and do something once it's ready\n * var layer = view.addLayer({\n *      type: 'elevation',\n *      id: 'iElevation',\n * }).then(() => { .... });\n *\n * // One can also attach a callback to the same promise with a layer instance.\n * layer.whenReady.then(() => { ... });\n *\n * @param {LayerOptions|Layer|GeometryLayer} layer\n * @param {Layer=} parentLayer\n * @return {Promise} a promise resolved with the new layer object when it is fully initialized or rejected if any error occurred.\n */\nView.prototype.addLayer = function addLayer(layer, parentLayer) {\n    return new Promise((resolve, reject) => {\n        if (!layer) {\n            reject(new Error('layer is undefined'));\n            return;\n        }\n        const duplicate = this.getLayers((l => l.id == layer.id));\n        if (duplicate.length > 0) {\n            reject(new Error(`Invalid id '${layer.id}': id already used`));\n            return;\n        }\n\n        const protocol = layer.source ? layer.source.protocol : layer.protocol;\n        const provider = this.mainLoop.scheduler.getProtocolProvider(protocol);\n        if (layer.protocol && !provider) {\n            reject(new Error(`${layer.protocol} is not a recognized protocol name.`));\n            return;\n        }\n        layer = _preprocessLayer(this, layer, provider, parentLayer);\n        if (parentLayer) {\n            if (layer.type == 'color') {\n                const layerColors = this.getLayers(l => l.type === 'color');\n\n                const sumColorLayers = parentLayer.countColorLayersTextures(...layerColors, layer);\n\n                if (sumColorLayers <= getMaxColorSamplerUnitsCount()) {\n                    parentLayer.attach(layer);\n                } else {\n                    reject(new Error(`Cant add color layer ${layer.id}: the maximum layer is reached`));\n                    return;\n                }\n            } else {\n                parentLayer.attach(layer);\n            }\n        } else {\n            if (typeof (layer.update) !== 'function') {\n                reject(new Error('Cant add GeometryLayer: missing a update function'));\n                return;\n            }\n            if (typeof (layer.preUpdate) !== 'function') {\n                reject(new Error('Cant add GeometryLayer: missing a preUpdate function'));\n                return;\n            }\n\n            this._layers.push(layer);\n        }\n\n        if (layer.object3d && !layer.object3d.parent && layer.object3d !== this.scene) {\n            this.scene.add(layer.object3d);\n        }\n\n        layer.whenReady.then((layer) => {\n            this.notifyChange(parentLayer || layer, false);\n            if (!this._frameRequesters[MAIN_LOOP_EVENTS.UPDATE_END] ||\n                    this._frameRequesters[MAIN_LOOP_EVENTS.UPDATE_END].indexOf(this._allLayersAreReadyCallback) == -1) {\n                this.addFrameRequester(MAIN_LOOP_EVENTS.UPDATE_END, this._allLayersAreReadyCallback);\n            }\n            resolve(layer);\n        })\n            .catch((err) => {\n                reject(new Error(err));\n            });\n    });\n};\n\n/**\n * Notifies the scene it needs to be updated due to changes exterior to the\n * scene itself (e.g. camera movement).\n * non-interactive events (e.g: texture loaded)\n * @param {*} changeSource\n * @param {boolean} needsRedraw - indicates if notified change requires a full scene redraw.\n */\nView.prototype.notifyChange = function notifyChange(changeSource = undefined, needsRedraw = true) {\n    if (changeSource) {\n        this._changeSources.add(changeSource);\n    }\n    this.mainLoop.scheduleViewUpdate(this, needsRedraw);\n};\n\n/**\n * Get all layers, with an optionnal filter applied.\n * The filter method will be called with 2 args:\n *   - 1st: current layer\n *   - 2nd: (optional) the geometry layer to which the current layer is attached\n * @example\n * // get all layers\n * view.getLayers();\n * // get all color layers\n * view.getLayers(layer => layer.type === 'color');\n * // get all elevation layers\n * view.getLayers(layer => layer.type === 'elevation');\n * // get all geometry layers\n * view.getLayers(layer => layer.type === 'geometry');\n * // get one layer with id\n * view.getLayers(layer => layer.id === 'itt');\n * @param {function(Layer):boolean} filter\n * @returns {Array<Layer>}\n */\nView.prototype.getLayers = function getLayers(filter) {\n    const result = [];\n    for (const layer of this._layers) {\n        if (!filter || filter(layer)) {\n            result.push(layer);\n        }\n        for (const attached of layer.attachedLayers) {\n            if (!filter || filter(attached, layer)) {\n                result.push(attached);\n            }\n        }\n    }\n    return result;\n};\n\n/**\n * @param {Layer} layer\n * @returns {GeometryLayer} the parent layer of the given layer or undefined.\n */\nView.prototype.getParentLayer = function getParentLayer(layer) {\n    for (const geometryLayer of this._layers) {\n        for (const attached of geometryLayer.attachedLayers) {\n            if (attached === layer) {\n                return geometryLayer;\n            }\n        }\n    }\n};\n\n/**\n * @name FrameRequester\n * @function\n *\n * @description\n * Method that will be called each time the <code>MainLoop</code> updates. This\n * function will be given as parameter the delta (in ms) between this update and\n * the previous one, and whether or not we just started to render again. This\n * update is considered as the \"next\" update if <code>view.notifyChange</code>\n * was called during a precedent update. If <code>view.notifyChange</code> has\n * been called by something else (other micro/macrotask, UI events etc...), then\n * this update is considered as being the \"first\". It can also receive optional\n * arguments, depending on the attach point of this function.  Currently only\n * <code>BEFORE_LAYER_UPDATE / AFTER_LAYER_UPDATE</code> attach points provide\n * an additional argument: the layer being updated.\n * <br><br>\n *\n * This means that if a <code>frameRequester</code> function wants to animate something, it\n * should keep on calling <code>view.notifyChange</code> until its task is done.\n * <br><br>\n *\n * Implementors of <code>frameRequester</code> should keep in mind that this\n * function will be potentially called at each frame, thus care should be given\n * about performance.\n * <br><br>\n *\n * Typical frameRequesters are controls, module wanting to animate moves or UI\n * elements etc... Basically anything that would want to call\n * requestAnimationFrame.\n *\n * @param {number} dt\n * @param {boolean} updateLoopRestarted\n * @param {...*} args\n */\n/**\n * Add a frame requester to this view.\n *\n * FrameRequesters can activate the MainLoop update by calling view.notifyChange.\n *\n * @param {String} when - decide when the frameRequester should be called during\n * the update cycle. Can be any of {@link MAIN_LOOP_EVENTS}.\n * @param {FrameRequester} frameRequester - this function will be called at each\n * MainLoop update with the time delta between last update, or 0 if the MainLoop\n * has just been relaunched.\n */\nView.prototype.addFrameRequester = function addFrameRequester(when, frameRequester) {\n    if (typeof frameRequester !== 'function') {\n        throw new Error('frameRequester must be a function');\n    }\n\n    if (!this._frameRequesters[when]) {\n        this._frameRequesters[when] = [frameRequester];\n    } else {\n        this._frameRequesters[when].push(frameRequester);\n    }\n};\n\n/**\n * Remove a frameRequester.\n * The effective removal will happen either later; at worst it'll be at\n * the beginning of the next frame.\n *\n * @param {String} when - attach point of this requester. Can be any of\n * {@link MAIN_LOOP_EVENTS}.\n * @param {FrameRequester} frameRequester\n */\nView.prototype.removeFrameRequester = function removeFrameRequester(when, frameRequester) {\n    const index = this._frameRequesters[when].indexOf(frameRequester);\n    if (index >= 0) {\n        this._delayedFrameRequesterRemoval.push({ when, frameRequester });\n    } else {\n        console.error('Invalid call to removeFrameRequester: frameRequester isn\\'t registered');\n    }\n};\n\nView.prototype._executeFrameRequestersRemovals = function _executeFrameRequestersRemovals() {\n    for (const toDelete of this._delayedFrameRequesterRemoval) {\n        const index = this._frameRequesters[toDelete.when].indexOf(toDelete.frameRequester);\n        if (index >= 0) {\n            this._frameRequesters[toDelete.when].splice(index, 1);\n        } else {\n            console.warn('FrameReq has already been removed');\n        }\n    }\n    this._delayedFrameRequesterRemoval.length = 0;\n};\n\n/**\n * Execute a frameRequester.\n *\n * @param {String} when - attach point of this (these) requester(s). Can be any\n * of {@link MAIN_LOOP_EVENTS}.\n * @param {Number} dt - delta between this update and the previous one\n * @param {boolean} updateLoopRestarted\n * @param {...*} args - optional arguments\n */\nView.prototype.execFrameRequesters = function execFrameRequesters(when, dt, updateLoopRestarted, ...args) {\n    if (!this._frameRequesters[when]) {\n        return;\n    }\n\n    if (this._delayedFrameRequesterRemoval.length > 0) {\n        this._executeFrameRequestersRemovals();\n    }\n\n    for (const frameRequester of this._frameRequesters[when]) {\n        if (frameRequester.update) {\n            frameRequester.update(dt, updateLoopRestarted, args);\n        } else {\n            frameRequester(dt, updateLoopRestarted, args);\n        }\n    }\n};\n\nconst _eventCoords = new THREE.Vector2();\n/**\n * Extract view coordinates from a mouse-event / touch-event\n * @param {event} event - event can be a MouseEvent or a TouchEvent\n * @param {number} touchIdx - finger index when using a TouchEvent (default: 0)\n * @return {THREE.Vector2} - view coordinates (in pixels, 0-0 = top-left of the View)\n */\nView.prototype.eventToViewCoords = function eventToViewCoords(event, touchIdx = 0) {\n    if (event.touches === undefined || !event.touches.length) {\n        return _eventCoords.set(event.offsetX, event.offsetY);\n    } else {\n        const br = this.mainLoop.gfxEngine.renderer.domElement.getBoundingClientRect();\n        return _eventCoords.set(\n            event.touches[touchIdx].clientX - br.x,\n            event.touches[touchIdx].clientY - br.y);\n    }\n};\n\n/**\n * Extract normalized coordinates (NDC) from a mouse-event / touch-event\n * @param {event} event - event can be a MouseEvent or a TouchEvent\n * @param {number} touchIdx - finger index when using a TouchEvent (default: 0)\n * @return {THREE.Vector2} - NDC coordinates (x and y are [-1, 1])\n */\nView.prototype.eventToNormalizedCoords = function eventToNormalizedCoords(event, touchIdx = 0) {\n    return this.viewToNormalizedCoords(this.eventToViewCoords(event, touchIdx));\n};\n\n/**\n * Convert view coordinates to normalized coordinates (NDC)\n * @param {THREE.Vector2} viewCoords (in pixels, 0-0 = top-left of the View)\n * @return {THREE.Vector2} - NDC coordinates (x and y are [-1, 1])\n */\nView.prototype.viewToNormalizedCoords = function viewToNormalizedCoords(viewCoords) {\n    _eventCoords.x = 2 * (viewCoords.x / this.camera.width) - 1;\n    _eventCoords.y = -2 * (viewCoords.y / this.camera.height) + 1;\n    return _eventCoords;\n};\n\n/**\n * Convert NDC coordinates to view coordinates\n * @param {THREE.Vector2} ndcCoords\n * @return {THREE.Vector2} - view coordinates (in pixels, 0-0 = top-left of the View)\n */\nView.prototype.normalizedToViewCoords = function normalizedToViewCoords(ndcCoords) {\n    _eventCoords.x = (ndcCoords.x + 1) * 0.5 * this.camera.width;\n    _eventCoords.y = (ndcCoords.y - 1) * -0.5 * this.camera.height;\n    return _eventCoords;\n};\n\nfunction layerIdToLayer(view, layerId) {\n    const lookup = view.getLayers(l => l.id == layerId);\n    if (!lookup.length) {\n        throw new Error(`Invalid layer id used as where argument (value = ${layerId})`);\n    }\n    return lookup[0];\n}\n\n/**\n * Return objects from some layers/objects3d under the mouse in this view.\n *\n * @param {Object} mouseOrEvt - mouse position in window coordinates (0, 0 = top-left)\n * or MouseEvent or TouchEvent\n * @param {number} radius - picking will happen in a circle centered on mouseOrEvt. Radius\n * is the radius of this circle, in pixels\n * @param {...*} where - where to look for objects. Can be either: empty (= look\n * in all layers with type == 'geometry'), layer ids or layers or a mix of all\n * the above.\n * @return {Array} - an array of objects. Each element contains at least an object\n * property which is the Object3D under the cursor. Then depending on the queried\n * layer/source, there may be additionnal properties (coming from THREE.Raycaster\n * for instance).\n *\n * @example\n * view.pickObjectsAt({ x, y })\n * view.pickObjectsAt({ x, y }, 1, 'wfsBuilding')\n * view.pickObjectsAt({ x, y }, 3, 'wfsBuilding', myLayer)\n */\nView.prototype.pickObjectsAt = function pickObjectsAt(mouseOrEvt, radius, ...where) {\n    const results = [];\n    const sources = where.length == 0 ?\n        this.getLayers(l => l.type == 'geometry') :\n        [...where];\n    const mouse = (mouseOrEvt instanceof Event) ? this.eventToViewCoords(mouseOrEvt) : mouseOrEvt;\n    radius = radius || 0;\n\n    for (const source of sources) {\n        if (source instanceof Layer ||\n            typeof (source) === 'string') {\n            const layer = (typeof (source) === 'string') ?\n                layerIdToLayer(this, source) :\n                source;\n\n            const parentLayer = this.getParentLayer(layer);\n            if (!parentLayer) {\n                const sp = layer.pickObjectsAt(this, mouse, radius);\n                // warning: sp might be very large, so we can't use '...sp' (we'll hit\n                // 'javascript maximum call stack size exceeded' error) nor\n                // Array.prototype.push.apply(result, sp)\n                for (let i = 0; i < sp.length; i++) {\n                    results.push(sp[i]);\n                }\n            } else {\n                // raycast using parent layer object3d\n                const obj = Picking.pickObjectsAt(\n                    this,\n                    mouse,\n                    radius,\n                    parentLayer.object3d);\n\n                // then filter the results\n                for (const o of obj) {\n                    if (o.layer === layer) {\n                        results.push(o);\n                    }\n                }\n            }\n        } else if (source instanceof THREE.Object3D) {\n            Picking.pickObjectsAt(\n                this,\n                mouse,\n                radius,\n                source,\n                results);\n        } else {\n            throw new Error(`Invalid where arg (value = ${where}). Expected layers, layer ids or Object3Ds`);\n        }\n    }\n\n    return results;\n};\n\nView.prototype.readDepthBuffer = function readDepthBuffer(x, y, width, height) {\n    const g = this.mainLoop.gfxEngine;\n    const currentWireframe = this.tileLayer.wireframe;\n    const currentOpacity = this.tileLayer.opacity;\n    const currentVisibility = this.tileLayer.visible;\n    if (currentWireframe) {\n        this.tileLayer.wireframe = false;\n    }\n    if (currentOpacity < 1.0) {\n        this.tileLayer.opacity = 1.0;\n    }\n    if (!currentVisibility) {\n        this.tileLayer.visible = true;\n    }\n\n    const restore = this.tileLayer.level0Nodes.map(n => n.pushRenderState(RendererConstant.DEPTH));\n    const buffer = g.renderViewToBuffer(\n        { camera: this.camera, scene: this.tileLayer.object3d },\n        { x, y, width, height });\n    restore.forEach(r => r());\n\n    if (this.tileLayer.wireframe !== currentWireframe) {\n        this.tileLayer.wireframe = currentWireframe;\n    }\n    if (this.tileLayer.opacity !== currentOpacity) {\n        this.tileLayer.opacity = currentOpacity;\n    }\n    if (this.tileLayer.visible !== currentVisibility) {\n        this.tileLayer.visible = currentVisibility;\n    }\n\n    return buffer;\n};\n\nconst matrix = new THREE.Matrix4();\nconst screen = new THREE.Vector2();\nconst ray = new THREE.Ray();\nconst direction = new THREE.Vector3();\n\n/**\n * Returns the world position (view's crs: referenceCrs) under view coordinates.\n * This position is computed with depth buffer.\n *\n * @param      {THREE.Vector2}  mouse  position in view coordinates (in pixel), if it's null so it's view's center.\n * @param      {THREE.Vector3}  [target=THREE.Vector3()] target. the result will be copied into this Vector3. If not present a new one will be created.\n * @return     {THREE.Vector3}  the world position in view's crs: referenceCrs.\n */\n\nView.prototype.getPickingPositionFromDepth = function fnGetPickingPositionFromDepth(mouse, target = new THREE.Vector3()) {\n    if (!this.tileLayer || this.tileLayer.level0Nodes.length == 0 || (!this.tileLayer.level0Nodes[0])) {\n        target = undefined;\n        return;\n    }\n    const l = this.mainLoop;\n    const viewPaused = l.scheduler.commandsWaitingExecutionCount() == 0 && l.renderingState == RENDERING_PAUSED;\n    const g = l.gfxEngine;\n    const dim = g.getWindowSize();\n    const camera = this.camera.camera3D;\n\n    mouse = mouse || dim.clone().multiplyScalar(0.5);\n    mouse.x = Math.floor(mouse.x);\n    mouse.y = Math.floor(mouse.y);\n\n    // Prepare state\n    const prev = camera.layers.mask;\n    camera.layers.mask = 1 << this.tileLayer.threejsLayer;\n\n    // Render/Read to buffer\n    let buffer;\n    if (viewPaused) {\n        this._fullSizeDepthBuffer = this._fullSizeDepthBuffer || this.readDepthBuffer(0, 0, dim.x, dim.y);\n        const id = ((dim.y - mouse.y - 1) * dim.x + mouse.x) * 4;\n        buffer = this._fullSizeDepthBuffer.slice(id, id + 4);\n    } else {\n        buffer = this.readDepthBuffer(mouse.x, mouse.y, 1, 1);\n    }\n\n    screen.x = (mouse.x / dim.x) * 2 - 1;\n    screen.y = -(mouse.y / dim.y) * 2 + 1;\n\n    // Origin\n    ray.origin.copy(camera.position);\n\n    // Direction\n    ray.direction.set(screen.x, screen.y, 0.5);\n    // Unproject\n    matrix.multiplyMatrices(camera.matrixWorld, matrix.getInverse(camera.projectionMatrix));\n    ray.direction.applyMatrix4(matrix);\n    ray.direction.sub(ray.origin);\n\n    direction.set(0, 0, 1.0);\n    direction.applyMatrix4(matrix);\n    direction.sub(ray.origin);\n\n    const angle = direction.angleTo(ray.direction);\n    const orthoZ = g.depthBufferRGBAValueToOrthoZ(buffer, camera);\n    const length = orthoZ / Math.cos(angle);\n\n    target.addVectors(camera.position, ray.direction.setLength(length));\n\n    camera.layers.mask = prev;\n\n    if (target.length() > 10000000) { return undefined; }\n\n    return target;\n};\n\nexport default View;\n","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","/**\n * Custom error thrown when cancelling commands. Allows the caller to act differently if needed.\n * @class\n * @param {Command} command\n */\nclass CancelledCommandException {\n    constructor(command) {\n        this.command = command;\n    }\n\n    toString() {\n        return `Cancelled command ${this.command.requester.id}/${this.command.layer.id}`;\n    }\n}\nexport default CancelledCommandException;\n","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;","var store = require('./_shared')('wks');\nvar uid = require('./_uid');\nvar Symbol = require('./_global').Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n","import SampleTestFS from '../../Renderer/Shader/SampleTestFS.glsl';\nimport SampleTestVS from '../../Renderer/Shader/SampleTestVS.glsl';\n\n// default values\nlet logDepthBufferSupported = false;\nlet maxTexturesUnits = 8;\n\nfunction _WebGLShader(renderer, type, string) {\n    const gl = renderer.context;\n    const shader = gl.createShader(type);\n\n    gl.shaderSource(shader, string);\n    gl.compileShader(shader);\n    return shader;\n}\n\nfunction isFirefox() {\n    return navigator && navigator.userAgent && navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\n}\n\nexport default {\n    isLogDepthBufferSupported() {\n        return logDepthBufferSupported;\n    },\n    isFirefox,\n    isInternetExplorer() {\n        const internetExplorer = false || !!document.documentMode;\n        return internetExplorer;\n    },\n    getMaxTextureUnitsCount() {\n        return maxTexturesUnits;\n    },\n    updateCapabilities(renderer) {\n        const gl = renderer.context;\n        maxTexturesUnits = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n\n        const program = gl.createProgram();\n        const glVertexShader = _WebGLShader(renderer, gl.VERTEX_SHADER, SampleTestVS);\n\n        let fragmentShader = `#define SAMPLE ${maxTexturesUnits}\\n`;\n        fragmentShader += SampleTestFS;\n\n        const glFragmentShader = _WebGLShader(renderer, gl.FRAGMENT_SHADER, fragmentShader);\n\n        gl.attachShader(program, glVertexShader);\n        gl.attachShader(program, glFragmentShader);\n        gl.linkProgram(program);\n\n        if (gl.getProgramParameter(program, gl.LINK_STATUS) === false) {\n            if (maxTexturesUnits > 16) {\n                const info = gl.getProgramInfoLog(program);\n                // eslint-disable-next-line no-console\n                console.warn(`${info}: using a maximum of 16 texture units instead of the reported value (${maxTexturesUnits})`);\n                if (isFirefox()) {\n                    // eslint-disable-next-line no-console\n                    console.warn(`It can come from a Mesa/Firefox bug;\n                        the shader compiles to an error when using more than 16 sampler uniforms,\n                        see https://bugzilla.mozilla.org/show_bug.cgi?id=777028`);\n                }\n                maxTexturesUnits = 16;\n            } else {\n                throw (new Error(`The GPU capabilities could not be determined accurately.\n                    Impossible to link a shader with the Maximum texture units ${maxTexturesUnits}`));\n            }\n        }\n\n        gl.deleteProgram(program);\n        gl.deleteShader(glVertexShader);\n        gl.deleteShader(glFragmentShader);\n        logDepthBufferSupported = renderer.capabilities.logarithmicDepthBuffer;\n    },\n};\n","import {\n    TextDecoder as TextDecoderPolyfill,\n} from 'text-encoding-utf-8';\n\nexport const TextDecoder = typeof global.TextDecoder === 'function' ? global.TextDecoder : TextDecoderPolyfill;\n\nexport default new TextDecoder('utf-8');\n","export default {\n    CYLINDRICAL: 1,\n    SPHERICAL: 2,\n};\n","import Projection from '../Core/Geographic/Projection';\nimport Extent from '../Core/Geographic/Extent';\n\nexport const SIZE_TEXTURE_TILE = 256;\n\nconst tileCoord = new Extent('WMTS:WGS84G', 0, 0, 0);\n\nexport default {\n    computeTileMatrixSetCoordinates(tile, tileMatrixSet) {\n        tileMatrixSet = tileMatrixSet || 'WGS84G';\n        if (!(tileMatrixSet in tile.wmtsCoords)) {\n            if (tile.wmtsCoords.WGS84G) {\n                const c = tile.wmtsCoords.WGS84G[0];\n                tileCoord.zoom = c.zoom;\n                tileCoord.col = c.col;\n                tileCoord.row = c.row;\n            } else {\n                Projection.WGS84toWMTS(tile.extent, tileCoord);\n                tile.wmtsCoords.WGS84G = [tileCoord.clone()];\n            }\n\n            tile.wmtsCoords[tileMatrixSet] =\n                Projection.getCoordWMTS_WGS84(tileCoord, tile.extent, tileMatrixSet);\n        }\n    },\n    // The origin parameter is to be set to the correct value, bottom or top\n    // (default being bottom) if the computation of the coordinates needs to be\n    // inverted to match the same scheme as OSM, Google Maps or other system.\n    // See link below for more information\n    // https://alastaira.wordpress.com/2011/07/06/converting-tms-tile-coordinates-to-googlebingosm-tile-coordinates/\n    computeTMSCoordinates(tile, extent, origin = 'bottom') {\n        extent = tile.extent.crs() == extent.crs() ? extent : extent.as(tile.extent.crs());\n        const c = tile.extent.center();\n        const layerDimension = extent.dimensions();\n\n        // Each level has 2^n * 2^n tiles...\n        // ... so we count how many tiles of the same width as tile we can fit in the layer\n        const tileCount = Math.round(layerDimension.x / tile.extent.dimensions().x);\n        // ... 2^zoom = tilecount => zoom = log2(tilecount)\n        const zoom = Math.floor(Math.log2(tileCount));\n\n        // Now that we have computed zoom, we can deduce x and y (or row / column)\n        const x = (c.x() - extent.west()) / layerDimension.x;\n        let y;\n        if (origin == 'top') {\n            y = (extent.north() - c.y()) / layerDimension.y;\n        } else {\n            y = (c.y() - extent.south()) / layerDimension.y;\n        }\n\n        return [new Extent('TMS', zoom, Math.floor(y * tileCount), Math.floor(x * tileCount))];\n    },\n};\n","// state to render\n// According to the state rendering, the material's object switches\n// to the correct state material\nexport default {\n    // final color\n    FINAL: 0,\n    // depth buffer\n    DEPTH: 1,\n    // id object\n    ID: 2,\n};\n","/**\n * Generated On: 2015-10-5\n * Class: Projection\n * Description: Outils de projections cartographiques et de convertion\n */\nimport { Math as MathExt } from 'three';\nimport Coordinates from './Coordinates';\nimport Extent from './Extent';\n\nconst PI_OV_FOUR = Math.PI / 4;\nconst PI_OV_TWO = Math.PI / 2;\nconst INV_TWO_PI = 1.0 / (Math.PI * 2);\nconst LOG_TWO = Math.log(2.0);\n\nfunction WGS84LatitudeClamp(latitude) {\n    return Math.min(84, Math.max(-86, latitude));\n}\n\nconst dim = { x: 0, y: 0 };\nconst center = new Coordinates('EPSG:4326', 0, 0, 0);\n\nconst Projection = {\n    /**\n     * Convert latitude to y coordinate in TileMatrixSet\n     * @param {number} latitude - latitude in degrees\n     * @return {number}\n     */\n    WGS84ToY(latitude) {\n        return 0.5 - Math.log(Math.tan(PI_OV_FOUR + MathExt.degToRad(latitude) * 0.5)) * INV_TWO_PI;\n    },\n\n    /**\n     * Convert from y coordinate in TileMatrixSet to WGS84 latitude\n     * @param {number} y - coords in TileMatrixSet\n     * @return {number} - latitude in degrees\n     */\n    YToWGS84(y) {\n        return MathExt.radToDeg(\n            2 * (Math.atan(Math.exp(-(y - 0.5) / INV_TWO_PI)) - PI_OV_FOUR));\n    },\n\n    getCoordWMTS_WGS84(tileCoord, bbox, tileMatrixSet) {\n        // TODO: PM, WGS84G are hard-coded reference to IGN's TileMatrixSet\n        if (tileMatrixSet === 'PM') {\n            return WMTS_WGS84ToWMTS_PM(tileCoord, bbox);\n        } else if (tileMatrixSet === 'WGS84G') {\n            return [tileCoord.clone()];\n        } else {\n            throw new Error(`Unsupported TileMatrixSet '${tileMatrixSet}'`);\n        }\n    },\n\n    WGS84toWMTS(bbox, target = new Extent('WMTS:WGS84G', 0, 0, 0)) {\n        bbox.dimensions(dim);\n\n        var zoom = Math.floor(\n            Math.log(Math.PI / MathExt.degToRad(dim.y)) / LOG_TWO + 0.5);\n\n        var nY = Math.pow(2, zoom);\n        var nX = 2 * nY;\n\n        var uX = Math.PI * 2 / nX;\n        var uY = Math.PI / nY;\n\n        bbox.center(center);\n        var col = Math.floor((Math.PI + MathExt.degToRad(center.longitude())) / uX);\n        var row = Math.floor(nY - (PI_OV_TWO + MathExt.degToRad(center.latitude())) / uY);\n        return target.set(zoom, row, col);\n    },\n\n    UnitaryToLongitudeWGS84(u, bbox) {\n        bbox.dimensions(dim);\n        return bbox.west() + u * dim.x;\n    },\n\n    UnitaryToLatitudeWGS84(v, bbox) {\n        bbox.dimensions(dim);\n        return bbox.south() + v * dim.y;\n    },\n};\n\n\nfunction WMTS_WGS84ToWMTS_PM(cWMTS, bbox) {\n    var wmtsBox = [];\n    var level = cWMTS.zoom + 1;\n    var nbRow = Math.pow(2, level);\n\n    var sizeRow = 1.0 / nbRow;\n\n    var yMin = Projection.WGS84ToY(WGS84LatitudeClamp(bbox.north()));\n    var yMax = Projection.WGS84ToY(WGS84LatitudeClamp(bbox.south()));\n\n    let maxRow;\n\n    const min = yMin / sizeRow;\n    const max = yMax / sizeRow;\n\n    const minRow = Math.floor(min);\n    // ]N; N+1] => N\n    maxRow = Math.ceil(max) - 1;\n    // make sure we don't exceed boundaries\n    maxRow = Math.min(maxRow, nbRow - 1);\n\n    var minCol = cWMTS.col;\n    var maxCol = minCol;\n\n    for (let r = maxRow; r >= minRow; r--) {\n        for (let c = minCol; c <= maxCol; c++) {\n            wmtsBox.push(new Extent('WMTS:PM', level, r, c));\n        }\n    }\n\n    return wmtsBox;\n}\n\nexport default Projection;\n","const data = new Map();\nconst stats = new Map();\n\n/**\n * This is a copy of the Map object, except that it also store a value for last\n * time used. This value is used for cache expiration mechanism.\n * <br><br>\n * This module can be imported anywhere, its data will be shared, as it is a\n * single instance.\n *\n * @module Cache\n *\n * @example\n * import Cache from './Cache';\n *\n * Cache.set('foo', { bar: 1 }, Cache.POLICIES.TEXTURE);\n * Cache.set('acme', { bar: 32 });\n *\n * Cache.get('foo');\n *\n * Cache.delete('foo');\n *\n * Cache.clear();\n */\nconst Cache = {\n    /**\n     * Cache policies for flushing. Those policies can be used when something is\n     * [set]{@link Cache.set} into the Cache, as the lifetime property.\n     *\n     * @name module:Cache\n     * @typedef {Object} module:Cache.POLICIES\n     *\n     * @property INFINITE - The entry is never flushed, except when the\n     * <code>all</code> flag is set to <code>true</code> when calling {@link\n     * Cache.flush}.\n     * @property TEXTURE - Shortcut for texture resources. Time is 15 minutes.\n     * @property ELEVATION - Shortcut for elevation resources. Time is 15\n     * minutes.\n     */\n    POLICIES: {\n        INFINITE: Infinity,\n        TEXTURE: 900000,\n        ELEVATION: 900000,\n    },\n\n    /**\n     * Returns the entry related to the specified key from the cache. The last\n     * time used property of the entry is updated to extend the longevity of the\n     * entry.\n     *\n     * @name module:Cache.get\n     * @function\n     *\n     * @param {string} key\n     *\n     * @return {Object}\n     */\n    get: (key) => {\n        const entry = data.get(key);\n        const stat = stats.get(key) || stats.set(key, { hit: 0, miss: 0 });\n\n        if (entry) {\n            stat.hit++;\n            entry.lastTimeUsed = Date.now();\n            return entry.value;\n        }\n\n        stat.miss++;\n    },\n\n    /**\n     * Adds or updates an entry with a specified key. A lifetime can be added,\n     * by specifying a numerical value or using the {@link Cache.POLICIES}\n     * values. By default an entry has an infinite lifetime.\n     *\n     * @name module:Cache.set\n     * @function\n     *\n     * @param {string} key\n     * @param {Object} value\n     * @param {number} [lifetime]\n     *\n     * @return {Object} the added value\n     */\n    set: (key, value, lifetime = Infinity) => {\n        const entry = {\n            value,\n            lastTimeUsed: Date.now(),\n            lifetime,\n        };\n        data.set(key, entry);\n\n        return value;\n    },\n\n    /**\n     * Deletes the specified entry from the cache.\n     *\n     * @name module:Cache.delete\n     * @function\n     *\n     * @param {string} key\n     *\n     * @return {boolean} - Confirmation that the entry has been deleted.\n     */\n    delete: key => data.delete(key),\n\n    /**\n     * Removes all entries of the cache.\n     *\n     * @name module:Cache.clear\n     * @function\n     */\n    clear: data.clear(),\n\n    /**\n     * Flush the cache: entries that have been present for too long since the\n     * last time they were used, are removed from the cache. By default, the\n     * time is the current time, but the interval can be reduced by doing\n     * something like <code>Cache.flush(Date.now() - reductionTime)</code>. If\n     * you want to clear the whole cache, use {@link Cache.clear} instead.\n     *\n     * @name module:Cache.flush\n     * @function\n     *\n     * @param {number} [time]\n     *\n     * @return {Object} Statistics about the flush: <code>before</code>\n     * gives the number of entries before flushing, <code>after</code> the\n     * number after flushing, <code>hit</code> the number of total successful\n     * hit on resources in the cache, and </code>miss</code> the number of\n     * failed hit. The hit and miss are based since the last flush, and are\n     * reset on every flush.\n     */\n    flush: (time = Date.now()) => {\n        const before = data.size;\n\n        data.forEach((entry, key) => {\n            if (entry.lifetime < time - entry.lastTimeUsed) {\n                data.delete(key);\n            }\n        });\n\n        let hit = 0;\n        let miss = 0;\n        stats.forEach((stat) => {\n            hit += stat.hit;\n            miss += stat.miss;\n        });\n        stats.clear();\n\n        return { before, after: data.size, hit, miss };\n    },\n};\n\nObject.freeze(Cache);\nexport default Cache;\n","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","import * as THREE from 'three';\nimport TileMesh from './TileMesh';\nimport RendererConstant from '../Renderer/RendererConstant';\nimport { unpack1K } from '../Renderer/LayeredMaterial';\n\nfunction hideEverythingElse(view, object, threejsLayer = 0) {\n    // We want to render only 'object' and its hierarchy.\n    // So if it uses threejsLayer defined -> force it on the camera\n    // (or use the default one: 0)\n    const prev = view.camera.camera3D.layers.mask;\n\n    view.camera.camera3D.layers.mask = 1 << threejsLayer;\n\n    return () => {\n        view.camera.camera3D.layers.mask = prev;\n    };\n}\n\nconst depthRGBA = new THREE.Vector4();\n// TileMesh picking support function\nfunction screenCoordsToNodeId(view, tileLayer, viewCoords, radius) {\n    const dim = view.mainLoop.gfxEngine.getWindowSize();\n\n    viewCoords = viewCoords || new THREE.Vector2(Math.floor(dim.x / 2), Math.floor(dim.y / 2));\n\n    const restore = tileLayer.level0Nodes.map(n => n.pushRenderState(RendererConstant.ID));\n\n    const undoHide = hideEverythingElse(view, tileLayer.object3d, tileLayer.threejsLayer);\n\n    const buffer = view.mainLoop.gfxEngine.renderViewToBuffer(\n        { camera: view.camera, scene: tileLayer.object3d },\n        {\n            x: viewCoords.x - radius,\n            y: viewCoords.y - radius,\n            width: 1 + radius * 2,\n            height: 1 + radius * 2,\n        });\n\n    undoHide();\n\n    restore.forEach(r => r());\n\n    const ids = [];\n\n    traversePickingCircle(radius, (x, y) => {\n        const idx = (y * 2 * radius + x) * 4;\n        const data = buffer.slice(idx, idx + 4);\n        depthRGBA.fromArray(data).divideScalar(255.0);\n        const unpack = unpack1K(depthRGBA, Math.pow(256, 3));\n\n        const _id = Math.round(unpack);\n        if (ids.indexOf(_id) < 0) {\n            ids.push(_id);\n        }\n    });\n    return ids;\n}\n\nfunction traversePickingCircle(radius, callback) {\n    // iterate on radius so we get closer to the mouse\n    // results first.\n    // Result traversal order for radius=2\n    // --3--\n    // -323-\n    // 32123\n    // -323\n    // --3--\n    let prevSq;\n    for (let r = 0; r <= radius; r++) {\n        const sq = r * r;\n        for (let x = -r; x <= r; x++) {\n            const sqx = x * x;\n            for (let y = -r; y <= r; y++) {\n                const dist = sqx + y * y;\n                // skip if too far\n                if (dist > sq) {\n                    continue;\n                }\n                // skip if belongs to previous\n                if (dist <= prevSq) {\n                    continue;\n                }\n\n                if (callback(x, y) === false) {\n                    return;\n                }\n            }\n        }\n        prevSq = sq;\n    }\n}\n\nfunction findLayerInParent(obj) {\n    if (obj.layer) {\n        return obj.layer;\n    }\n    if (obj.parent) {\n        return findLayerInParent(obj.parent);\n    }\n}\n\nconst raycaster = new THREE.Raycaster();\n\n/**\n * @module Picking\n *\n * Implement various picking methods for geometry layers.\n * These methods are not meant to be used directly, see View.pickObjectsAt\n * instead.\n *\n * All the methods here takes the same parameters:\n *   - the View instance\n *   - view coordinates (in pixels) where picking should be done\n *   - radius (in pixels) of the picking circle\n *   - layer: the geometry layer used for picking\n */\nexport default {\n    pickTilesAt: (_view, viewCoords, radius, layer) => {\n        const results = [];\n        const _ids = screenCoordsToNodeId(_view, layer, viewCoords, radius);\n\n        const extractResult = (node) => {\n            if (_ids.indexOf(node.id) >= 0 && node instanceof TileMesh) {\n                results.push({\n                    object: node,\n                    layer,\n                });\n            }\n        };\n        for (const n of layer.level0Nodes) {\n            n.traverse(extractResult);\n        }\n        return results;\n    },\n\n    pickPointsAt: (view, viewCoords, radius, layer) => {\n        if (!layer.root) {\n            return;\n        }\n\n        // enable picking mode for points material\n        layer.object3d.traverse((o) => {\n            if (o.isPoints && o.baseId) {\n                o.material.enablePicking(true);\n            }\n        });\n\n        const undoHide = hideEverythingElse(view, layer.object3d, layer.threejsLayer);\n\n        // render 1 pixel\n        // TODO: support more than 1 pixel selection\n        const buffer = view.mainLoop.gfxEngine.renderViewToBuffer(\n            { camera: view.camera, scene: layer.object3d },\n            {\n                x: viewCoords.x - radius,\n                y: viewCoords.y - radius,\n                width: 1 + radius * 2,\n                height: 1 + radius * 2,\n            });\n\n        undoHide();\n\n        const candidates = [];\n\n        traversePickingCircle(radius, (x, y) => {\n            const idx = (y * 2 * radius + x) * 4;\n            const data = buffer.slice(idx, idx + 4);\n\n            // see PointCloudProvider and the construction of unique_id\n            const objId = (data[0] << 8) | data[1];\n            const index = (data[2] << 8) | data[3];\n\n            const r = { objId, index };\n\n            for (let i = 0; i < candidates.length; i++) {\n                if (candidates[i].objId == r.objId && candidates[i].index == r.index) {\n                    return;\n                }\n            }\n            candidates.push(r);\n        });\n\n        const result = [];\n        layer.object3d.traverse((o) => {\n            if (o.isPoints && o.baseId) {\n                // disable picking mode\n                o.material.enablePicking(false);\n\n                // if baseId matches objId, the clicked point belongs to `o`\n                for (let i = 0; i < candidates.length; i++) {\n                    if (candidates[i].objId == o.baseId) {\n                        result.push({\n                            object: o,\n                            index: candidates[i].index,\n                            layer,\n                        });\n                    }\n                }\n            }\n        });\n\n        return result;\n    },\n\n    /*\n     * Default picking method. Uses THREE.Raycaster\n     */\n    pickObjectsAt(view, viewCoords, radius, object, target = []) {\n        // Instead of doing N raycast (1 per x,y returned by traversePickingCircle),\n        // we force render the zone of interest.\n        // Then we'll only do raycasting for the pixels where something was drawn.\n        const zone = {\n            x: viewCoords.x - radius,\n            y: viewCoords.y - radius,\n            width: 1 + radius * 2,\n            height: 1 + radius * 2,\n        };\n        const pixels = view.mainLoop.gfxEngine.renderViewToBuffer(\n            { scene: object, camera: view.camera },\n            zone);\n\n        const clearColor = view.mainLoop.gfxEngine.renderer.getClearColor();\n        const clearR = Math.round(255 * clearColor.r);\n        const clearG = Math.round(255 * clearColor.g);\n        const clearB = Math.round(255 * clearColor.b);\n\n        // Raycaster use NDC coordinate\n        const normalized = view.viewToNormalizedCoords(viewCoords);\n        const tmp = normalized.clone();\n        traversePickingCircle(radius, (x, y) => {\n            // x, y are offset from the center of the picking circle,\n            // and pixels is a square where 0, 0 is the top-left corner.\n            // So we need to shift x,y by radius.\n            const xi = x + radius;\n            const yi = y + radius;\n            const offset = (yi * (radius * 2 + 1) + xi) * 4;\n            const r = pixels[offset];\n            const g = pixels[offset + 1];\n            const b = pixels[offset + 2];\n            // Use approx. test to avoid rounding error or to behave\n            // differently depending on hardware rounding mode.\n            if (Math.abs(clearR - r) <= 1 &&\n                Math.abs(clearG - g) <= 1 &&\n                Math.abs(clearB - b) <= 1) {\n                // skip because nothing has been rendered here\n                return;\n            }\n\n            // Perform raycasting\n            tmp.setX(normalized.x + x / view.camera.width)\n                .setY(normalized.y + y / view.camera.height);\n            raycaster.setFromCamera(\n                tmp,\n                view.camera.camera3D);\n\n            const intersects = raycaster.intersectObject(object, true);\n            for (const inter of intersects) {\n                inter.layer = findLayerInParent(inter.object);\n                target.push(inter);\n            }\n\n            // Stop at first hit\n            return target.length == 0;\n        });\n\n        return target;\n    },\n};\n","/*\n * To change this license header, choose License Headers in Project Properties.\n * To change this template file, choose Tools | Templates\n * and open the template in the editor.\n */\n\n\nimport * as THREE from 'three';\nimport TileVS from './Shader/TileVS.glsl';\nimport TileFS from './Shader/TileFS.glsl';\nimport ShaderUtils from './Shader/ShaderUtils';\nimport Capabilities from '../Core/System/Capabilities';\nimport { l_COLOR, l_ELEVATION, EMPTY_TEXTURE_ZOOM } from './LayeredMaterialConstants';\n\nvar emptyTexture = new THREE.Texture();\nemptyTexture.coords = { zoom: EMPTY_TEXTURE_ZOOM };\n\nconst layerTypesCount = 2;\nvar vector4 = new THREE.Vector4(0.0, 0.0, 0.0, 0.0);\n\n// from three.js packDepthToRGBA\nconst UnpackDownscale = 255 / 256; // 0..1 -> fraction (excluding 1)\nexport function unpack1K(color, factor) {\n    var bitSh = new THREE.Vector4(\n        UnpackDownscale / (256.0 * 256.0 * 256.0),\n        UnpackDownscale / (256.0 * 256.0),\n        UnpackDownscale / 256.0,\n        UnpackDownscale);\n    return factor ? bitSh.dot(color) * factor : bitSh.dot(color);\n}\n\n// Array not suported in IE\nvar fillArray = function fillArray(array, remp) {\n    for (var i = 0; i < array.length; i++) { array[i] = remp; }\n};\n\nvar moveElementArray = function moveElementArray(array, oldIndex, newIndex) {\n    array.splice(newIndex, 0, array.splice(oldIndex, 1)[0]);\n};\n\n// Max sampler color count to LayeredMaterial\n// Because there's a statement limitation to unroll, in getColorAtIdUv method\nconst maxSamplersColorCount = 15;\nconst samplersElevationCount = 1;\n\nexport function getMaxColorSamplerUnitsCount() {\n    const maxSamplerUnitsCount = Capabilities.getMaxTextureUnitsCount();\n    return Math.min(maxSamplerUnitsCount - samplersElevationCount, maxSamplersColorCount);\n}\n\n// 'options' allows to define what is the datatype of the elevation textures used.\n// By default, we assume floating-point textures.\n// If the elevation textures are RGB, then 3 values must be set:\n//   - useColorTextureElevation: declare that the elevation texture is an RGB textures.\n//   - colorTextureElevationMinZ: altitude value mapped on the (0, 0, 0) color\n//   - colorTextureElevationMaxZ: altitude value mapped on the (255, 255, 255) color\nconst LayeredMaterial = function LayeredMaterial(options) {\n    THREE.RawShaderMaterial.call(this);\n\n    const nbSamplers = getMaxColorSamplerUnitsCount();\n\n    this.defines.TEX_UNITS = nbSamplers;\n\n    if (__DEBUG__) {\n        this.defines.DEBUG = 1;\n    }\n\n    options = options || { };\n    if (options.useRgbaTextureElevation) {\n        throw new Error('Restore this feature');\n    } else if (options.useColorTextureElevation) {\n        this.defines.COLOR_TEXTURE_ELEVATION = 1;\n        this.defines.MIN_ELEVATION = options.colorTextureElevationMinZ.toFixed(1);\n        this.defines.MAX_ELEVATION = options.colorTextureElevationMaxZ.toFixed(1);\n    } else {\n        // default\n        this.defines.DATA_TEXTURE_ELEVATION = 1;\n    }\n\n    this.fragmentShader = ShaderUtils.unrollLoops(TileFS, this.defines);\n    this.vertexShader = TileVS;\n\n    // handle on textures uniforms\n    this.textures = [];\n    // handle on textures offsetScale uniforms\n    this.offsetScale = [];\n    // handle Loaded textures count by layer's type uniforms\n    this.loadedTexturesCount = [0, 0];\n\n    // Uniform three js needs no empty array\n    // WARNING TODO: prevent empty slot, but it's not the solution\n    this.offsetScale[l_COLOR] = Array(nbSamplers);\n    this.offsetScale[l_ELEVATION] = [vector4];\n    fillArray(this.offsetScale[l_COLOR], vector4);\n\n    this.textures[l_ELEVATION] = [emptyTexture];\n    this.textures[l_COLOR] = Array(nbSamplers);\n    var paramLayers = Array(8);\n    this.layerTexturesCount = Array(8);\n\n    fillArray(this.textures[l_COLOR], emptyTexture);\n    fillArray(paramLayers, vector4);\n    fillArray(this.layerTexturesCount, 0);\n\n    // Elevation texture\n    this.uniforms.dTextures_00 = new THREE.Uniform(this.textures[l_ELEVATION]);\n\n    // Color textures's layer\n    this.uniforms.dTextures_01 = new THREE.Uniform(this.textures[l_COLOR]);\n\n    // Visibility layer\n    this.uniforms.visibility = new THREE.Uniform([true, true, true, true, true, true, true, true]);\n\n    // Loaded textures count by layer's type\n    this.uniforms.loadedTexturesCount = new THREE.Uniform(this.loadedTexturesCount);\n\n    // Count color layers\n    this.uniforms.colorLayersCount = new THREE.Uniform(1);\n\n    // Layer setting\n    // Offset color texture slot | Projection | fx | Opacity\n    this.uniforms.paramLayers = new THREE.Uniform(paramLayers);\n\n    // Elevation texture cropping\n    this.uniforms.offsetScale_L00 = new THREE.Uniform(this.offsetScale[l_ELEVATION]);\n\n    // Color texture cropping\n    this.uniforms.offsetScale_L01 = new THREE.Uniform(this.offsetScale[l_COLOR]);\n\n    // Light position\n    this.uniforms.lightPosition = new THREE.Uniform(new THREE.Vector3(-0.5, 0.0, 1.0));\n\n    this.uniforms.distanceFog = new THREE.Uniform(1000000000.0);\n\n    this.uniforms.uuid = new THREE.Uniform(0);\n\n    this.uniforms.selected = new THREE.Uniform(false);\n\n    this.uniforms.lightingEnabled = new THREE.Uniform(false);\n\n    this.uniforms.noTextureColor = new THREE.Uniform(new THREE.Color(0.04, 0.23, 0.35));\n\n    this.uniforms.opacity = new THREE.Uniform(1.0);\n\n    this.colorLayersId = [];\n\n    if (Capabilities.isLogDepthBufferSupported()) {\n        this.defines.USE_LOGDEPTHBUF = 1;\n        this.defines.USE_LOGDEPTHBUF_EXT = 1;\n    }\n\n    if (__DEBUG__) {\n        this.checkLayersConsistency = function checkLayersConsistency(node, imageryLayers) {\n            for (const layer of imageryLayers) {\n                const index = this.indexOfColorLayer(layer.id);\n                if (index < 0) {\n                    continue;\n                }\n\n                const offset = this.getTextureOffsetByLayerIndex(index);\n                const count = this.getTextureCountByLayerIndex(index);\n                let total = 0;\n                for (let i = 0; i < this.loadedTexturesCount[1]; i++) {\n                    if (!this.uniforms.dTextures_01.value[i].image) {\n                        throw new Error(`${node.id} - Missing texture at index ${i} for layer ${layer.id}`);\n                    }\n\n                    const critere1 = (offset <= i && i < (offset + count));\n                    const search = layer.name ? `LAYERS=${layer.name}&` : `LAYER=${layer.options.name}&`;\n                    const critere2 = this.uniforms.dTextures_01.value[i].image.currentSrc.indexOf(search) > 0;\n\n                    if (critere1 && !critere2) {\n                        throw new Error(`${node.id} - Texture should belong to ${layer.id} but comes from ${this.uniforms.dTextures_01.value[i].image.currentSrc}`);\n                    } else if (!critere1 && critere2) {\n                        throw new Error(`${node.id} - Texture shouldn't belong to ${layer.id}`);\n                    } else if (critere1) {\n                        total++;\n                    }\n                }\n                if (total != count) {\n                    throw new Error(`${node.id} - Invalid total texture count. Found: ${total}, expected: ${count} for ${layer.id}`);\n                }\n            }\n        };\n    }\n};\n\nLayeredMaterial.prototype = Object.create(THREE.RawShaderMaterial.prototype);\nLayeredMaterial.prototype.constructor = LayeredMaterial;\n\nLayeredMaterial.prototype.dispose = function dispose() {\n    // TODO: WARNING  verify if textures to dispose aren't attached with ancestor\n\n    this.dispatchEvent({\n        type: 'dispose',\n    });\n\n    for (let l = 0; l < layerTypesCount; l++) {\n        for (let i = 0, max = this.textures[l].length; i < max; i++) {\n            if (this.textures[l][i] instanceof THREE.Texture) {\n                this.textures[l][i].dispose();\n            }\n        }\n    }\n};\n\nLayeredMaterial.prototype.setSequence = function setSequence(sequenceLayer) {\n    let offsetLayer = 0;\n    let offsetTexture = 0;\n\n    const originalOffsets = new Array(...this.uniforms.offsetScale_L01.value);\n    const originalTextures = new Array(...this.uniforms.dTextures_01.value);\n\n    for (let l = 0; l < sequenceLayer.length; l++) {\n        const layer = sequenceLayer[l];\n        const oldIndex = this.indexOfColorLayer(layer);\n        if (oldIndex > -1) {\n            const newIndex = l - offsetLayer;\n            const texturesCount = this.layerTexturesCount[oldIndex];\n\n            // individual values are swapped in place\n            if (newIndex !== oldIndex) {\n                moveElementArray(this.colorLayersId, oldIndex, newIndex);\n                moveElementArray(this.layerTexturesCount, oldIndex, newIndex);\n                moveElementArray(this.uniforms.paramLayers.value, oldIndex, newIndex);\n                moveElementArray(this.uniforms.visibility.value, oldIndex, newIndex);\n            }\n            const oldOffset = this.getTextureOffsetByLayerIndex(newIndex);\n            // consecutive values are copied from original\n            for (let i = 0; i < texturesCount; i++) {\n                this.uniforms.offsetScale_L01.value[offsetTexture + i] = originalOffsets[oldOffset + i];\n                this.uniforms.dTextures_01.value[offsetTexture + i] = originalTextures[oldOffset + i];\n            }\n\n\n            this.setTextureOffsetByLayerIndex(newIndex, offsetTexture);\n            offsetTexture += texturesCount;\n        } else {\n            offsetLayer++;\n        }\n    }\n\n    this.uniforms.colorLayersCount.value = this.getColorLayersCount();\n};\n\nLayeredMaterial.prototype.removeColorLayer = function removeColorLayer(layer) {\n    const layerIndex = this.indexOfColorLayer(layer);\n\n    if (layerIndex === -1) {\n        return;\n    }\n\n    const offset = this.getTextureOffsetByLayerIndex(layerIndex);\n    const texturesCount = this.getTextureCountByLayerIndex(layerIndex);\n\n    // remove layer\n    this.colorLayersId.splice(layerIndex, 1);\n    this.uniforms.colorLayersCount.value = this.getColorLayersCount();\n\n    // remove nb textures\n    this.layerTexturesCount.splice(layerIndex, 1);\n    this.layerTexturesCount.push(0);\n\n    // Remove Layers Parameters\n    this.uniforms.paramLayers.value.splice(layerIndex, 1);\n    this.uniforms.paramLayers.value.push(vector4);\n\n    // Remove visibility Parameters\n    this.uniforms.visibility.value.splice(layerIndex, 1);\n    this.uniforms.visibility.value.push(true);\n\n    // Dispose Layers textures\n    for (let i = offset, max = offset + texturesCount; i < max; i++) {\n        if (this.textures[l_COLOR][i] instanceof THREE.Texture) {\n            this.textures[l_COLOR][i].dispose();\n        }\n    }\n\n    const removedTexturesLayer = this.textures[l_COLOR].splice(offset, texturesCount);\n    this.offsetScale[l_COLOR].splice(offset, texturesCount);\n\n    const loadedTexturesLayerCount = removedTexturesLayer.reduce((sum, texture) => sum + (texture.coords.zoom > EMPTY_TEXTURE_ZOOM), 0);\n\n    // refill remove textures\n    for (let i = 0, max = texturesCount; i < max; i++) {\n        this.textures[l_COLOR].push(emptyTexture);\n        this.offsetScale[l_COLOR].push(vector4);\n    }\n\n    // Update slot start texture layer\n    for (let j = layerIndex, mx = this.getColorLayersCount(); j < mx; j++) {\n        this.uniforms.paramLayers.value[j].x -= texturesCount;\n    }\n\n    this.loadedTexturesCount[l_COLOR] -= loadedTexturesLayerCount;\n\n    this.uniforms.offsetScale_L01.value = this.offsetScale[l_COLOR];\n    this.uniforms.dTextures_01.value = this.textures[l_COLOR];\n};\n\nLayeredMaterial.prototype.setLayerTextures = function setLayerTextures(layer, textures, pitchs) {\n    if (layer.type === 'elevation') {\n        if (Array.isArray(textures)) {\n            textures = textures[0];\n        }\n        // Add save layer.id elevation to get info of displayed layer.\n        // These properties will soon be clearly exposed\n        // in a next soon refactoring of this material\n        this.elevationlayerId = layer.id;\n        this._setTexture(textures, l_ELEVATION, 0, pitchs);\n    } else if (layer.type === 'color') {\n        const index = this.indexOfColorLayer(layer.id);\n        const slotOffset = this.getTextureOffsetByLayerIndex(index);\n        if (Array.isArray(textures)) {\n            for (let i = 0, max = textures.length; i < max; i++) {\n                if (textures[i]) {\n                    if (textures[i] !== null) {\n                        this._setTexture(textures[i], l_COLOR,\n                            i + (slotOffset || 0), pitchs[i]);\n                    } else {\n                        this.setLayerVisibility(index, false);\n                        break;\n                    }\n                }\n            }\n        } else if (textures !== null) {\n            this._setTexture(textures, l_COLOR, (slotOffset || 0), pitchs[0]);\n        } else {\n            this.setLayerVisibility(index, false);\n        }\n    } else {\n        throw new Error(`Unsupported layer type '${layer.type}'`);\n    }\n};\n\nLayeredMaterial.prototype._setTexture = function _setTexture(texture, layerType, slot, offsetScale) {\n    if (this.textures[layerType][slot] === undefined || this.textures[layerType][slot].image === undefined) {\n        this.loadedTexturesCount[layerType] += 1;\n    }\n\n    // BEWARE: array [] -> size: 0; array [10]=\"wao\" -> size: 11\n    this.textures[layerType][slot] = texture || emptyTexture;\n    this.offsetScale[layerType][slot] = offsetScale || new THREE.Vector4(0.0, 0.0, 1.0, 1.0);\n};\n\nLayeredMaterial.prototype.setColorLayerParameters = function setColorLayerParameters(params) {\n    if (this.getColorLayersCount() === 0) {\n        for (let l = 0; l < params.length; l++) {\n            this.pushLayer(params[l]);\n        }\n    }\n};\n\nLayeredMaterial.prototype.pushLayer = function pushLayer(layer, extents) {\n    const newIndex = this.getColorLayersCount();\n    const offset = newIndex === 0 ?\n        0 :\n        this.getTextureOffsetByLayerIndex(newIndex - 1) + this.getTextureCountByLayerIndex(newIndex - 1);\n\n    this.uniforms.paramLayers.value[newIndex] = new THREE.Vector4();\n\n    this.setTextureOffsetByLayerIndex(newIndex, offset);\n    // If there's only one texture: assume it covers the whole tile,\n    // otherwise declare the number of textures\n    this.setLayerUV(newIndex, (extents.length == 1) ? 0 : extents.length);\n    this.setLayerFx(newIndex, layer.fx);\n    this.setLayerOpacity(newIndex, layer.opacity);\n    this.setLayerVisibility(newIndex, layer.visible);\n    this.setLayerTexturesCount(newIndex, extents.length);\n    this.colorLayersId.push(layer.id);\n\n    this.uniforms.colorLayersCount.value = this.getColorLayersCount();\n};\n\nLayeredMaterial.prototype.indexOfColorLayer = function indexOfColorLayer(layerId) {\n    return this.colorLayersId.indexOf(layerId);\n};\n\nLayeredMaterial.prototype.getColorLayersCount = function getColorLayersCount() {\n    return this.colorLayersId.length;\n};\n\nLayeredMaterial.prototype.getTextureOffsetByLayerIndex = function getTextureOffsetByLayerIndex(index) {\n    return this.uniforms.paramLayers.value[index].x;\n};\n\nLayeredMaterial.prototype.getTextureCountByLayerIndex = function getTextureCountByLayerIndex(index) {\n    return this.layerTexturesCount[index];\n};\n\nLayeredMaterial.prototype.getLayerTextureOffset = function getLayerTextureOffset(layerId) {\n    const index = this.indexOfColorLayer(layerId);\n    return index > -1 ? this.getTextureOffsetByLayerIndex(index) : -1;\n};\n\nLayeredMaterial.prototype.setLightingOn = function setLightingOn(enable) {\n    this.uniforms.lightingEnabled.value = enable;\n};\n\nLayeredMaterial.prototype.setLayerFx = function setLayerFx(index, fx) {\n    this.uniforms.paramLayers.value[index].z = fx;\n};\n\nLayeredMaterial.prototype.setTextureOffsetByLayerIndex = function setTextureOffsetByLayerIndex(index, offset) {\n    this.uniforms.paramLayers.value[index].x = offset;\n};\n\nLayeredMaterial.prototype.setLayerUV = function setLayerUV(index, idUV) {\n    this.uniforms.paramLayers.value[index].y = idUV;\n};\n\nLayeredMaterial.prototype.getLayerUV = function setLayerUV(index) {\n    return this.uniforms.paramLayers.value[index].y;\n};\n\nLayeredMaterial.prototype.setLayerOpacity = function setLayerOpacity(layer, opacity) {\n    const index = Number.isInteger(layer) ? layer : this.indexOfColorLayer(layer.id);\n    if (this.uniforms.paramLayers.value[index]) {\n        this.uniforms.paramLayers.value[index].w = opacity;\n    }\n};\n\nLayeredMaterial.prototype.setLayerVisibility = function setLayerVisibility(layer, visible) {\n    const index = Number.isInteger(layer) ? layer : this.indexOfColorLayer(layer.id);\n    this.uniforms.visibility.value[index] = visible;\n};\n\nLayeredMaterial.prototype.setLayerTexturesCount = function setLayerTexturesCount(index, count) {\n    this.layerTexturesCount[index] = count;\n};\n\nLayeredMaterial.prototype.getLoadedTexturesCount = function getLoadedTexturesCount() {\n    return this.loadedTexturesCount[l_ELEVATION] + this.loadedTexturesCount[l_COLOR];\n};\n\nLayeredMaterial.prototype.isColorLayerDownscaled = function isColorLayerDownscaled(layer, zoom) {\n    return this.textures[l_COLOR][this.getLayerTextureOffset(layer.id)] &&\n        this.textures[l_COLOR][this.getLayerTextureOffset(layer.id)].coords.zoom < zoom;\n};\n\nLayeredMaterial.prototype.getColorLayerLevelById = function getColorLayerLevelById(colorLayerId) {\n    const index = this.indexOfColorLayer(colorLayerId);\n    if (index === -1) {\n        return EMPTY_TEXTURE_ZOOM;\n    }\n    const slot = this.getTextureOffsetByLayerIndex(index);\n    const texture = this.textures[l_COLOR][slot];\n\n    return texture ? texture.coords.zoom : EMPTY_TEXTURE_ZOOM;\n};\n\nLayeredMaterial.prototype.isColorLayerLoaded = function isColorLayerLoaded(layer) {\n    const textures = this.getLayerTextures(layer);\n    if (textures[0]) {\n        if (textures[0].coords.zoom !== undefined) {\n            return textures[0].coords.zoom > EMPTY_TEXTURE_ZOOM;\n        } else {\n            return textures[0].image !== undefined;\n        }\n    }\n    return false;\n};\n\nLayeredMaterial.prototype.getElevationLayerLevel = function getElevationLayerLevel() {\n    return this.textures[l_ELEVATION][0].coords.zoom;\n};\n\nLayeredMaterial.prototype.getLayerTextures = function getLayerTextures(layer) {\n    if (layer.type === 'elevation') {\n        return this.textures[l_ELEVATION];\n    }\n\n    const index = this.indexOfColorLayer(layer.id);\n\n    if (index !== -1) {\n        const count = this.getTextureCountByLayerIndex(index);\n        const textureIndex = this.getTextureOffsetByLayerIndex(index);\n        return this.textures[l_COLOR].slice(textureIndex, textureIndex + count);\n    } else {\n        return [];\n    }\n};\n\nLayeredMaterial.prototype.setUuid = function setUuid(uuid) {\n    this.uniforms.uuid.value = uuid;\n};\n\nLayeredMaterial.prototype.setFogDistance = function setFogDistance(df) {\n    this.uniforms.distanceFog.value = df;\n};\n\nLayeredMaterial.prototype.setSelected = function setSelected(selected) {\n    this.uniforms.selected.value = selected;\n};\n\nLayeredMaterial.prototype.isElevationLayerLoaded = function isElevationLayerLoaded() {\n    return this.loadedTexturesCount[l_ELEVATION] > 0;\n};\n\nexport default LayeredMaterial;\n","import * as THREE from 'three';\nimport TileGeometry from '../../Core/TileGeometry';\nimport BuilderEllipsoidTile from '../../Core/Prefab/Globe/BuilderEllipsoidTile';\n\n// get oriented bounding box of tile\nconst builder = new BuilderEllipsoidTile();\n\nclass OBB extends THREE.Object3D {\n    /**\n     * Oriented bounding box\n     * @constructor\n     * @extends THREE.Object3D\n     * @param {THREE.Vector3}  min representing the lower (x, y, z) boundary of the box. Default is ( + Infinity, + Infinity, + Infinity ).\n     * @param {THREE.Vector3}  max representing the lower upper (x, y, z) boundary of the box. Default is ( - Infinity, - Infinity, - Infinity ).\n     */\n    constructor(min = new THREE.Vector3(+Infinity, +Infinity, +Infinity), max = new THREE.Vector3(-Infinity, -Infinity, -Infinity)) {\n        super();\n        this.box3D = new THREE.Box3(min.clone(), max.clone());\n        this.natBox = this.box3D.clone();\n        this.z = { min: 0, max: 0 };\n        this.topPointsWorld = [\n            new THREE.Vector3(),\n            new THREE.Vector3(),\n            new THREE.Vector3(),\n            new THREE.Vector3(),\n        ];\n        this.update();\n    }\n\n    /**\n     * Creates a new instance of the object with same properties than original.\n     *\n     * @return     {OBB}  Copy of this object.\n     */\n    clone() {\n        return new OBB().copy(this);\n    }\n\n    /**\n     * Copy the property of OBB\n     *\n     * @param      {OBB}  cOBB OBB to copy\n     * @return     {OBB}  the copy\n     */\n    copy(cOBB) {\n        super.copy(cOBB);\n        this.box3D.copy(cOBB.box3D);\n        this.natBox.copy(cOBB.natBox);\n        this.z.min = cOBB.z.min;\n        this.z.max = cOBB.z.max;\n        for (let i = 0, max = this.topPointsWorld.length; i < max; i++) {\n            this.topPointsWorld[i].copy(cOBB.topPointsWorld[i]);\n        }\n        return this;\n    }\n\n    /**\n     * Update the top point world\n     *\n     * @return {Array<THREE.Vector3>} the top point world\n     */\n    update() {\n        this.updateMatrixWorld(true);\n        this.toPoints(this.topPointsWorld);\n\n        for (let i = 0, max = this.topPointsWorld.length; i < max; i++) {\n            this.topPointsWorld[i].applyMatrix4(this.matrixWorld);\n        }\n\n        return this.topPointsWorld;\n    }\n\n    /**\n     * Update z min and z max of oriented bounding box\n     *\n     * @param {number}  min The minimum of oriented bounding box\n     * @param {number}  max The maximum of oriented bounding box\n     */\n    updateZ(min, max) {\n        this.z = { min, max };\n        this.box3D.min.z = this.natBox.min.z + min;\n        this.box3D.max.z = this.natBox.max.z + max;\n        this.update();\n    }\n\n    /**\n     * Set bouding box value to points\n     *\n     * @param      {Array<THREE.Vector3>}  points  The points to set\n     * @return     {Array<THREE.Vector3>}  The points seted\n     */\n    toPoints(points) {\n        // top points of bounding box\n        points[0].set(this.box3D.max.x, this.box3D.max.y, this.box3D.max.z);\n        points[1].set(this.box3D.min.x, this.box3D.max.y, this.box3D.max.z);\n        points[2].set(this.box3D.min.x, this.box3D.min.y, this.box3D.max.z);\n        points[3].set(this.box3D.max.x, this.box3D.min.y, this.box3D.max.z);\n        // bottom points of bounding box\n        if (points.length > 4) {\n            points[4].set(this.box3D.max.x, this.box3D.max.y, this.box3D.min.z);\n            points[5].set(this.box3D.min.x, this.box3D.max.y, this.box3D.min.z);\n            points[6].set(this.box3D.min.x, this.box3D.min.y, this.box3D.min.z);\n            points[7].set(this.box3D.max.x, this.box3D.min.y, this.box3D.min.z);\n        }\n\n        return points;\n    }\n\n    /**\n     * Determines if the sphere is above the XY space of the box\n     *\n     * @param      {Sphere}   sphere  The sphere\n     * @return     {boolean}  True if sphere is above the XY space of the box, False otherwise.\n     */\n    isSphereAboveXYBox(sphere) {\n        const localSpherePosition = this.worldToLocal(sphere.position);\n        // get obb closest point to sphere center by clamping\n        const x = Math.max(this.box3D.min.x, Math.min(localSpherePosition.x, this.box3D.max.x));\n        const y = Math.max(this.box3D.min.y, Math.min(localSpherePosition.y, this.box3D.max.y));\n\n        // this is the same as isPointInsideSphere.position\n        const distance = Math.sqrt((x - localSpherePosition.x) * (x - localSpherePosition.x) +\n                               (y - localSpherePosition.y) * (y - localSpherePosition.y));\n\n        return distance < sphere.radius;\n    }\n\n    /**\n     * Compute OBB from extent.\n     * The OBB resulted can be only in the system 'EPSG:3946'.\n     *\n     * @param      {Extent}        extent     The extent (with crs 'EPSG:4326') to compute oriented bounding box\n     * @param      {number}        minHeight  The minimum height of OBB\n     * @param      {number}        maxHeight  The maximum height of OBB\n     * @param      {OBB}  obb      The obb to copy result\n     * @return     {TileGeometry}  { description_of_the_return_value }\n     */\n    static extentToOBB(extent, minHeight = 0, maxHeight = 0, obb) {\n        if (extent._crs != 'EPSG:4326') {\n            throw new Error('The extent crs is not a Geographic Coordinates (EPSG:4326)');\n        }\n\n        const { sharableExtent, quaternion, position } = builder.computeSharableExtent(extent);\n        // Compute the minimum count of segment to build tile\n        const segment = Math.max(Math.floor(sharableExtent.dimensions().x / 90 + 1), 2);\n        const paramsGeometry = {\n            extent: sharableExtent,\n            level: 0,\n            segment,\n            disableSkirt: true,\n        };\n\n        const geometry = new TileGeometry(paramsGeometry, builder);\n        if (obb instanceof OBB) {\n            obb.copy(geometry.OBB);\n        } else {\n            obb = geometry.OBB;\n        }\n\n        obb.updateZ(minHeight, maxHeight);\n        obb.position.copy(position);\n        obb.quaternion.copy(quaternion);\n        obb.update();\n\n        // Calling geometry.dispose() is not needed since this geometry never gets rendered\n        return obb;\n    }\n}\n\nexport default OBB;\n","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","var core = module.exports = { version: '2.5.7' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n","import Coordinates from '../Core/Geographic/Coordinates';\nimport Extent from '../Core/Geographic/Extent';\n\nfunction readCRS(json) {\n    if (json.crs) {\n        if (json.crs.type.toLowerCase() == 'epsg') {\n            return `EPSG:${json.crs.properties.code}`;\n        } else if (json.crs.type.toLowerCase() == 'name') {\n            const epsgIdx = json.crs.properties.name.toLowerCase().indexOf('epsg:');\n            if (epsgIdx >= 0) {\n                // authority:version:code => EPSG:[...]:code\n                const codeStart = json.crs.properties.name.indexOf(':', epsgIdx + 5);\n                if (codeStart > 0) {\n                    return `EPSG:${json.crs.properties.name.substr(codeStart + 1)}`;\n                }\n            }\n        }\n        throw new Error(`Unsupported CRS type '${json.crs}'`);\n    }\n    // assume default crs\n    return 'EPSG:4326';\n}\n\nconst coordIn = new Coordinates('EPSG:4978', 0, 0, 0);\nconst coordOut = new Coordinates('EPSG:4978', 0, 0, 0);\nfunction readCoordinates(crsIn, crsOut, coordinates, extent, target, normals, size) {\n    // coordinates is a list of pair [[x1, y1], [x2, y2], ..., [xn, yn]]\n    let offset = 0;\n    // let cIn = coordIn;\n    let cOut = coordOut;\n    if (target) {\n        offset = target.length;\n        const count = coordinates.length * size;\n        target.length += count;\n        if (normals) {\n            normals.length += count;\n        }\n    }\n    target = target || new Array(coordinates.length);\n    let z = 0;\n    for (const pair of coordinates) {\n        if (size == 3 && typeof pair[2] == 'number') {\n            z = pair[2];\n        }\n\n        coordIn.set(crsIn, pair[0], pair[1], z);\n        if (crsIn !== crsOut) {\n            coordIn.as(crsOut, coordOut);\n        } else {\n            cOut = coordIn;\n        }\n        if (normals) {\n            cOut.geodesicNormal.toArray(normals, offset);\n        }\n\n        target[offset] = cOut._values[0];\n        target[offset + 1] = cOut._values[1];\n        if (size == 3) {\n            target[offset + 2] = cOut._values[2];\n        }\n\n        // expand extent if present\n        if (extent) {\n            if (extent.crs() == crsIn) {\n                extent.expandByPoint(coordIn);\n            } else {\n                extent.expandByPoint(cOut);\n            }\n        }\n        offset += size;\n    }\n    return target;\n}\n\n// Helper struct that returns an object { type: \"\", coordinates: [...], extent}:\n// - type is the geom type\n// - Coordinates is an array of Coordinate\n// - extent is optional, it's coordinates's extent\n// Multi-* geometry types are merged in one.\nconst coords = new Coordinates('EPSG:4978', 0, 0, 0);\n// filter with the first point\nconst firstPtIsOut = (extent, aCoords, crs) => {\n    const first = aCoords[0];\n    coords.set(crs, first[0], first[1], 0);\n    return !extent.isPointInside(coords);\n};\nconst GeometryToCoordinates = {\n    point(feature, crsIn, crsOut, coordsIn, filteringExtent, options) {\n        // filtering\n        if (filteringExtent && firstPtIsOut(filteringExtent, coordsIn, crsIn)) {\n            return;\n        }\n\n        const extent = options.buildExtent ? new Extent(crsOut, Infinity, -Infinity, Infinity, -Infinity) : undefined;\n        const offset = feature.vertices.length / feature.size;\n        readCoordinates(crsIn, crsOut, coordsIn, extent, feature.vertices, feature.normals, feature.size);\n\n        feature.geometry.push({ extent, indices: [{ offset, count: 1 }] });\n        return feature;\n    },\n    polygon(feature, crsIn, crsOut, coordsIn, filteringExtent, options) {\n        // filtering\n        if (filteringExtent && firstPtIsOut(filteringExtent, coordsIn[0], crsIn)) {\n            return;\n        }\n\n        const extent = options.buildExtent ? new Extent(crsOut, Infinity, -Infinity, Infinity, -Infinity) : undefined;\n        let offset = feature.vertices.length / feature.size;\n        // read contour first\n        readCoordinates(crsIn, crsOut, coordsIn[0], extent, feature.vertices, feature.normals, feature.size);\n\n        const indices = [{ offset, count: coordsIn[0].length }];\n        offset += coordsIn[0].length;\n        // Then read optional holes\n        for (let i = 1; i < coordsIn.length; i++) {\n            readCoordinates(crsIn, crsOut, coordsIn[i], extent, feature.vertices, feature.normals, feature.size);\n            const count = coordsIn[i].length;\n            indices.push({ offset, count });\n            offset += count;\n        }\n\n        feature.geometry.push({ extent, indices });\n        return feature;\n    },\n    lineString(feature, crsIn, crsOut, coordsIn, filteringExtent, options) {\n        // filtering\n        if (filteringExtent && firstPtIsOut(filteringExtent, coordsIn, crsIn)) {\n            return;\n        }\n\n        const extent = options.buildExtent ? new Extent(crsOut, Infinity, -Infinity, Infinity, -Infinity) : undefined;\n        const offset = feature.vertices.length / feature.size;\n        readCoordinates(crsIn, crsOut, coordsIn, extent, feature.vertices, feature.normals, feature.size);\n\n        const indices = [{ offset, count: feature.vertices.length / feature.size - offset }];\n        feature.geometry.push({ extent, indices });\n\n        return feature;\n    },\n    multi(type, feature, crsIn, crsOut, coordsIn, filteringExtent, options) {\n        for (const coords of coordsIn) {\n            this[type](feature, crsIn, crsOut, coords, filteringExtent, options);\n        }\n        // console.log(feature);\n        return feature;\n    },\n};\n\nfunction readGeometry(type, feature, crsIn, crsOut, geometry, filteringExtent, options) {\n    if (geometry.length == 0) {\n        return;\n    }\n    switch (type) {\n        case 'point':\n            return GeometryToCoordinates.point(feature, crsIn, crsOut, [geometry], filteringExtent, options);\n        case 'multipoint':\n            return GeometryToCoordinates.multi('point', feature, crsIn, crsOut, geometry, filteringExtent, options);\n        case 'linestring':\n            return GeometryToCoordinates.lineString(feature, crsIn, crsOut, geometry, filteringExtent, options);\n        case 'multilinestring':\n            return GeometryToCoordinates.multi('lineString', feature, crsIn, crsOut, geometry, filteringExtent, options);\n        case 'polygon':\n            return GeometryToCoordinates.polygon(feature, crsIn, crsOut, geometry, filteringExtent, options);\n        case 'multipolygon':\n            return GeometryToCoordinates.multi('polygon', feature, crsIn, crsOut, geometry, filteringExtent, options);\n        case 'geometrycollection':\n        default:\n            throw new Error(`Unhandled geometry type ${feature.type}`);\n    }\n}\n\nfunction mergeType(type) {\n    switch (type) {\n        case 'point':\n        case 'multipoint':\n            return 'multipoint';\n        case 'linestring':\n        case 'multilinestring':\n            return 'multilinestring';\n        case 'polygon':\n        case 'multipolygon':\n            return 'multipolygon';\n        case 'geometrycollection':\n        default:\n            throw new Error(`Unhandled geometry type ${type}`);\n    }\n}\n\nconst keyProperties = ['type', 'geometry', 'properties'];\nfunction readFeature(crsIn, crsOut, json, filteringExtent, options, featureMerge = {}) {\n    if (options.filter && !options.filter(json.properties, json.geometry)) {\n        return;\n    }\n\n    const jsonType = json.geometry.type.toLowerCase();\n    const type = options.mergeFeatures ? mergeType(jsonType) : jsonType;\n\n    const feature = featureMerge[type] || {\n        type,\n        geometry: [],\n        vertices: [],\n        normals: options.withNormal ? [] : undefined,\n        crs: crsOut,\n        size: options.withAltitude ? 3 : 2,\n    };\n\n    const offset = feature.geometry.length;\n    readGeometry(jsonType, feature, crsIn, crsOut, json.geometry.coordinates, filteringExtent, options);\n\n    if (feature.geometry.length == offset) {\n        return;\n    }\n\n    const properties = json.properties || {};\n\n    // copy other properties\n    for (const key of Object.keys(json)) {\n        if (keyProperties.indexOf(key.toLowerCase()) < 0) {\n            properties[key] = json[key];\n        }\n    }\n\n    for (let i = offset; i < feature.geometry.length; i++) {\n        const g = feature.geometry[i];\n        if (options.buildExtent) {\n            feature.extent = feature.extent || g.extent;\n            feature.extent.union(g.extent);\n        }\n        g.properties = properties;\n    }\n\n    return feature;\n}\n\nconst mergeExtent = (res, extent) => {\n    if (res.extent) {\n        res.extent.union(extent);\n    } else {\n        res.extent = extent.clone();\n    }\n};\n\nconst mergesType = ['multipolygon', 'multilinestring', 'multipoint'];\nfunction readFeatures(crsIn, crsOut, features, filteringExtent, options) {\n    const res = {\n        features: [],\n    };\n\n    const featuresMerge = {};\n    if (options.mergeFeatures) {\n        for (const type of mergesType) {\n            featuresMerge[type] = {\n                type,\n                geometry: [],\n                vertices: [],\n                normals: options.withNormal ? [] : undefined,\n                crs: crsOut,\n                size: options.withAltitude ? 3 : 2,\n            };\n        }\n    }\n\n    for (const feature of features) {\n        const f = readFeature(crsIn, crsOut, feature, filteringExtent, options, featuresMerge);\n        if (f && !options.mergeFeatures) {\n            if (options.buildExtent) {\n                mergeExtent(res, f.extent);\n            }\n            res.features.push(f);\n        }\n    }\n\n    if (options.mergeFeatures) {\n        for (const type of mergesType) {\n            const f = featuresMerge[type];\n            if (f.geometry.length) {\n                f.vertices.crs = crsOut;\n                res.features.push(f);\n                if (options.buildExtent) {\n                    mergeExtent(res, f.extent);\n                }\n            }\n        }\n    }\n\n    res.crs = crsOut;\n    res.isFeature = true;\n    return res;\n}\n\n/**\n * The GeoJsonParser module provide a [parse]{@link module:GeoJsonParser.parse}\n * method that takes a GeoJSON in and gives an object formatted for iTowns\n * containing all necessary informations to display this GeoJSON.\n *\n * @module GeoJsonParser\n */\nexport default {\n    /**\n     * Similar to the geometry of a feature in a GeoJSON, but adapted to iTowns.\n     * The difference is that coordinates are stored in unique Array of number\n     *\n     * @typedef FeatureGeometry\n     * @type {Object}\n     *\n     * @property {Extent} extent - The 2D extent containing all the points\n     * composing the geometry.\n     * @property {?Object[]} indices - If this geometry is a\n     * <code>linestring</code> or a <code>polygon</code>, contains the indices\n     * that define the geometry. Objects stored in this array have two\n     * properties, an <code>offset</code> and a <code>count</code>. The offset\n     * is related to the overall number of vertices in the Feature.\n     *\n     * @property {Object} properties - Properties of the geometry. It can be\n     * anything specified in the GeoJSON under the <code>properties</code>\n     * property.\n     */\n\n    /**\n     * Similar to a feature in a GeoJSON, but adapted to iTowns.\n     *\n     * @typedef Feature\n     * @type {Object}\n     *\n     * @property {string} type - Geometry type, can be <code>point</code>,\n     * <code>multipoint</code>, <code>linestring</code>,\n     * <code>multilinestring</code>, <code>polygon</code> or\n     * <code>multipolygon</code>.\n     * @property {number[]} vertices - All the vertices of the geometry.\n     * @property {number[]} normals - All the normals of the geometry.\n     * @property {number} size - the number of values of the array that should be associated with a coordinates.\n     * The size is 3 with altitude and 2 without altitude.\n     * @property {string} crs - Geographic or Geocentric coordinates system.\n     * @property {FeatureGeometry[]} geometry - The feature's geometry, as an\n     * array of [FeatureGeometry]{@link module:GeoJsonParser~FeatureGeometry}.\n     * @property {Extent?} extent - The 2D extent containing all the geometries\n     * composing the feature.\n     */\n\n    /**\n     * An object regrouping a list of [features]{@link\n     * module:GeoJsonParser~Feature} and the extent of this collection.\n     *\n     * @typedef FeatureCollection\n     * @type {Object}\n     *\n     * @property {Feature[]} features - The array of features composing the\n     * collection.\n     * @property {Extent?} extent - The 2D extent containing all the features\n     * composing the collection.\n     * @property {string} crs - Geographic or Geocentric coordinates system.\n     * @property {boolean} isFeature - Used to check whether this is FeatureCollection.\n     */\n\n    /**\n     * Parse a GeoJSON file content and return a [FeatureCollection]{@link\n     * module:GeoJsonParser~FeatureCollection}.\n     *\n     * @param {string} json - The GeoJSON file content to parse.\n     * @param {Object} options - Options controlling the parsing.\n     * @param {string} options.crsOut - The CRS to convert the input coordinates\n     * to.\n     * @param {string} options.crsIn - Override the data CRS.\n     * @param {Extent} [options.filteringExtent] - Optional filter to reject\n     * features outside of this extent.\n     * @param {boolean} [options.buildExtent=false] - If true the geometry will\n     * have an extent property containing the area covered by the geom\n     * @param {function} [options.filter] - Filter function to remove features\n     * @param {boolean} [options.mergeFeatures=true] - If true all geometries are merged by type and multi-type\n     * @param {boolean} [options.withNormal=true] - If true each coordinate normal is computed\n     * @param {boolean} [options.withAltitude=true] - If true each coordinate altitude is kept\n     *\n     * @return {Promise} A promise resolving with a [FeatureCollection]{@link\n     * module:GeoJsonParser~FeatureCollection}.\n     */\n    parse(json, options = {}) {\n        const crsOut = options.crsOut;\n        const filteringExtent = options.filteringExtent;\n        if (typeof (json) === 'string') {\n            json = JSON.parse(json);\n        }\n        options.crsIn = options.crsIn || readCRS(json);\n        options.mergeFeatures = options.mergeFeatures == undefined ? true : options.mergeFeatures;\n        options.withNormal = options.withNormal == undefined ? true : options.withNormal;\n        options.withAltitude = options.withAltitude == undefined ? true : options.withAltitude;\n\n        switch (json.type.toLowerCase()) {\n            case 'featurecollection':\n                return Promise.resolve(readFeatures(options.crsIn, crsOut, json.features, filteringExtent, options));\n            case 'feature':\n                return Promise.resolve(readFeatures(options.crsIn, crsOut, [json], filteringExtent, options));\n            default:\n                throw new Error(`Unsupported GeoJSON type: '${json.type}`);\n        }\n    },\n};\n","import { EMPTY_TEXTURE_ZOOM } from '../Renderer/LayeredMaterialConstants';\n/**\n * This modules implements various layer update strategies.\n *\n * Default strategy is STRATEGY_MIN_NETWORK_TRAFFIC which aims\n * to reduce the amount of network traffic.\n */\n\nexport const STRATEGY_MIN_NETWORK_TRAFFIC = 0;\nexport const STRATEGY_GROUP = 1;\nexport const STRATEGY_PROGRESSIVE = 2;\nexport const STRATEGY_DICHOTOMY = 3;\n\nfunction _minimizeNetworkTraffic(node, nodeLevel, currentLevel) {\n    if (node.pendingSubdivision) {\n        return currentLevel;\n    }\n    return nodeLevel;\n}\n\n// Maps nodeLevel to groups defined in layer's options\n// eg with groups = [3, 7, 12]:\n//     * nodeLevel = 2 -> 3\n//     * nodeLevel = 4 -> 3\n//     * nodeLevel = 7 -> 7\n//     * nodeLevel = 15 -> 12\nfunction _group(nodeLevel, currentLevel, options) {\n    var f = options.groups.filter(val => (val <= nodeLevel));\n    return f.length ? f[f.length - 1] : options.groups[0];\n}\n\nfunction _progressive(nodeLevel, currentLevel, options) {\n    return Math.min(nodeLevel,\n        currentLevel + (options.increment || 1));\n}\n\n// Load textures at mid-point between current level and node's level.\n// This produces smoother transitions and a single fetch updates multiple\n// tiles thanks to caching.\nfunction _dichotomy(nodeLevel, currentLevel, options = {}) {\n    if (currentLevel == EMPTY_TEXTURE_ZOOM) {\n        return options.zoom ? options.zoom.min : 0;\n    }\n    return Math.min(\n        nodeLevel,\n        Math.ceil((currentLevel + nodeLevel) / 2));\n}\n\nexport function chooseNextLevelToFetch(strategy, node, nodeLevel = node.level, currentLevel, layer, failureParams) {\n    let nextLevelToFetch;\n    const maxZoom = layer.source.zoom ? layer.source.zoom.max : Infinity;\n    if (failureParams) {\n        nextLevelToFetch = _dichotomy(failureParams.targetLevel, currentLevel, layer.options);\n    } else {\n        switch (strategy) {\n            case STRATEGY_GROUP:\n                nextLevelToFetch = _group(nodeLevel, currentLevel, layer.updateStrategy.options);\n                break;\n            case STRATEGY_PROGRESSIVE: {\n                nextLevelToFetch = _progressive(nodeLevel, currentLevel, layer.updateStrategy.options);\n                break;\n            }\n            case STRATEGY_DICHOTOMY:\n                nextLevelToFetch = _dichotomy(nodeLevel, currentLevel, layer.options);\n                break;\n            // default strategy\n            case STRATEGY_MIN_NETWORK_TRAFFIC:\n            default:\n                nodeLevel = failureParams ? Math.ceil((currentLevel + failureParams.targetLevel) / 2) : nodeLevel;\n                nextLevelToFetch = _minimizeNetworkTraffic(node, nodeLevel, currentLevel);\n        }\n    }\n    return Math.min(nextLevelToFetch, maxZoom);\n}\n","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","import * as THREE from 'three';\nimport Extent from '../Core/Geographic/Extent';\n\nfunction requestNewTile(view, scheduler, geometryLayer, metadata, parent, redraw) {\n    const command = {\n        /* mandatory */\n        view,\n        requester: parent,\n        layer: geometryLayer,\n        priority: parent ? 1.0 / (parent.distance + 1) : 100,\n        /* specific params */\n        metadata,\n        redraw,\n    };\n\n    return scheduler.execute(command);\n}\n\nfunction getChildTiles(tile) {\n    // only keep children that have the same layer and a valid tileId\n    return tile.children.filter(n => n.layer == tile.layer && n.tileId);\n}\n\nfunction subdivideNode(context, layer, node, cullingTest) {\n    if (node.additiveRefinement) {\n        // Additive refinement can only fetch visible children.\n        _subdivideNodeAdditive(context, layer, node, cullingTest);\n    } else {\n        // Substractive refinement on the other hand requires to replace\n        // node with all of its children\n        _subdivideNodeSubstractive(context, layer, node);\n    }\n}\n\nconst tmpBox3 = new THREE.Box3();\nconst tmpSphere = new THREE.Sphere();\nfunction boundingVolumeToExtent(crs, volume, transform) {\n    if (volume.region) {\n        return new Extent('EPSG:4326',\n            THREE.Math.radToDeg(volume.region[0]),\n            THREE.Math.radToDeg(volume.region[2]),\n            THREE.Math.radToDeg(volume.region[1]),\n            THREE.Math.radToDeg(volume.region[3]));\n    } else if (volume.box) {\n        const box = tmpBox3.copy(volume.box).applyMatrix4(transform);\n        return Extent.fromBox3(crs, box);\n    } else {\n        const sphere = tmpSphere.copy(volume.sphere).applyMatrix4(transform);\n        return new Extent(crs, {\n            west: sphere.center.x - sphere.radius,\n            east: sphere.center.x + sphere.radius,\n            south: sphere.center.y - sphere.radius,\n            north: sphere.center.y + sphere.radius,\n        });\n    }\n}\n\nconst tmpMatrix = new THREE.Matrix4();\nfunction _subdivideNodeAdditive(context, layer, node, cullingTest) {\n    for (const child of layer.tileIndex.index[node.tileId].children) {\n        // child being downloaded => skip\n        if (child.promise || child.loaded) {\n            continue;\n        }\n\n        // 'child' is only metadata (it's *not* a THREE.Object3D). 'cullingTest' needs\n        // a matrixWorld, so we compute it: it's node's matrixWorld x child's transform\n        let overrideMatrixWorld = node.matrixWorld;\n        if (child.transform) {\n            overrideMatrixWorld = tmpMatrix.multiplyMatrices(node.matrixWorld, child.transform);\n        }\n\n        const isVisible = cullingTest ? !cullingTest(context.camera, child, overrideMatrixWorld) : true;\n\n        // child is not visible => skip\n        if (!isVisible) {\n            continue;\n        }\n        child.promise = requestNewTile(context.view, context.scheduler, layer, child, node, true).then((tile) => {\n            node.add(tile);\n            tile.updateMatrixWorld();\n\n            const extent = boundingVolumeToExtent(layer.extent.crs(), tile.boundingVolume, tile.matrixWorld);\n            tile.traverse((obj) => {\n                obj.extent = extent;\n            });\n\n            context.view.notifyChange(child);\n            child.loaded = true;\n            delete child.promise;\n        });\n    }\n}\n\nfunction _subdivideNodeSubstractive(context, layer, node) {\n    if (!node.pendingSubdivision && getChildTiles(node).length == 0) {\n        const childrenTiles = layer.tileIndex.index[node.tileId].children;\n        if (childrenTiles === undefined || childrenTiles.length === 0) {\n            return;\n        }\n        node.pendingSubdivision = true;\n\n        const promises = [];\n        for (let i = 0; i < childrenTiles.length; i++) {\n            promises.push(\n                requestNewTile(context.view, context.scheduler, layer, childrenTiles[i], node, false).then((tile) => {\n                    childrenTiles[i].loaded = true;\n                    node.add(tile);\n                    tile.updateMatrixWorld();\n                    if (node.additiveRefinement) {\n                        context.view.notifyChange(node);\n                    }\n                    layer.tileIndex.index[tile.tileId].loaded = true;\n                }));\n        }\n        Promise.all(promises).then(() => {\n            node.pendingSubdivision = false;\n            context.view.notifyChange(node);\n        });\n    }\n}\n\nexport function $3dTilesCulling(camera, node, tileMatrixWorld) {\n    // For viewer Request Volume https://github.com/AnalyticalGraphicsInc/3d-tiles-samples/tree/master/tilesets/TilesetWithRequestVolume\n    if (node.viewerRequestVolume) {\n        const nodeViewer = node.viewerRequestVolume;\n        if (nodeViewer.region) {\n            // TODO\n            return true;\n        }\n        if (nodeViewer.box) {\n            // TODO\n            return true;\n        }\n        if (nodeViewer.sphere) {\n            const worldCoordinateCenter = nodeViewer.sphere.center.clone();\n            worldCoordinateCenter.applyMatrix4(tileMatrixWorld);\n            // To check the distance between the center sphere and the camera\n            if (!(camera.camera3D.position.distanceTo(worldCoordinateCenter) <= nodeViewer.sphere.radius)) {\n                return true;\n            }\n        }\n    }\n\n    // For bounding volume\n    if (node.boundingVolume) {\n        const boundingVolume = node.boundingVolume;\n        if (boundingVolume.region) {\n            return !camera.isBox3Visible(boundingVolume.region.box3D,\n                tileMatrixWorld.clone().multiply(boundingVolume.region.matrix));\n        }\n        if (boundingVolume.box) {\n            return !camera.isBox3Visible(boundingVolume.box, tileMatrixWorld);\n        }\n        if (boundingVolume.sphere) {\n            return !camera.isSphereVisible(boundingVolume.sphere, tileMatrixWorld);\n        }\n    }\n    return false;\n}\n\n// Cleanup all 3dtiles|three.js starting from a given node n.\n// n's children can be of 2 types:\n//   - have a 'content' attribute -> it's a tileset and must\n//     be cleaned with cleanup3dTileset()\n//   - doesn't have 'content' -> it's a raw Object3D object,\n//     and must be cleaned with _cleanupObject3D()\nfunction cleanup3dTileset(layer, n, depth = 0) {\n    // If this layer is not using additive refinement, we can only\n    // clean a tile if all its neighbours are cleaned as well because\n    // a tile can only be in 2 states:\n    //   - displayed and no children displayed\n    //   - hidden and all of its children displayed\n    // So here we implement a conservative measure: if T is cleanable\n    // we actually only clean its children tiles.\n    const canCleanCompletely = n.additiveRefinement || depth > 0;\n\n    for (let i = 0; i < n.children.length; i++) {\n        // skip non-tiles elements\n        if (!n.children[i].content) {\n            if (canCleanCompletely) {\n                n.children[i].traverse(_cleanupObject3D);\n            }\n        } else {\n            cleanup3dTileset(layer, n.children[i], depth + 1);\n        }\n    }\n\n\n    if (canCleanCompletely) {\n        if (n.dispose) {\n            n.dispose();\n        }\n        delete n.content;\n        layer.tileIndex.index[n.tileId].loaded = false;\n        n.remove(...n.children);\n\n        // and finally remove from parent\n        if (depth == 0 && n.parent) {\n            n.parent.remove(n);\n        }\n    } else {\n        const tiles = getChildTiles(n);\n        n.remove(...tiles);\n    }\n}\n\n// This function is used to cleanup a Object3D hierarchy.\n// (no 3dtiles spectific code here because this is managed by cleanup3dTileset)\nfunction _cleanupObject3D(n) {\n    // all children of 'n' are raw Object3D\n    for (const child of n.children) {\n        _cleanupObject3D(child);\n    }\n    // free resources\n    if (n.material) {\n        n.material.dispose();\n    }\n    if (n.geometry) {\n        n.geometry.dispose();\n    }\n    n.remove(...n.children);\n}\n\n// this is a layer\nexport function pre3dTilesUpdate(context) {\n    if (!this.visible) {\n        return [];\n    }\n\n    // pre-sse\n    const hypotenuse = Math.sqrt(context.camera.width * context.camera.width + context.camera.height * context.camera.height);\n    const radAngle = context.camera.camera3D.fov * Math.PI / 180;\n\n    // TODO: not correct -> see new preSSE\n    // const HFOV = 2.0 * Math.atan(Math.tan(radAngle * 0.5) / context.camera.ratio);\n    const HYFOV = 2.0 * Math.atan(Math.tan(radAngle * 0.5) * hypotenuse / context.camera.width);\n    context.camera.preSSE = hypotenuse * (2.0 * Math.tan(HYFOV * 0.5));\n\n    // Elements removed are added in the layer._cleanableTiles list.\n    // Since we simply push in this array, the first item is always\n    // the oldest one.\n    const now = Date.now();\n    if (this._cleanableTiles.length\n        && (now - this._cleanableTiles[0].cleanableSince) > this.cleanupDelay) {\n        // Make sure we don't clean root tile\n        this.root.cleanableSince = undefined;\n\n        let i = 0;\n        for (; i < this._cleanableTiles.length; i++) {\n            const elt = this._cleanableTiles[i];\n            if ((now - elt.cleanableSince) > this.cleanupDelay) {\n                cleanup3dTileset(this, elt);\n            } else {\n                // later entries are younger\n                break;\n            }\n        }\n        // remove deleted elements from _cleanableTiles\n        this._cleanableTiles.splice(0, i);\n    }\n\n    return [this.root];\n}\n\nconst boundingVolumeBox = new THREE.Box3();\nconst boundingVolumeSphere = new THREE.Sphere();\nexport function computeNodeSSE(camera, node) {\n    node.distance = 0;\n    if (node.boundingVolume.region) {\n        boundingVolumeBox.copy(node.boundingVolume.region.box3D);\n        boundingVolumeBox.applyMatrix4(node.boundingVolume.region.matrixWorld);\n        node.distance = boundingVolumeBox.distanceToPoint(camera.camera3D.position);\n    } else if (node.boundingVolume.box) {\n        // boundingVolume.box is affected by matrixWorld\n        boundingVolumeBox.copy(node.boundingVolume.box);\n        boundingVolumeBox.applyMatrix4(node.matrixWorld);\n        node.distance = boundingVolumeBox.distanceToPoint(camera.camera3D.position);\n    } else if (node.boundingVolume.sphere) {\n        // boundingVolume.sphere is affected by matrixWorld\n        boundingVolumeSphere.copy(node.boundingVolume.sphere);\n        boundingVolumeSphere.applyMatrix4(node.matrixWorld);\n        // TODO: see https://github.com/iTowns/itowns/issues/800\n        node.distance = Math.max(0.0,\n            boundingVolumeSphere.distanceToPoint(camera.camera3D.position));\n    } else {\n        return Infinity;\n    }\n    if (node.distance === 0) {\n        // This test is needed in case geometricError = distance = 0\n        return Infinity;\n    }\n    return camera.preSSE * (node.geometricError / node.distance);\n}\n\nexport function init3dTilesLayer(view, scheduler, layer) {\n    return requestNewTile(view, scheduler, layer, layer.tileset.root, undefined, true).then(\n        (tile) => {\n            delete layer.tileset;\n            layer.object3d.add(tile);\n            tile.updateMatrixWorld();\n            layer.tileIndex.index[tile.tileId].loaded = true;\n            layer.root = tile;\n            layer.extent = boundingVolumeToExtent(layer.projection || view.referenceCrs,\n                tile.boundingVolume, tile.matrixWorld);\n        });\n}\n\nfunction setDisplayed(node, display) {\n    // The geometry of the tile is not in node, but in node.content\n    // To change the display state, we change node.content.visible instead of\n    // node.material.visible\n    if (node.content) {\n        node.content.visible = display;\n    }\n}\n\nfunction markForDeletion(layer, elt) {\n    if (!elt.cleanableSince) {\n        elt.cleanableSince = Date.now();\n        layer._cleanableTiles.push(elt);\n    }\n}\n\nexport function process3dTilesNode(cullingTest = $3dTilesCulling, subdivisionTest = $3dTilesSubdivisionControl) {\n    return function _process3dTilesNodes(context, layer, node) {\n        // early exit if parent's subdivision is in progress\n        if (node.parent.pendingSubdivision && !node.parent.additiveRefinement) {\n            node.visible = false;\n            return undefined;\n        }\n\n        // do proper culling\n        const isVisible = cullingTest ? (!cullingTest(context.camera, node, node.matrixWorld)) : true;\n        node.visible = isVisible;\n\n\n        if (isVisible) {\n            if (node.cleanableSince) {\n                layer._cleanableTiles.splice(layer._cleanableTiles.indexOf(node), 1);\n                node.cleanableSince = undefined;\n            }\n\n            let returnValue;\n            if (node.pendingSubdivision || subdivisionTest(context, layer, node)) {\n                subdivideNode(context, layer, node, cullingTest);\n                // display iff children aren't ready\n                setDisplayed(node, node.pendingSubdivision || node.additiveRefinement);\n                returnValue = getChildTiles(node);\n            } else {\n                setDisplayed(node, true);\n\n                for (const n of getChildTiles(node)) {\n                    n.visible = false;\n                    markForDeletion(layer, n);\n                }\n            }\n            return returnValue;\n        }\n\n        markForDeletion(layer, node);\n    };\n}\n\nexport function $3dTilesSubdivisionControl(context, layer, node) {\n    if (layer.tileIndex.index[node.tileId].children === undefined) {\n        return false;\n    }\n    if (layer.tileIndex.index[node.tileId].isTileset) {\n        return true;\n    }\n    const sse = computeNodeSSE(context.camera, node);\n    return sse > layer.sseThreshold;\n}\n","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.TOWGS84) {\n      wkt.datum_params = geogcs.DATUM.TOWGS84;\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n    if (~wkt.datumCode.indexOf('israel')) {\n      wkt.datumCode = 'isr93';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['false_easting', 'False_Easting'],\n    ['false_northing', 'False_Northing'],\n    ['central_meridian', 'Central_Meridian'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nimport match from './match';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\n var codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS'];\nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nvar codes = ['3857', '900913', '3785', '102113'];\nfunction checkMercator(item) {\n  var auth = match(item, 'authority');\n  if (!auth) {\n    return;\n  }\n  var code = match(auth, 'epsg');\n  return code && codes.indexOf(code) > -1;\n}\nfunction checkProjStr(item) {\n  var ext = match(item, 'extension');\n  if (!ext) {\n    return;\n  }\n  return match(ext, 'proj4');\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      var out = wkt(code);\n      // test of spetial case, due to this being a very common and often malformed\n      if (checkMercator(out)) {\n        return defs['EPSG:3857'];\n      }\n      var maybeProjStr = checkProjStr(out);\n      if (maybeProjStr) {\n        return projStr(maybeProjStr);\n      }\n      return out;\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}","export default function(x) {\n  return x<0 ? -1 : 1;\n}","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"606.0,23.0,413.0\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"653.0,-212.0,449.0\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n","import {PJD_3PARAM, PJD_7PARAM, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = datumDef.towgs84 ? datumDef.towgs84.split(',') : null;\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calulated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n","import {PJD_3PARAM, PJD_7PARAM, PJD_NODATUM} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n\n  // Do we need to go through geocentric coordinates?\n  if (source.es === dest.es && source.a === dest.a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source.es, source.a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  return geocentricToGeodetic(point, dest.es, dest.a, dest.b);\n\n}\n","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if (Latitude < -HALF_PI) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return { x: -Infinity, y: -Infinity, z: p.z };\n  } else if (Latitude > HALF_PI) {\n    /* Latitude out of range */\n    return { x: Infinity, y: Infinity, z: p.z };\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      t = 'x';\n    }\n    else if (i === 1) {\n      v = yin;\n      t = 'y';\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return ((source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM) && dest.datumCode !== 'WGS84') || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  }\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R\n    };\n  }\n  else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  return point;\n}\n","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords);\n    if (coords.length === 3) {\n      return [transformedArray.x, transformedArray.y, transformedArray.z];\n    }\n    else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  }\n  else {\n    out = transform(from, to, coords);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if (key === 'x' || key === 'y') {\n        return;\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  }\n  else {\n    obj = {\n      forward: function(coords) {\n        return transformer(fromProj, toProj, coords);\n      },\n      inverse: function(coords) {\n        return transformer(toProj, fromProj, coords);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;\n","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (this.es === undefined || this.es <= 0) {\n    throw new Error('incorrect elliptical usage');\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\",\"Double_Stereographic\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (2 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {EPSLN, HALF_PI, FORTPI} from '../constants/values';\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {\n  this.no_off = this.no_off || false;\n  this.no_rot = this.no_rot || false;\n\n  if (isNaN(this.k0)) {\n    this.k0 = 1;\n  }\n  var sinlat = Math.sin(this.lat0);\n  var coslat = Math.cos(this.lat0);\n  var con = this.e * sinlat;\n\n  this.bl = Math.sqrt(1 + this.es / (1 - this.es) * Math.pow(coslat, 4));\n  this.al = this.a * this.bl * this.k0 * Math.sqrt(1 - this.es) / (1 - con * con);\n  var t0 = tsfnz(this.e, this.lat0, sinlat);\n  var dl = this.bl / coslat * Math.sqrt((1 - this.es) / (1 - con * con));\n  if (dl * dl < 1) {\n    dl = 1;\n  }\n  var fl;\n  var gl;\n  if (!isNaN(this.longc)) {\n    //Central point and azimuth method\n\n    if (this.lat0 >= 0) {\n      fl = dl + Math.sqrt(dl * dl - 1);\n    }\n    else {\n      fl = dl - Math.sqrt(dl * dl - 1);\n    }\n    this.el = fl * Math.pow(t0, this.bl);\n    gl = 0.5 * (fl - 1 / fl);\n    this.gamma0 = Math.asin(Math.sin(this.alpha) / dl);\n    this.long0 = this.longc - Math.asin(gl * Math.tan(this.gamma0)) / this.bl;\n\n  }\n  else {\n    //2 points method\n    var t1 = tsfnz(this.e, this.lat1, Math.sin(this.lat1));\n    var t2 = tsfnz(this.e, this.lat2, Math.sin(this.lat2));\n    if (this.lat0 >= 0) {\n      this.el = (dl + Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    else {\n      this.el = (dl - Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    var hl = Math.pow(t1, this.bl);\n    var ll = Math.pow(t2, this.bl);\n    fl = this.el / hl;\n    gl = 0.5 * (fl - 1 / fl);\n    var jl = (this.el * this.el - ll * hl) / (this.el * this.el + ll * hl);\n    var pl = (ll - hl) / (ll + hl);\n    var dlon12 = adjust_lon(this.long1 - this.long2);\n    this.long0 = 0.5 * (this.long1 + this.long2) - Math.atan(jl * Math.tan(0.5 * this.bl * (dlon12)) / pl) / this.bl;\n    this.long0 = adjust_lon(this.long0);\n    var dlon10 = adjust_lon(this.long1 - this.long0);\n    this.gamma0 = Math.atan(Math.sin(this.bl * (dlon10)) / gl);\n    this.alpha = Math.asin(dl * Math.sin(this.gamma0));\n  }\n\n  if (this.no_off) {\n    this.uc = 0;\n  }\n  else {\n    if (this.lat0 >= 0) {\n      this.uc = this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n    else {\n      this.uc = -1 * this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n  }\n\n}\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var dlon = adjust_lon(lon - this.long0);\n  var us, vs;\n  var con;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    if (lat > 0) {\n      con = -1;\n    }\n    else {\n      con = 1;\n    }\n    vs = this.al / this.bl * Math.log(Math.tan(FORTPI + con * this.gamma0 * 0.5));\n    us = -1 * con * HALF_PI * this.al / this.bl;\n  }\n  else {\n    var t = tsfnz(this.e, lat, Math.sin(lat));\n    var ql = this.el / Math.pow(t, this.bl);\n    var sl = 0.5 * (ql - 1 / ql);\n    var tl = 0.5 * (ql + 1 / ql);\n    var vl = Math.sin(this.bl * (dlon));\n    var ul = (sl * Math.sin(this.gamma0) - vl * Math.cos(this.gamma0)) / tl;\n    if (Math.abs(Math.abs(ul) - 1) <= EPSLN) {\n      vs = Number.POSITIVE_INFINITY;\n    }\n    else {\n      vs = 0.5 * this.al * Math.log((1 - ul) / (1 + ul)) / this.bl;\n    }\n    if (Math.abs(Math.cos(this.bl * (dlon))) <= EPSLN) {\n      us = this.al * this.bl * (dlon);\n    }\n    else {\n      us = this.al * Math.atan2(sl * Math.cos(this.gamma0) + vl * Math.sin(this.gamma0), Math.cos(this.bl * dlon)) / this.bl;\n    }\n  }\n\n  if (this.no_rot) {\n    p.x = this.x0 + us;\n    p.y = this.y0 + vs;\n  }\n  else {\n\n    us -= this.uc;\n    p.x = this.x0 + vs * Math.cos(this.alpha) + us * Math.sin(this.alpha);\n    p.y = this.y0 + us * Math.cos(this.alpha) - vs * Math.sin(this.alpha);\n  }\n  return p;\n}\n\nexport function inverse(p) {\n  var us, vs;\n  if (this.no_rot) {\n    vs = p.y - this.y0;\n    us = p.x - this.x0;\n  }\n  else {\n    vs = (p.x - this.x0) * Math.cos(this.alpha) - (p.y - this.y0) * Math.sin(this.alpha);\n    us = (p.y - this.y0) * Math.cos(this.alpha) + (p.x - this.x0) * Math.sin(this.alpha);\n    us += this.uc;\n  }\n  var qp = Math.exp(-1 * this.bl * vs / this.al);\n  var sp = 0.5 * (qp - 1 / qp);\n  var tp = 0.5 * (qp + 1 / qp);\n  var vp = Math.sin(this.bl * us / this.al);\n  var up = (vp * Math.cos(this.gamma0) + sp * Math.sin(this.gamma0)) / tp;\n  var ts = Math.pow(this.el / Math.sqrt((1 + up) / (1 - up)), 1 / this.bl);\n  if (Math.abs(up - 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = HALF_PI;\n  }\n  else if (Math.abs(up + 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = -1 * HALF_PI;\n  }\n  else {\n    p.y = phi2z(this.e, ts);\n    p.x = adjust_lon(this.long0 - Math.atan2(sp * Math.cos(this.gamma0) - vp * Math.sin(this.gamma0), Math.cos(this.bl * us / this.al)) / this.bl);\n  }\n  return p;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n\n  // array of:  r_maj,r_min,lat1,lat2,c_lon,c_lat,false_east,false_north\n  //double c_lat;                   /* center latitude                      */\n  //double c_lon;                   /* center longitude                     */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Lambert Tangential Conformal Conic Projection\", \"Lambert_Conformal_Conic\", \"Lambert_Conformal_Conic_2SP\", \"lcc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.phi0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.phi0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi, this.cos_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c / Math.sin(c);\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      lat = Math.atan((1 - this.es * F * this.sin_p12 / Math.sin(psi)) * Math.tan(psi) / (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n","// Robinson projection\n// Based on https://github.com/OSGeo/proj.4/blob/master/src/PJ_robin.c\n// Polynomial coeficients from http://article.gmane.org/gmane.comp.gis.proj-4.devel/6039\n\nimport {HALF_PI, D2R, R2D, EPSLN} from '../constants/values';\nimport adjust_lon from '../common/adjust_lon';\n\nvar COEFS_X = [\n    [1.0000, 2.2199e-17, -7.15515e-05, 3.1103e-06],\n    [0.9986, -0.000482243, -2.4897e-05, -1.3309e-06],\n    [0.9954, -0.00083103, -4.48605e-05, -9.86701e-07],\n    [0.9900, -0.00135364, -5.9661e-05, 3.6777e-06],\n    [0.9822, -0.00167442, -4.49547e-06, -5.72411e-06],\n    [0.9730, -0.00214868, -9.03571e-05, 1.8736e-08],\n    [0.9600, -0.00305085, -9.00761e-05, 1.64917e-06],\n    [0.9427, -0.00382792, -6.53386e-05, -2.6154e-06],\n    [0.9216, -0.00467746, -0.00010457, 4.81243e-06],\n    [0.8962, -0.00536223, -3.23831e-05, -5.43432e-06],\n    [0.8679, -0.00609363, -0.000113898, 3.32484e-06],\n    [0.8350, -0.00698325, -6.40253e-05, 9.34959e-07],\n    [0.7986, -0.00755338, -5.00009e-05, 9.35324e-07],\n    [0.7597, -0.00798324, -3.5971e-05, -2.27626e-06],\n    [0.7186, -0.00851367, -7.01149e-05, -8.6303e-06],\n    [0.6732, -0.00986209, -0.000199569, 1.91974e-05],\n    [0.6213, -0.010418, 8.83923e-05, 6.24051e-06],\n    [0.5722, -0.00906601, 0.000182, 6.24051e-06],\n    [0.5322, -0.00677797, 0.000275608, 6.24051e-06]\n];\n\nvar COEFS_Y = [\n    [-5.20417e-18, 0.0124, 1.21431e-18, -8.45284e-11],\n    [0.0620, 0.0124, -1.26793e-09, 4.22642e-10],\n    [0.1240, 0.0124, 5.07171e-09, -1.60604e-09],\n    [0.1860, 0.0123999, -1.90189e-08, 6.00152e-09],\n    [0.2480, 0.0124002, 7.10039e-08, -2.24e-08],\n    [0.3100, 0.0123992, -2.64997e-07, 8.35986e-08],\n    [0.3720, 0.0124029, 9.88983e-07, -3.11994e-07],\n    [0.4340, 0.0123893, -3.69093e-06, -4.35621e-07],\n    [0.4958, 0.0123198, -1.02252e-05, -3.45523e-07],\n    [0.5571, 0.0121916, -1.54081e-05, -5.82288e-07],\n    [0.6176, 0.0119938, -2.41424e-05, -5.25327e-07],\n    [0.6769, 0.011713, -3.20223e-05, -5.16405e-07],\n    [0.7346, 0.0113541, -3.97684e-05, -6.09052e-07],\n    [0.7903, 0.0109107, -4.89042e-05, -1.04739e-06],\n    [0.8435, 0.0103431, -6.4615e-05, -1.40374e-09],\n    [0.8936, 0.00969686, -6.4636e-05, -8.547e-06],\n    [0.9394, 0.00840947, -0.000192841, -4.2106e-06],\n    [0.9761, 0.00616527, -0.000256, -4.2106e-06],\n    [1.0000, 0.00328947, -0.000319159, -4.2106e-06]\n];\n\nvar FXC = 0.8487;\nvar FYC = 1.3523;\nvar C1 = R2D/5; // rad to 5-degree interval\nvar RC1 = 1/C1;\nvar NODES = 18;\n\nvar poly3_val = function(coefs, x) {\n    return coefs[0] + x * (coefs[1] + x * (coefs[2] + x * coefs[3]));\n};\n\nvar poly3_der = function(coefs, x) {\n    return coefs[1] + x * (2 * coefs[2] + x * 3 * coefs[3]);\n};\n\nfunction newton_rapshon(f_df, start, max_err, iters) {\n    var x = start;\n    for (; iters; --iters) {\n        var upd = f_df(x);\n        x -= upd;\n        if (Math.abs(upd) < max_err) {\n            break;\n        }\n    }\n    return x;\n}\n\nexport function init() {\n    this.x0 = this.x0 || 0;\n    this.y0 = this.y0 || 0;\n    this.long0 = this.long0 || 0;\n    this.es = 0;\n    this.title = this.title || \"Robinson\";\n}\n\nexport function forward(ll) {\n    var lon = adjust_lon(ll.x - this.long0);\n\n    var dphi = Math.abs(ll.y);\n    var i = Math.floor(dphi * C1);\n    if (i < 0) {\n        i = 0;\n    } else if (i >= NODES) {\n        i = NODES - 1;\n    }\n    dphi = R2D * (dphi - RC1 * i);\n    var xy = {\n        x: poly3_val(COEFS_X[i], dphi) * lon,\n        y: poly3_val(COEFS_Y[i], dphi)\n    };\n    if (ll.y < 0) {\n        xy.y = -xy.y;\n    }\n\n    xy.x = xy.x * this.a * FXC + this.x0;\n    xy.y = xy.y * this.a * FYC + this.y0;\n    return xy;\n}\n\nexport function inverse(xy) {\n    var ll = {\n        x: (xy.x - this.x0) / (this.a * FXC),\n        y: Math.abs(xy.y - this.y0) / (this.a * FYC)\n    };\n\n    if (ll.y >= 1) { // pathologic case\n        ll.x /= COEFS_X[NODES][0];\n        ll.y = xy.y < 0 ? -HALF_PI : HALF_PI;\n    } else {\n        // find table interval\n        var i = Math.floor(ll.y * NODES);\n        if (i < 0) {\n            i = 0;\n        } else if (i >= NODES) {\n            i = NODES - 1;\n        }\n        for (;;) {\n            if (COEFS_Y[i][0] > ll.y) {\n                --i;\n            } else if (COEFS_Y[i+1][0] <= ll.y) {\n                ++i;\n            } else {\n                break;\n            }\n        }\n        // linear interpolation in 5 degree interval\n        var coefs = COEFS_Y[i];\n        var t = 5 * (ll.y - coefs[0]) / (COEFS_Y[i+1][0] - coefs[0]);\n        // find t so that poly3_val(coefs, t) = ll.y\n        t = newton_rapshon(function(x) {\n            return (poly3_val(coefs, x) - ll.y) / poly3_der(coefs, x);\n        }, t, EPSLN, 100);\n\n        ll.x /= poly3_val(COEFS_X[i], t);\n        ll.y = (5 * i + t) * D2R;\n        if (xy.y < 0) {\n            ll.y = -ll.y;\n        }\n    }\n\n    ll.x = adjust_lon(ll.x + this.long0);\n    return ll;\n}\n\nexport var names = [\"Robinson\", \"robin\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport version from \"./version\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = version;\nincludedProjections(proj4);\nexport default proj4;\n","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nimport robin from './lib/projections/robin';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n  proj4.Proj.projections.add(robin);\n}","export default {\n    /**\n     * Cleanup obj to release three.js allocated resources\n     * @param {Object3D} obj object to release\n     */\n    cleanup(obj) {\n        obj.layer = null;\n\n        if (typeof obj.dispose === 'function') {\n            obj.dispose();\n        } else {\n            if (obj.geometry) {\n                obj.geometry.dispose();\n                // the Object Removal Helper causes inconsistencies\n                // when it assigns null to a geometry present in the Cache.\n                // Actually, the cache can provide a mesh whose geometry is null.\n                // see https://github.com/iTowns/itowns/issues/869\n                // obj.geometry = null;\n            }\n            if (obj.material) {\n                obj.material.dispose();\n                // obj.material = null;\n            }\n        }\n    },\n\n    /**\n     * Remove obj's children belonging to a layer.\n     * Neither obj nor its children will be disposed!\n     * @param {Layer} layer The layer that objects must belong to. Other object are ignored\n     * @param {Object3D} obj The Object3D we want to clean\n     * @return {Array} an array of removed Object3D from obj (not including the recursive removals)\n     */\n    removeChildren(layer, obj) {\n        const toRemove = obj.children.filter(c => c.layer === layer);\n        obj.remove(...toRemove);\n        return toRemove;\n    },\n\n    /**\n     * Remove obj's children belonging to a layer and cleanup objexts.\n     * obj will be disposed but its children **won't**!\n     * @param {Layer} layer The layer that objects must belong to. Other object are ignored\n     * @param {Object3D} obj The Object3D we want to clean\n     * @return {Array} an array of removed Object3D from obj (not including the recursive removals)\n     */\n    removeChildrenAndCleanup(layer, obj) {\n        const toRemove = obj.children.filter(c => c.layer === layer);\n\n        obj.remove(...toRemove);\n        if (obj.layer === layer) {\n            this.cleanup(obj);\n        }\n        return toRemove;\n    },\n\n    /**\n     * Recursively remove obj's children belonging to a layer.\n     * All removed obj will have their geometry/material disposed.\n     * @param {Layer} layer The layer that objects must belong to. Other object are ignored\n     * @param {Object3D} obj The Object3D we want to clean\n     * @return {Array} an array of removed Object3D from obj (not including the recursive removals)\n     */\n    removeChildrenAndCleanupRecursively(layer, obj) {\n        const toRemove = obj.children.filter(c => c.layer === layer);\n        for (const c of toRemove) {\n            this.removeChildrenAndCleanupRecursively(layer, c);\n        }\n        obj.remove(...toRemove);\n        if (obj.layer === layer) {\n            this.cleanup(obj);\n        }\n        return toRemove;\n    },\n};\n","var global = require('./_global');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar SRC = require('./_uid')('src');\nvar TO_STRING = 'toString';\nvar $toString = Function[TO_STRING];\nvar TPL = ('' + $toString).split(TO_STRING);\n\nrequire('./_core').inspectSource = function (it) {\n  return $toString.call(it);\n};\n\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) has(val, 'name') || hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    hide(O, key, val);\n  }\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n","/**\n  * Calculates the minimum maximum elevation of xbil buffer\n  *\n  * @param      {number}  buffer       The buffer to parse\n  * @param      {number}  width        The buffer's width\n  * @param      {number}  height       The buffer's height\n  * @param      {THREE.Vector4}  pitch  The pitch,  restrict zone to parse\n  * @return     {Object}  The minimum maximum elevation.\n  */\nfunction computeMinMaxElevation(buffer, width, height, pitch) {\n    let min = 1000000;\n    let max = -1000000;\n\n    if (!buffer) {\n        // Return null values means there's no elevation values.\n        // They can't be determined.\n        // Don't return 0 because the result will be wrong\n        return { min: null, max: null };\n    }\n\n    const sizeX = pitch ? Math.floor(pitch.z * width) : buffer.length;\n    const sizeY = pitch ? Math.floor(pitch.z * height) : 1;\n    const xs = pitch ? Math.floor(pitch.x * width) : 0;\n    const ys = pitch ? Math.floor(pitch.y * height) : 0;\n\n    const inc = pitch ? Math.max(Math.floor(sizeX / 8), 2) : 16;\n\n    for (let y = ys; y < ys + sizeY; y += inc) {\n        const pit = y * (width || 0);\n        for (let x = xs; x < xs + sizeX; x += inc) {\n            const val = buffer[pit + x];\n            if (val > -10.0 && val !== undefined) {\n                max = Math.max(max, val);\n                min = Math.min(min, val);\n            }\n        }\n    }\n\n    if (max === -1000000 || min === 1000000) {\n        // Return null values means the elevation values are incoherent\n        // They can't be determined.\n        // Don't return 0, -1000000 or 1000000 because the result will be wrong\n        return { min: null, max: null };\n    }\n    return { min, max };\n}\n\nexport default computeMinMaxElevation;\n","import { l_ELEVATION, l_COLOR, EMPTY_TEXTURE_ZOOM } from '../Renderer/LayeredMaterialConstants';\nimport { chooseNextLevelToFetch } from '../Layer/LayerUpdateStrategy';\nimport LayerUpdateState from '../Layer/LayerUpdateState';\nimport { ImageryLayers } from '../Layer/Layer';\nimport CancelledCommandException from '../Core/Scheduler/CancelledCommandException';\nimport { SIZE_TEXTURE_TILE } from '../Provider/OGCWebServiceHelper';\nimport computeMinMaxElevation from '../Parser/XbilParser';\n\n// max retry loading before changing the status to definitiveError\nconst MAX_RETRY = 4;\n\nfunction getSourceExtent(node, extent, targetLevel, source) {\n    if (source && source.getSourceExtents) {\n        return source.getSourceExtents(extent).extent;\n    } else if (extent.isTiledCrs()) {\n        return extent.extentParent(targetLevel);\n    } else {\n        const parent = node.findAncestorFromLevel(targetLevel);\n        if (parent.extent) {\n            // Needed to initNodeElevationTextureFromParent, insertSignificantValuesFromParent,\n            // isColorLayerDownscaled\n            // Must be removed\n            parent.extent.zoom = parent.level;\n        }\n        return parent.extent;\n    }\n}\n\nfunction initNodeImageryTexturesFromParent(node, parent, layer) {\n    if (parent.material && parent.material.isColorLayerLoaded(layer)) {\n        const coords = node.getCoordsForSource(layer.source);\n        const offsetTextures = node.material.getLayerTextureOffset(layer.id);\n\n        let textureIndex = offsetTextures;\n        for (const c of coords) {\n            for (const texture of parent.material.getLayerTextures(layer)) {\n                if (c.isInside(texture.coords)) {\n                    const result = c.offsetToParent(texture.coords);\n                    node.material.textures[l_COLOR][textureIndex] = texture;\n                    node.material.offsetScale[l_COLOR][textureIndex] = result;\n                    textureIndex++;\n                    break;\n                }\n            }\n        }\n\n        if (__DEBUG__) {\n            if ((textureIndex - offsetTextures) != coords.length) {\n                console.error(`non-coherent result ${textureIndex} ${offsetTextures} vs ${coords.length}.`, coords);\n            }\n        }\n        const index = node.material.indexOfColorLayer(layer.id);\n        node.material.layerTexturesCount[index] = coords.length;\n        node.material.loadedTexturesCount[l_COLOR] += coords.length;\n    }\n}\n\nfunction initNodeElevationTextureFromParent(node, parent, layer) {\n    // Inherit parent's elevation texture. Note that contrary to color layers the elevation level of the\n    // node might not be EMPTY_TEXTURE_ZOOM in this init function. That's because we can have\n    // multiple elevation layers (thus multiple calls to initNodeElevationTextureFromParent) but a given\n    // node can only use 1 elevation texture\n    if (parent.material && parent.material.getElevationLayerLevel() > node.material.getElevationLayerLevel()) {\n        const coords = node.getCoordsForSource(layer.source);\n\n        const texture = parent.material.textures[l_ELEVATION][0];\n        const pitch = coords[0].offsetToParent(parent.material.textures[l_ELEVATION][0].coords);\n        const elevation = {\n            texture,\n            pitch,\n        };\n\n        // If the texture resolution has a poor precision for this node, we don't\n        // extract min-max from the texture (too few information), we instead chose\n        // to use parent's min-max.\n        const useMinMaxFromParent = node.level - texture.coords.zoom > 6;\n        if (!useMinMaxFromParent) {\n            const { min, max } = computeMinMaxElevation(\n                texture.image.data,\n                SIZE_TEXTURE_TILE, SIZE_TEXTURE_TILE,\n                pitch);\n            elevation.min = min;\n            elevation.max = max;\n        }\n\n        node.setTextureElevation(layer, elevation, pitch);\n    }\n}\n\nfunction getIndiceWithPitch(i, pitch, w) {\n    // Return corresponding indice in parent tile using pitch\n    const currentX = (i % w) / w;  // normalized\n    const currentY = Math.floor(i / w) / w; // normalized\n    const newX = pitch.x + currentX * pitch.z;\n    const newY = pitch.y + currentY * pitch.w;\n    const newIndice = Math.floor(newY * w) * w + Math.floor(newX * w);\n    return newIndice;\n}\n\nfunction insertSignificantValuesFromParent(texture, node, parent, layer) {\n    if (parent.material && parent.material.getElevationLayerLevel() > EMPTY_TEXTURE_ZOOM) {\n        const coords = node.getCoordsForSource(layer.source);\n        const textureParent = parent.material.textures[l_ELEVATION][0];\n        const pitch = coords[0].offsetToParent(parent.material.textures[l_ELEVATION][0].coords);\n        const tData = texture.image.data;\n        const l = tData.length;\n\n        for (var i = 0; i < l; ++i) {\n            if (tData[i] === layer.noDataValue) {\n                tData[i] = textureParent.image.data[getIndiceWithPitch(i, pitch, 256)];\n            }\n        }\n    }\n}\n\nfunction nodeCommandQueuePriorityFunction(node) {\n    // We know that 'node' is visible because commands can only be\n    // issued for visible nodes.\n\n    // TODO: need priorization of displayed nodes\n    if (node.isDisplayed()) {\n        // Then prefer displayed() node over non-displayed one\n        return 100;\n    } else {\n        return 10;\n    }\n}\n\nfunction refinementCommandCancellationFn(cmd) {\n    if (!cmd.requester.parent || !cmd.requester.material) {\n        return true;\n    }\n    if (cmd.force) {\n        return false;\n    }\n\n    // Cancel the command if the tile already has a better texture.\n    // This is only needed for elevation layers, because we may have several\n    // concurrent layers but we can only use one texture.\n    if (cmd.layer.type == 'elevation' &&\n        cmd.targetLevel <= cmd.requester.material.getElevationLayerLevel()) {\n        return true;\n    }\n\n    return !cmd.requester.isDisplayed();\n}\n\nfunction checkNodeElevationTextureValidity(texture, noDataValue) {\n    // We check if the elevation texture has some significant values through corners\n    const tData = texture.image.data;\n    const l = tData.length;\n    return tData[0] > noDataValue &&\n           tData[l - 1] > noDataValue &&\n           tData[Math.sqrt(l) - 1] > noDataValue &&\n           tData[l - Math.sqrt(l)] > noDataValue;\n}\n\nexport function updateLayeredMaterialNodeImagery(context, layer, node, parent) {\n    const material = node.material;\n    const extentsDestination = node.getCoordsForSource(layer.source);\n\n    // Initialisation\n    if (node.layerUpdateState[layer.id] === undefined) {\n        node.layerUpdateState[layer.id] = new LayerUpdateState();\n\n        if (!layer.source.extentsInsideLimit(extentsDestination)) {\n            // we also need to check that tile's parent doesn't have a texture for this layer,\n            // because even if this tile is outside of the layer, it could inherit it's\n            // parent texture\n            if (!layer.noTextureParentOutsideLimit &&\n                parent &&\n                parent.material &&\n                parent.material.indexOfColorLayer &&\n                parent.material.indexOfColorLayer(layer.id) >= 0) {\n                // ok, we're going to inherit our parent's texture\n            } else {\n                node.layerUpdateState[layer.id].noMoreUpdatePossible();\n                return;\n            }\n        }\n\n        if (material.indexOfColorLayer(layer.id) === -1) {\n            material.pushLayer(layer, node.getCoordsForSource(layer.source));\n            const imageryLayers = context.view.getLayers(l => l.type === 'color');\n            const sequence = ImageryLayers.getColorLayersIdOrderedBySequence(imageryLayers);\n            material.setSequence(sequence);\n\n            initNodeImageryTexturesFromParent(node, parent, layer);\n        }\n\n        // Proposed new process, two separate processes:\n        //      * FIRST PASS: initNodeXXXFromParent and get out of the function\n        //      * SECOND PASS: Fetch best texture\n\n        // The two-step allows you to filter out unnecessary requests\n        // Indeed in the second pass, their state (not visible or not displayed) can block them to fetch\n        const minLevel = layer.source.zoom.min;\n        if (node.material.getColorLayerLevelById(layer.id) >= minLevel) {\n            context.view.notifyChange(node, false);\n            return;\n        }\n    }\n\n    // Node is hidden, no need to update it\n    if (!node.isDisplayed()) {\n        return;\n    }\n\n    // TODO: move this to defineLayerProperty() declaration\n    // to avoid mixing layer's network updates and layer's params\n    // Update material parameters\n    material.setLayerVisibility(layer, layer.visible);\n    material.setLayerOpacity(layer, layer.opacity);\n\n    const ts = Date.now();\n    // An update is pending / or impossible -> abort\n    if (!layer.visible || !node.layerUpdateState[layer.id].canTryUpdate(ts)) {\n        return;\n    }\n\n    if (layer.source.canTileTextureBeImproved) {\n        // if the layer has a custom method -> use it\n        if (!layer.source.canTileTextureBeImproved(node.extent, material.getLayerTextures(layer)[0])) {\n            node.layerUpdateState[layer.id].noMoreUpdatePossible();\n            return;\n        }\n    } else if (!material.isColorLayerDownscaled(layer, node.getZoomForLayer(layer))) {\n        // default decision method\n        node.layerUpdateState[layer.id].noMoreUpdatePossible();\n        return;\n    }\n\n    // is fetching data from this layer disabled?\n    if (layer.frozen) {\n        return;\n    }\n\n    const failureParams = node.layerUpdateState[layer.id].failureParams;\n    const currentLevel = node.material.getColorLayerLevelById(layer.id);\n    const nodeLevel = extentsDestination[0].zoom || node.level;\n    const targetLevel = chooseNextLevelToFetch(layer.updateStrategy.type, node, nodeLevel, currentLevel, layer, failureParams);\n    if (targetLevel <= currentLevel) {\n        return;\n    }\n\n    // Get equivalent of extent destination in source\n    const extentsSource = [];\n    for (const extentDestination of extentsDestination) {\n        const extentSource = getSourceExtent(node, extentDestination, targetLevel, layer.source);\n        if (extentSource && !layer.source.extentInsideLimit(extentSource)) {\n            // Retry extentInsideLimit because you must check with the targetLevel\n            // if the first test extentInsideLimit returns that it is out of limits\n            // and the node inherits from its parent, then it'll still make a command to fetch texture.\n            node.layerUpdateState[layer.id].noMoreUpdatePossible();\n            return;\n        }\n        extentsSource.push(extentSource);\n    }\n\n    const parsedData = node.material.getLayerTextures(layer).map(t => t.parsedData);\n    node.layerUpdateState[layer.id].newTry();\n    const command = {\n        /* mandatory */\n        view: context.view,\n        layer,\n        extentsSource,\n        extentsDestination,\n        parsedData,\n        requester: node,\n        priority: nodeCommandQueuePriorityFunction(node),\n        earlyDropFunction: refinementCommandCancellationFn,\n    };\n\n    return context.scheduler.execute(command).then(\n        (result) => {\n            if (node.material === null) {\n                return;\n            }\n\n            if (result) {\n                const pitchs = extentsDestination.map((ext, i) => ext.offsetToParent(extentsSource[i]));\n                node.material.setLayerTextures(layer, result, pitchs);\n            } else {\n                // TODO: null texture is probably an error\n                // Maybe add an error counter for the node/layer,\n                // and stop retrying after X attempts.\n            }\n\n            node.layerUpdateState[layer.id].success();\n\n            return result;\n        },\n        (err) => {\n            if (err instanceof CancelledCommandException) {\n                node.layerUpdateState[layer.id].success();\n            } else {\n                if (__DEBUG__) {\n                    console.warn('Imagery texture update error for', node, err);\n                }\n                const definitiveError = node.layerUpdateState[layer.id].errorCount > MAX_RETRY;\n                node.layerUpdateState[layer.id].failure(Date.now(), definitiveError, { targetLevel });\n                if (!definitiveError) {\n                    window.setTimeout(() => {\n                        context.view.notifyChange(node, false);\n                    }, node.layerUpdateState[layer.id].secondsUntilNextTry() * 1000);\n                }\n            }\n        });\n}\n\nexport function updateLayeredMaterialNodeElevation(context, layer, node, parent) {\n    // TODO: we need either\n    //  - compound or exclusive layers\n    //  - support for multiple elevation layers\n\n    // Elevation is currently handled differently from color layers.\n    // This is caused by a LayeredMaterial limitation: only 1 elevation texture\n    // can be used (where a tile can have N textures x M layers)\n    const material = node.material;\n    let currentElevation = material.getElevationLayerLevel();\n\n    // Init elevation layer, and inherit from parent if possible\n    if (node.layerUpdateState[layer.id] === undefined) {\n        node.layerUpdateState[layer.id] = new LayerUpdateState();\n        initNodeElevationTextureFromParent(node, parent, layer);\n        currentElevation = material.getElevationLayerLevel();\n        const minLevel = layer.source.zoom.min;\n        if (currentElevation >= minLevel) {\n            context.view.notifyChange(node, false);\n            return;\n        }\n    }\n\n    // Try to update\n    const ts = Date.now();\n\n    // Possible conditions to *not* update the elevation texture\n    if (layer.frozen ||\n            !node.isDisplayed() ||\n            !node.layerUpdateState[layer.id].canTryUpdate(ts)) {\n        return;\n    }\n\n    // Does this tile needs a new texture?\n    if (layer.canTileTextureBeImproved) {\n        // if the layer has a custom method -> use it\n        if (!layer.canTileTextureBeImproved(layer, node)) {\n            node.layerUpdateState[layer.id].noMoreUpdatePossible();\n            return;\n        }\n    }\n\n    const extentsDestination = node.getCoordsForSource(layer.source);\n    const targetLevel = chooseNextLevelToFetch(layer.updateStrategy.type, node, extentsDestination[0].zoom, currentElevation, layer);\n\n    if (targetLevel <= currentElevation) {\n        node.layerUpdateState[layer.id].noMoreUpdatePossible();\n        return Promise.resolve();\n    }\n\n    const extentsSource = [];\n    for (const nodeExtent of extentsDestination) {\n        const extentSource = getSourceExtent(node, nodeExtent, targetLevel);\n        if (extentSource && !layer.source.extentInsideLimit(extentSource)) {\n            node.layerUpdateState[layer.id].noMoreUpdatePossible();\n            return;\n        }\n        extentsSource.push(extentSource);\n    }\n\n    node.layerUpdateState[layer.id].newTry();\n\n    const command = {\n        /* mandatory */\n        view: context.view,\n        layer,\n        extentsSource,\n        extentsDestination,\n        requester: node,\n        priority: nodeCommandQueuePriorityFunction(node),\n        earlyDropFunction: refinementCommandCancellationFn,\n    };\n\n    return context.scheduler.execute(command).then(\n        (textures) => {\n            const terrain = { texture: textures[0] };\n\n            // TODO: this check is maybe useless\n            // see in dataSourceProvider\n            if (node.material === null) {\n                return;\n            }\n\n            // Do not apply the new texture if its level is < than the current one.\n            // This is only needed for elevation layers, because we may have several\n            // concurrent layers but we can only use one texture.\n            if (targetLevel <= node.material.getElevationLayerLevel()) {\n                node.layerUpdateState[layer.id].noMoreUpdatePossible();\n                return;\n            }\n\n            node.layerUpdateState[layer.id].success();\n\n            if (terrain.texture && terrain.texture.image.data && !checkNodeElevationTextureValidity(terrain.texture, layer.noDataValue)) {\n                // Quick check to avoid using elevation texture with no data value\n                // If we have no data values, we use value from the parent tile\n                // We should later implement multi elevation layer to choose the one to use at each level\n                insertSignificantValuesFromParent(terrain.texture, node, parent, layer);\n            }\n\n            if (terrain.texture && terrain.texture.image.data) {\n                const { min, max } = computeMinMaxElevation(terrain.texture.image.data);\n                terrain.min = !min ? 0 : min;\n                terrain.max = !max ? 0 : max;\n            }\n            node.setTextureElevation(layer, terrain, extentsDestination[0].offsetToParent(extentsSource[0]));\n        },\n        (err) => {\n            if (err instanceof CancelledCommandException) {\n                node.layerUpdateState[layer.id].success();\n            } else {\n                if (__DEBUG__) {\n                    console.warn('Elevation texture update error for', node, err);\n                }\n                const definitiveError = node.layerUpdateState[layer.id].errorCount > MAX_RETRY;\n                node.layerUpdateState[layer.id].failure(Date.now(), definitiveError);\n                if (!definitiveError) {\n                    window.setTimeout(() => {\n                        context.view.notifyChange(node, false);\n                    }, node.layerUpdateState[layer.id].secondsUntilNextTry() * 1000);\n                }\n            }\n        });\n}\n","'use strict';\nvar fails = require('./_fails');\n\nmodule.exports = function (method, arg) {\n  return !!method && fails(function () {\n    // eslint-disable-next-line no-useless-call\n    arg ? method.call(null, function () { /* empty */ }, 1) : method.call(null);\n  });\n};\n","import Layer from './Layer';\nimport Picking from '../Core/Picking';\n\n/**\n * Fires when the opacity of the layer has changed.\n * @event GeometryLayer#opacity-property-changed\n */\n\nclass GeometryLayer extends Layer {\n    /**\n     * A layer usually managing a geometry to display on a view. For example, it\n     * can be a layer of buildings extruded from a a WFS stream.\n     *\n     * @constructor\n     * @extends Layer\n     *\n     * @param {string} id - The id of the layer, that should be unique. It is\n     * not mandatory, but an error will be emitted if this layer is added a\n     * {@link View} that already has a layer going by that id.\n     * @param {THREE.Object3d} object3d - The object3d used to contain the\n     * geometry of the GeometryLayer. It is usually a <code>THREE.Group</code>,\n     * but it can be anything inheriting from a <code>THREE.Object3d</code>.\n     * @param {Object} [config] - Optional configuration, all elements in it\n     * will be merged as is in the layer. For example, if the configuration\n     * contains three elements <code>name, protocol, extent</code>, these\n     * elements will be available using <code>layer.name</code> or something\n     * else depending on the property name.\n     * @param {WFSSource|FileSource} [config.source] data source\n     *\n     * @throws {Error} <code>object3d</code> must be a valid\n     * <code>THREE.Object3d</code>.\n     *\n     * @example\n     * // Create a GeometryLayer\n     * const geometry = new GeometryLayer('buildings', {\n     *      source: {\n     *          url: 'http://server.geo/wfs?',\n     *          protocol: 'wfs',\n     *          format: 'application/json'\n     *      },\n     * });\n     *\n     * // Add the layer\n     * view.addLayer(geometry);\n     *\n     * @example\n     * // Add and create a GeometryLayer\n     * view.addLayer({\n     *     id: 'buildings',\n     *     type: 'geometry',\n     *      source: {\n     *          url: 'http://server.geo/wfs?',\n     *          protocol: 'wfs',\n     *          format: 'application/json'\n     *      },\n     * });\n     */\n    constructor(id, object3d, config = {}) {\n        super(id, 'geometry', config);\n\n        if (!object3d || !object3d.isObject3D) {\n            throw new Error(`Missing/Invalid object3d parameter (must be a\n                three.js Object3D instance)`);\n        }\n\n        if (object3d.type === 'Group' && object3d.name === '') {\n            object3d.name = id;\n        }\n\n        Object.defineProperty(this, 'object3d', {\n            value: object3d,\n            writable: false,\n            configurable: true,\n        });\n\n        this.defineLayerProperty('opacity', 1.0, () => {\n            const root = this.parent ? this.parent.object3d : this.object3d;\n            root.traverse((object) => {\n                if (object.layer == this) {\n                    this.changeOpacity(object);\n                } else if (object.content && object.content.layer == this) {\n                    object.content.traverse(this.changeOpacity);\n                }\n            });\n        });\n\n        this.defineLayerProperty('wireframe', false, () => {\n            const root = this.parent ? this.parent.object3d : this.object3d;\n            root.traverse((object) => {\n                if (object.layer == this && object.material) {\n                    object.material.wireframe = this.wireframe;\n                } else if (object.content && object.content.layer == this) {\n                    object.content.traverse((o) => {\n                        if (o.material) {\n                            o.material.wireframe = this.wireframe;\n                        }\n                    });\n                }\n            });\n        });\n\n        this.attachedLayers = [];\n        this.visible = true;\n\n        // Attached layers expect to receive the visual representation of a\n        // layer (= THREE object with a material).  So if a layer's update\n        // function don't process this kind of object, the layer must provide a\n        // getObjectToUpdateForAttachedLayers function that returns the correct\n        // object to update for attached layer.\n        // See 3dtilesProvider or PointCloudProvider for examples.\n        // eslint-disable-next-line arrow-body-style\n        this.getObjectToUpdateForAttachedLayers = (obj) => {\n            if (obj.parent && obj.material) {\n                return {\n                    element: obj,\n                    parent: obj.parent,\n                };\n            }\n        };\n    }\n\n    // Placeholder\n    // eslint-disable-next-line\n    postUpdate() {}\n\n    // Placeholder\n    // eslint-disable-next-line\n    culling() {\n        return true;\n    }\n\n    /**\n     * Attach another layer to this one. Layers attached to a GeometryLayer will\n     * be available in <code>geometryLayer.attachedLayers</code>.\n     *\n     * @param {Layer} layer - The layer to attach, that must have an\n     * <code>update</code> method.\n     */\n    attach(layer) {\n        if (!layer.update) {\n            throw new Error(`Missing 'update' function -> can't attach layer\n                ${layer.id}`);\n        }\n        this.attachedLayers.push(layer);\n        // To traverse GeometryLayer object3d attached\n        layer.parent = this;\n    }\n\n    /**\n     * Detach a layer attached to this one. See {@link attach} to learn how to\n     * attach a layer.\n     *\n     * @param {Layer} layer - The layer to detach.\n     *\n     * @return {boolean} Confirmation of the detachment of the layer.\n     */\n    detach(layer) {\n        const count = this.attachedLayers.length;\n        this.attachedLayers = this.attachedLayers.filter(attached => attached.id != layer.id);\n        layer.parent = undefined;\n        return this.attachedLayers.length < count;\n    }\n\n    /**\n     * Picking method for this layer. It uses the {@link Picking#pickObjectsAt}\n     * method.\n     *\n     * @param {View} view - The view instance.\n     * @param {Object} coordinates - The coordinates to pick in the view. It\n     * should have at least <code>x</code> and <code>y</code> properties.\n     * @param {number} radius - Radius of the picking circle.\n     *\n     * @return {Array} An array containing all targets picked under the\n     * specified coordinates.\n     */\n    pickObjectsAt(view, coordinates, radius = this.options.defaultPickingRadius) {\n        return Picking.pickObjectsAt(view, coordinates, radius, this.object3d);\n    }\n\n    /**\n     * Change the opacity of an object, according to the value of the\n     * <code>opacity</code> property of this layer.\n     *\n     * @param {Object} object - The object to change the opacity from. It is\n     * usually a <code>THREE.Object3d</code> or an implementation of it.\n     */\n    changeOpacity(object) {\n        if (object.material) {\n            // != undefined: we want the test to pass if opacity is 0\n            if (object.material.opacity != undefined) {\n                object.material.transparent = this.opacity < 1.0;\n                object.material.opacity = this.opacity;\n            }\n            if (object.material.uniforms && object.material.uniforms.opacity != undefined) {\n                object.material.transparent = this.opacity < 1.0;\n                object.material.uniforms.opacity.value = this.opacity;\n            }\n        }\n    }\n}\n\nexport default GeometryLayer;\n","import { Vector4, Uniform, NoBlending, NormalBlending, RawShaderMaterial } from 'three';\nimport PointsVS from './Shader/PointsVS.glsl';\nimport PointsFS from './Shader/PointsFS.glsl';\nimport Capabilities from '../Core/System/Capabilities';\n\nexport const MODE = {\n    COLOR: 0,\n    INTENSITY: 1,\n    CLASSIFICATION: 2,\n    NORMAL: 3,\n};\n\nclass PointsMaterial extends RawShaderMaterial {\n    constructor(options = {}) {\n        super(options);\n        this.vertexShader = PointsVS;\n        this.fragmentShader = PointsFS;\n\n        this.size = options.size || 0;\n        this.scale = options.scale || 0.05 * 0.5 / Math.tan(1.0 / 2.0); // autosizing scale\n        this.overlayColor = options.overlayColor || new Vector4(0, 0, 0, 0);\n        this.mode = options.mode || MODE.COLOR;\n        this.picking = false;\n\n        for (const key in MODE) {\n            if (Object.prototype.hasOwnProperty.call(MODE, key)) {\n                this.defines[`MODE_${key}`] = MODE[key];\n            }\n        }\n\n        this.uniforms.size = new Uniform(this.size);\n        this.uniforms.mode = new Uniform(this.mode);\n        this.uniforms.pickingMode = new Uniform(this.picking);\n        this.uniforms.opacity = new Uniform(this.opacity);\n        this.uniforms.overlayColor = new Uniform(this.overlayColor);\n\n        if (Capabilities.isLogDepthBufferSupported()) {\n            this.defines.USE_LOGDEPTHBUF = 1;\n            this.defines.USE_LOGDEPTHBUF_EXT = 1;\n        }\n\n        if (__DEBUG__) {\n            this.defines.DEBUG = 1;\n        }\n        this.updateUniforms();\n    }\n\n    enablePicking(picking) {\n        this.picking = picking;\n        this.blending = picking ? NoBlending : NormalBlending;\n        this.updateUniforms();\n    }\n\n    updateUniforms() {\n        // if size is null, switch to autosizing using the canvas height\n        this.uniforms.size.value = (this.size > 0) ? this.size : -this.scale * window.innerHeight;\n        this.uniforms.mode.value = this.mode;\n        this.uniforms.pickingMode.value = this.picking;\n        this.uniforms.opacity.value = this.opacity;\n        this.uniforms.overlayColor.value = this.overlayColor;\n    }\n\n    update(source) {\n        this.visible = source.visible;\n        this.opacity = source.opacity;\n        this.transparent = source.transparent;\n        this.size = source.size;\n        this.mode = source.mode;\n        this.picking = source.picking;\n        this.scale = source.scale;\n        this.overlayColor.copy(source.overlayColor);\n        this.updateUniforms();\n        Object.assign(this.defines, source.defines);\n        return this;\n    }\n}\n\nexport default PointsMaterial;\n","/**\n * Generated On: 2015-10-5\n * Class: TileMesh\n * Description: Tuile de maillage, noeud du quadtree MNT. Le Materiel est issus du QuadTree ORTHO.\n */\n\nimport * as THREE from 'three';\nimport RendererConstant from '../Renderer/RendererConstant';\nimport OGCWebServiceHelper, { SIZE_TEXTURE_TILE } from '../Provider/OGCWebServiceHelper';\nimport { is4326 } from './Geographic/Coordinates';\n\nfunction TileMesh(layer, geometry, material, extent, level) {\n    // Constructor\n    THREE.Mesh.call(this, geometry, material);\n\n    this.layer = layer;\n\n    this.matrixAutoUpdate = false;\n    this.rotationAutoUpdate = false;\n\n    this.level = level;\n    this.extent = extent;\n\n    this.geometry = geometry;\n\n    this.obb = this.geometry.OBB.clone();\n\n    this.boundingSphere = new THREE.Sphere();\n    this.obb.box3D.getBoundingSphere(this.boundingSphere);\n\n    this.frustumCulled = false;\n\n    this.updateGeometricError();\n    this.wmtsCoords = {};\n\n    // Layer\n    this.setDisplayed(false);\n\n    this.layerUpdateState = {};\n\n    this.material.setUuid(this.id);\n\n    this._state = RendererConstant.FINAL;\n}\n\nTileMesh.prototype = Object.create(THREE.Mesh.prototype);\nTileMesh.prototype.constructor = TileMesh;\n\nTileMesh.prototype.updateMatrixWorld = function updateMatrixWorld(force) {\n    THREE.Mesh.prototype.updateMatrixWorld.call(this, force);\n    this.obb.update();\n};\n\nTileMesh.prototype.isVisible = function isVisible() {\n    return this.visible;\n};\n\nTileMesh.prototype.setDisplayed = function setDisplayed(show) {\n    this.material.visible = show;\n    this.layer.info.update(this);\n};\n\nTileMesh.prototype.setVisibility = function setVisibility(show) {\n    this.visible = show;\n};\n\nTileMesh.prototype.isDisplayed = function isDisplayed() {\n    return this.material.visible;\n};\n\n// switch material in function of state\nTileMesh.prototype.changeState = function changeState(state) {\n    if (state == this._state) {\n        return;\n    }\n    if (state == RendererConstant.DEPTH) {\n        this.material.defines.DEPTH_MODE = 1;\n        delete this.material.defines.MATTE_ID_MODE;\n    } else if (state == RendererConstant.ID) {\n        this.material.defines.MATTE_ID_MODE = 1;\n        delete this.material.defines.DEPTH_MODE;\n    } else {\n        delete this.material.defines.MATTE_ID_MODE;\n        delete this.material.defines.DEPTH_MODE;\n    }\n\n    this._state = state;\n\n    this.material.needsUpdate = true;\n};\n\nfunction applyChangeState(n, s) {\n    if (n.changeState) {\n        n.changeState(s);\n    }\n}\n\nTileMesh.prototype.pushRenderState = function pushRenderState(state) {\n    if (this._state == state) {\n        return () => { };\n    }\n\n    const oldState = this._state;\n    this.traverse(n => applyChangeState(n, state));\n\n    return () => {\n        this.traverse(n => applyChangeState(n, oldState));\n    };\n};\n\nTileMesh.prototype.setFog = function setFog(fog) {\n    this.material.setFogDistance(fog);\n};\n\nTileMesh.prototype.setSelected = function setSelected(select) {\n    this.material.setSelected(select);\n};\n\nTileMesh.prototype.setTextureElevation = function setTextureElevation(layer, elevation, offsetScale = new THREE.Vector4(0, 0, 1, 1)) {\n    if (this.material === null) {\n        return;\n    }\n    this.setBBoxZ(elevation.min, elevation.max);\n    this.material.setLayerTextures(layer, elevation.texture, offsetScale);\n};\n\n\nTileMesh.prototype.setBBoxZ = function setBBoxZ(min, max) {\n    if (min == undefined && max == undefined) {\n        return;\n    }\n    if (Math.floor(min) !== Math.floor(this.obb.z.min) || Math.floor(max) !== Math.floor(this.obb.z.max)) {\n        this.obb.updateZ(min, max);\n        this.obb.box3D.getBoundingSphere(this.boundingSphere);\n        this.updateGeometricError();\n    }\n};\n\nTileMesh.prototype.updateGeometricError = function updateGeometricError() {\n    // The geometric error is calculated to have a correct texture display.\n    // For the projection of a texture's texel to be less than or equal to one pixel\n    this.geometricError = this.boundingSphere.radius / SIZE_TEXTURE_TILE;\n};\n\nTileMesh.prototype.removeColorLayer = function removeColorLayer(idLayer) {\n    if (this.layerUpdateState && this.layerUpdateState[idLayer]) {\n        delete this.layerUpdateState[idLayer];\n    }\n    this.material.removeColorLayer(idLayer);\n};\n\nTileMesh.prototype.changeSequenceLayers = function changeSequenceLayers(sequence) {\n    const layerCount = this.material.getColorLayersCount();\n\n    // Quit if there is only one layer\n    if (layerCount < 2) {\n        return;\n    }\n\n    this.material.setSequence(sequence);\n};\n\nTileMesh.prototype.getCoordsForSource = function getCoordsForSource(source) {\n    if (source.protocol.indexOf('wmts') == 0) {\n        OGCWebServiceHelper.computeTileMatrixSetCoordinates(this, source.tileMatrixSet);\n        return this.wmtsCoords[source.tileMatrixSet];\n    } else if (source.protocol == 'wms' && this.extent.crs() != source.projection) {\n        if (source.projection == 'EPSG:3857') {\n            const tilematrixset = 'PM';\n            OGCWebServiceHelper.computeTileMatrixSetCoordinates(this, tilematrixset);\n            return this.wmtsCoords[tilematrixset];\n        } else {\n            throw new Error('unsupported projection wms for this viewer');\n        }\n    } else if (source.protocol == 'tms' || source.protocol == 'xyz') {\n        // Special globe case: use the P(seudo)M(ercator) coordinates\n        if (is4326(this.extent.crs()) &&\n                (source.extent.crs() == 'EPSG:3857' || is4326(source.extent.crs()))) {\n            OGCWebServiceHelper.computeTileMatrixSetCoordinates(this, 'PM');\n            return this.wmtsCoords.PM;\n        } else {\n            return OGCWebServiceHelper.computeTMSCoordinates(this, source.extent, source.origin);\n        }\n    } else if (source.extent.crs() == this.extent.crs()) {\n        // Currently extent.as() always clone the extent, even if the output\n        // crs is the same.\n        // So we avoid using it if both crs are the same.\n        return [this.extent];\n    } else {\n        return [this.extent.as(source.extent.crs())];\n    }\n};\n\nTileMesh.prototype.getZoomForLayer = function getZoomForLayer(layer) {\n    return this.getCoordsForSource(layer.source)[0].zoom || this.level;\n};\n\n/**\n * Search for a common ancestor between this tile and another one. It goes\n * through parents on each side until one is found.\n *\n * @param {TileMesh} tile\n *\n * @return {TileMesh} the resulting common ancestor\n */\nTileMesh.prototype.findCommonAncestor = function findCommonAncestor(tile) {\n    if (!tile) {\n        return undefined;\n    }\n    if (tile.level == this.level) {\n        if (tile.id == this.id) {\n            return tile;\n        } else if (tile.level != 0) {\n            return this.parent.findCommonAncestor(tile.parent);\n        } else {\n            return undefined;\n        }\n    } else if (tile.level < this.level) {\n        return this.parent.findCommonAncestor(tile);\n    } else {\n        return this.findCommonAncestor(tile.parent);\n    }\n};\n\nTileMesh.prototype.findAncestorFromLevel = function fnFindAncestorFromLevel(targetLevel) {\n    let parentAtLevel = this;\n    while (parentAtLevel && parentAtLevel.level > targetLevel) {\n        parentAtLevel = parentAtLevel.parent;\n    }\n    if (!parentAtLevel) {\n        return Promise.reject(`Invalid targetLevel requested ${targetLevel}`);\n    }\n    return parentAtLevel;\n};\n\nexport default TileMesh;\n","import * as THREE from 'three';\nimport CancelledCommandException from '../Core/Scheduler/CancelledCommandException';\n\n// Draw a cube with lines (12 lines).\nfunction cube(size) {\n    var h = size.clone().multiplyScalar(0.5);\n    var geometry = new THREE.Geometry();\n    var line = new THREE.Line(geometry);\n\n    geometry.vertices.push(\n        new THREE.Vector3(-h.x, -h.y, -h.z),\n        new THREE.Vector3(-h.x, h.y, -h.z),\n        new THREE.Vector3(-h.x, h.y, -h.z),\n        new THREE.Vector3(h.x, h.y, -h.z),\n        new THREE.Vector3(h.x, h.y, -h.z),\n        new THREE.Vector3(h.x, -h.y, -h.z),\n        new THREE.Vector3(h.x, -h.y, -h.z),\n        new THREE.Vector3(-h.x, -h.y, -h.z),\n        new THREE.Vector3(-h.x, -h.y, h.z),\n        new THREE.Vector3(-h.x, h.y, h.z),\n        new THREE.Vector3(-h.x, h.y, h.z),\n        new THREE.Vector3(h.x, h.y, h.z),\n        new THREE.Vector3(h.x, h.y, h.z),\n        new THREE.Vector3(h.x, -h.y, h.z),\n        new THREE.Vector3(h.x, -h.y, h.z),\n        new THREE.Vector3(-h.x, -h.y, h.z),\n        new THREE.Vector3(-h.x, -h.y, -h.z),\n        new THREE.Vector3(-h.x, -h.y, h.z),\n        new THREE.Vector3(-h.x, h.y, -h.z),\n        new THREE.Vector3(-h.x, h.y, h.z),\n        new THREE.Vector3(h.x, h.y, -h.z),\n        new THREE.Vector3(h.x, h.y, h.z),\n        new THREE.Vector3(h.x, -h.y, -h.z),\n        new THREE.Vector3(h.x, -h.y, h.z));\n\n    line.computeLineDistances();\n    return line.geometry;\n}\n\nfunction initBoundingBox(elt, layer) {\n    const size = new THREE.Vector3();\n    elt.tightbbox.getSize(size);\n    elt.obj.boxHelper = new THREE.LineSegments(\n        cube(size),\n        elt.childrenBitField ?\n            new THREE.LineDashedMaterial({ color: 0, dashSize: 0.25, gapSize: 0.25 }) : new THREE.LineBasicMaterial({ color: 0 }));\n\n    elt.obj.boxHelper.frustumCulled = false;\n    elt.obj.boxHelper.position.copy(elt.tightbbox.min);\n    elt.obj.boxHelper.position.add(size.multiplyScalar(0.5));\n    elt.obj.boxHelper.updateMatrixWorld(true);\n    elt.obj.boxHelper.autoUpdateMatrix = false;\n    elt.obj.boxHelper.material.linewidth = 2;\n    elt.obj.boxHelper.layers.mask = layer.bboxes.layers.mask;\n    layer.bboxes.add(elt.obj.boxHelper);\n    elt.obj.boxHelper.updateMatrixWorld();\n}\n\nfunction computeScreenSpaceError(context, layer, elt, distance) {\n    if (distance <= 0) {\n        return Infinity;\n    }\n    const pointSpacing = layer.metadata.spacing / Math.pow(2, elt.name.length);\n    // Estimate the onscreen distance between 2 points\n    const onScreenSpacing = context.camera.preSSE * pointSpacing / distance;\n    // [  P1  ]--------------[   P2   ]\n    //     <--------------------->      = pointsSpacing (in world coordinates)\n    //                                  ~ onScreenSpacing (in pixels)\n    // <------>                         = layer.pointSize (in pixels)\n    return Math.max(0.0, onScreenSpacing - layer.pointSize);\n}\n\nfunction markForDeletion(elt) {\n    if (elt.obj) {\n        elt.obj.material.visible = false;\n        if (__DEBUG__) {\n            if (elt.obj.boxHelper) {\n                elt.obj.boxHelper.material.visible = false;\n            }\n        }\n    }\n\n    if (!elt.notVisibleSince) {\n        elt.notVisibleSince = Date.now();\n        // Set .sse to an invalid value\n        elt.sse = -1;\n    }\n    for (const child of elt.children) {\n        markForDeletion(child);\n    }\n}\n\nexport default {\n    preUpdate(context, changeSources) {\n        // Bail-out if not ready\n        if (!this.root) {\n            return [];\n        }\n\n        // See https://cesiumjs.org/hosted-apps/massiveworlds/downloads/Ring/WorldScaleTerrainRendering.pptx\n        // slide 17\n        context.camera.preSSE =\n            context.camera.height /\n                (2 * Math.tan(THREE.Math.degToRad(context.camera.camera3D.fov) * 0.5));\n\n        if (this.material) {\n            this.material.visible = this.visible;\n            this.material.opacity = this.opacity;\n            this.material.transparent = this.opacity < 1;\n            this.material.size = this.pointSize;\n        }\n\n        // lookup lowest common ancestor of changeSources\n        let commonAncestorName;\n        for (const source of changeSources.values()) {\n            if (source.isCamera || source == this) {\n                // if the change is caused by a camera move, no need to bother\n                // to find common ancestor: we need to update the whole tree:\n                // some invisible tiles may now be visible\n                return [this.root];\n            }\n            if (source.obj === undefined) {\n                continue;\n            }\n            // filter sources that belong to our layer\n            if (source.obj.isPoints && source.obj.layer == this) {\n                if (!commonAncestorName) {\n                    commonAncestorName = source.name;\n                } else {\n                    let i;\n                    for (i = 0; i < Math.min(source.name.length, commonAncestorName.length); i++) {\n                        if (source.name[i] != commonAncestorName[i]) {\n                            break;\n                        }\n                    }\n                    commonAncestorName = commonAncestorName.substr(0, i);\n                    if (commonAncestorName.length == 0) {\n                        break;\n                    }\n                }\n            }\n        }\n        if (commonAncestorName) {\n            return [this.root.findChildrenByName(commonAncestorName)];\n        }\n\n        // Start updating from hierarchy root\n        return [this.root];\n    },\n\n    update(context, layer, elt) {\n        elt.visible = false;\n\n        if (layer.octreeDepthLimit >= 0 && layer.octreeDepthLimit < elt.name.length) {\n            markForDeletion(elt);\n            return;\n        }\n\n        // pick the best bounding box\n        const bbox = (elt.tightbbox ? elt.tightbbox : elt.bbox);\n        elt.visible = context.camera.isBox3Visible(bbox, layer.object3d.matrixWorld);\n        if (!elt.visible) {\n            markForDeletion(elt);\n            return;\n        }\n\n        elt.notVisibleSince = undefined;\n\n        // only load geometry if this elements has points\n        if (elt.numPoints > 0) {\n            if (elt.obj) {\n                if (elt.obj.material.update) {\n                    elt.obj.material.update(layer.material);\n                } else {\n                    elt.obj.material.copy(layer.material);\n                }\n                if (__DEBUG__) {\n                    if (layer.bboxes.visible) {\n                        if (!elt.obj.boxHelper) {\n                            initBoundingBox(elt, layer);\n                        }\n                        elt.obj.boxHelper.visible = true;\n                        elt.obj.boxHelper.material.color.r = 1 - elt.sse;\n                        elt.obj.boxHelper.material.color.g = elt.sse;\n                    }\n                }\n            } else if (!elt.promise) {\n                const distance = Math.max(0.001, bbox.distanceToPoint(context.camera.camera3D.position));\n                // Increase priority of nearest node\n                const priority = computeScreenSpaceError(context, layer, elt, distance) / distance;\n                elt.promise = context.scheduler.execute({\n                    layer,\n                    requester: elt,\n                    view: context.view,\n                    priority,\n                    redraw: true,\n                    isLeaf: elt.childrenBitField == 0,\n                    earlyDropFunction: cmd => !cmd.requester.visible || !layer.visible,\n                }).then((pts) => {\n                    if (layer.onPointsCreated) {\n                        layer.onPointsCreated(layer, pts);\n                    }\n\n                    elt.obj = pts;\n                    // store tightbbox to avoid ping-pong (bbox = larger => visible, tight => invisible)\n                    elt.tightbbox = pts.tightbbox;\n\n                    // make sure to add it here, otherwise it might never\n                    // be added nor cleaned\n                    layer.group.add(elt.obj);\n                    elt.obj.updateMatrixWorld(true);\n\n                    elt.promise = null;\n                }, (err) => {\n                    if (err instanceof CancelledCommandException) {\n                        elt.promise = null;\n                    }\n                });\n            }\n        }\n\n        if (elt.children && elt.children.length) {\n            const distance = bbox.distanceToPoint(context.camera.camera3D.position);\n            elt.sse = computeScreenSpaceError(context, layer, elt, distance) / layer.sseThreshold;\n            if (elt.sse >= 1) {\n                return elt.children;\n            } else {\n                for (const child of elt.children) {\n                    markForDeletion(child);\n                }\n            }\n        }\n    },\n\n    postUpdate(context, layer) {\n        if (!layer.group) {\n            return;\n        }\n\n        layer.displayedCount = 0;\n        for (const pts of layer.group.children) {\n            if (pts.material.visible) {\n                const count = pts.geometry.attributes.position.count;\n                pts.geometry.setDrawRange(0, count);\n                layer.displayedCount += count;\n            }\n        }\n\n        if (layer.displayedCount > layer.pointBudget) {\n            // 2 different point count limit implementation, depending on the pointcloud source\n            if (layer.supportsProgressiveDisplay) {\n                // In this format, points are evenly distributed within a node,\n                // so we can draw a percentage of each node and still get a correct\n                // representation\n                const reduction = layer.pointBudget / layer.displayedCount;\n                for (const pts of layer.group.children) {\n                    if (pts.material.visible) {\n                        const count = Math.floor(pts.geometry.drawRange.count * reduction);\n                        if (count > 0) {\n                            pts.geometry.setDrawRange(0, count);\n                        } else {\n                            pts.material.visible = false;\n                        }\n                    }\n                }\n                layer.displayedCount *= reduction;\n            } else {\n                // This format doesn't require points to be evenly distributed, so\n                // we're going to sort the nodes by \"importance\" (= on screen size)\n                // and display only the first N nodes\n                layer.group.children.sort((p1, p2) => p2.userData.metadata.sse - p1.userData.metadata.sse);\n\n                let limitHit = false;\n                layer.displayedCount = 0;\n                for (const pts of layer.group.children) {\n                    const count = pts.geometry.attributes.position.count;\n                    if (limitHit || (layer.displayedCount + count) > layer.pointBudget) {\n                        pts.material.visible = false;\n                        limitHit = true;\n                    } else {\n                        layer.displayedCount += count;\n                    }\n                }\n            }\n        }\n\n        const now = Date.now();\n        for (let i = layer.group.children.length - 1; i >= 0; i--) {\n            const obj = layer.group.children[i];\n            if (!obj.material.visible && (now - obj.userData.metadata.notVisibleSince) > 10000) {\n                // remove from group\n                layer.group.children.splice(i, 1);\n\n                obj.material.dispose();\n                obj.geometry.dispose();\n                obj.material = null;\n                obj.geometry = null;\n                obj.userData.metadata.obj = null;\n\n                if (__DEBUG__) {\n                    if (obj.boxHelper) {\n                        obj.boxHelper.removeMe = true;\n                        obj.boxHelper.material.dispose();\n                        obj.boxHelper.geometry.dispose();\n                    }\n                }\n            }\n        }\n\n        if (__DEBUG__) {\n            layer.bboxes.children = layer.bboxes.children.filter(b => !b.removeMe);\n        }\n    },\n};\n","var pIE = require('./_object-pie');\nvar createDesc = require('./_property-desc');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar has = require('./_has');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nexports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) { /* empty */ }\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n","// most Object methods by ES6 should accept primitives\nvar $export = require('./_export');\nvar core = require('./_core');\nvar fails = require('./_fails');\nmodule.exports = function (KEY, exec) {\n  var fn = (core.Object || {})[KEY] || Object[KEY];\n  var exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);\n};\n","// 0 -> Array#forEach\n// 1 -> Array#map\n// 2 -> Array#filter\n// 3 -> Array#some\n// 4 -> Array#every\n// 5 -> Array#find\n// 6 -> Array#findIndex\nvar ctx = require('./_ctx');\nvar IObject = require('./_iobject');\nvar toObject = require('./_to-object');\nvar toLength = require('./_to-length');\nvar asc = require('./_array-species-create');\nmodule.exports = function (TYPE, $create) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  var create = $create || asc;\n  return function ($this, callbackfn, that) {\n    var O = toObject($this);\n    var self = IObject(O);\n    var f = ctx(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var val, res;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      val = self[index];\n      res = f(val, index, O);\n      if (TYPE) {\n        if (IS_MAP) result[index] = res;   // map\n        else if (res) switch (TYPE) {\n          case 3: return true;             // some\n          case 5: return val;              // find\n          case 6: return index;            // findIndex\n          case 2: result.push(val);        // filter\n        } else if (IS_EVERY) return false; // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};\n","import * as THREE from 'three';\nimport Coordinates from '../Core/Geographic/Coordinates';\nimport { l_ELEVATION } from '../Renderer/LayeredMaterialConstants';\n\nconst FAST_READ_Z = 0;\nconst PRECISE_READ_Z = 1;\n\n/**\n * Utility module to retrieve elevation at a given coordinates.\n * The returned value is read in the elevation textures used by the graphics card\n * to render the tiles (globe or plane).\n * This implies that the return value may change depending on the current tile resolution.\n */\nexport default {\n    /**\n     * Return current displayed elevation at coord in meters.\n     * @param {GeometryLayer} layer The tile layer owning the elevation textures we're going to query.\n     * This is typically the globeLayer or a planeLayer.\n     * @param {Coordinates} coord The coordinates that we're interested in\n     * @param {Number} method 2 available method: FAST_READ_Z (default) or PRECISE_READ_Z. Chosing between\n     * the 2 is a compromise between performance and visual quality\n     * @param {Array} tileHint Optional array of tiles to speed up the process. You can give candidates tiles\n     * likely to contain 'coord'. Otherwise the lookup process starts from the root.\n     * @return {object}  undefined if no result or z: displayed elevation in meters, texture: where the z value comes from, tile: owner of the texture\n     */\n    getElevationValueAt(layer, coord, method = FAST_READ_Z, tileHint) {\n        const result = _readZ(layer, method, coord, tileHint || layer.level0Nodes);\n        if (result) {\n            return { z: result.coord._values[2], texture: result.texture, tile: result.tile };\n        }\n    },\n\n    /**\n     * Helper method that will position an object directly on the ground.\n     * @param {GeometryLayer} layer The tile layer owning the elevation textures we're going to query.\n     * This is typically the globeLayer or a planeLayer.\n     * @param {string} objectCRS the CRS used by the object coordinates. You probably want to use view.referenceCRS here.\n     * @param {Object3D} obj the object we want to modify.\n     * @param {object} options\n     * @param {number} options.method see getElevationValueAt documentation\n     * @param {boolean} options.modifyGeometry if unset/false, this function will modify object.position. If true, it will\n     * modify obj.geometry.vertices or obj.geometry.attributes.position\n     * @param {Array} tileHint see getElevationValueAt documentation\n     * @return {boolean} true if successful, false if we couldn't lookup the elevation at the given coords\n     */\n    placeObjectOnGround(layer, objectCRS, obj, options = {}, tileHint) {\n        let tiles;\n        if (tileHint) {\n            tiles = tileHint.concat(layer.level0Nodes);\n        } else {\n            tiles = layer.level0Nodes;\n        }\n\n        if (!options.modifyGeometry) {\n            if (options.cache) {\n                options.cache.length = 1;\n            }\n            const matrices = {\n                worldFromLocal: obj.parent ? obj.parent.matrixWorld : undefined,\n                localFromWorld: obj.parent ? new THREE.Matrix4().getInverse(obj.parent.matrixWorld) : undefined,\n            };\n            const result = _updateVector3(\n                layer,\n                options.method || FAST_READ_Z,\n                tiles,\n                objectCRS,\n                obj.position,\n                options.offset || 0,\n                matrices,\n                undefined,\n                options.cache ? options.cache[0] : undefined);\n\n            if (result) {\n                if (options.cache) {\n                    options.cache[0] = result;\n                }\n                obj.updateMatrix();\n                obj.updateMatrixWorld();\n                return true;\n            }\n        } else {\n            const matrices = {\n                worldFromLocal: obj.matrixWorld,\n                localFromWorld: new THREE.Matrix4().getInverse(obj.matrixWorld),\n            };\n\n            const geometry = obj.geometry;\n            if (geometry.vertices) {\n                if (options.cache) {\n                    options.cache.length = geometry.vertices.length;\n                }\n\n                let success = true;\n                const coord = new Coordinates(objectCRS);\n                for (let i = 0; i < geometry.vertices.length; i++) {\n                    const cached = options.cache ? options.cache[i] : undefined;\n\n                    const result = _updateVector3(\n                        layer,\n                        options.method || FAST_READ_Z,\n                        tiles,\n                        objectCRS,\n                        geometry.vertices[i],\n                        options.offset || 0,\n                        matrices,\n                        coord,\n                        cached);\n\n                    if (options.cache) {\n                        options.cache[i] = result;\n                    }\n                    if (!result) {\n                        success = false;\n                    }\n                }\n                geometry.verticesNeedUpdate = true;\n                return success;\n            } else if (geometry instanceof THREE.BufferGeometry) {\n                if (options.cache) {\n                    options.cache.length = geometry.attributes.position.count;\n                }\n                let success = true;\n\n                const tmp = new THREE.Vector3();\n                const coord = new Coordinates(objectCRS);\n                for (let i = 0; i < geometry.attributes.position.count; i++) {\n                    const cached = options.cache ? options.cache[i] : undefined;\n\n                    tmp.fromBufferAttribute(geometry.attributes.position, i);\n                    const prev = tmp.z;\n                    const result = _updateVector3(\n                        layer,\n                        options.method || FAST_READ_Z,\n                        tiles,\n                        objectCRS,\n                        tmp,\n                        options.offset || 0,\n                        matrices,\n                        coord,\n                        cached);\n                    if (options.cache) {\n                        options.cache[i] = result;\n                    }\n                    if (!result) {\n                        success = false;\n                    }\n                    if (prev != tmp.z) {\n                        geometry.attributes.position.needsUpdate = true;\n                    }\n                    geometry.attributes.position.setXYZ(i, tmp.x, tmp.y, tmp.z);\n                }\n                return success;\n            }\n        }\n    },\n    FAST_READ_Z,\n    PRECISE_READ_Z,\n};\n\nfunction tileAt(pt, tile) {\n    if (tile.extent) {\n        if (!tile.extent.isPointInside(pt)) {\n            return undefined;\n        }\n\n        for (let i = 0; i < tile.children.length; i++) {\n            const t = tileAt(pt, tile.children[i]);\n            if (t) {\n                return t;\n            }\n        }\n        if (tile.material.isElevationLayerLoaded()) {\n            return tile;\n        }\n        return undefined;\n    }\n}\n\nlet _canvas;\nfunction _readTextureValueAt(layer, texture, ...uv) {\n    for (let i = 0; i < uv.length; i += 2) {\n        uv[i] = THREE.Math.clamp(uv[i], 0, texture.image.width - 1);\n        uv[i + 1] = THREE.Math.clamp(uv[i + 1], 0, texture.image.height - 1);\n    }\n\n    if (texture.image.data) {\n        // read a single value\n        if (uv.length === 2) {\n            return texture.image.data[uv[1] * texture.image.width + uv[0]];\n        }\n        // or read multiple values\n        const result = [];\n        for (let i = 0; i < uv.length; i += 2) {\n            result.push(texture.image.data[uv[i + 1] * texture.image.width + uv[i]]);\n        }\n        return result;\n    } else {\n        if (!_canvas) {\n            _canvas = document.createElement('canvas');\n            _canvas.width = 2;\n            _canvas.height = 2;\n        }\n        let minx = Infinity;\n        let miny = Infinity;\n        let maxx = -Infinity;\n        let maxy = -Infinity;\n        for (let i = 0; i < uv.length; i += 2) {\n            minx = Math.min(uv[i], minx);\n            miny = Math.min(uv[i + 1], miny);\n            maxx = Math.max(uv[i], maxx);\n            maxy = Math.max(uv[i + 1], maxy);\n        }\n        const dw = maxx - minx + 1;\n        const dh = maxy - miny + 1;\n        _canvas.width = Math.max(_canvas.width, dw);\n        _canvas.height = Math.max(_canvas.height, dh);\n\n        const ctx = _canvas.getContext('2d');\n        ctx.drawImage(texture.image, minx, miny, dw, dh, 0, 0, dw, dh);\n        const d = ctx.getImageData(0, 0, dw, dh);\n\n        const result = [];\n        for (let i = 0; i < uv.length; i += 2) {\n            const ox = uv[i] - minx;\n            const oy = uv[i + 1] - miny;\n\n            // d is 4 bytes per pixel\n            result.push(THREE.Math.lerp(\n                layer.materialOptions.colorTextureElevationMinZ,\n                layer.materialOptions.colorTextureElevationMaxZ,\n                d.data[4 * oy * dw + 4 * ox] / 255));\n        }\n        if (uv.length === 2) {\n            return result[0];\n        } else {\n            return result;\n        }\n    }\n}\n\nfunction _convertUVtoTextureCoords(texture, u, v) {\n    const width = texture.image.width;\n    const height = texture.image.height;\n\n    const up = Math.max(0, u * width - 0.5);\n    const vp = Math.max(0, v * height - 0.5);\n\n    const u1 = Math.floor(up);\n    const u2 = Math.ceil(up);\n    const v1 = Math.floor(vp);\n    const v2 = Math.ceil(vp);\n\n    const wu = up - u1;\n    const wv = vp - v1;\n\n    return { u1, u2, v1, v2, wu, wv };\n}\n\nfunction _readTextureValueNearestFiltering(layer, texture, vertexU, vertexV) {\n    const coords = _convertUVtoTextureCoords(texture, vertexU, vertexV);\n\n    const u = (coords.wu <= 0) ? coords.u1 : coords.u2;\n    const v = (coords.wv <= 0) ? coords.v1 : coords.v2;\n\n    return _readTextureValueAt(layer, texture, u, v);\n}\n\nfunction _readTextureValueWithBilinearFiltering(layer, texture, vertexU, vertexV) {\n    const coords = _convertUVtoTextureCoords(texture, vertexU, vertexV);\n\n    const [z11, z21, z12, z22] = _readTextureValueAt(layer, texture,\n        coords.u1, coords.v1,\n        coords.u2, coords.v1,\n        coords.u1, coords.v2,\n        coords.u2, coords.v2);\n\n    // horizontal filtering\n    const zu1 = THREE.Math.lerp(z11, z21, coords.wu);\n    const zu2 = THREE.Math.lerp(z12, z22, coords.wu);\n    // then vertical filtering\n    return THREE.Math.lerp(zu1, zu2, coords.wv);\n}\n\n\nfunction _readZFast(layer, texture, uv) {\n    return _readTextureValueNearestFiltering(layer, texture, uv.x, uv.y);\n}\n\nconst bary = new THREE.Vector3();\nfunction _readZCorrect(layer, texture, uv, tileDimensions, tileOwnerDimensions) {\n    // We need to emulate the vertex shader code that does 2 thing:\n    //   - interpolate (u, v) between triangle vertices: u,v will be multiple of 1/nsegments\n    //     (for now assume nsegments == 16)\n    //   - read elevation texture at (u, v) for\n\n    // Determine u,v based on the vertices count.\n    // 'modulo' is the gap (in [0, 1]) between 2 successive vertices in the geometry\n    // e.g if you have 5 vertices, the only possible values for u (or v) are: 0, 0.25, 0.5, 0.75, 1\n    // so modulo would be 0.25\n    // note: currently the number of segments is hard-coded to 16 (see TileProvider) => 17 vertices\n    const modulo = (tileDimensions.x / tileOwnerDimensions.x) / (17 - 1);\n    let u = Math.floor(uv.x / modulo) * modulo;\n    let v = Math.floor(uv.y / modulo) * modulo;\n\n    if (u == 1) {\n        u -= modulo;\n    }\n    if (v == 1) {\n        v -= modulo;\n    }\n\n    // Build 4 vertices, 3 of them will be our triangle:\n    //    11---21\n    //    |   / |\n    //    |  /  |\n    //    | /   |\n    //    21---22\n    const u1 = u;\n    const u2 = u + modulo;\n    const v1 = v;\n    const v2 = v + modulo;\n\n    // Our multiple z-value will be weigh-blended, depending on the distance of the real point\n    // so lu (resp. lv) are the weight. When lu -> 0 (resp. 1) the final value -> z at u1 (resp. u2)\n    const lu = (uv.x - u) / modulo;\n    const lv = (uv.y - v) / modulo;\n\n\n    // Determine if we're going to read the vertices from the top-left or lower-right triangle\n    // (low-right = on the line 21-22 or under the diagonal lu = 1 - lv)\n    const lowerRightTriangle = (lv == 1) || lu / (1 - lv) >= 1;\n\n    const tri = new THREE.Triangle(\n        new THREE.Vector3(u1, v2),\n        new THREE.Vector3(u2, v1),\n        lowerRightTriangle ? new THREE.Vector3(u2, v2) : new THREE.Vector3(u1, v1));\n\n    // bary holds the respective weight of each vertices of the triangles\n    tri.getBarycoord(new THREE.Vector3(uv.x, uv.y), bary);\n\n    // read the 3 interesting values\n    const z1 = _readTextureValueWithBilinearFiltering(layer, texture, tri.a.x, tri.a.y);\n    const z2 = _readTextureValueWithBilinearFiltering(layer, texture, tri.b.x, tri.b.y);\n    const z3 = _readTextureValueWithBilinearFiltering(layer, texture, tri.c.x, tri.c.y);\n\n    // Blend with bary\n    return z1 * bary.x + z2 * bary.y + z3 * bary.z;\n}\n\nconst temp = {\n    v: new THREE.Vector3(),\n    coord1: new Coordinates('EPSG:4978'),\n    coord2: new Coordinates('EPSG:4978'),\n    offset: new THREE.Vector2(),\n};\n\nfunction _readZ(layer, method, coord, nodes, cache) {\n    const pt = coord.as(layer.extent.crs(), temp.coord1);\n\n    let tileWithValidElevationTexture = null;\n    // first check in cache\n    if (cache && cache.tile && cache.tile.material) {\n        tileWithValidElevationTexture = tileAt(pt, cache.tile);\n    }\n    for (let i = 0; !tileWithValidElevationTexture && i < nodes.length; i++) {\n        tileWithValidElevationTexture = tileAt(pt, nodes[i]);\n    }\n\n    if (!tileWithValidElevationTexture) {\n        // failed to find a tile, abort\n        return;\n    }\n\n    const tile = tileWithValidElevationTexture;\n    const src = tileWithValidElevationTexture.material.textures[l_ELEVATION][0];\n\n    // check cache value if existing\n    if (cache) {\n        if (cache.id === src.id && cache.version === src.version) {\n            return { coord: pt, texture: src, tile };\n        }\n    }\n\n    // Assuming that tiles are split in 4 children, we lookup the parent that\n    // really owns this texture\n    const stepsUpInHierarchy = Math.round(Math.log2(1.0 /\n        tileWithValidElevationTexture.material.offsetScale[l_ELEVATION][0].z));\n    for (let i = 0; i < stepsUpInHierarchy; i++) {\n        tileWithValidElevationTexture = tileWithValidElevationTexture.parent;\n    }\n\n    // offset = offset from top-left\n    const offset = pt.offsetInExtent(tileWithValidElevationTexture.extent, temp.offset);\n\n    // At this point we have:\n    //   - tileWithValidElevationTexture.texture.image which is the current image\n    //     used for rendering\n    //   - offset which is the offset in this texture for the coordinate we're\n    //     interested in\n    // We now have 2 options:\n    //   - the fast one: read the value of tileWithValidElevationTexture.texture.image\n    //     at (offset.x, offset.y) and we're done\n    //   - the correct one: emulate the vertex shader code\n    if (method == PRECISE_READ_Z) {\n        pt._values[2] = _readZCorrect(layer, src, offset, tile.extent.dimensions(), tileWithValidElevationTexture.extent.dimensions());\n    } else {\n        pt._values[2] = _readZFast(layer, src, offset);\n    }\n    return { coord: pt, texture: src, tile };\n}\n\n\nfunction _updateVector3(layer, method, nodes, vecCRS, vec, offset, matrices = {}, coords, cache) {\n    const coord = coords || new Coordinates(vecCRS);\n    if (matrices.worldFromLocal) {\n        coord.set(vecCRS, temp.v.copy(vec).applyMatrix4(matrices.worldFromLocal));\n    } else {\n        coord.set(vecCRS, vec);\n    }\n    const result = _readZ(layer, method, coord, nodes, cache);\n    if (result) {\n        result.coord._values[2] += offset;\n        result.coord.as(vecCRS, temp.coord2).xyz(vec);\n        if (matrices.localFromWorld) {\n            vec.applyMatrix4(matrices.localFromWorld);\n        }\n        return { id: result.texture.id, version: result.texture.version, tile: result.tile };\n    }\n}\n\n","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n","'use strict';\nif (require('./_descriptors')) {\n  var LIBRARY = require('./_library');\n  var global = require('./_global');\n  var fails = require('./_fails');\n  var $export = require('./_export');\n  var $typed = require('./_typed');\n  var $buffer = require('./_typed-buffer');\n  var ctx = require('./_ctx');\n  var anInstance = require('./_an-instance');\n  var propertyDesc = require('./_property-desc');\n  var hide = require('./_hide');\n  var redefineAll = require('./_redefine-all');\n  var toInteger = require('./_to-integer');\n  var toLength = require('./_to-length');\n  var toIndex = require('./_to-index');\n  var toAbsoluteIndex = require('./_to-absolute-index');\n  var toPrimitive = require('./_to-primitive');\n  var has = require('./_has');\n  var classof = require('./_classof');\n  var isObject = require('./_is-object');\n  var toObject = require('./_to-object');\n  var isArrayIter = require('./_is-array-iter');\n  var create = require('./_object-create');\n  var getPrototypeOf = require('./_object-gpo');\n  var gOPN = require('./_object-gopn').f;\n  var getIterFn = require('./core.get-iterator-method');\n  var uid = require('./_uid');\n  var wks = require('./_wks');\n  var createArrayMethod = require('./_array-methods');\n  var createArrayIncludes = require('./_array-includes');\n  var speciesConstructor = require('./_species-constructor');\n  var ArrayIterators = require('./es6.array.iterator');\n  var Iterators = require('./_iterators');\n  var $iterDetect = require('./_iter-detect');\n  var setSpecies = require('./_set-species');\n  var arrayFill = require('./_array-fill');\n  var arrayCopyWithin = require('./_array-copy-within');\n  var $DP = require('./_object-dp');\n  var $GOPD = require('./_object-gopd');\n  var dP = $DP.f;\n  var gOPD = $GOPD.f;\n  var RangeError = global.RangeError;\n  var TypeError = global.TypeError;\n  var Uint8Array = global.Uint8Array;\n  var ARRAY_BUFFER = 'ArrayBuffer';\n  var SHARED_BUFFER = 'Shared' + ARRAY_BUFFER;\n  var BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';\n  var PROTOTYPE = 'prototype';\n  var ArrayProto = Array[PROTOTYPE];\n  var $ArrayBuffer = $buffer.ArrayBuffer;\n  var $DataView = $buffer.DataView;\n  var arrayForEach = createArrayMethod(0);\n  var arrayFilter = createArrayMethod(2);\n  var arraySome = createArrayMethod(3);\n  var arrayEvery = createArrayMethod(4);\n  var arrayFind = createArrayMethod(5);\n  var arrayFindIndex = createArrayMethod(6);\n  var arrayIncludes = createArrayIncludes(true);\n  var arrayIndexOf = createArrayIncludes(false);\n  var arrayValues = ArrayIterators.values;\n  var arrayKeys = ArrayIterators.keys;\n  var arrayEntries = ArrayIterators.entries;\n  var arrayLastIndexOf = ArrayProto.lastIndexOf;\n  var arrayReduce = ArrayProto.reduce;\n  var arrayReduceRight = ArrayProto.reduceRight;\n  var arrayJoin = ArrayProto.join;\n  var arraySort = ArrayProto.sort;\n  var arraySlice = ArrayProto.slice;\n  var arrayToString = ArrayProto.toString;\n  var arrayToLocaleString = ArrayProto.toLocaleString;\n  var ITERATOR = wks('iterator');\n  var TAG = wks('toStringTag');\n  var TYPED_CONSTRUCTOR = uid('typed_constructor');\n  var DEF_CONSTRUCTOR = uid('def_constructor');\n  var ALL_CONSTRUCTORS = $typed.CONSTR;\n  var TYPED_ARRAY = $typed.TYPED;\n  var VIEW = $typed.VIEW;\n  var WRONG_LENGTH = 'Wrong length!';\n\n  var $map = createArrayMethod(1, function (O, length) {\n    return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);\n  });\n\n  var LITTLE_ENDIAN = fails(function () {\n    // eslint-disable-next-line no-undef\n    return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;\n  });\n\n  var FORCED_SET = !!Uint8Array && !!Uint8Array[PROTOTYPE].set && fails(function () {\n    new Uint8Array(1).set({});\n  });\n\n  var toOffset = function (it, BYTES) {\n    var offset = toInteger(it);\n    if (offset < 0 || offset % BYTES) throw RangeError('Wrong offset!');\n    return offset;\n  };\n\n  var validate = function (it) {\n    if (isObject(it) && TYPED_ARRAY in it) return it;\n    throw TypeError(it + ' is not a typed array!');\n  };\n\n  var allocate = function (C, length) {\n    if (!(isObject(C) && TYPED_CONSTRUCTOR in C)) {\n      throw TypeError('It is not a typed array constructor!');\n    } return new C(length);\n  };\n\n  var speciesFromList = function (O, list) {\n    return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);\n  };\n\n  var fromList = function (C, list) {\n    var index = 0;\n    var length = list.length;\n    var result = allocate(C, length);\n    while (length > index) result[index] = list[index++];\n    return result;\n  };\n\n  var addGetter = function (it, key, internal) {\n    dP(it, key, { get: function () { return this._d[internal]; } });\n  };\n\n  var $from = function from(source /* , mapfn, thisArg */) {\n    var O = toObject(source);\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var iterFn = getIterFn(O);\n    var i, length, values, result, step, iterator;\n    if (iterFn != undefined && !isArrayIter(iterFn)) {\n      for (iterator = iterFn.call(O), values = [], i = 0; !(step = iterator.next()).done; i++) {\n        values.push(step.value);\n      } O = values;\n    }\n    if (mapping && aLen > 2) mapfn = ctx(mapfn, arguments[2], 2);\n    for (i = 0, length = toLength(O.length), result = allocate(this, length); length > i; i++) {\n      result[i] = mapping ? mapfn(O[i], i) : O[i];\n    }\n    return result;\n  };\n\n  var $of = function of(/* ...items */) {\n    var index = 0;\n    var length = arguments.length;\n    var result = allocate(this, length);\n    while (length > index) result[index] = arguments[index++];\n    return result;\n  };\n\n  // iOS Safari 6.x fails here\n  var TO_LOCALE_BUG = !!Uint8Array && fails(function () { arrayToLocaleString.call(new Uint8Array(1)); });\n\n  var $toLocaleString = function toLocaleString() {\n    return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this), arguments);\n  };\n\n  var proto = {\n    copyWithin: function copyWithin(target, start /* , end */) {\n      return arrayCopyWithin.call(validate(this), target, start, arguments.length > 2 ? arguments[2] : undefined);\n    },\n    every: function every(callbackfn /* , thisArg */) {\n      return arrayEvery(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    fill: function fill(value /* , start, end */) { // eslint-disable-line no-unused-vars\n      return arrayFill.apply(validate(this), arguments);\n    },\n    filter: function filter(callbackfn /* , thisArg */) {\n      return speciesFromList(this, arrayFilter(validate(this), callbackfn,\n        arguments.length > 1 ? arguments[1] : undefined));\n    },\n    find: function find(predicate /* , thisArg */) {\n      return arrayFind(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    findIndex: function findIndex(predicate /* , thisArg */) {\n      return arrayFindIndex(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    forEach: function forEach(callbackfn /* , thisArg */) {\n      arrayForEach(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    indexOf: function indexOf(searchElement /* , fromIndex */) {\n      return arrayIndexOf(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    includes: function includes(searchElement /* , fromIndex */) {\n      return arrayIncludes(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    join: function join(separator) { // eslint-disable-line no-unused-vars\n      return arrayJoin.apply(validate(this), arguments);\n    },\n    lastIndexOf: function lastIndexOf(searchElement /* , fromIndex */) { // eslint-disable-line no-unused-vars\n      return arrayLastIndexOf.apply(validate(this), arguments);\n    },\n    map: function map(mapfn /* , thisArg */) {\n      return $map(validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    reduce: function reduce(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars\n      return arrayReduce.apply(validate(this), arguments);\n    },\n    reduceRight: function reduceRight(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars\n      return arrayReduceRight.apply(validate(this), arguments);\n    },\n    reverse: function reverse() {\n      var that = this;\n      var length = validate(that).length;\n      var middle = Math.floor(length / 2);\n      var index = 0;\n      var value;\n      while (index < middle) {\n        value = that[index];\n        that[index++] = that[--length];\n        that[length] = value;\n      } return that;\n    },\n    some: function some(callbackfn /* , thisArg */) {\n      return arraySome(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    sort: function sort(comparefn) {\n      return arraySort.call(validate(this), comparefn);\n    },\n    subarray: function subarray(begin, end) {\n      var O = validate(this);\n      var length = O.length;\n      var $begin = toAbsoluteIndex(begin, length);\n      return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(\n        O.buffer,\n        O.byteOffset + $begin * O.BYTES_PER_ELEMENT,\n        toLength((end === undefined ? length : toAbsoluteIndex(end, length)) - $begin)\n      );\n    }\n  };\n\n  var $slice = function slice(start, end) {\n    return speciesFromList(this, arraySlice.call(validate(this), start, end));\n  };\n\n  var $set = function set(arrayLike /* , offset */) {\n    validate(this);\n    var offset = toOffset(arguments[1], 1);\n    var length = this.length;\n    var src = toObject(arrayLike);\n    var len = toLength(src.length);\n    var index = 0;\n    if (len + offset > length) throw RangeError(WRONG_LENGTH);\n    while (index < len) this[offset + index] = src[index++];\n  };\n\n  var $iterators = {\n    entries: function entries() {\n      return arrayEntries.call(validate(this));\n    },\n    keys: function keys() {\n      return arrayKeys.call(validate(this));\n    },\n    values: function values() {\n      return arrayValues.call(validate(this));\n    }\n  };\n\n  var isTAIndex = function (target, key) {\n    return isObject(target)\n      && target[TYPED_ARRAY]\n      && typeof key != 'symbol'\n      && key in target\n      && String(+key) == String(key);\n  };\n  var $getDesc = function getOwnPropertyDescriptor(target, key) {\n    return isTAIndex(target, key = toPrimitive(key, true))\n      ? propertyDesc(2, target[key])\n      : gOPD(target, key);\n  };\n  var $setDesc = function defineProperty(target, key, desc) {\n    if (isTAIndex(target, key = toPrimitive(key, true))\n      && isObject(desc)\n      && has(desc, 'value')\n      && !has(desc, 'get')\n      && !has(desc, 'set')\n      // TODO: add validation descriptor w/o calling accessors\n      && !desc.configurable\n      && (!has(desc, 'writable') || desc.writable)\n      && (!has(desc, 'enumerable') || desc.enumerable)\n    ) {\n      target[key] = desc.value;\n      return target;\n    } return dP(target, key, desc);\n  };\n\n  if (!ALL_CONSTRUCTORS) {\n    $GOPD.f = $getDesc;\n    $DP.f = $setDesc;\n  }\n\n  $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {\n    getOwnPropertyDescriptor: $getDesc,\n    defineProperty: $setDesc\n  });\n\n  if (fails(function () { arrayToString.call({}); })) {\n    arrayToString = arrayToLocaleString = function toString() {\n      return arrayJoin.call(this);\n    };\n  }\n\n  var $TypedArrayPrototype$ = redefineAll({}, proto);\n  redefineAll($TypedArrayPrototype$, $iterators);\n  hide($TypedArrayPrototype$, ITERATOR, $iterators.values);\n  redefineAll($TypedArrayPrototype$, {\n    slice: $slice,\n    set: $set,\n    constructor: function () { /* noop */ },\n    toString: arrayToString,\n    toLocaleString: $toLocaleString\n  });\n  addGetter($TypedArrayPrototype$, 'buffer', 'b');\n  addGetter($TypedArrayPrototype$, 'byteOffset', 'o');\n  addGetter($TypedArrayPrototype$, 'byteLength', 'l');\n  addGetter($TypedArrayPrototype$, 'length', 'e');\n  dP($TypedArrayPrototype$, TAG, {\n    get: function () { return this[TYPED_ARRAY]; }\n  });\n\n  // eslint-disable-next-line max-statements\n  module.exports = function (KEY, BYTES, wrapper, CLAMPED) {\n    CLAMPED = !!CLAMPED;\n    var NAME = KEY + (CLAMPED ? 'Clamped' : '') + 'Array';\n    var GETTER = 'get' + KEY;\n    var SETTER = 'set' + KEY;\n    var TypedArray = global[NAME];\n    var Base = TypedArray || {};\n    var TAC = TypedArray && getPrototypeOf(TypedArray);\n    var FORCED = !TypedArray || !$typed.ABV;\n    var O = {};\n    var TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];\n    var getter = function (that, index) {\n      var data = that._d;\n      return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);\n    };\n    var setter = function (that, index, value) {\n      var data = that._d;\n      if (CLAMPED) value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;\n      data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);\n    };\n    var addElement = function (that, index) {\n      dP(that, index, {\n        get: function () {\n          return getter(this, index);\n        },\n        set: function (value) {\n          return setter(this, index, value);\n        },\n        enumerable: true\n      });\n    };\n    if (FORCED) {\n      TypedArray = wrapper(function (that, data, $offset, $length) {\n        anInstance(that, TypedArray, NAME, '_d');\n        var index = 0;\n        var offset = 0;\n        var buffer, byteLength, length, klass;\n        if (!isObject(data)) {\n          length = toIndex(data);\n          byteLength = length * BYTES;\n          buffer = new $ArrayBuffer(byteLength);\n        } else if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {\n          buffer = data;\n          offset = toOffset($offset, BYTES);\n          var $len = data.byteLength;\n          if ($length === undefined) {\n            if ($len % BYTES) throw RangeError(WRONG_LENGTH);\n            byteLength = $len - offset;\n            if (byteLength < 0) throw RangeError(WRONG_LENGTH);\n          } else {\n            byteLength = toLength($length) * BYTES;\n            if (byteLength + offset > $len) throw RangeError(WRONG_LENGTH);\n          }\n          length = byteLength / BYTES;\n        } else if (TYPED_ARRAY in data) {\n          return fromList(TypedArray, data);\n        } else {\n          return $from.call(TypedArray, data);\n        }\n        hide(that, '_d', {\n          b: buffer,\n          o: offset,\n          l: byteLength,\n          e: length,\n          v: new $DataView(buffer)\n        });\n        while (index < length) addElement(that, index++);\n      });\n      TypedArrayPrototype = TypedArray[PROTOTYPE] = create($TypedArrayPrototype$);\n      hide(TypedArrayPrototype, 'constructor', TypedArray);\n    } else if (!fails(function () {\n      TypedArray(1);\n    }) || !fails(function () {\n      new TypedArray(-1); // eslint-disable-line no-new\n    }) || !$iterDetect(function (iter) {\n      new TypedArray(); // eslint-disable-line no-new\n      new TypedArray(null); // eslint-disable-line no-new\n      new TypedArray(1.5); // eslint-disable-line no-new\n      new TypedArray(iter); // eslint-disable-line no-new\n    }, true)) {\n      TypedArray = wrapper(function (that, data, $offset, $length) {\n        anInstance(that, TypedArray, NAME);\n        var klass;\n        // `ws` module bug, temporarily remove validation length for Uint8Array\n        // https://github.com/websockets/ws/pull/645\n        if (!isObject(data)) return new Base(toIndex(data));\n        if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {\n          return $length !== undefined\n            ? new Base(data, toOffset($offset, BYTES), $length)\n            : $offset !== undefined\n              ? new Base(data, toOffset($offset, BYTES))\n              : new Base(data);\n        }\n        if (TYPED_ARRAY in data) return fromList(TypedArray, data);\n        return $from.call(TypedArray, data);\n      });\n      arrayForEach(TAC !== Function.prototype ? gOPN(Base).concat(gOPN(TAC)) : gOPN(Base), function (key) {\n        if (!(key in TypedArray)) hide(TypedArray, key, Base[key]);\n      });\n      TypedArray[PROTOTYPE] = TypedArrayPrototype;\n      if (!LIBRARY) TypedArrayPrototype.constructor = TypedArray;\n    }\n    var $nativeIterator = TypedArrayPrototype[ITERATOR];\n    var CORRECT_ITER_NAME = !!$nativeIterator\n      && ($nativeIterator.name == 'values' || $nativeIterator.name == undefined);\n    var $iterator = $iterators.values;\n    hide(TypedArray, TYPED_CONSTRUCTOR, true);\n    hide(TypedArrayPrototype, TYPED_ARRAY, NAME);\n    hide(TypedArrayPrototype, VIEW, true);\n    hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);\n\n    if (CLAMPED ? new TypedArray(1)[TAG] != NAME : !(TAG in TypedArrayPrototype)) {\n      dP(TypedArrayPrototype, TAG, {\n        get: function () { return NAME; }\n      });\n    }\n\n    O[NAME] = TypedArray;\n\n    $export($export.G + $export.W + $export.F * (TypedArray != Base), O);\n\n    $export($export.S, NAME, {\n      BYTES_PER_ELEMENT: BYTES\n    });\n\n    $export($export.S + $export.F * fails(function () { Base.of.call(TypedArray, 1); }), NAME, {\n      from: $from,\n      of: $of\n    });\n\n    if (!(BYTES_PER_ELEMENT in TypedArrayPrototype)) hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);\n\n    $export($export.P, NAME, proto);\n\n    setSpecies(NAME);\n\n    $export($export.P + $export.F * FORCED_SET, NAME, { set: $set });\n\n    $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);\n\n    if (!LIBRARY && TypedArrayPrototype.toString != arrayToString) TypedArrayPrototype.toString = arrayToString;\n\n    $export($export.P + $export.F * fails(function () {\n      new TypedArray(1).slice();\n    }), NAME, { slice: $slice });\n\n    $export($export.P + $export.F * (fails(function () {\n      return [1, 2].toLocaleString() != new TypedArray([1, 2]).toLocaleString();\n    }) || !fails(function () {\n      TypedArrayPrototype.toLocaleString.call([1, 2]);\n    })), NAME, { toLocaleString: $toLocaleString });\n\n    Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;\n    if (!LIBRARY && !CORRECT_ITER_NAME) hide(TypedArrayPrototype, ITERATOR, $iterator);\n  };\n} else module.exports = function () { /* empty */ };\n","/**\n * Generated On: 2015-10-5\n * Class: Ellipsoid\n * Description: Classe mathématique de  l'ellispoide\n */\n\n\nimport * as THREE from 'three';\nimport Coordinates from '../Geographic/Coordinates';\n\nfunction Ellipsoid(size) {\n    // Constructor\n\n\n    this.rayon_1 = size.x;\n    this.rayon_2 = size.y;\n    this.rayon_3 = size.z;\n\n    this.size = new THREE.Vector3(size.x, size.y, size.z);\n\n    this._radiiSquared = new THREE.Vector3(size.x * size.x, size.y * size.y, size.z * size.z);\n\n    this._oneOverRadiiSquared = new THREE.Vector3(size.x === 0.0 ? 0.0 : 1.0 / (size.x * size.x),\n        size.y === 0.0 ? 0.0 : 1.0 / (size.y * size.y),\n        size.z === 0.0 ? 0.0 : 1.0 / (size.z * size.z));\n}\n\nEllipsoid.prototype.geodeticSurfaceNormal = function geodeticSurfaceNormal(cartesian, target = new THREE.Vector3()) {\n    target.set(\n        cartesian.x() * this._oneOverRadiiSquared.x,\n        cartesian.y() * this._oneOverRadiiSquared.y,\n        cartesian.z() * this._oneOverRadiiSquared.z);\n    return target.normalize();\n};\n\nEllipsoid.prototype.geodeticSurfaceNormalCartographic = function geodeticSurfaceNormalCartographic(coordCarto, target = new THREE.Vector3()) {\n    const longitude = THREE.Math.degToRad(coordCarto.longitude());\n    const latitude = THREE.Math.degToRad(coordCarto.latitude());\n    const cosLatitude = Math.cos(latitude);\n\n    const x = cosLatitude * Math.cos(longitude);\n    const y = cosLatitude * Math.sin(longitude);\n    const z = Math.sin(latitude);\n\n    return target.set(x, y, z);\n};\n\nEllipsoid.prototype.setSize = function setSize(size) {\n    this.rayon_1 = size.x;\n    this.rayon_2 = size.y;\n    this.rayon_3 = size.z;\n\n    this._radiiSquared = new THREE.Vector3(size.x * size.x, size.y * size.y, size.z * size.z);\n};\n\nconst normal = new THREE.Vector3();\nEllipsoid.prototype.cartographicToCartesian = function cartographicToCartesian(coordCarto, target = new THREE.Vector3()) {\n    normal.copy(coordCarto.geodesicNormal);\n\n    target.multiplyVectors(this._radiiSquared, normal);\n\n    const gamma = Math.sqrt(normal.dot(target));\n\n    target.divideScalar(gamma);\n\n    normal.multiplyScalar(coordCarto.altitude());\n\n    return target.add(normal);\n};\n\n/**\n * Convert cartesian coordinates to geographic according to the current ellipsoid of revolution.\n * @param {Object} position - The coordinate to convert\n * @param {number} position.x\n * @param {number} position.y\n * @param {number} position.z\n * @param {Coordinate} [target] coordinate to copy result\n * @returns {Coordinate} an object describing the coordinates on the reference ellipsoid, angles are in degree\n */\nEllipsoid.prototype.cartesianToCartographic = function cartesianToCartographic(position, target = new Coordinates('EPSG:4326', 0, 0, 0)) {\n    // for details, see for example http://www.linz.govt.nz/data/geodetic-system/coordinate-conversion/geodetic-datum-conversions/equations-used-datum\n    // TODO the following is only valable for oblate ellipsoid of revolution. do we want to support triaxial ellipsoid?\n    const R = Math.sqrt(position.x * position.x + position.y * position.y + position.z * position.z);\n    const a = this.rayon_1; // x\n    const b = this.rayon_3; // z\n    const e = Math.abs((a * a - b * b) / (a * a));\n    const f = 1 - Math.sqrt(1 - e);\n    const rsqXY = Math.sqrt(position.x * position.x + position.y * position.y);\n\n    const theta = Math.atan2(position.y, position.x);\n    const nu = Math.atan(position.z / rsqXY * ((1 - f) + e * a / R));\n\n    const sinu = Math.sin(nu);\n    const cosu = Math.cos(nu);\n\n    const phi = Math.atan((position.z * (1 - f) + e * a * sinu * sinu * sinu) / ((1 - f) * (rsqXY - e * a * cosu * cosu * cosu)));\n\n    const h = (rsqXY * Math.cos(phi)) + position.z * Math.sin(phi) - a * Math.sqrt(1 - e * Math.sin(phi) * Math.sin(phi));\n\n    return target.set('EPSG:4326',\n        THREE.Math.radToDeg(theta),\n        THREE.Math.radToDeg(phi),\n        h);\n};\n\nEllipsoid.prototype.cartographicToCartesianArray = function cartographicToCartesianArray(coordCartoArray) {\n    var cartesianArray = [];\n    for (var i = 0; i < coordCartoArray.length; i++) {\n        cartesianArray.push(this.cartographicToCartesian(coordCartoArray[i]));\n    }\n\n    return cartesianArray;\n};\n\nEllipsoid.prototype.intersection = function intersection(ray) {\n    var EPSILON = 0.0001;\n    var O_C = ray.origin;\n    var dir = ray.direction;\n    // normalizeVector( dir );\n\n    var a =\n        ((dir.x * dir.x) / (this.size.x * this.size.x)) + ((dir.y * dir.y) / (this.size.y * this.size.y)) + ((dir.z * dir.z) / (this.size.z * this.size.z));\n\n    var b =\n        ((2 * O_C.x * dir.x) / (this.size.x * this.size.x)) + ((2 * O_C.y * dir.y) / (this.size.y * this.size.y)) + ((2 * O_C.z * dir.z) / (this.size.z * this.size.z));\n    var c =\n        ((O_C.x * O_C.x) / (this.size.x * this.size.x)) + ((O_C.y * O_C.y) / (this.size.y * this.size.y)) + ((O_C.z * O_C.z) / (this.size.z * this.size.z)) - 1;\n\n    var d = ((b * b) - (4 * a * c));\n    if (d < 0 || a === 0 || b === 0 || c === 0) { return false; }\n\n    d = Math.sqrt(d);\n\n    var t1 = (-b + d) / (2 * a);\n    var t2 = (-b - d) / (2 * a);\n\n    if (t1 <= EPSILON && t2 <= EPSILON) { return false; } // both intersections are behind the ray origin\n    // var back = (t1 <= EPSILON || t2 <= EPSILON); // If only one intersection (t>0) then we are inside the ellipsoid and the intersection is at the back of the ellipsoid\n    var t = 0;\n    if (t1 <= EPSILON) { t = t2; } else\n    if (t2 <= EPSILON) { t = t1; } else { t = (t1 < t2) ? t1 : t2; }\n\n    if (t < EPSILON) { return false; } // Too close to intersection\n\n    var inter = new THREE.Vector3();\n\n    inter.addVectors(ray.origin, dir.clone().setLength(t));\n\n    return inter;\n    /*\n    var normal = intersection.clone();//-ellipsoid.center;\n    normal.x = 2*normal.x/(this.size.x*this.size.x);\n    normal.y = 2*normal.y/(this.size.y*this.size.y);\n    normal.z = 2*normal.z/(this.size.z*this.size.z);\n\n    //normal.w = 0.f;\n    normal *= (back) ? -1.f : 1.f;\n    normalizeVector(normal);\n    */\n};\n\nEllipsoid.prototype.computeDistance = function computeDistance(coordCarto1, coordCarto2) {\n    var longitude1 = THREE.Math.degToRad(coordCarto1.longitude());\n    var latitude1 = THREE.Math.degToRad(coordCarto1.latitude());\n    var longitude2 = THREE.Math.degToRad(coordCarto2.longitude());\n    var latitude2 = THREE.Math.degToRad(coordCarto2.latitude());\n\n    var distRad = Math.acos(Math.sin(latitude1) * Math.sin(latitude2) + Math.cos(latitude1) * Math.cos(latitude2) * Math.cos(longitude2 - longitude1));\n\n    var a = this.rayon_1;\n    var b = this.rayon_3;\n    var e = Math.sqrt((a * a - b * b) / (a * a));\n    var latMoy = (latitude1 + latitude2) / 2;\n    var rho = (a * (1 - e * e)) / Math.sqrt(1 - e * e * Math.sin(latMoy) * Math.sin(latMoy));\n    var N = a / Math.sqrt(1 - e * e * Math.sin(latMoy) * Math.sin(latMoy));\n\n    var distMeter = distRad * Math.sqrt(rho * N);\n    return distMeter;\n};\n\n\nexport default Ellipsoid;\n","import Extent from '../Core/Geographic/Extent';\n\nexport default class InfoLayer {\n    constructor(layer) {\n        this.layer = layer;\n    }\n    // eslint-disable-next-line\n    clear() {}\n    // eslint-disable-next-line\n    update() {}\n}\n\n\n/**\n * InfoTiledGeometryLayer that provides some states layer informations.\n * These informations are displayed tiles, displayed {@link ColorLayer} and {@link ElevationLayer} and\n * extent of displayed tiles;\n * @class InfoTiledGeometryLayer\n * @property {object} displayed\n * @property {Layer[]} displayed.layers Displayed {@link ColorLayer} and {@link ElevationLayer}.\n * @property {Extent} displayed.extent {@link Extent} of displayed tiles.\n * @property {Set} displayed.tiles Set of displayed tiles.\n */\nexport class InfoTiledGeometryLayer extends InfoLayer {\n    constructor(tiledGeometryLayer) {\n        super(tiledGeometryLayer);\n        this.displayed = { tiles: new Set() };\n        Object.defineProperty(\n            this.displayed,\n            'layers',\n            {\n                get: () => {\n                    let layers = [];\n                    this.displayed.tiles.forEach((tile) => {\n                        layers = [...new Set([...layers, ...tile.material.colorLayersId, tile.material.elevationlayerId])];\n                    });\n\n                    return this.layer.attachedLayers.filter(l => layers.indexOf(l.id) >= 0);\n                },\n            });\n        Object.defineProperty(\n            this.displayed,\n            'extent',\n            {\n                get: () => {\n                    const extent = new Extent(this.layer.extent.crs(), Infinity, -Infinity, Infinity, -Infinity);\n                    extent.min = +Infinity;\n                    extent.max = -Infinity;\n                    this.displayed.tiles.forEach((tile) => {\n                        extent.union(tile.extent);\n                        extent.min = Math.min(tile.obb.z.min, extent.min);\n                        extent.max = Math.max(tile.obb.z.max, extent.max);\n                    });\n\n                    return extent;\n                },\n            });\n    }\n\n    clear() {\n        this.displayed.tiles.clear();\n    }\n\n    update(tile) {\n        if (tile.material.visible) {\n            this.displayed.tiles.add(tile);\n        } else {\n            this.displayed.tiles.delete(tile);\n        }\n    }\n}\n","const rePosition = new RegExp('gl_Position.*(?![^]*gl_Position)');\nconst reMain = new RegExp('[^\\\\w]*main[^\\\\w]*(void)?[^\\\\w]*{');\n\nexport default {\n    patchMaterialForLogDepthSupport(material) {\n        // Check if the shader does not already use the log depth buffer\n        if (material.vertexShader.indexOf('USE_LOGDEPTHBUF') !== -1\n            || material.vertexShader.indexOf('logdepthbuf_pars_vertex') !== -1) {\n            return;\n        }\n\n        // Add vertex shader log depth buffer header\n        material.vertexShader = `#include <logdepthbuf_pars_vertex>\\n#define EPSILON 1e-6\\n${material.vertexShader}`;\n        // Add log depth buffer code snippet after last gl_Position modification\n        let re = rePosition.exec(material.vertexShader);\n        let idx = re[0].length + re.index;\n        material.vertexShader = `${material.vertexShader.slice(0, idx)}\\n#include <logdepthbuf_vertex>\\n${material.vertexShader.slice(idx)}`;\n\n        // Add fragment shader log depth buffer header\n        material.fragmentShader = `#include <itowns/precision_qualifier\\n${material.fragmentShader}`;\n        material.fragmentShader = `#include <logdepthbuf_pars_fragment>\\n${material.fragmentShader}`;\n        // Add log depth buffer code snippet at the first line of the main function\n        re = reMain.exec(material.fragmentShader);\n        idx = re[0].length + re.index;\n        material.fragmentShader = `${material.fragmentShader.slice(0, idx)}\\n#include <logdepthbuf_fragment>\\n${material.fragmentShader.slice(idx)}`;\n\n        material.defines = {\n            USE_LOGDEPTHBUF: 1,\n            USE_LOGDEPTHBUF_EXT: 1,\n        };\n    },\n\n    // adapted from unrollLoops in WebGLProgram\n    unrollLoops(string, defines) {\n        // look for a for loop with an unroll_loop pragma\n        // The detection of the scope of the for loop is hacky as it does not support nested scopes\n        var pattern = /#pragma unroll_loop\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*([\\w\\d]+);\\s*i\\s+<\\s+([\\w\\d]+);\\s*i\\s*\\+\\+\\s*\\)\\s*\\{\\n([^}]*)\\}/g;\n        function replace(match, start, end, snippet) {\n            var unroll = '';\n            start = start in defines ? defines[start] : parseInt(start, 10);\n            end = end in defines ? defines[end] : parseInt(end, 10);\n            for (var i = start; i < end; i++) {\n                unroll += snippet.replace(/\\bi\\b/g, ` ${i} `);\n            }\n            return unroll;\n        }\n        return string.replace(pattern, replace);\n    },\n};\n","var getPrototypeOf = require(\"./getPrototypeOf\");\n\nvar superPropBase = require(\"./superPropBase\");\n\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    module.exports = _get = Reflect.get;\n  } else {\n    module.exports = _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nmodule.exports = _get;","import * as THREE from 'three';\n\nconst cache = new Map();\n\nfunction Buffers() {\n    this.index = null;\n    this.position = null;\n    this.normal = null;\n    // 2 UV set per tile: wgs84 and pm\n    //    - wgs84: 1 texture per tile because tiles are using wgs84 projection\n    //    - pm: use multiple textures per tile.\n    //      +-------------------------+\n    //      |                         |\n    //      |     Texture 0           |\n    //      +-------------------------+\n    //      |                         |\n    //      |     Texture 1           |\n    //      +-------------------------+\n    //      |                         |\n    //      |     Texture 2           |\n    //      +-------------------------+\n    //        * u = wgs84.u\n    //        * v = textureid + v in this texture\n    this.uv = {\n        wgs84: null,\n        pm: null,\n    };\n}\n\nfunction TileGeometry(params, builder) {\n    // Constructor\n    THREE.BufferGeometry.call(this);\n\n    this.center = builder.Center(params.extent).clone();\n    this.extent = params.extent;\n\n    const bufferAttribs = this.computeBuffers(params, builder);\n\n    this.setIndex(bufferAttribs.index);\n    this.addAttribute('position', bufferAttribs.position);\n    this.addAttribute('normal', bufferAttribs.normal);\n    this.addAttribute('uv_wgs84', bufferAttribs.uv.wgs84);\n    this.addAttribute('uv_pm', bufferAttribs.uv.pm);\n\n    this.computeBoundingBox();\n    this.OBB = builder.OBB(this.boundingBox);\n}\n\n\nTileGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\n\nTileGeometry.prototype.constructor = TileGeometry;\n\nTileGeometry.prototype.computeBuffers = function computeBuffers(params, builder) {\n    // Create output buffers.\n    const outBuffers = new Buffers();\n\n    const nSeg = params.segment;\n    // segments count :\n    // Tile : (nSeg + 1) * (nSeg + 1)\n    // Skirt : 8 * (nSeg - 1)\n    const nVertex = (nSeg + 1) * (nSeg + 1) + (params.disableSkirt ? 0 : 4 * nSeg);\n    const triangles = (nSeg) * (nSeg) * 2 + (params.disableSkirt ? 0 : 4 * nSeg * 2);\n\n    outBuffers.position = new THREE.BufferAttribute(new Float32Array(nVertex * 3), 3);\n    outBuffers.normal = new THREE.BufferAttribute(new Float32Array(nVertex * 3), 3);\n    outBuffers.uv.pm = new THREE.BufferAttribute(new Float32Array(nVertex), 1);\n\n    // Read previously cached values (index and uv.wgs84 only depend on the # of triangles)\n    const cacheKey = `${builder.type}_${params.disableSkirt ? 0 : 1}_${params.segment}`;\n    const cachedBuffers = cache.get(cacheKey);\n    const mustBuildIndexAndWGS84 = !cachedBuffers;\n    if (cachedBuffers) {\n        outBuffers.index = cachedBuffers.index;\n        outBuffers.uv.wgs84 = cachedBuffers.uvwgs84;\n    } else {\n        outBuffers.index = new THREE.BufferAttribute(\n            new Uint32Array(triangles * 3), 1);\n        outBuffers.uv.wgs84 = new THREE.BufferAttribute(\n            new Float32Array(nVertex * 2), 2);\n\n        // Update cache\n        cache.set(cacheKey, {\n            index: outBuffers.index,\n            uvwgs84: outBuffers.uv.wgs84,\n        });\n    }\n\n    var widthSegments = Math.max(2, Math.floor(nSeg) || 2);\n    var heightSegments = Math.max(2, Math.floor(nSeg) || 2);\n\n    var idVertex = 0;\n    const vertices = [];\n    let skirt = [];\n    const skirtEnd = [];\n\n    builder.Prepare(params);\n\n    var UV_WGS84 = function UV_WGS84() {};\n    var UV_PM = function UV_PM() {};\n\n    // Define UV computation functions if needed\n    if (mustBuildIndexAndWGS84) {\n        UV_WGS84 = function UV_WGS84(out, id, u, v) {\n            out.uv.wgs84.array[id * 2 + 0] = u;\n            out.uv.wgs84.array[id * 2 + 1] = v;\n        };\n    }\n    if (builder.getUV_PM) {\n        UV_PM = function UV_PM(out, id, u) {\n            out.uv.pm.array[id] = u;\n        };\n    }\n\n    for (let y = 0; y <= heightSegments; y++) {\n        var verticesRow = [];\n\n        const v = y / heightSegments;\n\n        builder.vProjecte(v, params);\n\n        var uv_pm = builder.getUV_PM ? builder.getUV_PM(params) : undefined;\n\n        for (let x = 0; x <= widthSegments; x++) {\n            const u = x / widthSegments;\n            const id_m3 = idVertex * 3;\n\n            builder.uProjecte(u, params);\n\n            const vertex = builder.VertexPosition(params, params.projected);\n            const normal = builder.VertexNormal(params);\n\n            // move geometry to center world\n            vertex.sub(this.center);\n\n            // align normal to z axis\n            if (params.quatNormalToZ) {\n                vertex.applyQuaternion(params.quatNormalToZ);\n                normal.applyQuaternion(params.quatNormalToZ);\n            }\n\n            vertex.toArray(outBuffers.position.array, id_m3);\n            normal.toArray(outBuffers.normal.array, id_m3);\n\n            UV_WGS84(outBuffers, idVertex, u, v);\n            UV_PM(outBuffers, idVertex, uv_pm);\n\n            if (!params.disableSkirt) {\n                if (y !== 0 && y !== heightSegments) {\n                    if (x === widthSegments) {\n                        skirt.push(idVertex);\n                    } else if (x === 0) {\n                        skirtEnd.push(idVertex);\n                    }\n                }\n            }\n\n            verticesRow.push(idVertex);\n\n            idVertex++;\n        }\n\n        vertices.push(verticesRow);\n\n        if (y === 0) {\n            skirt = skirt.concat(verticesRow);\n        } else if (y === heightSegments) {\n            skirt = skirt.concat(verticesRow.slice().reverse());\n        }\n    }\n\n    if (!params.disableSkirt) {\n        skirt = skirt.concat(skirtEnd.reverse());\n    }\n\n    function bufferize(va, vb, vc, idVertex) {\n        outBuffers.index.array[idVertex + 0] = va;\n        outBuffers.index.array[idVertex + 1] = vb;\n        outBuffers.index.array[idVertex + 2] = vc;\n        return idVertex + 3;\n    }\n\n    let idVertex2 = 0;\n\n    if (mustBuildIndexAndWGS84) {\n        for (let y = 0; y < heightSegments; y++) {\n            for (let x = 0; x < widthSegments; x++) {\n                const v1 = vertices[y][x + 1];\n                const v2 = vertices[y][x];\n                const v3 = vertices[y + 1][x];\n                const v4 = vertices[y + 1][x + 1];\n\n                idVertex2 = bufferize(v4, v2, v1, idVertex2);\n                idVertex2 = bufferize(v4, v3, v2, idVertex2);\n            }\n        }\n    }\n\n    const iStart = idVertex;\n\n    // TODO: WARNING beware skirt's size influences performance\n    // The size of the skirt is now a ratio of the size of the tile.\n    // To be perfect it should depend on the real elevation delta but too heavy to compute\n    if (!params.disableSkirt) {\n        // We compute the actual size of tile segment to use later for the skirt.\n        const segmentSize = new THREE.Vector3().fromArray(outBuffers.position.array).distanceTo(\n            new THREE.Vector3().fromArray(outBuffers.position.array, 3));\n\n        var buildIndexSkirt = function buildIndexSkirt() {};\n        var buildUVSkirt = function buildUVSkirt() {};\n\n        if (mustBuildIndexAndWGS84) {\n            buildIndexSkirt = function buildIndexSkirt(id, v1, v2, v3, v4) {\n                id = bufferize(v1, v2, v3, id);\n                id = bufferize(v1, v3, v4, id);\n                return id;\n            };\n\n            buildUVSkirt = function buildUVSkirt(id) {\n                outBuffers.uv.wgs84.array[idVertex * 2 + 0] = outBuffers.uv.wgs84.array[id * 2 + 0];\n                outBuffers.uv.wgs84.array[idVertex * 2 + 1] = outBuffers.uv.wgs84.array[id * 2 + 1];\n            };\n        }\n\n        for (let i = 0; i < skirt.length; i++) {\n            const id = skirt[i];\n            const id_m3 = idVertex * 3;\n            const id2_m3 = id * 3;\n\n            outBuffers.position.array[id_m3 + 0] = outBuffers.position.array[id2_m3 + 0]\n                - outBuffers.normal.array[id2_m3 + 0] * segmentSize;\n            outBuffers.position.array[id_m3 + 1] = outBuffers.position.array[id2_m3 + 1]\n                - outBuffers.normal.array[id2_m3 + 1] * segmentSize;\n            outBuffers.position.array[id_m3 + 2] = outBuffers.position.array[id2_m3 + 2]\n                - outBuffers.normal.array[id2_m3 + 2] * segmentSize;\n\n            outBuffers.normal.array[id_m3 + 0] = outBuffers.normal.array[id2_m3 + 0];\n            outBuffers.normal.array[id_m3 + 1] = outBuffers.normal.array[id2_m3 + 1];\n            outBuffers.normal.array[id_m3 + 2] = outBuffers.normal.array[id2_m3 + 2];\n\n            buildUVSkirt(id);\n\n            outBuffers.uv.pm.array[idVertex] = outBuffers.uv.pm.array[id];\n\n            const idf = (i + 1) % skirt.length;\n\n            const v1 = id;\n            const v2 = idVertex;\n            const v3 = (idf === 0) ? iStart : idVertex + 1;\n            const v4 = skirt[idf];\n\n            idVertex2 = buildIndexSkirt(idVertex2, v1, v2, v3, v4);\n\n            idVertex++;\n        }\n    }\n\n    return outBuffers;\n};\n\nexport default TileGeometry;\n","/*\n * To change this license header, choose License Headers in Project Properties.\n * To change this template file, choose Tools | Templates\n * and open the template in the editor.\n */\nimport * as THREE from 'three';\nimport TileGeometry from '../Core/TileGeometry';\nimport TileMesh from '../Core/TileMesh';\nimport LayeredMaterial from '../Renderer/LayeredMaterial';\nimport Cache from '../Core/Scheduler/Cache';\n\nexport default {\n    convert(requester, extent, layer) {\n        const builder = layer.builder;\n        const parent = requester;\n        const level = (parent !== undefined) ? (parent.level + 1) : 0;\n\n        const { sharableExtent, quaternion, position } = builder.computeSharableExtent(extent);\n        const south = sharableExtent.south().toFixed(6);\n        const segment = layer.options.segments || 16;\n        const key = `${builder.type}_${layer.disableSkirt ? 0 : 1}_${segment}_${level}_${south}`;\n\n        let geometry = Cache.get(key);\n        // build geometry if doesn't exist\n        if (!geometry) {\n            const paramsGeometry = {\n                extent: sharableExtent,\n                level,\n                segment,\n                disableSkirt: layer.disableSkirt,\n            };\n\n            geometry = new TileGeometry(paramsGeometry, builder);\n            Cache.set(key, geometry);\n\n            geometry._count = 0;\n            geometry.dispose = () => {\n                geometry._count--;\n                if (geometry._count == 0) {\n                    THREE.BufferGeometry.prototype.dispose.call(geometry);\n                    Cache.delete(key);\n                }\n            };\n        }\n\n        // build tile\n        geometry._count++;\n        const material = new LayeredMaterial(layer.materialOptions);\n        const tile = new TileMesh(layer, geometry, material, extent, level);\n        // TODO semble ne pas etre necessaire\n        tile.layers.set(layer.threejsLayer);\n\n        if (parent && parent instanceof TileMesh) {\n            // get parent extent transformation\n            const pTrans = builder.computeSharableExtent(parent.extent);\n            // place relative to his parent\n            position.sub(pTrans.position).applyQuaternion(pTrans.quaternion.inverse());\n            quaternion.premultiply(pTrans.quaternion);\n        }\n\n        tile.position.copy(position);\n        tile.quaternion.copy(quaternion);\n\n        tile.material.transparent = layer.opacity < 1.0;\n        tile.material.uniforms.opacity.value = layer.opacity;\n        tile.setVisibility(false);\n        tile.updateMatrix();\n\n        if (parent) {\n            tile.setBBoxZ(parent.obb.z.min, parent.obb.z.max);\n        } else if (layer.materialOptions && layer.materialOptions.useColorTextureElevation) {\n            tile.setBBoxZ(layer.materialOptions.colorTextureElevationMinZ, layer.materialOptions.colorTextureElevationMaxZ);\n        }\n\n        tile.add(tile.obb);\n\n        tile.material.setLightingOn(layer.lighting.enable);\n        tile.material.uniforms.lightPosition.value = layer.lighting.position;\n\n        if (layer.noTextureColor) {\n            tile.material.uniforms.noTextureColor.value.copy(layer.noTextureColor);\n        }\n\n        if (__DEBUG__) {\n            tile.material.uniforms.showOutline = { value: layer.showOutline || false };\n            tile.material.wireframe = layer.wireframe || false;\n        }\n\n        return Promise.resolve(tile);\n    },\n};\n","import GeometryLayer from './GeometryLayer';\nimport { InfoTiledGeometryLayer } from './InfoLayer';\nimport Picking from '../Core/Picking';\nimport convertToTile from '../Parser/convertToTile';\nimport CancelledCommandException from '../Core/Scheduler/CancelledCommandException';\nimport ObjectRemovalHelper from '../Process/ObjectRemovalHelper';\n\n\nclass TiledGeometryLayer extends GeometryLayer {\n    /**\n     * A layer extending the {@link GeometryLayer}, but with a tiling notion.\n     *\n     * @constructor\n     * @extends GeometryLayer\n     * @property {InfoTiledGeometryLayer} info Statut information of layer\n     *\n     * @param {string} id - The id of the layer, that should be unique. It is\n     * not mandatory, but an error will be emitted if this layer is added a\n     * {@link View} that already has a layer going by that id.\n     * @param {THREE.Object3d} object3d - The object3d used to contain the\n     * geometry of the TiledGeometryLayer. It is usually a\n     * <code>THREE.Group</code>, but it can be anything inheriting from a\n     * <code>THREE.Object3d</code>.\n     * @param {Array} schemeTile - extents Array of root tiles\n     * @param {Object} builder - builder geometry object\n     * @param {Object} [config] - Optional configuration, all elements in it\n     * will be merged as is in the layer. For example, if the configuration\n     * contains three elements <code>name, protocol, extent</code>, these\n     * elements will be available using <code>layer.name</code> or something\n     * else depending on the property name.\n     *\n     * @throws {Error} <code>object3d</code> must be a valid\n     * <code>THREE.Object3d</code>.\n     */\n    constructor(id, object3d, schemeTile, builder, config) {\n        super(id, object3d, config);\n\n        this.protocol = 'tile';\n        this.lighting = {\n            enable: false,\n            position: { x: -0.5, y: 0.0, z: 1.0 },\n        };\n\n        this.schemeTile = schemeTile;\n        this.builder = builder;\n        this.info = new InfoTiledGeometryLayer(this);\n\n        if (!this.schemeTile) {\n            throw new Error(`Cannot init tiled layer without schemeTile for layer ${this.id}`);\n        }\n\n        if (!this.builder) {\n            throw new Error(`Cannot init tiled layer without builder for layer ${this.id}`);\n        }\n\n        this.level0Nodes = [];\n        const promises = [];\n\n        for (const root of this.schemeTile) {\n            promises.push(this.convert(undefined, root));\n        }\n        Promise.all(promises).then((level0s) => {\n            this.level0Nodes = level0s;\n            for (const level0 of level0s) {\n                this.object3d.add(level0);\n                level0.updateMatrixWorld();\n            }\n        });\n    }\n\n    /**\n     * Picking method for this layer. It uses the {@link Picking#pickTilesAt}\n     * method.\n     *\n     * @param {View} view - The view instance.\n     * @param {Object} coordinates - The coordinates to pick in the view. It\n     * should have at least <code>x</code> and <code>y</code> properties.\n     * @param {number} radius - Radius of the picking circle.\n     *\n     * @return {Array} An array containing all targets picked under the\n     * specified coordinates.\n     */\n    pickObjectsAt(view, coordinates, radius = this.options.defaultPickingRadius) {\n        return Picking.pickTilesAt(view, coordinates, radius, this);\n    }\n\n    /**\n     * Does pre-update work on the context:\n     * <ul>\n     *  <li>update the <code>colorLayers</code> and\n     *  <code>elevationLayers</code></li>\n     *  <li>update the <code>maxElevationLevel</code></li>\n     * </ul>\n     *\n     * Once this work is done, it returns a list of nodes to update. Depending\n     * on the origin of <code>sources</code>, it can return a few things:\n     * <ul>\n     *  <li>if <code>sources</code> is empty, it returns the first node of the\n     *  layer (stored as <code>level0Nodes</code>), which will trigger the\n     *  update of the whole tree</li>\n     *  <li>if the update is triggered by a camera move, the whole tree is\n     *  returned too</li>\n     *  <li>if <code>source.layer</code> is this layer, it means that\n     *  <code>source</code> is a node; a common ancestor will be found if there\n     *  are multiple sources, with the default common ancestor being the first\n     *  source itself</li>\n     *  <li>else it returns the whole tree</li>\n     * </ul>\n     *\n     * @param {Object} context - The context of the update; see the {@link\n     * MainLoop} for more informations.\n     * @param {Set<GeometryLayer|TileMesh>} sources - A list of sources to\n     * generate a list of nodes to update.\n     *\n     * @return {TileMesh[]} The array of nodes to update.\n     */\n    preUpdate(context, sources) {\n        if (sources.has(undefined) || sources.size == 0) {\n            return this.level0Nodes;\n        }\n\n        if (__DEBUG__) {\n            this._latestUpdateStartingLevel = 0;\n        }\n\n        context.colorLayers = context.view.getLayers(\n            (l, a) => a && a.id == this.id && l.type == 'color');\n        context.elevationLayers = context.view.getLayers(\n            (l, a) => a && a.id == this.id && l.type == 'elevation');\n\n        context.maxElevationLevel = -1;\n        for (const e of context.elevationLayers) {\n            context.maxElevationLevel = Math.max(e.source.zoom.max, context.maxElevationLevel);\n        }\n        if (context.maxElevationLevel == -1) {\n            context.maxElevationLevel = Infinity;\n        }\n\n        let commonAncestor;\n        for (const source of sources.values()) {\n            if (source.isCamera) {\n                // if the change is caused by a camera move, no need to bother\n                // to find common ancestor: we need to update the whole tree:\n                // some invisible tiles may now be visible\n                return this.level0Nodes;\n            }\n            if (source.layer === this) {\n                if (!commonAncestor) {\n                    commonAncestor = source;\n                } else {\n                    commonAncestor = source.findCommonAncestor(commonAncestor);\n                    if (!commonAncestor) {\n                        return this.level0Nodes;\n                    }\n                }\n                if (commonAncestor.material == null) {\n                    commonAncestor = undefined;\n                }\n            }\n        }\n        if (commonAncestor) {\n            if (__DEBUG__) {\n                this._latestUpdateStartingLevel = commonAncestor.level;\n            }\n            return [commonAncestor];\n        } else {\n            return this.level0Nodes;\n        }\n    }\n\n    /**\n     * Update a node of this layer. The node will not be updated if:\n     * <ul>\n     *  <li>it does not have a parent, then it is removed</li>\n     *  <li>its parent is being subdivided</li>\n     *  <li>is not visible in the camera</li>\n     * </ul>\n     *\n     * @param {Object} context - The context of the update; see the {@link\n     * MainLoop} for more informations.\n     * @param {Layer} layer - Parameter to be removed once all update methods\n     * have been aligned.\n     * @param {TileMesh} node - The node to update.\n     *\n     * @returns {Object}\n     */\n    update(context, layer, node) {\n        if (!node.parent) {\n            return ObjectRemovalHelper.removeChildrenAndCleanup(this, node);\n        }\n        // early exit if parent' subdivision is in progress\n        if (node.parent.pendingSubdivision) {\n            node.visible = false;\n            node.setDisplayed(false);\n            return undefined;\n        }\n\n        // do proper culling\n        node.visible = !this.culling(node, context.camera);\n\n        if (node.visible) {\n            let requestChildrenUpdate = false;\n\n            if (node.pendingSubdivision || (TiledGeometryLayer.hasEnoughTexturesToSubdivide(context, node) && this.subdivision(context, this, node))) {\n                this.subdivideNode(context, node);\n                // display iff children aren't ready\n                node.setDisplayed(node.pendingSubdivision);\n                requestChildrenUpdate = true;\n            } else {\n                node.setDisplayed(true);\n            }\n\n            if (node.material.visible) {\n                // update uniforms\n                if (context.view.fogDistance != undefined) {\n                    node.setFog(context.view.fogDistance);\n                }\n\n                if (!requestChildrenUpdate) {\n                    return ObjectRemovalHelper.removeChildren(this, node);\n                }\n            }\n\n            return requestChildrenUpdate ? node.children.filter(n => n.layer == this) : undefined;\n        }\n\n        node.setDisplayed(false);\n        return ObjectRemovalHelper.removeChildren(this, node);\n    }\n\n    convert(requester, extent) {\n        return convertToTile.convert(requester, extent, this);\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    countColorLayersTextures(...layers) {\n        return layers.length;\n    }\n\n    /**\n     * Tell if a node has enough elevation or color textures to subdivide.\n     * Subdivision is prevented if:\n     * <ul>\n     *  <li>the node is covered by at least one elevation layer and if the node\n     *  doesn't have an elevation texture yet</li>\n     *  <li>a color texture is missing</li>\n     * </ul>\n     *\n     * @param {Object} context - The context of the update; see the {@link\n     * MainLoop} for more informations.\n     * @param {TileMesh} node - The node to subdivide.\n     *\n     * @returns {boolean} False if the node can not be subdivided, true\n     * otherwise.\n     */\n    static hasEnoughTexturesToSubdivide(context, node) {\n        for (const e of context.elevationLayers) {\n            const extents = node.getCoordsForSource(e.source);\n            if (!e.frozen && e.ready && e.source.extentsInsideLimit(extents) && !node.material.isElevationLayerLoaded()) {\n                // no stop subdivision in the case of a loading error\n                if (node.layerUpdateState[e.id] && node.layerUpdateState[e.id].inError()) {\n                    continue;\n                }\n                return false;\n            }\n        }\n\n        for (const c of context.colorLayers) {\n            if (c.frozen || !c.visible || !c.ready) {\n                continue;\n            }\n            // no stop subdivision in the case of a loading error\n            if (node.layerUpdateState[c.id] && node.layerUpdateState[c.id].inError()) {\n                continue;\n            }\n            const extents = node.getCoordsForSource(c.source);\n            if (c.source.extentsInsideLimit(extents) && !node.material.isColorLayerLoaded(c)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Subdivides a node of this layer. If the node is currently in the process\n     * of subdivision, it will not do anything here. The subdivision of a node\n     * will occur in four part, to create a quadtree. The extent of the node\n     * will be divided in four parts: north-west, north-east, south-west and\n     * south-east. Once all four nodes are created, they will be added to the\n     * current node and the view of the context will be notified of this change.\n     *\n     * @param {Object} context - The context of the update; see the {@link\n     * MainLoop} for more informations.\n     * @param {TileMesh} node - The node to subdivide.\n     */\n    subdivideNode(context, node) {\n        if (!node.pendingSubdivision && !node.children.some(n => n.layer == this)) {\n            const extents = node.extent.subdivision();\n            // TODO: pendingSubdivision mechanism is fragile, get rid of it\n            node.pendingSubdivision = true;\n\n            const command = {\n                /* mandatory */\n                view: context.view,\n                requester: node,\n                layer: this,\n                priority: 10000,\n                /* specific params */\n                extentsSource: extents,\n                redraw: false,\n            };\n\n            context.scheduler.execute(command).then((children) => {\n                for (const child of children) {\n                    node.add(child);\n                    child.updateMatrixWorld(true);\n                }\n\n                node.pendingSubdivision = false;\n                context.view.notifyChange(node, false);\n            }, (err) => {\n                node.pendingSubdivision = false;\n                if (!(err instanceof CancelledCommandException)) {\n                    throw new Error(err);\n                }\n            });\n        }\n    }\n}\n\nexport default TiledGeometryLayer;\n","const UPDATE_STATE = {\n    IDLE: 0,\n    PENDING: 1,\n    ERROR: 2,\n    DEFINITIVE_ERROR: 3,\n    FINISHED: 4,\n};\nconst PAUSE_BETWEEN_ERRORS = [1.0, 3.0, 7.0, 60.0];\n\n/**\n * LayerUpdateState is the update state of a layer, for a given object (e.g tile).\n * It stores information to allow smart update decisions, and especially network\n * error handling.\n * @constructor\n */\nfunction LayerUpdateState() {\n    this.state = UPDATE_STATE.IDLE;\n    this.lastErrorTimestamp = 0;\n    this.errorCount = 0;\n}\n\nLayerUpdateState.prototype.canTryUpdate = function canTryUpdate(timestamp) {\n    switch (this.state) {\n        case UPDATE_STATE.IDLE: {\n            return true;\n        }\n        case UPDATE_STATE.DEFINITIVE_ERROR:\n        case UPDATE_STATE.PENDING:\n        case UPDATE_STATE.FINISHED: {\n            return false;\n        }\n        case UPDATE_STATE.ERROR:\n        default: {\n            const errorDuration = this.secondsUntilNextTry() * 1000;\n            return errorDuration <= (timestamp - this.lastErrorTimestamp);\n        }\n    }\n};\n\nLayerUpdateState.prototype.secondsUntilNextTry = function secondsUntilNextTry() {\n    if (this.state !== UPDATE_STATE.ERROR) {\n        return 0;\n    }\n    const idx =\n        Math.max(0, Math.min(this.errorCount, PAUSE_BETWEEN_ERRORS.length) - 1);\n\n    return PAUSE_BETWEEN_ERRORS[idx];\n};\n\nLayerUpdateState.prototype.newTry = function newTry() {\n    this.state = UPDATE_STATE.PENDING;\n};\n\nLayerUpdateState.prototype.success = function success() {\n    this.failureParams = undefined;\n    this.lastErrorTimestamp = 0;\n    this.state = UPDATE_STATE.IDLE;\n};\n\nLayerUpdateState.prototype.noMoreUpdatePossible = function noMoreUpdatePossible() {\n    this.failureParams = undefined;\n    this.state = UPDATE_STATE.FINISHED;\n};\n\nLayerUpdateState.prototype.failure = function failure(timestamp, definitive, failureParams) {\n    this.failureParams = failureParams;\n    this.lastErrorTimestamp = timestamp;\n    this.state = definitive ? UPDATE_STATE.DEFINITIVE_ERROR : UPDATE_STATE.ERROR;\n    this.errorCount++;\n};\n\nLayerUpdateState.prototype.inError = function inError() {\n    return this.state == UPDATE_STATE.DEFINITIVE_ERROR || this.state == UPDATE_STATE.ERROR;\n};\n\nexport default LayerUpdateState;\n","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","var META = require('./_uid')('meta');\nvar isObject = require('./_is-object');\nvar has = require('./_has');\nvar setDesc = require('./_object-dp').f;\nvar id = 0;\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\nvar FREEZE = !require('./_fails')(function () {\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function (it) {\n  setDesc(it, META, { value: {\n    i: 'O' + ++id, // object ID\n    w: {}          // weak collections IDs\n  } });\n};\nvar fastKey = function (it, create) {\n  // return primitive with prefix\n  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return 'F';\n    // not necessary to add metadata\n    if (!create) return 'E';\n    // add missing metadata\n    setMeta(it);\n  // return object ID\n  } return it[META].i;\n};\nvar getWeak = function (it, create) {\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return true;\n    // not necessary to add metadata\n    if (!create) return false;\n    // add missing metadata\n    setMeta(it);\n  // return hash weak collections IDs\n  } return it[META].w;\n};\n// add metadata on freeze-family methods calling\nvar onFreeze = function (it) {\n  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY: META,\n  NEED: false,\n  fastKey: fastKey,\n  getWeak: getWeak,\n  onFreeze: onFreeze\n};\n","/**\n * Tween.js - Licensed under the MIT license\n * https://github.com/tweenjs/tween.js\n * ----------------------------------------------\n *\n * See https://github.com/tweenjs/tween.js/graphs/contributors for the full list of contributors.\n * Thank you all, you're awesome!\n */\n\n\nvar _Group = function () {\n\tthis._tweens = {};\n\tthis._tweensAddedDuringUpdate = {};\n};\n\n_Group.prototype = {\n\tgetAll: function () {\n\n\t\treturn Object.keys(this._tweens).map(function (tweenId) {\n\t\t\treturn this._tweens[tweenId];\n\t\t}.bind(this));\n\n\t},\n\n\tremoveAll: function () {\n\n\t\tthis._tweens = {};\n\n\t},\n\n\tadd: function (tween) {\n\n\t\tthis._tweens[tween.getId()] = tween;\n\t\tthis._tweensAddedDuringUpdate[tween.getId()] = tween;\n\n\t},\n\n\tremove: function (tween) {\n\n\t\tdelete this._tweens[tween.getId()];\n\t\tdelete this._tweensAddedDuringUpdate[tween.getId()];\n\n\t},\n\n\tupdate: function (time, preserve) {\n\n\t\tvar tweenIds = Object.keys(this._tweens);\n\n\t\tif (tweenIds.length === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\ttime = time !== undefined ? time : TWEEN.now();\n\n\t\t// Tweens are updated in \"batches\". If you add a new tween during an update, then the\n\t\t// new tween will be updated in the next batch.\n\t\t// If you remove a tween during an update, it may or may not be updated. However,\n\t\t// if the removed tween was added during the current batch, then it will not be updated.\n\t\twhile (tweenIds.length > 0) {\n\t\t\tthis._tweensAddedDuringUpdate = {};\n\n\t\t\tfor (var i = 0; i < tweenIds.length; i++) {\n\n\t\t\t\tvar tween = this._tweens[tweenIds[i]];\n\n\t\t\t\tif (tween && tween.update(time) === false) {\n\t\t\t\t\ttween._isPlaying = false;\n\n\t\t\t\t\tif (!preserve) {\n\t\t\t\t\t\tdelete this._tweens[tweenIds[i]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttweenIds = Object.keys(this._tweensAddedDuringUpdate);\n\t\t}\n\n\t\treturn true;\n\n\t}\n};\n\nvar TWEEN = new _Group();\n\nTWEEN.Group = _Group;\nTWEEN._nextId = 0;\nTWEEN.nextId = function () {\n\treturn TWEEN._nextId++;\n};\n\n\n// Include a performance.now polyfill.\n// In node.js, use process.hrtime.\nif (typeof (window) === 'undefined' && typeof (process) !== 'undefined') {\n\tTWEEN.now = function () {\n\t\tvar time = process.hrtime();\n\n\t\t// Convert [seconds, nanoseconds] to milliseconds.\n\t\treturn time[0] * 1000 + time[1] / 1000000;\n\t};\n}\n// In a browser, use window.performance.now if it is available.\nelse if (typeof (window) !== 'undefined' &&\n         window.performance !== undefined &&\n\t\t window.performance.now !== undefined) {\n\t// This must be bound, because directly assigning this function\n\t// leads to an invocation exception in Chrome.\n\tTWEEN.now = window.performance.now.bind(window.performance);\n}\n// Use Date.now if it is available.\nelse if (Date.now !== undefined) {\n\tTWEEN.now = Date.now;\n}\n// Otherwise, use 'new Date().getTime()'.\nelse {\n\tTWEEN.now = function () {\n\t\treturn new Date().getTime();\n\t};\n}\n\n\nTWEEN.Tween = function (object, group) {\n\tthis._object = object;\n\tthis._valuesStart = {};\n\tthis._valuesEnd = {};\n\tthis._valuesStartRepeat = {};\n\tthis._duration = 1000;\n\tthis._repeat = 0;\n\tthis._repeatDelayTime = undefined;\n\tthis._yoyo = false;\n\tthis._isPlaying = false;\n\tthis._reversed = false;\n\tthis._delayTime = 0;\n\tthis._startTime = null;\n\tthis._easingFunction = TWEEN.Easing.Linear.None;\n\tthis._interpolationFunction = TWEEN.Interpolation.Linear;\n\tthis._chainedTweens = [];\n\tthis._onStartCallback = null;\n\tthis._onStartCallbackFired = false;\n\tthis._onUpdateCallback = null;\n\tthis._onCompleteCallback = null;\n\tthis._onStopCallback = null;\n\tthis._group = group || TWEEN;\n\tthis._id = TWEEN.nextId();\n\n};\n\nTWEEN.Tween.prototype = {\n\tgetId: function getId() {\n\t\treturn this._id;\n\t},\n\n\tisPlaying: function isPlaying() {\n\t\treturn this._isPlaying;\n\t},\n\n\tto: function to(properties, duration) {\n\n\t\tthis._valuesEnd = properties;\n\n\t\tif (duration !== undefined) {\n\t\t\tthis._duration = duration;\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tstart: function start(time) {\n\n\t\tthis._group.add(this);\n\n\t\tthis._isPlaying = true;\n\n\t\tthis._onStartCallbackFired = false;\n\n\t\tthis._startTime = time !== undefined ? typeof time === 'string' ? TWEEN.now() + parseFloat(time) : time : TWEEN.now();\n\t\tthis._startTime += this._delayTime;\n\n\t\tfor (var property in this._valuesEnd) {\n\n\t\t\t// Check if an Array was provided as property value\n\t\t\tif (this._valuesEnd[property] instanceof Array) {\n\n\t\t\t\tif (this._valuesEnd[property].length === 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Create a local copy of the Array with the start value at the front\n\t\t\t\tthis._valuesEnd[property] = [this._object[property]].concat(this._valuesEnd[property]);\n\n\t\t\t}\n\n\t\t\t// If `to()` specifies a property that doesn't exist in the source object,\n\t\t\t// we should not set that property in the object\n\t\t\tif (this._object[property] === undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Save the starting value.\n\t\t\tthis._valuesStart[property] = this._object[property];\n\n\t\t\tif ((this._valuesStart[property] instanceof Array) === false) {\n\t\t\t\tthis._valuesStart[property] *= 1.0; // Ensures we're using numbers, not strings\n\t\t\t}\n\n\t\t\tthis._valuesStartRepeat[property] = this._valuesStart[property] || 0;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tstop: function stop() {\n\n\t\tif (!this._isPlaying) {\n\t\t\treturn this;\n\t\t}\n\n\t\tthis._group.remove(this);\n\t\tthis._isPlaying = false;\n\n\t\tif (this._onStopCallback !== null) {\n\t\t\tthis._onStopCallback(this._object);\n\t\t}\n\n\t\tthis.stopChainedTweens();\n\t\treturn this;\n\n\t},\n\n\tend: function end() {\n\n\t\tthis.update(this._startTime + this._duration);\n\t\treturn this;\n\n\t},\n\n\tstopChainedTweens: function stopChainedTweens() {\n\n\t\tfor (var i = 0, numChainedTweens = this._chainedTweens.length; i < numChainedTweens; i++) {\n\t\t\tthis._chainedTweens[i].stop();\n\t\t}\n\n\t},\n\n\tgroup: function group(group) {\n\t\tthis._group = group;\n\t\treturn this;\n\t},\n\n\tdelay: function delay(amount) {\n\n\t\tthis._delayTime = amount;\n\t\treturn this;\n\n\t},\n\n\trepeat: function repeat(times) {\n\n\t\tthis._repeat = times;\n\t\treturn this;\n\n\t},\n\n\trepeatDelay: function repeatDelay(amount) {\n\n\t\tthis._repeatDelayTime = amount;\n\t\treturn this;\n\n\t},\n\n\tyoyo: function yoyo(yy) {\n\n\t\tthis._yoyo = yy;\n\t\treturn this;\n\n\t},\n\n\teasing: function easing(eas) {\n\n\t\tthis._easingFunction = eas;\n\t\treturn this;\n\n\t},\n\n\tinterpolation: function interpolation(inter) {\n\n\t\tthis._interpolationFunction = inter;\n\t\treturn this;\n\n\t},\n\n\tchain: function chain() {\n\n\t\tthis._chainedTweens = arguments;\n\t\treturn this;\n\n\t},\n\n\tonStart: function onStart(callback) {\n\n\t\tthis._onStartCallback = callback;\n\t\treturn this;\n\n\t},\n\n\tonUpdate: function onUpdate(callback) {\n\n\t\tthis._onUpdateCallback = callback;\n\t\treturn this;\n\n\t},\n\n\tonComplete: function onComplete(callback) {\n\n\t\tthis._onCompleteCallback = callback;\n\t\treturn this;\n\n\t},\n\n\tonStop: function onStop(callback) {\n\n\t\tthis._onStopCallback = callback;\n\t\treturn this;\n\n\t},\n\n\tupdate: function update(time) {\n\n\t\tvar property;\n\t\tvar elapsed;\n\t\tvar value;\n\n\t\tif (time < this._startTime) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (this._onStartCallbackFired === false) {\n\n\t\t\tif (this._onStartCallback !== null) {\n\t\t\t\tthis._onStartCallback(this._object);\n\t\t\t}\n\n\t\t\tthis._onStartCallbackFired = true;\n\t\t}\n\n\t\telapsed = (time - this._startTime) / this._duration;\n\t\telapsed = (this._duration === 0 || elapsed > 1) ? 1 : elapsed;\n\n\t\tvalue = this._easingFunction(elapsed);\n\n\t\tfor (property in this._valuesEnd) {\n\n\t\t\t// Don't update properties that do not exist in the source object\n\t\t\tif (this._valuesStart[property] === undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar start = this._valuesStart[property] || 0;\n\t\t\tvar end = this._valuesEnd[property];\n\n\t\t\tif (end instanceof Array) {\n\n\t\t\t\tthis._object[property] = this._interpolationFunction(end, value);\n\n\t\t\t} else {\n\n\t\t\t\t// Parses relative end values with start as base (e.g.: +10, -3)\n\t\t\t\tif (typeof (end) === 'string') {\n\n\t\t\t\t\tif (end.charAt(0) === '+' || end.charAt(0) === '-') {\n\t\t\t\t\t\tend = start + parseFloat(end);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tend = parseFloat(end);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Protect against non numeric properties.\n\t\t\t\tif (typeof (end) === 'number') {\n\t\t\t\t\tthis._object[property] = start + (end - start) * value;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif (this._onUpdateCallback !== null) {\n\t\t\tthis._onUpdateCallback(this._object);\n\t\t}\n\n\t\tif (elapsed === 1) {\n\n\t\t\tif (this._repeat > 0) {\n\n\t\t\t\tif (isFinite(this._repeat)) {\n\t\t\t\t\tthis._repeat--;\n\t\t\t\t}\n\n\t\t\t\t// Reassign starting values, restart by making startTime = now\n\t\t\t\tfor (property in this._valuesStartRepeat) {\n\n\t\t\t\t\tif (typeof (this._valuesEnd[property]) === 'string') {\n\t\t\t\t\t\tthis._valuesStartRepeat[property] = this._valuesStartRepeat[property] + parseFloat(this._valuesEnd[property]);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this._yoyo) {\n\t\t\t\t\t\tvar tmp = this._valuesStartRepeat[property];\n\n\t\t\t\t\t\tthis._valuesStartRepeat[property] = this._valuesEnd[property];\n\t\t\t\t\t\tthis._valuesEnd[property] = tmp;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._valuesStart[property] = this._valuesStartRepeat[property];\n\n\t\t\t\t}\n\n\t\t\t\tif (this._yoyo) {\n\t\t\t\t\tthis._reversed = !this._reversed;\n\t\t\t\t}\n\n\t\t\t\tif (this._repeatDelayTime !== undefined) {\n\t\t\t\t\tthis._startTime = time + this._repeatDelayTime;\n\t\t\t\t} else {\n\t\t\t\t\tthis._startTime = time + this._delayTime;\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\n\t\t\t} else {\n\n\t\t\t\tif (this._onCompleteCallback !== null) {\n\n\t\t\t\t\tthis._onCompleteCallback(this._object);\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0, numChainedTweens = this._chainedTweens.length; i < numChainedTweens; i++) {\n\t\t\t\t\t// Make the chained tweens start exactly at the time they should,\n\t\t\t\t\t// even if the `update()` method was called way past the duration of the tween\n\t\t\t\t\tthis._chainedTweens[i].start(this._startTime + this._duration);\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n};\n\n\nTWEEN.Easing = {\n\n\tLinear: {\n\n\t\tNone: function (k) {\n\n\t\t\treturn k;\n\n\t\t}\n\n\t},\n\n\tQuadratic: {\n\n\t\tIn: function (k) {\n\n\t\t\treturn k * k;\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\treturn k * (2 - k);\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * k * k;\n\t\t\t}\n\n\t\t\treturn - 0.5 * (--k * (k - 2) - 1);\n\n\t\t}\n\n\t},\n\n\tCubic: {\n\n\t\tIn: function (k) {\n\n\t\t\treturn k * k * k;\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\treturn --k * k * k + 1;\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * k * k * k;\n\t\t\t}\n\n\t\t\treturn 0.5 * ((k -= 2) * k * k + 2);\n\n\t\t}\n\n\t},\n\n\tQuartic: {\n\n\t\tIn: function (k) {\n\n\t\t\treturn k * k * k * k;\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\treturn 1 - (--k * k * k * k);\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * k * k * k * k;\n\t\t\t}\n\n\t\t\treturn - 0.5 * ((k -= 2) * k * k * k - 2);\n\n\t\t}\n\n\t},\n\n\tQuintic: {\n\n\t\tIn: function (k) {\n\n\t\t\treturn k * k * k * k * k;\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\treturn --k * k * k * k * k + 1;\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * k * k * k * k * k;\n\t\t\t}\n\n\t\t\treturn 0.5 * ((k -= 2) * k * k * k * k + 2);\n\n\t\t}\n\n\t},\n\n\tSinusoidal: {\n\n\t\tIn: function (k) {\n\n\t\t\treturn 1 - Math.cos(k * Math.PI / 2);\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\treturn Math.sin(k * Math.PI / 2);\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\treturn 0.5 * (1 - Math.cos(Math.PI * k));\n\n\t\t}\n\n\t},\n\n\tExponential: {\n\n\t\tIn: function (k) {\n\n\t\t\treturn k === 0 ? 0 : Math.pow(1024, k - 1);\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\treturn k === 1 ? 1 : 1 - Math.pow(2, - 10 * k);\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tif (k === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (k === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * Math.pow(1024, k - 1);\n\t\t\t}\n\n\t\t\treturn 0.5 * (- Math.pow(2, - 10 * (k - 1)) + 2);\n\n\t\t}\n\n\t},\n\n\tCircular: {\n\n\t\tIn: function (k) {\n\n\t\t\treturn 1 - Math.sqrt(1 - k * k);\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\treturn Math.sqrt(1 - (--k * k));\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn - 0.5 * (Math.sqrt(1 - k * k) - 1);\n\t\t\t}\n\n\t\t\treturn 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n\n\t\t}\n\n\t},\n\n\tElastic: {\n\n\t\tIn: function (k) {\n\n\t\t\tif (k === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (k === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\treturn -Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\tif (k === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (k === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\treturn Math.pow(2, -10 * k) * Math.sin((k - 0.1) * 5 * Math.PI) + 1;\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tif (k === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (k === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tk *= 2;\n\n\t\t\tif (k < 1) {\n\t\t\t\treturn -0.5 * Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n\t\t\t}\n\n\t\t\treturn 0.5 * Math.pow(2, -10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI) + 1;\n\n\t\t}\n\n\t},\n\n\tBack: {\n\n\t\tIn: function (k) {\n\n\t\t\tvar s = 1.70158;\n\n\t\t\treturn k * k * ((s + 1) * k - s);\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\tvar s = 1.70158;\n\n\t\t\treturn --k * k * ((s + 1) * k + s) + 1;\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tvar s = 1.70158 * 1.525;\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * (k * k * ((s + 1) * k - s));\n\t\t\t}\n\n\t\t\treturn 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n\n\t\t}\n\n\t},\n\n\tBounce: {\n\n\t\tIn: function (k) {\n\n\t\t\treturn 1 - TWEEN.Easing.Bounce.Out(1 - k);\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\tif (k < (1 / 2.75)) {\n\t\t\t\treturn 7.5625 * k * k;\n\t\t\t} else if (k < (2 / 2.75)) {\n\t\t\t\treturn 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n\t\t\t} else if (k < (2.5 / 2.75)) {\n\t\t\t\treturn 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n\t\t\t} else {\n\t\t\t\treturn 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n\t\t\t}\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tif (k < 0.5) {\n\t\t\t\treturn TWEEN.Easing.Bounce.In(k * 2) * 0.5;\n\t\t\t}\n\n\t\t\treturn TWEEN.Easing.Bounce.Out(k * 2 - 1) * 0.5 + 0.5;\n\n\t\t}\n\n\t}\n\n};\n\nTWEEN.Interpolation = {\n\n\tLinear: function (v, k) {\n\n\t\tvar m = v.length - 1;\n\t\tvar f = m * k;\n\t\tvar i = Math.floor(f);\n\t\tvar fn = TWEEN.Interpolation.Utils.Linear;\n\n\t\tif (k < 0) {\n\t\t\treturn fn(v[0], v[1], f);\n\t\t}\n\n\t\tif (k > 1) {\n\t\t\treturn fn(v[m], v[m - 1], m - f);\n\t\t}\n\n\t\treturn fn(v[i], v[i + 1 > m ? m : i + 1], f - i);\n\n\t},\n\n\tBezier: function (v, k) {\n\n\t\tvar b = 0;\n\t\tvar n = v.length - 1;\n\t\tvar pw = Math.pow;\n\t\tvar bn = TWEEN.Interpolation.Utils.Bernstein;\n\n\t\tfor (var i = 0; i <= n; i++) {\n\t\t\tb += pw(1 - k, n - i) * pw(k, i) * v[i] * bn(n, i);\n\t\t}\n\n\t\treturn b;\n\n\t},\n\n\tCatmullRom: function (v, k) {\n\n\t\tvar m = v.length - 1;\n\t\tvar f = m * k;\n\t\tvar i = Math.floor(f);\n\t\tvar fn = TWEEN.Interpolation.Utils.CatmullRom;\n\n\t\tif (v[0] === v[m]) {\n\n\t\t\tif (k < 0) {\n\t\t\t\ti = Math.floor(f = m * (1 + k));\n\t\t\t}\n\n\t\t\treturn fn(v[(i - 1 + m) % m], v[i], v[(i + 1) % m], v[(i + 2) % m], f - i);\n\n\t\t} else {\n\n\t\t\tif (k < 0) {\n\t\t\t\treturn v[0] - (fn(v[0], v[0], v[1], v[1], -f) - v[0]);\n\t\t\t}\n\n\t\t\tif (k > 1) {\n\t\t\t\treturn v[m] - (fn(v[m], v[m], v[m - 1], v[m - 1], f - m) - v[m]);\n\t\t\t}\n\n\t\t\treturn fn(v[i ? i - 1 : 0], v[i], v[m < i + 1 ? m : i + 1], v[m < i + 2 ? m : i + 2], f - i);\n\n\t\t}\n\n\t},\n\n\tUtils: {\n\n\t\tLinear: function (p0, p1, t) {\n\n\t\t\treturn (p1 - p0) * t + p0;\n\n\t\t},\n\n\t\tBernstein: function (n, i) {\n\n\t\t\tvar fc = TWEEN.Interpolation.Utils.Factorial;\n\n\t\t\treturn fc(n) / fc(i) / fc(n - i);\n\n\t\t},\n\n\t\tFactorial: (function () {\n\n\t\t\tvar a = [1];\n\n\t\t\treturn function (n) {\n\n\t\t\t\tvar s = 1;\n\n\t\t\t\tif (a[n]) {\n\t\t\t\t\treturn a[n];\n\t\t\t\t}\n\n\t\t\t\tfor (var i = n; i > 1; i--) {\n\t\t\t\t\ts *= i;\n\t\t\t\t}\n\n\t\t\t\ta[n] = s;\n\t\t\t\treturn s;\n\n\t\t\t};\n\n\t\t})(),\n\n\t\tCatmullRom: function (p0, p1, p2, p3, t) {\n\n\t\t\tvar v0 = (p2 - p0) * 0.5;\n\t\t\tvar v1 = (p3 - p1) * 0.5;\n\t\t\tvar t2 = t * t;\n\t\t\tvar t3 = t * t2;\n\n\t\t\treturn (2 * p1 - 2 * p2 + v0 + v1) * t3 + (- 3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 + v0 * t + p1;\n\n\t\t}\n\n\t}\n\n};\n\n// UMD (Universal Module Definition)\n(function (root) {\n\n\tif (typeof define === 'function' && define.amd) {\n\n\t\t// AMD\n\t\tdefine([], function () {\n\t\t\treturn TWEEN;\n\t\t});\n\n\t} else if (typeof module !== 'undefined' && typeof exports === 'object') {\n\n\t\t// Node.js\n\t\tmodule.exports = TWEEN;\n\n\t} else if (root !== undefined) {\n\n\t\t// Global variable\n\t\troot.TWEEN = TWEEN;\n\n\t}\n\n})(this);\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n","module.exports = false;\n","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = require('./_an-object');\nvar dPs = require('./_object-dps');\nvar enumBugKeys = require('./_enum-bug-keys');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n","// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys = require('./_object-keys-internal');\nvar hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return $keys(O, hiddenKeys);\n};\n","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = require('./_has');\nvar toObject = require('./_to-object');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n","import * as THREE from 'three';\nimport Coordinates from '../../Geographic/Coordinates';\nimport Projection from '../../Geographic/Projection';\nimport OBB from '../../../Renderer/ThreeExtended/OBB';\nimport Extent from '../../Geographic/Extent';\n\nconst axisZ = new THREE.Vector3(0, 0, 1);\nconst axisY = new THREE.Vector3(0, 1, 0);\n\nfunction WGS84ToOneSubY(latitude) {\n    return 1.0 - Projection.WGS84ToY(latitude);\n}\n\nfunction BuilderEllipsoidTile() {\n    this.tmp = {\n        coords: [\n            new Coordinates('EPSG:4326', 0, 0),\n            new Coordinates('EPSG:4326', 0, 0)],\n        position: new THREE.Vector3(),\n    };\n\n    this.type = 'e';\n}\n\nBuilderEllipsoidTile.prototype.constructor = BuilderEllipsoidTile;\n\n// prepare params\n// init projected object -> params.projected\n\nBuilderEllipsoidTile.prototype.Prepare = function Prepare(params) {\n    params.nbRow = Math.pow(2.0, params.level + 1.0);\n\n    var st1 = WGS84ToOneSubY(params.extent.south());\n\n    if (!isFinite(st1)) { st1 = 0; }\n\n    var sizeTexture = 1.0 / params.nbRow;\n\n    var start = (st1 % (sizeTexture));\n\n    params.deltaUV1 = (st1 - start) * params.nbRow;\n\n    // transformation to align tile's normal to z axis\n    params.quatNormalToZ = new THREE.Quaternion().setFromAxisAngle(\n        axisY,\n        -(Math.PI * 0.5 - THREE.Math.degToRad(params.extent.center().latitude())));\n\n    // let's avoid building too much temp objects\n    params.projected = { longitude: 0, latitude: 0 };\n};\n\n// get center tile in cartesian 3D\nBuilderEllipsoidTile.prototype.Center = function Center(extent) {\n    return extent.center(this.tmp.coords[0])\n        .as('EPSG:4978', this.tmp.coords[1]).xyz();\n};\n\n// get position 3D cartesian\nBuilderEllipsoidTile.prototype.VertexPosition = function VertexPosition(params) {\n    this.tmp.coords[0].set(\n        'EPSG:4326',\n        params.projected.longitude,\n        params.projected.latitude);\n\n    this.tmp.coords[0].as('EPSG:4978', this.tmp.coords[1]).xyz(this.tmp.position);\n    return this.tmp.position;\n};\n\n// get normal for last vertex\nBuilderEllipsoidTile.prototype.VertexNormal = function VertexNormal() {\n    return this.tmp.coords[1].geodesicNormal;\n};\n\n// coord u tile to projected\nBuilderEllipsoidTile.prototype.uProjecte = function uProjecte(u, params) {\n    params.projected.longitude = Projection.UnitaryToLongitudeWGS84(u, params.extent);\n};\n\n// coord v tile to projected\nBuilderEllipsoidTile.prototype.vProjecte = function vProjecte(v, params) {\n    params.projected.latitude = Projection.UnitaryToLatitudeWGS84(v, params.extent);\n};\n\n// Compute uv 1, if isn't defined the uv1 isn't computed\nBuilderEllipsoidTile.prototype.getUV_PM = function getUV_PM(params) {\n    var t = WGS84ToOneSubY(params.projected.latitude) * params.nbRow;\n\n    if (!isFinite(t)) { t = 0; }\n\n    return t - params.deltaUV1;\n};\n\nconst quatToAlignLongitude = new THREE.Quaternion();\nconst quatToAlignLatitude = new THREE.Quaternion();\n\nBuilderEllipsoidTile.prototype.computeSharableExtent = function fnComputeSharableExtent(extent) {\n    // Compute sharable extent to pool the geometries\n    // the geometry in common extent is identical to the existing input\n    // with a transformation (translation, rotation)\n\n    // TODO: It should be possible to use equatorial plan symetrie,\n    // but we should be reverse UV on tile\n    // Common geometry is looking for only on longitude\n    const sizeLongitude = Math.abs(extent.west() - extent.east()) / 2;\n    const sharableExtent = new Extent(extent.crs(), -sizeLongitude, sizeLongitude, extent.south(), extent.north());\n\n    // compute rotation to transform tile to position it on ellipsoid\n    // this transformation take into account the transformation of the parents\n    const rotLon = THREE.Math.degToRad(extent.west() - sharableExtent.west());\n    const rotLat = THREE.Math.degToRad(90 - extent.center().latitude());\n    quatToAlignLongitude.setFromAxisAngle(axisZ, rotLon);\n    quatToAlignLatitude.setFromAxisAngle(axisY, rotLat);\n    quatToAlignLongitude.multiply(quatToAlignLatitude);\n\n    return {\n        sharableExtent,\n        quaternion: quatToAlignLongitude.clone(),\n        position: this.Center(extent),\n    };\n};\n\n// use for region for adaptation boundingVolume\nBuilderEllipsoidTile.prototype.OBB = function OBBFn(boundingBox) {\n    return new OBB(boundingBox.min, boundingBox.max);\n};\n\nexport default BuilderEllipsoidTile;\n","var toGeoJSON = (function() {\n    'use strict';\n\n    var removeSpace = /\\s*/g,\n        trimSpace = /^\\s*|\\s*$/g,\n        splitSpace = /\\s+/;\n    // generate a short, numeric hash of a string\n    function okhash(x) {\n        if (!x || !x.length) return 0;\n        for (var i = 0, h = 0; i < x.length; i++) {\n            h = ((h << 5) - h) + x.charCodeAt(i) | 0;\n        } return h;\n    }\n    // all Y children of X\n    function get(x, y) { return x.getElementsByTagName(y); }\n    function attr(x, y) { return x.getAttribute(y); }\n    function attrf(x, y) { return parseFloat(attr(x, y)); }\n    // one Y child of X, if any, otherwise null\n    function get1(x, y) { var n = get(x, y); return n.length ? n[0] : null; }\n    // https://developer.mozilla.org/en-US/docs/Web/API/Node.normalize\n    function norm(el) { if (el.normalize) { el.normalize(); } return el; }\n    // cast array x into numbers\n    function numarray(x) {\n        for (var j = 0, o = []; j < x.length; j++) { o[j] = parseFloat(x[j]); }\n        return o;\n    }\n    // get the content of a text node, if any\n    function nodeVal(x) {\n        if (x) { norm(x); }\n        return (x && x.textContent) || '';\n    }\n    // get the contents of multiple text nodes, if present\n    function getMulti(x, ys) {\n        var o = {}, n, k;\n        for (k = 0; k < ys.length; k++) {\n            n = get1(x, ys[k]);\n            if (n) o[ys[k]] = nodeVal(n);\n        }\n        return o;\n    }\n    // add properties of Y to X, overwriting if present in both\n    function extend(x, y) { for (var k in y) x[k] = y[k]; }\n    // get one coordinate from a coordinate array, if any\n    function coord1(v) { return numarray(v.replace(removeSpace, '').split(',')); }\n    // get all coordinates from a coordinate array as [[],[]]\n    function coord(v) {\n        var coords = v.replace(trimSpace, '').split(splitSpace),\n            o = [];\n        for (var i = 0; i < coords.length; i++) {\n            o.push(coord1(coords[i]));\n        }\n        return o;\n    }\n    function coordPair(x) {\n        var ll = [attrf(x, 'lon'), attrf(x, 'lat')],\n            ele = get1(x, 'ele'),\n            // handle namespaced attribute in browser\n            heartRate = get1(x, 'gpxtpx:hr') || get1(x, 'hr'),\n            time = get1(x, 'time'),\n            e;\n        if (ele) {\n            e = parseFloat(nodeVal(ele));\n            if (!isNaN(e)) {\n                ll.push(e);\n            }\n        }\n        return {\n            coordinates: ll,\n            time: time ? nodeVal(time) : null,\n            heartRate: heartRate ? parseFloat(nodeVal(heartRate)) : null\n        };\n    }\n\n    // create a new feature collection parent object\n    function fc() {\n        return {\n            type: 'FeatureCollection',\n            features: []\n        };\n    }\n\n    var serializer;\n    if (typeof XMLSerializer !== 'undefined') {\n        /* istanbul ignore next */\n        serializer = new XMLSerializer();\n    // only require xmldom in a node environment\n    } else if (typeof exports === 'object' && typeof process === 'object' && !process.browser) {\n        serializer = new (require('xmldom').XMLSerializer)();\n    }\n    function xml2str(str) {\n        // IE9 will create a new XMLSerializer but it'll crash immediately.\n        // This line is ignored because we don't run coverage tests in IE9\n        /* istanbul ignore next */\n        if (str.xml !== undefined) return str.xml;\n        return serializer.serializeToString(str);\n    }\n\n    var t = {\n        kml: function(doc) {\n\n            var gj = fc(),\n                // styleindex keeps track of hashed styles in order to match features\n                styleIndex = {}, styleByHash = {},\n                // stylemapindex keeps track of style maps to expose in properties\n                styleMapIndex = {},\n                // atomic geospatial types supported by KML - MultiGeometry is\n                // handled separately\n                geotypes = ['Polygon', 'LineString', 'Point', 'Track', 'gx:Track'],\n                // all root placemarks in the file\n                placemarks = get(doc, 'Placemark'),\n                styles = get(doc, 'Style'),\n                styleMaps = get(doc, 'StyleMap');\n\n            for (var k = 0; k < styles.length; k++) {\n                var hash = okhash(xml2str(styles[k])).toString(16);\n                styleIndex['#' + attr(styles[k], 'id')] = hash;\n                styleByHash[hash] = styles[k];\n            }\n            for (var l = 0; l < styleMaps.length; l++) {\n                styleIndex['#' + attr(styleMaps[l], 'id')] = okhash(xml2str(styleMaps[l])).toString(16);\n                var pairs = get(styleMaps[l], 'Pair');\n                var pairsMap = {};\n                for (var m = 0; m < pairs.length; m++) {\n                    pairsMap[nodeVal(get1(pairs[m], 'key'))] = nodeVal(get1(pairs[m], 'styleUrl'));\n                }\n                styleMapIndex['#' + attr(styleMaps[l], 'id')] = pairsMap;\n\n            }\n            for (var j = 0; j < placemarks.length; j++) {\n                gj.features = gj.features.concat(getPlacemark(placemarks[j]));\n            }\n            function kmlColor(v) {\n                var color, opacity;\n                v = v || '';\n                if (v.substr(0, 1) === '#') { v = v.substr(1); }\n                if (v.length === 6 || v.length === 3) { color = v; }\n                if (v.length === 8) {\n                    opacity = parseInt(v.substr(0, 2), 16) / 255;\n                    color = '#' + v.substr(6, 2) +\n                        v.substr(4, 2) +\n                        v.substr(2, 2);\n                }\n                return [color, isNaN(opacity) ? undefined : opacity];\n            }\n            function gxCoord(v) { return numarray(v.split(' ')); }\n            function gxCoords(root) {\n                var elems = get(root, 'coord', 'gx'), coords = [], times = [];\n                if (elems.length === 0) elems = get(root, 'gx:coord');\n                for (var i = 0; i < elems.length; i++) coords.push(gxCoord(nodeVal(elems[i])));\n                var timeElems = get(root, 'when');\n                for (var j = 0; j < timeElems.length; j++) times.push(nodeVal(timeElems[j]));\n                return {\n                    coords: coords,\n                    times: times\n                };\n            }\n            function getGeometry(root) {\n                var geomNode, geomNodes, i, j, k, geoms = [], coordTimes = [];\n                if (get1(root, 'MultiGeometry')) { return getGeometry(get1(root, 'MultiGeometry')); }\n                if (get1(root, 'MultiTrack')) { return getGeometry(get1(root, 'MultiTrack')); }\n                if (get1(root, 'gx:MultiTrack')) { return getGeometry(get1(root, 'gx:MultiTrack')); }\n                for (i = 0; i < geotypes.length; i++) {\n                    geomNodes = get(root, geotypes[i]);\n                    if (geomNodes) {\n                        for (j = 0; j < geomNodes.length; j++) {\n                            geomNode = geomNodes[j];\n                            if (geotypes[i] === 'Point') {\n                                geoms.push({\n                                    type: 'Point',\n                                    coordinates: coord1(nodeVal(get1(geomNode, 'coordinates')))\n                                });\n                            } else if (geotypes[i] === 'LineString') {\n                                geoms.push({\n                                    type: 'LineString',\n                                    coordinates: coord(nodeVal(get1(geomNode, 'coordinates')))\n                                });\n                            } else if (geotypes[i] === 'Polygon') {\n                                var rings = get(geomNode, 'LinearRing'),\n                                    coords = [];\n                                for (k = 0; k < rings.length; k++) {\n                                    coords.push(coord(nodeVal(get1(rings[k], 'coordinates'))));\n                                }\n                                geoms.push({\n                                    type: 'Polygon',\n                                    coordinates: coords\n                                });\n                            } else if (geotypes[i] === 'Track' ||\n                                geotypes[i] === 'gx:Track') {\n                                var track = gxCoords(geomNode);\n                                geoms.push({\n                                    type: 'LineString',\n                                    coordinates: track.coords\n                                });\n                                if (track.times.length) coordTimes.push(track.times);\n                            }\n                        }\n                    }\n                }\n                return {\n                    geoms: geoms,\n                    coordTimes: coordTimes\n                };\n            }\n            function getPlacemark(root) {\n                var geomsAndTimes = getGeometry(root), i, properties = {},\n                    name = nodeVal(get1(root, 'name')),\n                    address = nodeVal(get1(root, 'address')),\n                    styleUrl = nodeVal(get1(root, 'styleUrl')),\n                    description = nodeVal(get1(root, 'description')),\n                    timeSpan = get1(root, 'TimeSpan'),\n                    timeStamp = get1(root, 'TimeStamp'),\n                    extendedData = get1(root, 'ExtendedData'),\n                    lineStyle = get1(root, 'LineStyle'),\n                    polyStyle = get1(root, 'PolyStyle'),\n                    visibility = get1(root, 'visibility');\n\n                if (!geomsAndTimes.geoms.length) return [];\n                if (name) properties.name = name;\n                if (address) properties.address = address;\n                if (styleUrl) {\n                    if (styleUrl[0] !== '#') {\n                        styleUrl = '#' + styleUrl;\n                    }\n\n                    properties.styleUrl = styleUrl;\n                    if (styleIndex[styleUrl]) {\n                        properties.styleHash = styleIndex[styleUrl];\n                    }\n                    if (styleMapIndex[styleUrl]) {\n                        properties.styleMapHash = styleMapIndex[styleUrl];\n                        properties.styleHash = styleIndex[styleMapIndex[styleUrl].normal];\n                    }\n                    // Try to populate the lineStyle or polyStyle since we got the style hash\n                    var style = styleByHash[properties.styleHash];\n                    if (style) {\n                        if (!lineStyle) lineStyle = get1(style, 'LineStyle');\n                        if (!polyStyle) polyStyle = get1(style, 'PolyStyle');\n                    }\n                }\n                if (description) properties.description = description;\n                if (timeSpan) {\n                    var begin = nodeVal(get1(timeSpan, 'begin'));\n                    var end = nodeVal(get1(timeSpan, 'end'));\n                    properties.timespan = { begin: begin, end: end };\n                }\n                if (timeStamp) {\n                    properties.timestamp = nodeVal(get1(timeStamp, 'when'));\n                }\n                if (lineStyle) {\n                    var linestyles = kmlColor(nodeVal(get1(lineStyle, 'color'))),\n                        color = linestyles[0],\n                        opacity = linestyles[1],\n                        width = parseFloat(nodeVal(get1(lineStyle, 'width')));\n                    if (color) properties.stroke = color;\n                    if (!isNaN(opacity)) properties['stroke-opacity'] = opacity;\n                    if (!isNaN(width)) properties['stroke-width'] = width;\n                }\n                if (polyStyle) {\n                    var polystyles = kmlColor(nodeVal(get1(polyStyle, 'color'))),\n                        pcolor = polystyles[0],\n                        popacity = polystyles[1],\n                        fill = nodeVal(get1(polyStyle, 'fill')),\n                        outline = nodeVal(get1(polyStyle, 'outline'));\n                    if (pcolor) properties.fill = pcolor;\n                    if (!isNaN(popacity)) properties['fill-opacity'] = popacity;\n                    if (fill) properties['fill-opacity'] = fill === '1' ? properties['fill-opacity'] || 1 : 0;\n                    if (outline) properties['stroke-opacity'] = outline === '1' ? properties['stroke-opacity'] || 1 : 0;\n                }\n                if (extendedData) {\n                    var datas = get(extendedData, 'Data'),\n                        simpleDatas = get(extendedData, 'SimpleData');\n\n                    for (i = 0; i < datas.length; i++) {\n                        properties[datas[i].getAttribute('name')] = nodeVal(get1(datas[i], 'value'));\n                    }\n                    for (i = 0; i < simpleDatas.length; i++) {\n                        properties[simpleDatas[i].getAttribute('name')] = nodeVal(simpleDatas[i]);\n                    }\n                }\n                if (visibility) {\n                    properties.visibility = nodeVal(visibility);\n                }\n                if (geomsAndTimes.coordTimes.length) {\n                    properties.coordTimes = (geomsAndTimes.coordTimes.length === 1) ?\n                        geomsAndTimes.coordTimes[0] : geomsAndTimes.coordTimes;\n                }\n                var feature = {\n                    type: 'Feature',\n                    geometry: (geomsAndTimes.geoms.length === 1) ? geomsAndTimes.geoms[0] : {\n                        type: 'GeometryCollection',\n                        geometries: geomsAndTimes.geoms\n                    },\n                    properties: properties\n                };\n                if (attr(root, 'id')) feature.id = attr(root, 'id');\n                return [feature];\n            }\n            return gj;\n        },\n        gpx: function(doc) {\n            var i,\n                tracks = get(doc, 'trk'),\n                routes = get(doc, 'rte'),\n                waypoints = get(doc, 'wpt'),\n                // a feature collection\n                gj = fc(),\n                feature;\n            for (i = 0; i < tracks.length; i++) {\n                feature = getTrack(tracks[i]);\n                if (feature) gj.features.push(feature);\n            }\n            for (i = 0; i < routes.length; i++) {\n                feature = getRoute(routes[i]);\n                if (feature) gj.features.push(feature);\n            }\n            for (i = 0; i < waypoints.length; i++) {\n                gj.features.push(getPoint(waypoints[i]));\n            }\n            function getPoints(node, pointname) {\n                var pts = get(node, pointname),\n                    line = [],\n                    times = [],\n                    heartRates = [],\n                    l = pts.length;\n                if (l < 2) return {};  // Invalid line in GeoJSON\n                for (var i = 0; i < l; i++) {\n                    var c = coordPair(pts[i]);\n                    line.push(c.coordinates);\n                    if (c.time) times.push(c.time);\n                    if (c.heartRate) heartRates.push(c.heartRate);\n                }\n                return {\n                    line: line,\n                    times: times,\n                    heartRates: heartRates\n                };\n            }\n            function getTrack(node) {\n                var segments = get(node, 'trkseg'),\n                    track = [],\n                    times = [],\n                    heartRates = [],\n                    line;\n                for (var i = 0; i < segments.length; i++) {\n                    line = getPoints(segments[i], 'trkpt');\n                    if (line) {\n                        if (line.line) track.push(line.line);\n                        if (line.times && line.times.length) times.push(line.times);\n                        if (line.heartRates && line.heartRates.length) heartRates.push(line.heartRates);\n                    }\n                }\n                if (track.length === 0) return;\n                var properties = getProperties(node);\n                extend(properties, getLineStyle(get1(node, 'extensions')));\n                if (times.length) properties.coordTimes = track.length === 1 ? times[0] : times;\n                if (heartRates.length) properties.heartRates = track.length === 1 ? heartRates[0] : heartRates;\n                return {\n                    type: 'Feature',\n                    properties: properties,\n                    geometry: {\n                        type: track.length === 1 ? 'LineString' : 'MultiLineString',\n                        coordinates: track.length === 1 ? track[0] : track\n                    }\n                };\n            }\n            function getRoute(node) {\n                var line = getPoints(node, 'rtept');\n                if (!line.line) return;\n                var prop = getProperties(node);\n                extend(prop, getLineStyle(get1(node, 'extensions')));\n                var routeObj = {\n                    type: 'Feature',\n                    properties: prop,\n                    geometry: {\n                        type: 'LineString',\n                        coordinates: line.line\n                    }\n                };\n                return routeObj;\n            }\n            function getPoint(node) {\n                var prop = getProperties(node);\n                extend(prop, getMulti(node, ['sym']));\n                return {\n                    type: 'Feature',\n                    properties: prop,\n                    geometry: {\n                        type: 'Point',\n                        coordinates: coordPair(node).coordinates\n                    }\n                };\n            }\n            function getLineStyle(extensions) {\n                var style = {};\n                if (extensions) {\n                    var lineStyle = get1(extensions, 'line');\n                    if (lineStyle) {\n                        var color = nodeVal(get1(lineStyle, 'color')),\n                            opacity = parseFloat(nodeVal(get1(lineStyle, 'opacity'))),\n                            width = parseFloat(nodeVal(get1(lineStyle, 'width')));\n                        if (color) style.stroke = color;\n                        if (!isNaN(opacity)) style['stroke-opacity'] = opacity;\n                        // GPX width is in mm, convert to px with 96 px per inch\n                        if (!isNaN(width)) style['stroke-width'] = width * 96 / 25.4;\n                    }\n                }\n                return style;\n            }\n            function getProperties(node) {\n                var prop = getMulti(node, ['name', 'cmt', 'desc', 'type', 'time', 'keywords']),\n                    links = get(node, 'link');\n                if (links.length) prop.links = [];\n                for (var i = 0, link; i < links.length; i++) {\n                    link = { href: attr(links[i], 'href') };\n                    extend(link, getMulti(links[i], ['text', 'type']));\n                    prop.links.push(link);\n                }\n                return prop;\n            }\n            return gj;\n        }\n    };\n    return t;\n})();\n\nif (typeof module !== 'undefined') module.exports = toGeoJSON;","var def = require('./_object-dp').f;\nvar has = require('./_has');\nvar TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n","module.exports = {};\n","// 22.1.3.31 Array.prototype[@@unscopables]\nvar UNSCOPABLES = require('./_wks')('unscopables');\nvar ArrayProto = Array.prototype;\nif (ArrayProto[UNSCOPABLES] == undefined) require('./_hide')(ArrayProto, UNSCOPABLES, {});\nmodule.exports = function (key) {\n  ArrayProto[UNSCOPABLES][key] = true;\n};\n","'use strict';\nvar global = require('./_global');\nvar dP = require('./_object-dp');\nvar DESCRIPTORS = require('./_descriptors');\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (KEY) {\n  var C = global[KEY];\n  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {\n    configurable: true,\n    get: function () { return this; }\n  });\n};\n","module.exports = function (it, Constructor, name, forbiddenField) {\n  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {\n    throw TypeError(name + ': incorrect invocation!');\n  } return it;\n};\n","var redefine = require('./_redefine');\nmodule.exports = function (target, src, safe) {\n  for (var key in src) redefine(target, key, src[key], safe);\n  return target;\n};\n","var isObject = require('./_is-object');\nmodule.exports = function (it, TYPE) {\n  if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');\n  return it;\n};\n","import * as THREE from 'three';\nimport OBB from '../../../Renderer/ThreeExtended/OBB';\nimport Coordinates from '../../Geographic/Coordinates';\nimport ProjectionType from './Constants';\nimport Extent from '../../Geographic/Extent';\n\nfunction PanoramaTileBuilder(type, ratio) {\n    this.tmp = {\n        coords: new Coordinates('EPSG:4326', 0, 0),\n        position: new THREE.Vector3(),\n        normal: new THREE.Vector3(0, 0, 1),\n    };\n\n    if (type === undefined) {\n        throw new Error('Projection type must be defined');\n    }\n    if (type === ProjectionType.SPHERICAL) {\n        this.type = 's';\n        this.radius = 100;\n    } else if (type === ProjectionType.CYLINDRICAL) {\n        if (!ratio) {\n            throw new Error('Image ratio must be defined when using cylindrical projection');\n        }\n        this.type = 'c';\n        this.height = 200;\n        this.radius = (ratio * this.height) / (2 * Math.PI);\n    } else {\n        throw new Error(`Unsupported panorama projection type ${type}`);\n    }\n    this.projectionType = type;\n}\n\nPanoramaTileBuilder.prototype.constructor = PanoramaTileBuilder;\n\n// prepare params\n// init projected object -> params.projected\nconst axisX = new THREE.Vector3(0, 1, 0);\nPanoramaTileBuilder.prototype.Prepare = function Prepare(params) {\n    const angle = (params.extent.north() + params.extent.south()) * 0.5;\n\n    if (this.projectionType === ProjectionType.SPHERICAL) {\n        params.quatNormalToZ = new THREE.Quaternion().setFromAxisAngle(\n            axisX, THREE.Math.degToRad(90 - angle));\n        params.projected = {\n            theta: 0,\n            phi: 0,\n            radius: this.radius,\n        };\n    } else {\n        params.quatNormalToZ = new THREE.Quaternion().setFromAxisAngle(axisX, (Math.PI * 0.5));\n        params.projected = {\n            theta: 0,\n            radius: this.radius,\n            y: 0,\n        };\n    }\n};\n\nPanoramaTileBuilder.prototype.Center = function Center(extent) {\n    const params = { extent };\n    this.Prepare(params);\n    this.uProjecte(0.5, params);\n    this.vProjecte(0.5, params);\n\n    return this.VertexPosition(params).clone();\n};\n\n// get position 3D cartesian\nPanoramaTileBuilder.prototype.VertexPosition = function VertexPosition(params) {\n    if (this.projectionType === ProjectionType.SPHERICAL) {\n        this.tmp.position.setFromSpherical(params.projected);\n    } else {\n        this.tmp.position.setFromCylindrical(params.projected);\n    }\n\n    this.tmp.position.set(this.tmp.position.z, this.tmp.position.x, this.tmp.position.y);\n\n    return this.tmp.position;\n};\n\n// get normal for last vertex\nPanoramaTileBuilder.prototype.VertexNormal = function VertexNormal() {\n    return this.tmp.position.clone().negate().normalize();\n};\n\n// coord u tile to projected\nPanoramaTileBuilder.prototype.uProjecte = function uProjecte(u, params) {\n    // both (theta, phi) and (y, z) are swapped in setFromSpherical\n    params.projected.theta = THREE.Math.degToRad(90 - THREE.Math.lerp(\n        params.extent.east(),\n        params.extent.west(),\n        1 - u));\n};\n\n// coord v tile to projected\nPanoramaTileBuilder.prototype.vProjecte = function vProjecte(v, params) {\n    if (this.projectionType === ProjectionType.SPHERICAL) {\n        params.projected.phi = THREE.Math.degToRad(90 -\n            THREE.Math.lerp(\n                params.extent.north(),\n                params.extent.south(),\n                1 - v));\n    } else {\n        params.projected.y =\n            this.height *\n            THREE.Math.lerp(params.extent.south(), params.extent.north(), v) / 180;\n    }\n};\n\n// get oriented bounding box of tile\nPanoramaTileBuilder.prototype.OBB = function _OBB(boundingBox) {\n    return new OBB(boundingBox.min, boundingBox.max);\n};\n\nconst axisY = new THREE.Vector3(0, 1, 0);\nconst axisZ = new THREE.Vector3(0, 0, 1);\nconst quatToAlignLongitude = new THREE.Quaternion();\nconst quatToAlignLatitude = new THREE.Quaternion();\n\nPanoramaTileBuilder.prototype.computeSharableExtent = function fnComputeSharableExtent(extent) {\n    // Compute sharable extent to pool the geometries\n    // the geometry in common extent is identical to the existing input\n    // with a transformation (translation, rotation)\n    const sizeLongitude = Math.abs(extent.west() - extent.east()) / 2;\n    const sharableExtent = new Extent(extent.crs(), -sizeLongitude, sizeLongitude, extent.south(), extent.north());\n\n    // compute rotation to transform tile to position it\n    // this transformation take into account the transformation of the parents\n    const rotLon = extent.west() - sharableExtent.west();\n    const rotLat = 90 -\n        (this.projectionType === ProjectionType.CYLINDRICAL ?\n            0 :\n            (extent.north() + extent.south()) * 0.5);\n    quatToAlignLongitude.setFromAxisAngle(axisZ, -THREE.Math.degToRad(rotLon));\n    quatToAlignLatitude.setFromAxisAngle(axisY, -THREE.Math.degToRad(rotLat));\n    quatToAlignLongitude.multiply(quatToAlignLatitude);\n\n    return {\n        sharableExtent,\n        quaternion: quatToAlignLongitude.clone(),\n        position: this.Center(extent),\n    };\n};\n\nexport default PanoramaTileBuilder;\n","import * as THREE from 'three';\n\nimport TiledGeometryLayer from '../../../Layer/TiledGeometryLayer';\nimport Extent from '../../Geographic/Extent';\nimport PanoramaTileBuilder from './PanoramaTileBuilder';\nimport ProjectionType from './Constants';\n\nconst textureSize = new THREE.Vector2(512, 256);\nconst center = new THREE.Vector3();\n\nclass PanoramaLayer extends TiledGeometryLayer {\n    /**\n     * A {@link TiledGeometryLayer} to use with a {@link PanoramaView}. It has\n     * specific method for updating and subdivising its grid.\n     *\n     * @constructor\n     * @extends TiledGeometryLayer\n     *\n     * @param {string} id - The id of the layer, that should be unique. It is\n     * not mandatory, but an error will be emitted if this layer is added a\n     * {@link View} that already has a layer going by that id.\n     * @param {Coordinates} coordinates - The coordinates of the origin of the\n     * panorama.\n     * @param {number} type - The type of projection for the panorama: 1 for a\n     * cylindrical projection, 2 for a spherical one.\n     * @param {Object} [config] - Optional configuration, all elements in it\n     * will be merged as is in the layer. For example, if the configuration\n     * contains three elements <code>name, protocol, extent</code>, these\n     * elements will be available using <code>layer.name</code> or something\n     * else depending on the property name.\n     * @param {THREE.Object3d} [config.object3d=THREE.Group] - The object3d used to\n     * contain the geometry of the TiledGeometryLayer. It is usually a\n     * <code>THREE.Group</code>, but it can be anything inheriting from a\n     * <code>THREE.Object3d</code>.\n     * @param {number} [config.maxSubdivisionLevel=10] - Maximum subdivision\n     * level for this tiled layer.\n     * @param {number} [config.ratio=1] - Ratio for building the panorama\n     * sphere.\n     *\n     * @throws {Error} <code>object3d</code> must be a valid\n     * <code>THREE.Object3d</code>.\n     */\n    constructor(id, coordinates, type, config) {\n        let schemeTile;\n        if (type === ProjectionType.SPHERICAL) {\n            // equirectangular -> spherical geometry\n            schemeTile = [\n                new Extent('EPSG:4326', {\n                    west: -180,\n                    east: 0,\n                    north: 90,\n                    south: -90,\n                }), new Extent('EPSG:4326', {\n                    west: 0,\n                    east: 180,\n                    north: 90,\n                    south: -90,\n                })];\n        } else if (type === ProjectionType.CYLINDRICAL) {\n            // cylindrical geometry\n            schemeTile = [\n                new Extent('EPSG:4326', {\n                    west: -180,\n                    east: -90,\n                    north: 90,\n                    south: -90,\n                }), new Extent('EPSG:4326', {\n                    west: -90,\n                    east: 0,\n                    north: 90,\n                    south: -90,\n                }), new Extent('EPSG:4326', {\n                    west: 0,\n                    east: 90,\n                    north: 90,\n                    south: -90,\n                }), new Extent('EPSG:4326', {\n                    west: 90,\n                    east: 180,\n                    north: 90,\n                    south: -90,\n                })];\n        } else {\n            throw new Error(`Unsupported panorama projection type ${type}.\n                Only ProjectionType.SPHERICAL and ProjectionType.CYLINDRICAL are supported`);\n        }\n        const builder = new PanoramaTileBuilder(type, config.ratio || 1);\n        super(id, config.object3d || new THREE.Group(), schemeTile, builder, config);\n\n        coordinates.xyz(this.object3d.position);\n        this.object3d.quaternion.setFromUnitVectors(\n            new THREE.Vector3(0, 0, 1), coordinates.geodesicNormal);\n        this.object3d.updateMatrixWorld(true);\n\n        // FIXME: add CRS = '0' support\n        this.extent = new Extent('EPSG:4326', {\n            west: -180,\n            east: 180,\n            north: 90,\n            south: -90,\n        });\n\n        this.disableSkirt = true;\n\n        this.options.segments = 8;\n        this.options.quality = 0.5;\n    }\n\n    // eslint-disable-next-line\n    culling(node, camera) {\n        return !camera.isBox3Visible(node.obb.box3D, node.obb.matrixWorld);\n    }\n\n    /**\n     * Test the subdvision of a node, compared to this layer.\n     *\n     * @param {Object} context - The context of the update; see the {@link\n     * MainLoop} for more informations.\n     * @param {PlanarLayer} layer - This layer, parameter to be removed.\n     * @param {TileMesh} node - The node to test.\n     *\n     * @return {boolean} - True if the node is subdivisable, otherwise false.\n     */\n    subdivision(context, layer, node) {\n        if (node.level < 1) {\n            return true;\n        }\n\n        const maxLevel = this.maxSubdivisionLevel || 10;\n\n        if (maxLevel <= node.level) {\n            return false;\n        }\n\n        const obb = node.obb;\n\n        obb.updateMatrixWorld();\n        const onScreen = context.camera.box3SizeOnScreen(\n            obb.box3D,\n            obb.matrixWorld);\n\n        onScreen.min.z = 0;\n        onScreen.max.z = 0;\n        onScreen.getCenter(center);\n\n        // give a small boost to central tiles\n        const boost = 1 + Math.max(0, 1 - center.length());\n\n        const dim = {\n            x: 0.5 * (onScreen.max.x - onScreen.min.x) * context.camera.width,\n            y: 0.5 * (onScreen.max.y - onScreen.min.y) * context.camera.height,\n        };\n\n        const quality = layer.options.quality || 1.0;\n        return (boost * dim.x * quality >= textureSize.x && boost * dim.y * quality >= textureSize.y);\n    }\n}\n\nexport default PanoramaLayer;\n","import * as THREE from 'three';\n\nimport View from '../View';\nimport PanoramaLayer from './Panorama/PanoramaLayer';\n\nexport function createPanoramaLayer(id, coordinates, type, options = {}) {\n    console.warn('createPanoramaLayer is deprecated, use the PanoramaLayer class instead.');\n    return new PanoramaLayer(id, coordinates, type, options);\n}\n\nfunction PanoramaView(viewerDiv, coordinates, type, options = {}) {\n    THREE.Object3D.DefaultUp.set(0, 0, 1);\n\n    // Setup View\n    View.call(this, coordinates.crs, viewerDiv, options);\n\n    // Configure camera\n    const camera = this.camera.camera3D;\n    coordinates.xyz(camera.position);\n\n    camera.fov = 45;\n    camera.near = 0.1;\n    camera.far = 1000;\n    camera.up = coordinates.geodesicNormal;\n    // look at to the north\n    camera.lookAt(new THREE.Vector3(0, 1, 0).add(camera.position));\n\n    if (camera.updateProjectionMatrix) {\n        camera.updateProjectionMatrix();\n    }\n    camera.updateMatrixWorld();\n\n    this.tileLayer = new PanoramaLayer('panorama', coordinates, type, options);\n\n    View.prototype.addLayer.call(this, this.tileLayer);\n}\n\nPanoramaView.prototype = Object.create(View.prototype);\nPanoramaView.prototype.constructor = PanoramaView;\n\nPanoramaView.prototype.addLayer = function addLayer(layer) {\n    if (!layer) {\n        return new Promise((resolve, reject) => reject(new Error('layer is undefined')));\n    }\n    if (layer.type != 'color') {\n        throw new Error(`Unsupported layer type ${layer.type} (PanoramaView only support 'color' layers)`);\n    }\n    return View.prototype.addLayer.call(this, layer, this.tileLayer);\n};\n\nexport default PanoramaView;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n","exports.f = {}.propertyIsEnumerable;\n","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","'use strict';\n\nvar VectorTileFeature = require('./vectortilefeature.js');\n\nmodule.exports = VectorTileLayer;\n\nfunction VectorTileLayer(pbf, end) {\n    // Public\n    this.version = 1;\n    this.name = null;\n    this.extent = 4096;\n    this.length = 0;\n\n    // Private\n    this._pbf = pbf;\n    this._keys = [];\n    this._values = [];\n    this._features = [];\n\n    pbf.readFields(readLayer, this, end);\n\n    this.length = this._features.length;\n}\n\nfunction readLayer(tag, layer, pbf) {\n    if (tag === 15) layer.version = pbf.readVarint();\n    else if (tag === 1) layer.name = pbf.readString();\n    else if (tag === 5) layer.extent = pbf.readVarint();\n    else if (tag === 2) layer._features.push(pbf.pos);\n    else if (tag === 3) layer._keys.push(pbf.readString());\n    else if (tag === 4) layer._values.push(readValueMessage(pbf));\n}\n\nfunction readValueMessage(pbf) {\n    var value = null,\n        end = pbf.readVarint() + pbf.pos;\n\n    while (pbf.pos < end) {\n        var tag = pbf.readVarint() >> 3;\n\n        value = tag === 1 ? pbf.readString() :\n            tag === 2 ? pbf.readFloat() :\n            tag === 3 ? pbf.readDouble() :\n            tag === 4 ? pbf.readVarint64() :\n            tag === 5 ? pbf.readVarint() :\n            tag === 6 ? pbf.readSVarint() :\n            tag === 7 ? pbf.readBoolean() : null;\n    }\n\n    return value;\n}\n\n// return feature `i` from this layer as a `VectorTileFeature`\nVectorTileLayer.prototype.feature = function(i) {\n    if (i < 0 || i >= this._features.length) throw new Error('feature index out of bounds');\n\n    this._pbf.pos = this._features[i];\n\n    var end = this._pbf.readVarint() + this._pbf.pos;\n    return new VectorTileFeature(this._pbf, end, this.extent, this._keys, this._values);\n};\n","'use strict';\n\nvar Point = require('@mapbox/point-geometry');\n\nmodule.exports = VectorTileFeature;\n\nfunction VectorTileFeature(pbf, end, extent, keys, values) {\n    // Public\n    this.properties = {};\n    this.extent = extent;\n    this.type = 0;\n\n    // Private\n    this._pbf = pbf;\n    this._geometry = -1;\n    this._keys = keys;\n    this._values = values;\n\n    pbf.readFields(readFeature, this, end);\n}\n\nfunction readFeature(tag, feature, pbf) {\n    if (tag == 1) feature.id = pbf.readVarint();\n    else if (tag == 2) readTag(pbf, feature);\n    else if (tag == 3) feature.type = pbf.readVarint();\n    else if (tag == 4) feature._geometry = pbf.pos;\n}\n\nfunction readTag(pbf, feature) {\n    var end = pbf.readVarint() + pbf.pos;\n\n    while (pbf.pos < end) {\n        var key = feature._keys[pbf.readVarint()],\n            value = feature._values[pbf.readVarint()];\n        feature.properties[key] = value;\n    }\n}\n\nVectorTileFeature.types = ['Unknown', 'Point', 'LineString', 'Polygon'];\n\nVectorTileFeature.prototype.loadGeometry = function() {\n    var pbf = this._pbf;\n    pbf.pos = this._geometry;\n\n    var end = pbf.readVarint() + pbf.pos,\n        cmd = 1,\n        length = 0,\n        x = 0,\n        y = 0,\n        lines = [],\n        line;\n\n    while (pbf.pos < end) {\n        if (length <= 0) {\n            var cmdLen = pbf.readVarint();\n            cmd = cmdLen & 0x7;\n            length = cmdLen >> 3;\n        }\n\n        length--;\n\n        if (cmd === 1 || cmd === 2) {\n            x += pbf.readSVarint();\n            y += pbf.readSVarint();\n\n            if (cmd === 1) { // moveTo\n                if (line) lines.push(line);\n                line = [];\n            }\n\n            line.push(new Point(x, y));\n\n        } else if (cmd === 7) {\n\n            // Workaround for https://github.com/mapbox/mapnik-vector-tile/issues/90\n            if (line) {\n                line.push(line[0].clone()); // closePolygon\n            }\n\n        } else {\n            throw new Error('unknown command ' + cmd);\n        }\n    }\n\n    if (line) lines.push(line);\n\n    return lines;\n};\n\nVectorTileFeature.prototype.bbox = function() {\n    var pbf = this._pbf;\n    pbf.pos = this._geometry;\n\n    var end = pbf.readVarint() + pbf.pos,\n        cmd = 1,\n        length = 0,\n        x = 0,\n        y = 0,\n        x1 = Infinity,\n        x2 = -Infinity,\n        y1 = Infinity,\n        y2 = -Infinity;\n\n    while (pbf.pos < end) {\n        if (length <= 0) {\n            var cmdLen = pbf.readVarint();\n            cmd = cmdLen & 0x7;\n            length = cmdLen >> 3;\n        }\n\n        length--;\n\n        if (cmd === 1 || cmd === 2) {\n            x += pbf.readSVarint();\n            y += pbf.readSVarint();\n            if (x < x1) x1 = x;\n            if (x > x2) x2 = x;\n            if (y < y1) y1 = y;\n            if (y > y2) y2 = y;\n\n        } else if (cmd !== 7) {\n            throw new Error('unknown command ' + cmd);\n        }\n    }\n\n    return [x1, y1, x2, y2];\n};\n\nVectorTileFeature.prototype.toGeoJSON = function(x, y, z) {\n    var size = this.extent * Math.pow(2, z),\n        x0 = this.extent * x,\n        y0 = this.extent * y,\n        coords = this.loadGeometry(),\n        type = VectorTileFeature.types[this.type],\n        i, j;\n\n    function project(line) {\n        for (var j = 0; j < line.length; j++) {\n            var p = line[j], y2 = 180 - (p.y + y0) * 360 / size;\n            line[j] = [\n                (p.x + x0) * 360 / size - 180,\n                360 / Math.PI * Math.atan(Math.exp(y2 * Math.PI / 180)) - 90\n            ];\n        }\n    }\n\n    switch (this.type) {\n    case 1:\n        var points = [];\n        for (i = 0; i < coords.length; i++) {\n            points[i] = coords[i][0];\n        }\n        coords = points;\n        project(coords);\n        break;\n\n    case 2:\n        for (i = 0; i < coords.length; i++) {\n            project(coords[i]);\n        }\n        break;\n\n    case 3:\n        coords = classifyRings(coords);\n        for (i = 0; i < coords.length; i++) {\n            for (j = 0; j < coords[i].length; j++) {\n                project(coords[i][j]);\n            }\n        }\n        break;\n    }\n\n    if (coords.length === 1) {\n        coords = coords[0];\n    } else {\n        type = 'Multi' + type;\n    }\n\n    var result = {\n        type: \"Feature\",\n        geometry: {\n            type: type,\n            coordinates: coords\n        },\n        properties: this.properties\n    };\n\n    if ('id' in this) {\n        result.id = this.id;\n    }\n\n    return result;\n};\n\n// classifies an array of rings into polygons with outer rings and holes\n\nfunction classifyRings(rings) {\n    var len = rings.length;\n\n    if (len <= 1) return [rings];\n\n    var polygons = [],\n        polygon,\n        ccw;\n\n    for (var i = 0; i < len; i++) {\n        var area = signedArea(rings[i]);\n        if (area === 0) continue;\n\n        if (ccw === undefined) ccw = area < 0;\n\n        if (ccw === area < 0) {\n            if (polygon) polygons.push(polygon);\n            polygon = [rings[i]];\n\n        } else {\n            polygon.push(rings[i]);\n        }\n    }\n    if (polygon) polygons.push(polygon);\n\n    return polygons;\n}\n\nfunction signedArea(ring) {\n    var sum = 0;\n    for (var i = 0, len = ring.length, j = len - 1, p1, p2; i < len; j = i++) {\n        p1 = ring[i];\n        p2 = ring[j];\n        sum += (p2.x - p1.x) * (p1.y + p2.y);\n    }\n    return sum;\n}\n","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.PriorityQueue = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\nvar AbstractPriorityQueue, ArrayStrategy, BHeapStrategy, BinaryHeapStrategy, PriorityQueue,\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nAbstractPriorityQueue = _dereq_('./PriorityQueue/AbstractPriorityQueue');\n\nArrayStrategy = _dereq_('./PriorityQueue/ArrayStrategy');\n\nBinaryHeapStrategy = _dereq_('./PriorityQueue/BinaryHeapStrategy');\n\nBHeapStrategy = _dereq_('./PriorityQueue/BHeapStrategy');\n\nPriorityQueue = (function(superClass) {\n  extend(PriorityQueue, superClass);\n\n  function PriorityQueue(options) {\n    options || (options = {});\n    options.strategy || (options.strategy = BinaryHeapStrategy);\n    options.comparator || (options.comparator = function(a, b) {\n      return (a || 0) - (b || 0);\n    });\n    PriorityQueue.__super__.constructor.call(this, options);\n  }\n\n  return PriorityQueue;\n\n})(AbstractPriorityQueue);\n\nPriorityQueue.ArrayStrategy = ArrayStrategy;\n\nPriorityQueue.BinaryHeapStrategy = BinaryHeapStrategy;\n\nPriorityQueue.BHeapStrategy = BHeapStrategy;\n\nmodule.exports = PriorityQueue;\n\n\n},{\"./PriorityQueue/AbstractPriorityQueue\":2,\"./PriorityQueue/ArrayStrategy\":3,\"./PriorityQueue/BHeapStrategy\":4,\"./PriorityQueue/BinaryHeapStrategy\":5}],2:[function(_dereq_,module,exports){\nvar AbstractPriorityQueue;\n\nmodule.exports = AbstractPriorityQueue = (function() {\n  function AbstractPriorityQueue(options) {\n    var ref;\n    if ((options != null ? options.strategy : void 0) == null) {\n      throw 'Must pass options.strategy, a strategy';\n    }\n    if ((options != null ? options.comparator : void 0) == null) {\n      throw 'Must pass options.comparator, a comparator';\n    }\n    this.priv = new options.strategy(options);\n    this.length = (options != null ? (ref = options.initialValues) != null ? ref.length : void 0 : void 0) || 0;\n  }\n\n  AbstractPriorityQueue.prototype.queue = function(value) {\n    this.length++;\n    this.priv.queue(value);\n    return void 0;\n  };\n\n  AbstractPriorityQueue.prototype.dequeue = function(value) {\n    if (!this.length) {\n      throw 'Empty queue';\n    }\n    this.length--;\n    return this.priv.dequeue();\n  };\n\n  AbstractPriorityQueue.prototype.peek = function(value) {\n    if (!this.length) {\n      throw 'Empty queue';\n    }\n    return this.priv.peek();\n  };\n\n  AbstractPriorityQueue.prototype.clear = function() {\n    this.length = 0;\n    return this.priv.clear();\n  };\n\n  return AbstractPriorityQueue;\n\n})();\n\n\n},{}],3:[function(_dereq_,module,exports){\nvar ArrayStrategy, binarySearchForIndexReversed;\n\nbinarySearchForIndexReversed = function(array, value, comparator) {\n  var high, low, mid;\n  low = 0;\n  high = array.length;\n  while (low < high) {\n    mid = (low + high) >>> 1;\n    if (comparator(array[mid], value) >= 0) {\n      low = mid + 1;\n    } else {\n      high = mid;\n    }\n  }\n  return low;\n};\n\nmodule.exports = ArrayStrategy = (function() {\n  function ArrayStrategy(options) {\n    var ref;\n    this.options = options;\n    this.comparator = this.options.comparator;\n    this.data = ((ref = this.options.initialValues) != null ? ref.slice(0) : void 0) || [];\n    this.data.sort(this.comparator).reverse();\n  }\n\n  ArrayStrategy.prototype.queue = function(value) {\n    var pos;\n    pos = binarySearchForIndexReversed(this.data, value, this.comparator);\n    this.data.splice(pos, 0, value);\n    return void 0;\n  };\n\n  ArrayStrategy.prototype.dequeue = function() {\n    return this.data.pop();\n  };\n\n  ArrayStrategy.prototype.peek = function() {\n    return this.data[this.data.length - 1];\n  };\n\n  ArrayStrategy.prototype.clear = function() {\n    this.data.length = 0;\n    return void 0;\n  };\n\n  return ArrayStrategy;\n\n})();\n\n\n},{}],4:[function(_dereq_,module,exports){\nvar BHeapStrategy;\n\nmodule.exports = BHeapStrategy = (function() {\n  function BHeapStrategy(options) {\n    var arr, i, j, k, len, ref, ref1, shift, value;\n    this.comparator = (options != null ? options.comparator : void 0) || function(a, b) {\n      return a - b;\n    };\n    this.pageSize = (options != null ? options.pageSize : void 0) || 512;\n    this.length = 0;\n    shift = 0;\n    while ((1 << shift) < this.pageSize) {\n      shift += 1;\n    }\n    if (1 << shift !== this.pageSize) {\n      throw 'pageSize must be a power of two';\n    }\n    this._shift = shift;\n    this._emptyMemoryPageTemplate = arr = [];\n    for (i = j = 0, ref = this.pageSize; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n      arr.push(null);\n    }\n    this._memory = [];\n    this._mask = this.pageSize - 1;\n    if (options.initialValues) {\n      ref1 = options.initialValues;\n      for (k = 0, len = ref1.length; k < len; k++) {\n        value = ref1[k];\n        this.queue(value);\n      }\n    }\n  }\n\n  BHeapStrategy.prototype.queue = function(value) {\n    this.length += 1;\n    this._write(this.length, value);\n    this._bubbleUp(this.length, value);\n    return void 0;\n  };\n\n  BHeapStrategy.prototype.dequeue = function() {\n    var ret, val;\n    ret = this._read(1);\n    val = this._read(this.length);\n    this.length -= 1;\n    if (this.length > 0) {\n      this._write(1, val);\n      this._bubbleDown(1, val);\n    }\n    return ret;\n  };\n\n  BHeapStrategy.prototype.peek = function() {\n    return this._read(1);\n  };\n\n  BHeapStrategy.prototype.clear = function() {\n    this.length = 0;\n    this._memory.length = 0;\n    return void 0;\n  };\n\n  BHeapStrategy.prototype._write = function(index, value) {\n    var page;\n    page = index >> this._shift;\n    while (page >= this._memory.length) {\n      this._memory.push(this._emptyMemoryPageTemplate.slice(0));\n    }\n    return this._memory[page][index & this._mask] = value;\n  };\n\n  BHeapStrategy.prototype._read = function(index) {\n    return this._memory[index >> this._shift][index & this._mask];\n  };\n\n  BHeapStrategy.prototype._bubbleUp = function(index, value) {\n    var compare, indexInPage, parentIndex, parentValue;\n    compare = this.comparator;\n    while (index > 1) {\n      indexInPage = index & this._mask;\n      if (index < this.pageSize || indexInPage > 3) {\n        parentIndex = (index & ~this._mask) | (indexInPage >> 1);\n      } else if (indexInPage < 2) {\n        parentIndex = (index - this.pageSize) >> this._shift;\n        parentIndex += parentIndex & ~(this._mask >> 1);\n        parentIndex |= this.pageSize >> 1;\n      } else {\n        parentIndex = index - 2;\n      }\n      parentValue = this._read(parentIndex);\n      if (compare(parentValue, value) < 0) {\n        break;\n      }\n      this._write(parentIndex, value);\n      this._write(index, parentValue);\n      index = parentIndex;\n    }\n    return void 0;\n  };\n\n  BHeapStrategy.prototype._bubbleDown = function(index, value) {\n    var childIndex1, childIndex2, childValue1, childValue2, compare;\n    compare = this.comparator;\n    while (index < this.length) {\n      if (index > this._mask && !(index & (this._mask - 1))) {\n        childIndex1 = childIndex2 = index + 2;\n      } else if (index & (this.pageSize >> 1)) {\n        childIndex1 = (index & ~this._mask) >> 1;\n        childIndex1 |= index & (this._mask >> 1);\n        childIndex1 = (childIndex1 + 1) << this._shift;\n        childIndex2 = childIndex1 + 1;\n      } else {\n        childIndex1 = index + (index & this._mask);\n        childIndex2 = childIndex1 + 1;\n      }\n      if (childIndex1 !== childIndex2 && childIndex2 <= this.length) {\n        childValue1 = this._read(childIndex1);\n        childValue2 = this._read(childIndex2);\n        if (compare(childValue1, value) < 0 && compare(childValue1, childValue2) <= 0) {\n          this._write(childIndex1, value);\n          this._write(index, childValue1);\n          index = childIndex1;\n        } else if (compare(childValue2, value) < 0) {\n          this._write(childIndex2, value);\n          this._write(index, childValue2);\n          index = childIndex2;\n        } else {\n          break;\n        }\n      } else if (childIndex1 <= this.length) {\n        childValue1 = this._read(childIndex1);\n        if (compare(childValue1, value) < 0) {\n          this._write(childIndex1, value);\n          this._write(index, childValue1);\n          index = childIndex1;\n        } else {\n          break;\n        }\n      } else {\n        break;\n      }\n    }\n    return void 0;\n  };\n\n  return BHeapStrategy;\n\n})();\n\n\n},{}],5:[function(_dereq_,module,exports){\nvar BinaryHeapStrategy;\n\nmodule.exports = BinaryHeapStrategy = (function() {\n  function BinaryHeapStrategy(options) {\n    var ref;\n    this.comparator = (options != null ? options.comparator : void 0) || function(a, b) {\n      return a - b;\n    };\n    this.length = 0;\n    this.data = ((ref = options.initialValues) != null ? ref.slice(0) : void 0) || [];\n    this._heapify();\n  }\n\n  BinaryHeapStrategy.prototype._heapify = function() {\n    var i, j, ref;\n    if (this.data.length > 0) {\n      for (i = j = 1, ref = this.data.length; 1 <= ref ? j < ref : j > ref; i = 1 <= ref ? ++j : --j) {\n        this._bubbleUp(i);\n      }\n    }\n    return void 0;\n  };\n\n  BinaryHeapStrategy.prototype.queue = function(value) {\n    this.data.push(value);\n    this._bubbleUp(this.data.length - 1);\n    return void 0;\n  };\n\n  BinaryHeapStrategy.prototype.dequeue = function() {\n    var last, ret;\n    ret = this.data[0];\n    last = this.data.pop();\n    if (this.data.length > 0) {\n      this.data[0] = last;\n      this._bubbleDown(0);\n    }\n    return ret;\n  };\n\n  BinaryHeapStrategy.prototype.peek = function() {\n    return this.data[0];\n  };\n\n  BinaryHeapStrategy.prototype.clear = function() {\n    this.length = 0;\n    this.data.length = 0;\n    return void 0;\n  };\n\n  BinaryHeapStrategy.prototype._bubbleUp = function(pos) {\n    var parent, x;\n    while (pos > 0) {\n      parent = (pos - 1) >>> 1;\n      if (this.comparator(this.data[pos], this.data[parent]) < 0) {\n        x = this.data[parent];\n        this.data[parent] = this.data[pos];\n        this.data[pos] = x;\n        pos = parent;\n      } else {\n        break;\n      }\n    }\n    return void 0;\n  };\n\n  BinaryHeapStrategy.prototype._bubbleDown = function(pos) {\n    var last, left, minIndex, right, x;\n    last = this.data.length - 1;\n    while (true) {\n      left = (pos << 1) + 1;\n      right = left + 1;\n      minIndex = pos;\n      if (left <= last && this.comparator(this.data[left], this.data[minIndex]) < 0) {\n        minIndex = left;\n      }\n      if (right <= last && this.comparator(this.data[right], this.data[minIndex]) < 0) {\n        minIndex = right;\n      }\n      if (minIndex !== pos) {\n        x = this.data[minIndex];\n        this.data[minIndex] = this.data[pos];\n        this.data[pos] = x;\n        pos = minIndex;\n      } else {\n        break;\n      }\n    }\n    return void 0;\n  };\n\n  return BinaryHeapStrategy;\n\n})();\n\n\n},{}]},{},[1])(1)\n});","'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos,\n            str = readUtf8(this.buf, this.pos, end);\n        this.pos = end;\n        return str;\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.ceil(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","module.exports.VectorTile = require('./lib/vectortile.js');\nmodule.exports.VectorTileFeature = require('./lib/vectortilefeature.js');\nmodule.exports.VectorTileLayer = require('./lib/vectortilelayer.js');\n","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n/** @interface */\nfunction Decoder() {}\nDecoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point, or |finished|.\n   */\n  handler: function(stream, bite) {}\n};\n\n/** @interface */\nfunction Encoder() {}\nEncoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of code points being encoded.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit, or |finished|.\n   */\n  handler: function(stream, code_point) {}\n};\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexport {TextEncoder, TextDecoder};\n","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n","exports.f = Object.getOwnPropertySymbols;\n","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof');\nvar TAG = require('./_wks')('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n","var $export = require('./_export');\nvar defined = require('./_defined');\nvar fails = require('./_fails');\nvar spaces = require('./_string-ws');\nvar space = '[' + spaces + ']';\nvar non = '\\u200b\\u0085';\nvar ltrim = RegExp('^' + space + space + '*');\nvar rtrim = RegExp(space + space + '*$');\n\nvar exporter = function (KEY, exec, ALIAS) {\n  var exp = {};\n  var FORCE = fails(function () {\n    return !!spaces[KEY]() || non[KEY]() != non;\n  });\n  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];\n  if (ALIAS) exp[ALIAS] = fn;\n  $export($export.P + $export.F * FORCE, 'String', exp);\n};\n\n// 1 -> String#trimLeft\n// 2 -> String#trimRight\n// 3 -> String#trim\nvar trim = exporter.trim = function (string, TYPE) {\n  string = String(defined(string));\n  if (TYPE & 1) string = string.replace(ltrim, '');\n  if (TYPE & 2) string = string.replace(rtrim, '');\n  return string;\n};\n\nmodule.exports = exporter;\n","var ITERATOR = require('./_wks')('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () { SAFE_CLOSING = true; };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(riter, function () { throw 2; });\n} catch (e) { /* empty */ }\n\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () { return { done: safe = true }; };\n    arr[ITERATOR] = function () { return iter; };\n    exec(arr);\n  } catch (e) { /* empty */ }\n  return safe;\n};\n","'use strict';\nvar hide = require('./_hide');\nvar redefine = require('./_redefine');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar wks = require('./_wks');\n\nmodule.exports = function (KEY, length, exec) {\n  var SYMBOL = wks(KEY);\n  var fns = exec(defined, SYMBOL, ''[KEY]);\n  var strfn = fns[0];\n  var rxfn = fns[1];\n  if (fails(function () {\n    var O = {};\n    O[SYMBOL] = function () { return 7; };\n    return ''[KEY](O) != 7;\n  })) {\n    redefine(String.prototype, KEY, strfn);\n    hide(RegExp.prototype, SYMBOL, length == 2\n      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)\n      // 21.2.5.11 RegExp.prototype[@@split](string, limit)\n      ? function (string, arg) { return rxfn.call(string, this, arg); }\n      // 21.2.5.6 RegExp.prototype[@@match](string)\n      // 21.2.5.9 RegExp.prototype[@@search](string)\n      : function (string) { return rxfn.call(string, this); }\n    );\n  }\n};\n","var ctx = require('./_ctx');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar anObject = require('./_an-object');\nvar toLength = require('./_to-length');\nvar getIterFn = require('./core.get-iterator-method');\nvar BREAK = {};\nvar RETURN = {};\nvar exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {\n  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);\n  var f = ctx(fn, that, entries ? 2 : 1);\n  var index = 0;\n  var length, step, iterator, result;\n  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');\n  // fast case for arrays with default iterator\n  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n    if (result === BREAK || result === RETURN) return result;\n  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {\n    result = call(iterator, f, step.value, entries);\n    if (result === BREAK || result === RETURN) return result;\n  }\n};\nexports.BREAK = BREAK;\nexports.RETURN = RETURN;\n","// 7.3.20 SpeciesConstructor(O, defaultConstructor)\nvar anObject = require('./_an-object');\nvar aFunction = require('./_a-function');\nvar SPECIES = require('./_wks')('species');\nmodule.exports = function (O, D) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};\n","var global = require('./_global');\nvar navigator = global.navigator;\n\nmodule.exports = navigator && navigator.userAgent || '';\n","'use strict';\nvar global = require('./_global');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar redefineAll = require('./_redefine-all');\nvar meta = require('./_meta');\nvar forOf = require('./_for-of');\nvar anInstance = require('./_an-instance');\nvar isObject = require('./_is-object');\nvar fails = require('./_fails');\nvar $iterDetect = require('./_iter-detect');\nvar setToStringTag = require('./_set-to-string-tag');\nvar inheritIfRequired = require('./_inherit-if-required');\n\nmodule.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {\n  var Base = global[NAME];\n  var C = Base;\n  var ADDER = IS_MAP ? 'set' : 'add';\n  var proto = C && C.prototype;\n  var O = {};\n  var fixMethod = function (KEY) {\n    var fn = proto[KEY];\n    redefine(proto, KEY,\n      KEY == 'delete' ? function (a) {\n        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\n      } : KEY == 'has' ? function has(a) {\n        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\n      } : KEY == 'get' ? function get(a) {\n        return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);\n      } : KEY == 'add' ? function add(a) { fn.call(this, a === 0 ? 0 : a); return this; }\n        : function set(a, b) { fn.call(this, a === 0 ? 0 : a, b); return this; }\n    );\n  };\n  if (typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {\n    new C().entries().next();\n  }))) {\n    // create collection constructor\n    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);\n    redefineAll(C.prototype, methods);\n    meta.NEED = true;\n  } else {\n    var instance = new C();\n    // early implementations not supports chaining\n    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;\n    // V8 ~  Chromium 40- weak-collections throws on primitives, but should return false\n    var THROWS_ON_PRIMITIVES = fails(function () { instance.has(1); });\n    // most early implementations doesn't supports iterables, most modern - not close it correctly\n    var ACCEPT_ITERABLES = $iterDetect(function (iter) { new C(iter); }); // eslint-disable-line no-new\n    // for early implementations -0 and +0 not the same\n    var BUGGY_ZERO = !IS_WEAK && fails(function () {\n      // V8 ~ Chromium 42- fails only with 5+ elements\n      var $instance = new C();\n      var index = 5;\n      while (index--) $instance[ADDER](index, index);\n      return !$instance.has(-0);\n    });\n    if (!ACCEPT_ITERABLES) {\n      C = wrapper(function (target, iterable) {\n        anInstance(target, C, NAME);\n        var that = inheritIfRequired(new Base(), target, C);\n        if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n        return that;\n      });\n      C.prototype = proto;\n      proto.constructor = C;\n    }\n    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {\n      fixMethod('delete');\n      fixMethod('has');\n      IS_MAP && fixMethod('get');\n    }\n    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);\n    // weak collections should not contains .clear method\n    if (IS_WEAK && proto.clear) delete proto.clear;\n  }\n\n  setToStringTag(C, NAME);\n\n  O[NAME] = C;\n  $export($export.G + $export.W + $export.F * (C != Base), O);\n\n  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);\n\n  return C;\n};\n","var global = require('./_global');\nvar hide = require('./_hide');\nvar uid = require('./_uid');\nvar TYPED = uid('typed_array');\nvar VIEW = uid('view');\nvar ABV = !!(global.ArrayBuffer && global.DataView);\nvar CONSTR = ABV;\nvar i = 0;\nvar l = 9;\nvar Typed;\n\nvar TypedArrayConstructors = (\n  'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'\n).split(',');\n\nwhile (i < l) {\n  if (Typed = global[TypedArrayConstructors[i++]]) {\n    hide(Typed.prototype, TYPED, true);\n    hide(Typed.prototype, VIEW, true);\n  } else CONSTR = false;\n}\n\nmodule.exports = {\n  ABV: ABV,\n  CONSTR: CONSTR,\n  TYPED: TYPED,\n  VIEW: VIEW\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n","var core = require('./_core');\nvar global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: core.version,\n  mode: require('./_library') ? 'pure' : 'global',\n  copyright: '© 2018 Denis Pushkarev (zloirock.ru)'\n});\n","exports.f = require('./_wks');\n","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n","// 7.2.2 IsArray(argument)\nvar cof = require('./_cof');\nmodule.exports = Array.isArray || function isArray(arg) {\n  return cof(arg) == 'Array';\n};\n","var document = require('./_global').document;\nmodule.exports = document && document.documentElement;\n","// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nvar isObject = require('./_is-object');\nvar anObject = require('./_an-object');\nvar check = function (O, proto) {\n  anObject(O);\n  if (!isObject(proto) && proto !== null) throw TypeError(proto + \": can't set as prototype!\");\n};\nmodule.exports = {\n  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\n    function (test, buggy, set) {\n      try {\n        set = require('./_ctx')(Function.call, require('./_object-gopd').f(Object.prototype, '__proto__').set, 2);\n        set(test, []);\n        buggy = !(test instanceof Array);\n      } catch (e) { buggy = true; }\n      return function setPrototypeOf(O, proto) {\n        check(O, proto);\n        if (buggy) O.__proto__ = proto;\n        else set(O, proto);\n        return O;\n      };\n    }({}, false) : undefined),\n  check: check\n};\n","module.exports = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +\n  '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","var isObject = require('./_is-object');\nvar setPrototypeOf = require('./_set-proto').set;\nmodule.exports = function (that, target, C) {\n  var S = target.constructor;\n  var P;\n  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {\n    setPrototypeOf(that, P);\n  } return that;\n};\n","'use strict';\nvar toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n\nmodule.exports = function repeat(count) {\n  var str = String(defined(this));\n  var res = '';\n  var n = toInteger(count);\n  if (n < 0 || n == Infinity) throw RangeError(\"Count can't be negative\");\n  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) res += str;\n  return res;\n};\n","// 20.2.2.28 Math.sign(x)\nmodule.exports = Math.sign || function sign(x) {\n  // eslint-disable-next-line no-self-compare\n  return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;\n};\n","// 20.2.2.14 Math.expm1(x)\nvar $expm1 = Math.expm1;\nmodule.exports = (!$expm1\n  // Old FF bug\n  || $expm1(10) > 22025.465794806719 || $expm1(10) < 22025.4657948067165168\n  // Tor Browser bug\n  || $expm1(-2e-17) != -2e-17\n) ? function expm1(x) {\n  return (x = +x) == 0 ? x : x > -1e-6 && x < 1e-6 ? x + x * x / 2 : Math.exp(x) - 1;\n} : $expm1;\n","'use strict';\nvar LIBRARY = require('./_library');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar $iterCreate = require('./_iter-create');\nvar setToStringTag = require('./_set-to-string-tag');\nvar getPrototypeOf = require('./_object-gpo');\nvar ITERATOR = require('./_wks')('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n","// helper for String#{startsWith, endsWith, includes}\nvar isRegExp = require('./_is-regexp');\nvar defined = require('./_defined');\n\nmodule.exports = function (that, searchString, NAME) {\n  if (isRegExp(searchString)) throw TypeError('String#' + NAME + \" doesn't accept regex!\");\n  return String(defined(that));\n};\n","// 7.2.8 IsRegExp(argument)\nvar isObject = require('./_is-object');\nvar cof = require('./_cof');\nvar MATCH = require('./_wks')('match');\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');\n};\n","var MATCH = require('./_wks')('match');\nmodule.exports = function (KEY) {\n  var re = /./;\n  try {\n    '/./'[KEY](re);\n  } catch (e) {\n    try {\n      re[MATCH] = false;\n      return !'/./'[KEY](re);\n    } catch (f) { /* empty */ }\n  } return true;\n};\n","// check on default Array iterator\nvar Iterators = require('./_iterators');\nvar ITERATOR = require('./_wks')('iterator');\nvar ArrayProto = Array.prototype;\n\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n","'use strict';\nvar $defineProperty = require('./_object-dp');\nvar createDesc = require('./_property-desc');\n\nmodule.exports = function (object, index, value) {\n  if (index in object) $defineProperty.f(object, index, createDesc(0, value));\n  else object[index] = value;\n};\n","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var aLen = arguments.length;\n  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n  var end = aLen > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables');\nvar step = require('./_iter-step');\nvar Iterators = require('./_iterators');\nvar toIObject = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n","'use strict';\n// 21.2.5.3 get RegExp.prototype.flags\nvar anObject = require('./_an-object');\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.unicode) result += 'u';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","var ctx = require('./_ctx');\nvar invoke = require('./_invoke');\nvar html = require('./_html');\nvar cel = require('./_dom-create');\nvar global = require('./_global');\nvar process = global.process;\nvar setTask = global.setImmediate;\nvar clearTask = global.clearImmediate;\nvar MessageChannel = global.MessageChannel;\nvar Dispatch = global.Dispatch;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar defer, channel, port;\nvar run = function () {\n  var id = +this;\n  // eslint-disable-next-line no-prototype-builtins\n  if (queue.hasOwnProperty(id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\nvar listener = function (event) {\n  run.call(event.data);\n};\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif (!setTask || !clearTask) {\n  setTask = function setImmediate(fn) {\n    var args = [];\n    var i = 1;\n    while (arguments.length > i) args.push(arguments[i++]);\n    queue[++counter] = function () {\n      // eslint-disable-next-line no-new-func\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function clearImmediate(id) {\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if (require('./_cof')(process) == 'process') {\n    defer = function (id) {\n      process.nextTick(ctx(run, id, 1));\n    };\n  // Sphere (JS game engine) Dispatch API\n  } else if (Dispatch && Dispatch.now) {\n    defer = function (id) {\n      Dispatch.now(ctx(run, id, 1));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  } else if (MessageChannel) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = ctx(port.postMessage, port, 1);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {\n    defer = function (id) {\n      global.postMessage(id + '', '*');\n    };\n    global.addEventListener('message', listener, false);\n  // IE8-\n  } else if (ONREADYSTATECHANGE in cel('script')) {\n    defer = function (id) {\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function (id) {\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set: setTask,\n  clear: clearTask\n};\n","'use strict';\nvar global = require('./_global');\nvar DESCRIPTORS = require('./_descriptors');\nvar LIBRARY = require('./_library');\nvar $typed = require('./_typed');\nvar hide = require('./_hide');\nvar redefineAll = require('./_redefine-all');\nvar fails = require('./_fails');\nvar anInstance = require('./_an-instance');\nvar toInteger = require('./_to-integer');\nvar toLength = require('./_to-length');\nvar toIndex = require('./_to-index');\nvar gOPN = require('./_object-gopn').f;\nvar dP = require('./_object-dp').f;\nvar arrayFill = require('./_array-fill');\nvar setToStringTag = require('./_set-to-string-tag');\nvar ARRAY_BUFFER = 'ArrayBuffer';\nvar DATA_VIEW = 'DataView';\nvar PROTOTYPE = 'prototype';\nvar WRONG_LENGTH = 'Wrong length!';\nvar WRONG_INDEX = 'Wrong index!';\nvar $ArrayBuffer = global[ARRAY_BUFFER];\nvar $DataView = global[DATA_VIEW];\nvar Math = global.Math;\nvar RangeError = global.RangeError;\n// eslint-disable-next-line no-shadow-restricted-names\nvar Infinity = global.Infinity;\nvar BaseBuffer = $ArrayBuffer;\nvar abs = Math.abs;\nvar pow = Math.pow;\nvar floor = Math.floor;\nvar log = Math.log;\nvar LN2 = Math.LN2;\nvar BUFFER = 'buffer';\nvar BYTE_LENGTH = 'byteLength';\nvar BYTE_OFFSET = 'byteOffset';\nvar $BUFFER = DESCRIPTORS ? '_b' : BUFFER;\nvar $LENGTH = DESCRIPTORS ? '_l' : BYTE_LENGTH;\nvar $OFFSET = DESCRIPTORS ? '_o' : BYTE_OFFSET;\n\n// IEEE754 conversions based on https://github.com/feross/ieee754\nfunction packIEEE754(value, mLen, nBytes) {\n  var buffer = new Array(nBytes);\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0;\n  var i = 0;\n  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n  var e, m, c;\n  value = abs(value);\n  // eslint-disable-next-line no-self-compare\n  if (value != value || value === Infinity) {\n    // eslint-disable-next-line no-self-compare\n    m = value != value ? 1 : 0;\n    e = eMax;\n  } else {\n    e = floor(log(value) / LN2);\n    if (value * (c = pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * pow(2, eBias - 1) * pow(2, mLen);\n      e = 0;\n    }\n  }\n  for (; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8);\n  e = e << mLen | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8);\n  buffer[--i] |= s * 128;\n  return buffer;\n}\nfunction unpackIEEE754(buffer, mLen, nBytes) {\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = eLen - 7;\n  var i = nBytes - 1;\n  var s = buffer[i--];\n  var e = s & 127;\n  var m;\n  s >>= 7;\n  for (; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8);\n  m = e & (1 << -nBits) - 1;\n  e >>= -nBits;\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8);\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : s ? -Infinity : Infinity;\n  } else {\n    m = m + pow(2, mLen);\n    e = e - eBias;\n  } return (s ? -1 : 1) * m * pow(2, e - mLen);\n}\n\nfunction unpackI32(bytes) {\n  return bytes[3] << 24 | bytes[2] << 16 | bytes[1] << 8 | bytes[0];\n}\nfunction packI8(it) {\n  return [it & 0xff];\n}\nfunction packI16(it) {\n  return [it & 0xff, it >> 8 & 0xff];\n}\nfunction packI32(it) {\n  return [it & 0xff, it >> 8 & 0xff, it >> 16 & 0xff, it >> 24 & 0xff];\n}\nfunction packF64(it) {\n  return packIEEE754(it, 52, 8);\n}\nfunction packF32(it) {\n  return packIEEE754(it, 23, 4);\n}\n\nfunction addGetter(C, key, internal) {\n  dP(C[PROTOTYPE], key, { get: function () { return this[internal]; } });\n}\n\nfunction get(view, bytes, index, isLittleEndian) {\n  var numIndex = +index;\n  var intIndex = toIndex(numIndex);\n  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);\n  var store = view[$BUFFER]._b;\n  var start = intIndex + view[$OFFSET];\n  var pack = store.slice(start, start + bytes);\n  return isLittleEndian ? pack : pack.reverse();\n}\nfunction set(view, bytes, index, conversion, value, isLittleEndian) {\n  var numIndex = +index;\n  var intIndex = toIndex(numIndex);\n  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);\n  var store = view[$BUFFER]._b;\n  var start = intIndex + view[$OFFSET];\n  var pack = conversion(+value);\n  for (var i = 0; i < bytes; i++) store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];\n}\n\nif (!$typed.ABV) {\n  $ArrayBuffer = function ArrayBuffer(length) {\n    anInstance(this, $ArrayBuffer, ARRAY_BUFFER);\n    var byteLength = toIndex(length);\n    this._b = arrayFill.call(new Array(byteLength), 0);\n    this[$LENGTH] = byteLength;\n  };\n\n  $DataView = function DataView(buffer, byteOffset, byteLength) {\n    anInstance(this, $DataView, DATA_VIEW);\n    anInstance(buffer, $ArrayBuffer, DATA_VIEW);\n    var bufferLength = buffer[$LENGTH];\n    var offset = toInteger(byteOffset);\n    if (offset < 0 || offset > bufferLength) throw RangeError('Wrong offset!');\n    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);\n    if (offset + byteLength > bufferLength) throw RangeError(WRONG_LENGTH);\n    this[$BUFFER] = buffer;\n    this[$OFFSET] = offset;\n    this[$LENGTH] = byteLength;\n  };\n\n  if (DESCRIPTORS) {\n    addGetter($ArrayBuffer, BYTE_LENGTH, '_l');\n    addGetter($DataView, BUFFER, '_b');\n    addGetter($DataView, BYTE_LENGTH, '_l');\n    addGetter($DataView, BYTE_OFFSET, '_o');\n  }\n\n  redefineAll($DataView[PROTOTYPE], {\n    getInt8: function getInt8(byteOffset) {\n      return get(this, 1, byteOffset)[0] << 24 >> 24;\n    },\n    getUint8: function getUint8(byteOffset) {\n      return get(this, 1, byteOffset)[0];\n    },\n    getInt16: function getInt16(byteOffset /* , littleEndian */) {\n      var bytes = get(this, 2, byteOffset, arguments[1]);\n      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;\n    },\n    getUint16: function getUint16(byteOffset /* , littleEndian */) {\n      var bytes = get(this, 2, byteOffset, arguments[1]);\n      return bytes[1] << 8 | bytes[0];\n    },\n    getInt32: function getInt32(byteOffset /* , littleEndian */) {\n      return unpackI32(get(this, 4, byteOffset, arguments[1]));\n    },\n    getUint32: function getUint32(byteOffset /* , littleEndian */) {\n      return unpackI32(get(this, 4, byteOffset, arguments[1])) >>> 0;\n    },\n    getFloat32: function getFloat32(byteOffset /* , littleEndian */) {\n      return unpackIEEE754(get(this, 4, byteOffset, arguments[1]), 23, 4);\n    },\n    getFloat64: function getFloat64(byteOffset /* , littleEndian */) {\n      return unpackIEEE754(get(this, 8, byteOffset, arguments[1]), 52, 8);\n    },\n    setInt8: function setInt8(byteOffset, value) {\n      set(this, 1, byteOffset, packI8, value);\n    },\n    setUint8: function setUint8(byteOffset, value) {\n      set(this, 1, byteOffset, packI8, value);\n    },\n    setInt16: function setInt16(byteOffset, value /* , littleEndian */) {\n      set(this, 2, byteOffset, packI16, value, arguments[2]);\n    },\n    setUint16: function setUint16(byteOffset, value /* , littleEndian */) {\n      set(this, 2, byteOffset, packI16, value, arguments[2]);\n    },\n    setInt32: function setInt32(byteOffset, value /* , littleEndian */) {\n      set(this, 4, byteOffset, packI32, value, arguments[2]);\n    },\n    setUint32: function setUint32(byteOffset, value /* , littleEndian */) {\n      set(this, 4, byteOffset, packI32, value, arguments[2]);\n    },\n    setFloat32: function setFloat32(byteOffset, value /* , littleEndian */) {\n      set(this, 4, byteOffset, packF32, value, arguments[2]);\n    },\n    setFloat64: function setFloat64(byteOffset, value /* , littleEndian */) {\n      set(this, 8, byteOffset, packF64, value, arguments[2]);\n    }\n  });\n} else {\n  if (!fails(function () {\n    $ArrayBuffer(1);\n  }) || !fails(function () {\n    new $ArrayBuffer(-1); // eslint-disable-line no-new\n  }) || fails(function () {\n    new $ArrayBuffer(); // eslint-disable-line no-new\n    new $ArrayBuffer(1.5); // eslint-disable-line no-new\n    new $ArrayBuffer(NaN); // eslint-disable-line no-new\n    return $ArrayBuffer.name != ARRAY_BUFFER;\n  })) {\n    $ArrayBuffer = function ArrayBuffer(length) {\n      anInstance(this, $ArrayBuffer);\n      return new BaseBuffer(toIndex(length));\n    };\n    var ArrayBufferProto = $ArrayBuffer[PROTOTYPE] = BaseBuffer[PROTOTYPE];\n    for (var keys = gOPN(BaseBuffer), j = 0, key; keys.length > j;) {\n      if (!((key = keys[j++]) in $ArrayBuffer)) hide($ArrayBuffer, key, BaseBuffer[key]);\n    }\n    if (!LIBRARY) ArrayBufferProto.constructor = $ArrayBuffer;\n  }\n  // iOS Safari 7.x bug\n  var view = new $DataView(new $ArrayBuffer(2));\n  var $setInt8 = $DataView[PROTOTYPE].setInt8;\n  view.setInt8(0, 2147483648);\n  view.setInt8(1, 2147483649);\n  if (view.getInt8(0) || !view.getInt8(1)) redefineAll($DataView[PROTOTYPE], {\n    setInt8: function setInt8(byteOffset, value) {\n      $setInt8.call(this, byteOffset, value << 24 >> 24);\n    },\n    setUint8: function setUint8(byteOffset, value) {\n      $setInt8.call(this, byteOffset, value << 24 >> 24);\n    }\n  }, true);\n}\nsetToStringTag($ArrayBuffer, ARRAY_BUFFER);\nsetToStringTag($DataView, DATA_VIEW);\nhide($DataView[PROTOTYPE], $typed.VIEW, true);\nexports[ARRAY_BUFFER] = $ArrayBuffer;\nexports[DATA_VIEW] = $DataView;\n","function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nmodule.exports = _nonIterableRest;","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","'use strict';\n\nvar VectorTileLayer = require('./vectortilelayer');\n\nmodule.exports = VectorTile;\n\nfunction VectorTile(pbf, end) {\n    this.layers = pbf.readFields(readTile, {}, end);\n}\n\nfunction readTile(tag, layers, pbf) {\n    if (tag === 3) {\n        var layer = new VectorTileLayer(pbf, pbf.readVarint() + pbf.pos);\n        if (layer.length) layers[layer.name] = layer;\n    }\n}\n\n","'use strict';\n\nmodule.exports = Point;\n\n/**\n * A standalone point geometry with useful accessor, comparison, and\n * modification methods.\n *\n * @class Point\n * @param {Number} x the x-coordinate. this could be longitude or screen\n * pixels, or any other sort of unit.\n * @param {Number} y the y-coordinate. this could be latitude or screen\n * pixels, or any other sort of unit.\n * @example\n * var point = new Point(-77, 38);\n */\nfunction Point(x, y) {\n    this.x = x;\n    this.y = y;\n}\n\nPoint.prototype = {\n\n    /**\n     * Clone this point, returning a new point that can be modified\n     * without affecting the old one.\n     * @return {Point} the clone\n     */\n    clone: function() { return new Point(this.x, this.y); },\n\n    /**\n     * Add this point's x & y coordinates to another point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    add:     function(p) { return this.clone()._add(p); },\n\n    /**\n     * Subtract this point's x & y coordinates to from point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    sub:     function(p) { return this.clone()._sub(p); },\n\n    /**\n     * Multiply this point's x & y coordinates by point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    multByPoint:    function(p) { return this.clone()._multByPoint(p); },\n\n    /**\n     * Divide this point's x & y coordinates by point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    divByPoint:     function(p) { return this.clone()._divByPoint(p); },\n\n    /**\n     * Multiply this point's x & y coordinates by a factor,\n     * yielding a new point.\n     * @param {Point} k factor\n     * @return {Point} output point\n     */\n    mult:    function(k) { return this.clone()._mult(k); },\n\n    /**\n     * Divide this point's x & y coordinates by a factor,\n     * yielding a new point.\n     * @param {Point} k factor\n     * @return {Point} output point\n     */\n    div:     function(k) { return this.clone()._div(k); },\n\n    /**\n     * Rotate this point around the 0, 0 origin by an angle a,\n     * given in radians\n     * @param {Number} a angle to rotate around, in radians\n     * @return {Point} output point\n     */\n    rotate:  function(a) { return this.clone()._rotate(a); },\n\n    /**\n     * Rotate this point around p point by an angle a,\n     * given in radians\n     * @param {Number} a angle to rotate around, in radians\n     * @param {Point} p Point to rotate around\n     * @return {Point} output point\n     */\n    rotateAround:  function(a,p) { return this.clone()._rotateAround(a,p); },\n\n    /**\n     * Multiply this point by a 4x1 transformation matrix\n     * @param {Array<Number>} m transformation matrix\n     * @return {Point} output point\n     */\n    matMult: function(m) { return this.clone()._matMult(m); },\n\n    /**\n     * Calculate this point but as a unit vector from 0, 0, meaning\n     * that the distance from the resulting point to the 0, 0\n     * coordinate will be equal to 1 and the angle from the resulting\n     * point to the 0, 0 coordinate will be the same as before.\n     * @return {Point} unit vector point\n     */\n    unit:    function() { return this.clone()._unit(); },\n\n    /**\n     * Compute a perpendicular point, where the new y coordinate\n     * is the old x coordinate and the new x coordinate is the old y\n     * coordinate multiplied by -1\n     * @return {Point} perpendicular point\n     */\n    perp:    function() { return this.clone()._perp(); },\n\n    /**\n     * Return a version of this point with the x & y coordinates\n     * rounded to integers.\n     * @return {Point} rounded point\n     */\n    round:   function() { return this.clone()._round(); },\n\n    /**\n     * Return the magitude of this point: this is the Euclidean\n     * distance from the 0, 0 coordinate to this point's x and y\n     * coordinates.\n     * @return {Number} magnitude\n     */\n    mag: function() {\n        return Math.sqrt(this.x * this.x + this.y * this.y);\n    },\n\n    /**\n     * Judge whether this point is equal to another point, returning\n     * true or false.\n     * @param {Point} other the other point\n     * @return {boolean} whether the points are equal\n     */\n    equals: function(other) {\n        return this.x === other.x &&\n               this.y === other.y;\n    },\n\n    /**\n     * Calculate the distance from this point to another point\n     * @param {Point} p the other point\n     * @return {Number} distance\n     */\n    dist: function(p) {\n        return Math.sqrt(this.distSqr(p));\n    },\n\n    /**\n     * Calculate the distance from this point to another point,\n     * without the square root step. Useful if you're comparing\n     * relative distances.\n     * @param {Point} p the other point\n     * @return {Number} distance\n     */\n    distSqr: function(p) {\n        var dx = p.x - this.x,\n            dy = p.y - this.y;\n        return dx * dx + dy * dy;\n    },\n\n    /**\n     * Get the angle from the 0, 0 coordinate to this point, in radians\n     * coordinates.\n     * @return {Number} angle\n     */\n    angle: function() {\n        return Math.atan2(this.y, this.x);\n    },\n\n    /**\n     * Get the angle from this point to another point, in radians\n     * @param {Point} b the other point\n     * @return {Number} angle\n     */\n    angleTo: function(b) {\n        return Math.atan2(this.y - b.y, this.x - b.x);\n    },\n\n    /**\n     * Get the angle between this point and another point, in radians\n     * @param {Point} b the other point\n     * @return {Number} angle\n     */\n    angleWith: function(b) {\n        return this.angleWithSep(b.x, b.y);\n    },\n\n    /*\n     * Find the angle of the two vectors, solving the formula for\n     * the cross product a x b = |a||b|sin(θ) for θ.\n     * @param {Number} x the x-coordinate\n     * @param {Number} y the y-coordinate\n     * @return {Number} the angle in radians\n     */\n    angleWithSep: function(x, y) {\n        return Math.atan2(\n            this.x * y - this.y * x,\n            this.x * x + this.y * y);\n    },\n\n    _matMult: function(m) {\n        var x = m[0] * this.x + m[1] * this.y,\n            y = m[2] * this.x + m[3] * this.y;\n        this.x = x;\n        this.y = y;\n        return this;\n    },\n\n    _add: function(p) {\n        this.x += p.x;\n        this.y += p.y;\n        return this;\n    },\n\n    _sub: function(p) {\n        this.x -= p.x;\n        this.y -= p.y;\n        return this;\n    },\n\n    _mult: function(k) {\n        this.x *= k;\n        this.y *= k;\n        return this;\n    },\n\n    _div: function(k) {\n        this.x /= k;\n        this.y /= k;\n        return this;\n    },\n\n    _multByPoint: function(p) {\n        this.x *= p.x;\n        this.y *= p.y;\n        return this;\n    },\n\n    _divByPoint: function(p) {\n        this.x /= p.x;\n        this.y /= p.y;\n        return this;\n    },\n\n    _unit: function() {\n        this._div(this.mag());\n        return this;\n    },\n\n    _perp: function() {\n        var y = this.y;\n        this.y = this.x;\n        this.x = -y;\n        return this;\n    },\n\n    _rotate: function(angle) {\n        var cos = Math.cos(angle),\n            sin = Math.sin(angle),\n            x = cos * this.x - sin * this.y,\n            y = sin * this.x + cos * this.y;\n        this.x = x;\n        this.y = y;\n        return this;\n    },\n\n    _rotateAround: function(angle, p) {\n        var cos = Math.cos(angle),\n            sin = Math.sin(angle),\n            x = p.x + cos * (this.x - p.x) - sin * (this.y - p.y),\n            y = p.y + sin * (this.x - p.x) + cos * (this.y - p.y);\n        this.x = x;\n        this.y = y;\n        return this;\n    },\n\n    _round: function() {\n        this.x = Math.round(this.x);\n        this.y = Math.round(this.y);\n        return this;\n    }\n};\n\n/**\n * Construct a point from an array if necessary, otherwise if the input\n * is already a Point, or an unknown type, return it unchanged\n * @param {Array<Number>|Point|*} a any kind of input value\n * @return {Point} constructed point, or passed-through value.\n * @example\n * // this\n * var point = Point.convert([0, 1]);\n * // is equivalent to\n * var point = new Point(0, 1);\n */\nPoint.convert = function (a) {\n    if (a instanceof Point) {\n        return a;\n    }\n    if (Array.isArray(a)) {\n        return new Point(a[0], a[1]);\n    }\n    return a;\n};\n","var getPrototypeOf = require(\"./getPrototypeOf\");\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nmodule.exports = _superPropBase;",";(function() {\n\n\"use strict\";\n\nvar root = this\n\nvar has_require = typeof require !== 'undefined'\n\nvar THREE = root.THREE || has_require && require('three')\nif( !THREE )\n\tthrow new Error( 'MeshLine requires three.js' )\n\nfunction MeshLine() {\n\n\tthis.positions = [];\n\n\tthis.previous = [];\n\tthis.next = [];\n\tthis.side = [];\n\tthis.width = [];\n\tthis.indices_array = [];\n\tthis.uvs = [];\n\tthis.counters = [];\n\tthis.geometry = new THREE.BufferGeometry();\n\n\tthis.widthCallback = null;\n\n}\n\nMeshLine.prototype.setGeometry = function( g, c ) {\n\n\tthis.widthCallback = c;\n\n\tthis.positions = [];\n\tthis.counters = [];\n\n\tif( g instanceof THREE.Geometry ) {\n\t\tfor( var j = 0; j < g.vertices.length; j++ ) {\n\t\t\tvar v = g.vertices[ j ];\n\t\t\tvar c = j/g.vertices.length;\n\t\t\tthis.positions.push( v.x, v.y, v.z );\n\t\t\tthis.positions.push( v.x, v.y, v.z );\n\t\t\tthis.counters.push(c);\n\t\t\tthis.counters.push(c);\n\t\t}\n\t}\n\n\tif( g instanceof THREE.BufferGeometry ) {\n\t\t// read attribute positions ?\n\t}\n\n\tif( g instanceof Float32Array || g instanceof Array ) {\n\t\tfor( var j = 0; j < g.length; j += 3 ) {\n\t\t\tvar c = j/g.length;\n\t\t\tthis.positions.push( g[ j ], g[ j + 1 ], g[ j + 2 ] );\n\t\t\tthis.positions.push( g[ j ], g[ j + 1 ], g[ j + 2 ] );\n\t\t\tthis.counters.push(c);\n\t\t\tthis.counters.push(c);\n\t\t}\n\t}\n\n\tthis.process();\n\n}\n\nMeshLine.prototype.compareV3 = function( a, b ) {\n\n\tvar aa = a * 6;\n\tvar ab = b * 6;\n\treturn ( this.positions[ aa ] === this.positions[ ab ] ) && ( this.positions[ aa + 1 ] === this.positions[ ab + 1 ] ) && ( this.positions[ aa + 2 ] === this.positions[ ab + 2 ] );\n\n}\n\nMeshLine.prototype.copyV3 = function( a ) {\n\n\tvar aa = a * 6;\n\treturn [ this.positions[ aa ], this.positions[ aa + 1 ], this.positions[ aa + 2 ] ];\n\n}\n\nMeshLine.prototype.process = function() {\n\n\tvar l = this.positions.length / 6;\n\n\tthis.previous = [];\n\tthis.next = [];\n\tthis.side = [];\n\tthis.width = [];\n\tthis.indices_array = [];\n\tthis.uvs = [];\n\n\tfor( var j = 0; j < l; j++ ) {\n\t\tthis.side.push( 1 );\n\t\tthis.side.push( -1 );\n\t}\n\n\tvar w;\n\tfor( var j = 0; j < l; j++ ) {\n\t\tif( this.widthCallback ) w = this.widthCallback( j / ( l -1 ) );\n\t\telse w = 1;\n\t\tthis.width.push( w );\n\t\tthis.width.push( w );\n\t}\n\n\tfor( var j = 0; j < l; j++ ) {\n\t\tthis.uvs.push( j / ( l - 1 ), 0 );\n\t\tthis.uvs.push( j / ( l - 1 ), 1 );\n\t}\n\n\tvar v;\n\n\tif( this.compareV3( 0, l - 1 ) ){\n\t\tv = this.copyV3( l - 2 );\n\t} else {\n\t\tv = this.copyV3( 0 );\n\t}\n\tthis.previous.push( v[ 0 ], v[ 1 ], v[ 2 ] );\n\tthis.previous.push( v[ 0 ], v[ 1 ], v[ 2 ] );\n\tfor( var j = 0; j < l - 1; j++ ) {\n\t\tv = this.copyV3( j );\n\t\tthis.previous.push( v[ 0 ], v[ 1 ], v[ 2 ] );\n\t\tthis.previous.push( v[ 0 ], v[ 1 ], v[ 2 ] );\n\t}\n\n\tfor( var j = 1; j < l; j++ ) {\n\t\tv = this.copyV3( j );\n\t\tthis.next.push( v[ 0 ], v[ 1 ], v[ 2 ] );\n\t\tthis.next.push( v[ 0 ], v[ 1 ], v[ 2 ] );\n\t}\n\n\tif( this.compareV3( l - 1, 0 ) ){\n\t\tv = this.copyV3( 1 );\n\t} else {\n\t\tv = this.copyV3( l - 1 );\n\t}\n\tthis.next.push( v[ 0 ], v[ 1 ], v[ 2 ] );\n\tthis.next.push( v[ 0 ], v[ 1 ], v[ 2 ] );\n\n\tfor( var j = 0; j < l - 1; j++ ) {\n\t\tvar n = j * 2;\n\t\tthis.indices_array.push( n, n + 1, n + 2 );\n\t\tthis.indices_array.push( n + 2, n + 1, n + 3 );\n\t}\n\n\tif (!this.attributes) {\n\t\tthis.attributes = {\n\t\t\tposition: new THREE.BufferAttribute( new Float32Array( this.positions ), 3 ),\n\t\t\tprevious: new THREE.BufferAttribute( new Float32Array( this.previous ), 3 ),\n\t\t\tnext: new THREE.BufferAttribute( new Float32Array( this.next ), 3 ),\n\t\t\tside: new THREE.BufferAttribute( new Float32Array( this.side ), 1 ),\n\t\t\twidth: new THREE.BufferAttribute( new Float32Array( this.width ), 1 ),\n\t\t\tuv: new THREE.BufferAttribute( new Float32Array( this.uvs ), 2 ),\n\t\t\tindex: new THREE.BufferAttribute( new Uint16Array( this.indices_array ), 1 ),\n\t\t\tcounters: new THREE.BufferAttribute( new Float32Array( this.counters ), 1 )\n\t\t}\n\t} else {\n\t\tthis.attributes.position.copyArray(new Float32Array(this.positions));\n\t\tthis.attributes.position.needsUpdate = true;\n\t\tthis.attributes.previous.copyArray(new Float32Array(this.previous));\n\t\tthis.attributes.previous.needsUpdate = true;\n\t\tthis.attributes.next.copyArray(new Float32Array(this.next));\n\t\tthis.attributes.next.needsUpdate = true;\n\t\tthis.attributes.side.copyArray(new Float32Array(this.side));\n\t\tthis.attributes.side.needsUpdate = true;\n\t\tthis.attributes.width.copyArray(new Float32Array(this.width));\n\t\tthis.attributes.width.needsUpdate = true;\n\t\tthis.attributes.uv.copyArray(new Float32Array(this.uvs));\n\t\tthis.attributes.uv.needsUpdate = true;\n\t\tthis.attributes.index.copyArray(new Uint16Array(this.indices_array));\n\t\tthis.attributes.index.needsUpdate = true;\n    }\n\n\tthis.geometry.addAttribute( 'position', this.attributes.position );\n\tthis.geometry.addAttribute( 'previous', this.attributes.previous );\n\tthis.geometry.addAttribute( 'next', this.attributes.next );\n\tthis.geometry.addAttribute( 'side', this.attributes.side );\n\tthis.geometry.addAttribute( 'width', this.attributes.width );\n\tthis.geometry.addAttribute( 'uv', this.attributes.uv );\n\tthis.geometry.addAttribute( 'counters', this.attributes.counters );\n\n\tthis.geometry.setIndex( this.attributes.index );\n\n}\n\nfunction memcpy (src, srcOffset, dst, dstOffset, length) {\n\tvar i\n\n\tsrc = src.subarray || src.slice ? src : src.buffer\n\tdst = dst.subarray || dst.slice ? dst : dst.buffer\n\n\tsrc = srcOffset ? src.subarray ?\n\tsrc.subarray(srcOffset, length && srcOffset + length) :\n\tsrc.slice(srcOffset, length && srcOffset + length) : src\n\n\tif (dst.set) {\n\t\tdst.set(src, dstOffset)\n\t} else {\n\t\tfor (i=0; i<src.length; i++) {\n\t\t\tdst[i + dstOffset] = src[i]\n\t\t}\n\t}\n\n\treturn dst\n}\n\n/**\n * Fast method to advance the line by one position.  The oldest position is removed.\n * @param position\n */\nMeshLine.prototype.advance = function(position) {\n\n\tvar positions = this.attributes.position.array;\n\tvar previous = this.attributes.previous.array;\n\tvar next = this.attributes.next.array;\n\tvar l = positions.length;\n\n\t// PREVIOUS\n\tmemcpy( positions, 0, previous, 0, l );\n\n\t// POSITIONS\n\tmemcpy( positions, 6, positions, 0, l - 6 );\n\n\tpositions[l - 6] = position.x;\n\tpositions[l - 5] = position.y;\n\tpositions[l - 4] = position.z;\n\tpositions[l - 3] = position.x;\n\tpositions[l - 2] = position.y;\n\tpositions[l - 1] = position.z;\n\n    // NEXT\n\tmemcpy( positions, 6, next, 0, l - 6 );\n\n\tnext[l - 6]  = position.x;\n\tnext[l - 5]  = position.y;\n\tnext[l - 4]  = position.z;\n\tnext[l - 3]  = position.x;\n\tnext[l - 2]  = position.y;\n\tnext[l - 1]  = position.z;\n\n\tthis.attributes.position.needsUpdate = true;\n\tthis.attributes.previous.needsUpdate = true;\n\tthis.attributes.next.needsUpdate = true;\n\n};\n\nfunction MeshLineMaterial( parameters ) {\n\n\tvar vertexShaderSource = [\n'precision highp float;',\n'',\n'attribute vec3 position;',\n'attribute vec3 previous;',\n'attribute vec3 next;',\n'attribute float side;',\n'attribute float width;',\n'attribute vec2 uv;',\n'attribute float counters;',\n'',\n'uniform mat4 projectionMatrix;',\n'uniform mat4 modelViewMatrix;',\n'uniform vec2 resolution;',\n'uniform float lineWidth;',\n'uniform vec3 color;',\n'uniform float opacity;',\n'uniform float near;',\n'uniform float far;',\n'uniform float sizeAttenuation;',\n'',\n'varying vec2 vUV;',\n'varying vec4 vColor;',\n'varying float vCounters;',\n'',\n'vec2 fix( vec4 i, float aspect ) {',\n'',\n'    vec2 res = i.xy / i.w;',\n'    res.x *= aspect;',\n'\t vCounters = counters;',\n'    return res;',\n'',\n'}',\n'',\n'void main() {',\n'',\n'    float aspect = resolution.x / resolution.y;',\n'\t float pixelWidthRatio = 1. / (resolution.x * projectionMatrix[0][0]);',\n'',\n'    vColor = vec4( color, opacity );',\n'    vUV = uv;',\n'',\n'    mat4 m = projectionMatrix * modelViewMatrix;',\n'    vec4 finalPosition = m * vec4( position, 1.0 );',\n'    vec4 prevPos = m * vec4( previous, 1.0 );',\n'    vec4 nextPos = m * vec4( next, 1.0 );',\n'',\n'    vec2 currentP = fix( finalPosition, aspect );',\n'    vec2 prevP = fix( prevPos, aspect );',\n'    vec2 nextP = fix( nextPos, aspect );',\n'',\n'\t float pixelWidth = finalPosition.w * pixelWidthRatio;',\n'    float w = 1.8 * pixelWidth * lineWidth * width;',\n'',\n'    if( sizeAttenuation == 1. ) {',\n'        w = 1.8 * lineWidth * width;',\n'    }',\n'',\n'    vec2 dir;',\n'    if( nextP == currentP ) dir = normalize( currentP - prevP );',\n'    else if( prevP == currentP ) dir = normalize( nextP - currentP );',\n'    else {',\n'        vec2 dir1 = normalize( currentP - prevP );',\n'        vec2 dir2 = normalize( nextP - currentP );',\n'        dir = normalize( dir1 + dir2 );',\n'',\n'        vec2 perp = vec2( -dir1.y, dir1.x );',\n'        vec2 miter = vec2( -dir.y, dir.x );',\n'        //w = clamp( w / dot( miter, perp ), 0., 4. * lineWidth * width );',\n'',\n'    }',\n'',\n'    //vec2 normal = ( cross( vec3( dir, 0. ), vec3( 0., 0., 1. ) ) ).xy;',\n'    vec2 normal = vec2( -dir.y, dir.x );',\n'    normal.x /= aspect;',\n'    normal *= .5 * w;',\n'',\n'    vec4 offset = vec4( normal * side, 0.0, 1.0 );',\n'    finalPosition.xy += offset.xy;',\n'',\n'    gl_Position = finalPosition;',\n'',\n'}' ];\n\n\tvar fragmentShaderSource = [\n\t\t'#extension GL_OES_standard_derivatives : enable',\n'precision mediump float;',\n'',\n'uniform sampler2D map;',\n'uniform sampler2D alphaMap;',\n'uniform float useMap;',\n'uniform float useAlphaMap;',\n'uniform float useDash;',\n'uniform float dashArray;',\n'uniform float dashOffset;',\n'uniform float dashRatio;',\n'uniform float visibility;',\n'uniform float alphaTest;',\n'uniform vec2 repeat;',\n'',\n'varying vec2 vUV;',\n'varying vec4 vColor;',\n'varying float vCounters;',\n'',\n'void main() {',\n'',\n'    vec4 c = vColor;',\n'    if( useMap == 1. ) c *= texture2D( map, vUV * repeat );',\n'    if( useAlphaMap == 1. ) c.a *= texture2D( alphaMap, vUV * repeat ).a;',\n'    if( c.a < alphaTest ) discard;',\n'    if( useDash == 1. ){',\n'        c.a *= ceil(mod(vCounters + dashOffset, dashArray) - (dashArray * dashRatio));',\n'    }',\n'    gl_FragColor = c;',\n'    gl_FragColor.a *= step(vCounters, visibility);',\n'}' ];\n\n\tfunction check( v, d ) {\n\t\tif( v === undefined ) return d;\n\t\treturn v;\n\t}\n\n\tTHREE.Material.call( this );\n\n\tparameters = parameters || {};\n\n\tthis.lineWidth = check( parameters.lineWidth, 1 );\n\tthis.map = check( parameters.map, null );\n\tthis.useMap = check( parameters.useMap, 0 );\n\tthis.alphaMap = check( parameters.alphaMap, null );\n\tthis.useAlphaMap = check( parameters.useAlphaMap, 0 );\n\tthis.color = check( parameters.color, new THREE.Color( 0xffffff ) );\n\tthis.opacity = check( parameters.opacity, 1 );\n\tthis.resolution = check( parameters.resolution, new THREE.Vector2( 1, 1 ) );\n\tthis.sizeAttenuation = check( parameters.sizeAttenuation, 1 );\n\tthis.near = check( parameters.near, 1 );\n\tthis.far = check( parameters.far, 1 );\n\tthis.dashArray = check( parameters.dashArray, 0 );\n\tthis.dashOffset = check( parameters.dashOffset, 0 );\n\tthis.dashRatio = check( parameters.dashRatio, 0.5 );\n\tthis.useDash = ( this.dashArray !== 0 ) ? 1 : 0;\n\tthis.visibility = check( parameters.visibility, 1 );\n\tthis.alphaTest = check( parameters.alphaTest, 0 );\n\tthis.repeat = check( parameters.repeat, new THREE.Vector2( 1, 1 ) );\n\n\tvar material = new THREE.RawShaderMaterial( {\n\t\tuniforms:{\n\t\t\tlineWidth: { type: 'f', value: this.lineWidth },\n\t\t\tmap: { type: 't', value: this.map },\n\t\t\tuseMap: { type: 'f', value: this.useMap },\n\t\t\talphaMap: { type: 't', value: this.alphaMap },\n\t\t\tuseAlphaMap: { type: 'f', value: this.useAlphaMap },\n\t\t\tcolor: { type: 'c', value: this.color },\n\t\t\topacity: { type: 'f', value: this.opacity },\n\t\t\tresolution: { type: 'v2', value: this.resolution },\n\t\t\tsizeAttenuation: { type: 'f', value: this.sizeAttenuation },\n\t\t\tnear: { type: 'f', value: this.near },\n\t\t\tfar: { type: 'f', value: this.far },\n\t\t\tdashArray: { type: 'f', value: this.dashArray },\n\t\t\tdashOffset: { type: 'f', value: this.dashOffset },\n\t\t\tdashRatio: { type: 'f', value: this.dashRatio },\n\t\t\tuseDash: { type: 'f', value: this.useDash },\n\t\t\tvisibility: {type: 'f', value: this.visibility},\n\t\t\talphaTest: {type: 'f', value: this.alphaTest},\n\t\t\trepeat: { type: 'v2', value: this.repeat }\n\t\t},\n\t\tvertexShader: vertexShaderSource.join( '\\r\\n' ),\n\t\tfragmentShader: fragmentShaderSource.join( '\\r\\n' )\n\t});\n\n\tdelete parameters.lineWidth;\n\tdelete parameters.map;\n\tdelete parameters.useMap;\n\tdelete parameters.alphaMap;\n\tdelete parameters.useAlphaMap;\n\tdelete parameters.color;\n\tdelete parameters.opacity;\n\tdelete parameters.resolution;\n\tdelete parameters.sizeAttenuation;\n\tdelete parameters.near;\n\tdelete parameters.far;\n\tdelete parameters.dashArray;\n\tdelete parameters.dashOffset;\n\tdelete parameters.dashRatio;\n\tdelete parameters.visibility;\n\tdelete parameters.alphaTest;\n\tdelete parameters.repeat;\n\n\tmaterial.type = 'MeshLineMaterial';\n\n\tmaterial.setValues( parameters );\n\n\treturn material;\n\n};\n\nMeshLineMaterial.prototype = Object.create( THREE.Material.prototype );\nMeshLineMaterial.prototype.constructor = MeshLineMaterial;\n\nMeshLineMaterial.prototype.copy = function ( source ) {\n\n\tTHREE.Material.prototype.copy.call( this, source );\n\n\tthis.lineWidth = source.lineWidth;\n\tthis.map = source.map;\n\tthis.useMap = source.useMap;\n\tthis.alphaMap = source.alphaMap;\n\tthis.useAlphaMap = source.useAlphaMap;\n\tthis.color.copy( source.color );\n\tthis.opacity = source.opacity;\n\tthis.resolution.copy( source.resolution );\n\tthis.sizeAttenuation = source.sizeAttenuation;\n\tthis.near = source.near;\n\tthis.far = source.far;\n\tthis.dashArray.copy( source.dashArray );\n\tthis.dashOffset.copy( source.dashOffset );\n\tthis.dashRatio.copy( source.dashRatio );\n\tthis.useDash = source.useDash;\n\tthis.visibility = source.visibility;\n\tthis.alphaTest = source.alphaTest;\n\tthis.repeat.copy( source.repeat );\n\n\treturn this;\n\n};\n\nif( typeof exports !== 'undefined' ) {\n\tif( typeof module !== 'undefined' && module.exports ) {\n\t\texports = module.exports = { MeshLine: MeshLine, MeshLineMaterial: MeshLineMaterial };\n\t}\n\texports.MeshLine = MeshLine;\n\texports.MeshLineMaterial = MeshLineMaterial;\n}\nelse {\n\troot.MeshLine = MeshLine;\n\troot.MeshLineMaterial = MeshLineMaterial;\n}\n\n}).call(this);\n","'use strict';\n\nmodule.exports = earcut;\nmodule.exports.default = earcut;\n\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, invSize;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 1 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) break;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\n    var stop = ear,\n        prev, next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim);\n            triangles.push(ear.i / dim);\n            triangles.push(next.i / dim);\n\n            removeNode(ear);\n\n            // skipping the next vertice leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n            // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(ear, triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n            // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var p = ear.next.next;\n\n    while (p !== ear.prev) {\n        if (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // triangle bbox; min & max are calculated like this for speed\n    var minTX = a.x < b.x ? (a.x < c.x ? a.x : c.x) : (b.x < c.x ? b.x : c.x),\n        minTY = a.y < b.y ? (a.y < c.y ? a.y : c.y) : (b.y < c.y ? b.y : c.y),\n        maxTX = a.x > b.x ? (a.x > c.x ? a.x : c.x) : (b.x > c.x ? b.x : c.x),\n        maxTY = a.y > b.y ? (a.y > c.y ? a.y : c.y) : (b.y > c.y ? b.y : c.y);\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(minTX, minTY, minX, minY, invSize),\n        maxZ = zOrder(maxTX, maxTY, minX, minY, invSize);\n\n    var p = ear.prevZ,\n        n = ear.nextZ;\n\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n\n        if (n !== ear.prev && n !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (n !== ear.prev && n !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim);\n            triangles.push(p.i / dim);\n            triangles.push(b.i / dim);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return p;\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize);\n                earcutLinked(c, triangles, dim, minX, minY, invSize);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        eliminateHole(queue[i], outerNode);\n        outerNode = filterPoints(outerNode, outerNode.next);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    outerNode = findHoleBridge(hole, outerNode);\n    if (outerNode) {\n        var b = splitPolygon(outerNode, hole);\n        filterPoints(b, b.next);\n    }\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                if (x === hx) {\n                    if (hy === p.y) return p;\n                    if (hy === p.next.y) return p.next;\n                }\n                m = p.x < p.next.x ? p : p.next;\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    if (hx === qx) return m.prev; // hole touches outer segment; pick lower endpoint\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m.next;\n\n    while (p !== stop) {\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if ((tan < tanMin || (tan === tanMin && p.x > m.x)) && locallyInside(p, hole)) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    }\n\n    return m;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    var p = start;\n    do {\n        if (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i, p, q, e, tail, numMerges, pSize, qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n            qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = 32767 * (x - minX) * invSize;\n    y = 32767 * (y - minY) * invSize;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 &&\n           (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 &&\n           (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) &&\n           locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b);\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    if ((equals(p1, q1) && equals(p2, q2)) ||\n        (equals(p1, q2) && equals(p2, q1))) return true;\n    return area(p1, q1, p2) > 0 !== area(p1, q1, q2) > 0 &&\n           area(p2, q2, p1) > 0 !== area(p2, q2, q1) > 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertice index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertice nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = null;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n","var global = require('./_global');\nvar core = require('./_core');\nvar LIBRARY = require('./_library');\nvar wksExt = require('./_wks-ext');\nvar defineProperty = require('./_object-dp').f;\nmodule.exports = function (name) {\n  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});\n  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });\n};\n","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","var dP = require('./_object-dp');\nvar anObject = require('./_an-object');\nvar getKeys = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n","// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nvar toIObject = require('./_to-iobject');\nvar gOPN = require('./_object-gopn').f;\nvar toString = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return gOPN(it);\n  } catch (e) {\n    return windowNames.slice();\n  }\n};\n\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));\n};\n","'use strict';\n// 19.1.2.1 Object.assign(target, source, ...)\nvar getKeys = require('./_object-keys');\nvar gOPS = require('./_object-gops');\nvar pIE = require('./_object-pie');\nvar toObject = require('./_to-object');\nvar IObject = require('./_iobject');\nvar $assign = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || require('./_fails')(function () {\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line no-undef\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) { B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n  var T = toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = gOPS.f;\n  var isEnum = pIE.f;\n  while (aLen > index) {\n    var S = IObject(arguments[index++]);\n    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n  } return T;\n} : $assign;\n","'use strict';\nvar aFunction = require('./_a-function');\nvar isObject = require('./_is-object');\nvar invoke = require('./_invoke');\nvar arraySlice = [].slice;\nvar factories = {};\n\nvar construct = function (F, len, args) {\n  if (!(len in factories)) {\n    for (var n = [], i = 0; i < len; i++) n[i] = 'a[' + i + ']';\n    // eslint-disable-next-line no-new-func\n    factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');\n  } return factories[len](F, args);\n};\n\nmodule.exports = Function.bind || function bind(that /* , ...args */) {\n  var fn = aFunction(this);\n  var partArgs = arraySlice.call(arguments, 1);\n  var bound = function (/* args... */) {\n    var args = partArgs.concat(arraySlice.call(arguments));\n    return this instanceof bound ? construct(fn, args.length, args) : invoke(fn, args, that);\n  };\n  if (isObject(fn.prototype)) bound.prototype = fn.prototype;\n  return bound;\n};\n","// fast apply, http://jsperf.lnkit.com/fast-apply/5\nmodule.exports = function (fn, args, that) {\n  var un = that === undefined;\n  switch (args.length) {\n    case 0: return un ? fn()\n                      : fn.call(that);\n    case 1: return un ? fn(args[0])\n                      : fn.call(that, args[0]);\n    case 2: return un ? fn(args[0], args[1])\n                      : fn.call(that, args[0], args[1]);\n    case 3: return un ? fn(args[0], args[1], args[2])\n                      : fn.call(that, args[0], args[1], args[2]);\n    case 4: return un ? fn(args[0], args[1], args[2], args[3])\n                      : fn.call(that, args[0], args[1], args[2], args[3]);\n  } return fn.apply(that, args);\n};\n","var $parseInt = require('./_global').parseInt;\nvar $trim = require('./_string-trim').trim;\nvar ws = require('./_string-ws');\nvar hex = /^[-+]?0[xX]/;\n\nmodule.exports = $parseInt(ws + '08') !== 8 || $parseInt(ws + '0x16') !== 22 ? function parseInt(str, radix) {\n  var string = $trim(String(str), 3);\n  return $parseInt(string, (radix >>> 0) || (hex.test(string) ? 16 : 10));\n} : $parseInt;\n","var $parseFloat = require('./_global').parseFloat;\nvar $trim = require('./_string-trim').trim;\n\nmodule.exports = 1 / $parseFloat(require('./_string-ws') + '-0') !== -Infinity ? function parseFloat(str) {\n  var string = $trim(String(str), 3);\n  var result = $parseFloat(string);\n  return result === 0 && string.charAt(0) == '-' ? -0 : result;\n} : $parseFloat;\n","var cof = require('./_cof');\nmodule.exports = function (it, msg) {\n  if (typeof it != 'number' && cof(it) != 'Number') throw TypeError(msg);\n  return +it;\n};\n","// 20.1.2.3 Number.isInteger(number)\nvar isObject = require('./_is-object');\nvar floor = Math.floor;\nmodule.exports = function isInteger(it) {\n  return !isObject(it) && isFinite(it) && floor(it) === it;\n};\n","// 20.2.2.20 Math.log1p(x)\nmodule.exports = Math.log1p || function log1p(x) {\n  return (x = +x) > -1e-8 && x < 1e-8 ? x - x * x / 2 : Math.log(1 + x);\n};\n","var toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n","'use strict';\nvar create = require('./_object-create');\nvar descriptor = require('./_property-desc');\nvar setToStringTag = require('./_set-to-string-tag');\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n","// call something on iterator step with safe closing on error\nvar anObject = require('./_an-object');\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n","var aFunction = require('./_a-function');\nvar toObject = require('./_to-object');\nvar IObject = require('./_iobject');\nvar toLength = require('./_to-length');\n\nmodule.exports = function (that, callbackfn, aLen, memo, isRight) {\n  aFunction(callbackfn);\n  var O = toObject(that);\n  var self = IObject(O);\n  var length = toLength(O.length);\n  var index = isRight ? length - 1 : 0;\n  var i = isRight ? -1 : 1;\n  if (aLen < 2) for (;;) {\n    if (index in self) {\n      memo = self[index];\n      index += i;\n      break;\n    }\n    index += i;\n    if (isRight ? index < 0 : length <= index) {\n      throw TypeError('Reduce of empty array with no initial value');\n    }\n  }\n  for (;isRight ? index >= 0 : length > index; index += i) if (index in self) {\n    memo = callbackfn(memo, self[index], index, O);\n  }\n  return memo;\n};\n","// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\n\nmodule.exports = [].copyWithin || function copyWithin(target /* = 0 */, start /* = 0, end = @length */) {\n  var O = toObject(this);\n  var len = toLength(O.length);\n  var to = toAbsoluteIndex(target, len);\n  var from = toAbsoluteIndex(start, len);\n  var end = arguments.length > 2 ? arguments[2] : undefined;\n  var count = Math.min((end === undefined ? len : toAbsoluteIndex(end, len)) - from, len - to);\n  var inc = 1;\n  if (from < to && to < from + count) {\n    inc = -1;\n    from += count - 1;\n    to += count - 1;\n  }\n  while (count-- > 0) {\n    if (from in O) O[to] = O[from];\n    else delete O[to];\n    to += inc;\n    from += inc;\n  } return O;\n};\n","module.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n","// 21.2.5.3 get RegExp.prototype.flags()\nif (require('./_descriptors') && /./g.flags != 'g') require('./_object-dp').f(RegExp.prototype, 'flags', {\n  configurable: true,\n  get: require('./_flags')\n});\n","'use strict';\nvar LIBRARY = require('./_library');\nvar global = require('./_global');\nvar ctx = require('./_ctx');\nvar classof = require('./_classof');\nvar $export = require('./_export');\nvar isObject = require('./_is-object');\nvar aFunction = require('./_a-function');\nvar anInstance = require('./_an-instance');\nvar forOf = require('./_for-of');\nvar speciesConstructor = require('./_species-constructor');\nvar task = require('./_task').set;\nvar microtask = require('./_microtask')();\nvar newPromiseCapabilityModule = require('./_new-promise-capability');\nvar perform = require('./_perform');\nvar userAgent = require('./_user-agent');\nvar promiseResolve = require('./_promise-resolve');\nvar PROMISE = 'Promise';\nvar TypeError = global.TypeError;\nvar process = global.process;\nvar versions = process && process.versions;\nvar v8 = versions && versions.v8 || '';\nvar $Promise = global[PROMISE];\nvar isNode = classof(process) == 'process';\nvar empty = function () { /* empty */ };\nvar Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;\nvar newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;\n\nvar USE_NATIVE = !!function () {\n  try {\n    // correct subclassing with @@species support\n    var promise = $Promise.resolve(1);\n    var FakePromise = (promise.constructor = {})[require('./_wks')('species')] = function (exec) {\n      exec(empty, empty);\n    };\n    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n    return (isNode || typeof PromiseRejectionEvent == 'function')\n      && promise.then(empty) instanceof FakePromise\n      // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables\n      // https://bugs.chromium.org/p/chromium/issues/detail?id=830565\n      // we can't detect it synchronously, so just check versions\n      && v8.indexOf('6.6') !== 0\n      && userAgent.indexOf('Chrome/66') === -1;\n  } catch (e) { /* empty */ }\n}();\n\n// helpers\nvar isThenable = function (it) {\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\nvar notify = function (promise, isReject) {\n  if (promise._n) return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function () {\n    var value = promise._v;\n    var ok = promise._s == 1;\n    var i = 0;\n    var run = function (reaction) {\n      var handler = ok ? reaction.ok : reaction.fail;\n      var resolve = reaction.resolve;\n      var reject = reaction.reject;\n      var domain = reaction.domain;\n      var result, then, exited;\n      try {\n        if (handler) {\n          if (!ok) {\n            if (promise._h == 2) onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n          if (handler === true) result = value;\n          else {\n            if (domain) domain.enter();\n            result = handler(value); // may throw\n            if (domain) {\n              domain.exit();\n              exited = true;\n            }\n          }\n          if (result === reaction.promise) {\n            reject(TypeError('Promise-chain cycle'));\n          } else if (then = isThenable(result)) {\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch (e) {\n        if (domain && !exited) domain.exit();\n        reject(e);\n      }\n    };\n    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach\n    promise._c = [];\n    promise._n = false;\n    if (isReject && !promise._h) onUnhandled(promise);\n  });\n};\nvar onUnhandled = function (promise) {\n  task.call(global, function () {\n    var value = promise._v;\n    var unhandled = isUnhandled(promise);\n    var result, handler, console;\n    if (unhandled) {\n      result = perform(function () {\n        if (isNode) {\n          process.emit('unhandledRejection', value, promise);\n        } else if (handler = global.onunhandledrejection) {\n          handler({ promise: promise, reason: value });\n        } else if ((console = global.console) && console.error) {\n          console.error('Unhandled promise rejection', value);\n        }\n      });\n      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\n    } promise._a = undefined;\n    if (unhandled && result.e) throw result.v;\n  });\n};\nvar isUnhandled = function (promise) {\n  return promise._h !== 1 && (promise._a || promise._c).length === 0;\n};\nvar onHandleUnhandled = function (promise) {\n  task.call(global, function () {\n    var handler;\n    if (isNode) {\n      process.emit('rejectionHandled', promise);\n    } else if (handler = global.onrejectionhandled) {\n      handler({ promise: promise, reason: promise._v });\n    }\n  });\n};\nvar $reject = function (value) {\n  var promise = this;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  promise._v = value;\n  promise._s = 2;\n  if (!promise._a) promise._a = promise._c.slice();\n  notify(promise, true);\n};\nvar $resolve = function (value) {\n  var promise = this;\n  var then;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  try {\n    if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n    if (then = isThenable(value)) {\n      microtask(function () {\n        var wrapper = { _w: promise, _d: false }; // wrap\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch (e) {\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch (e) {\n    $reject.call({ _w: promise, _d: false }, e); // wrap\n  }\n};\n\n// constructor polyfill\nif (!USE_NATIVE) {\n  // 25.4.3.1 Promise(executor)\n  $Promise = function Promise(executor) {\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch (err) {\n      $reject.call(this, err);\n    }\n  };\n  // eslint-disable-next-line no-unused-vars\n  Internal = function Promise(executor) {\n    this._c = [];             // <- awaiting reactions\n    this._a = undefined;      // <- checked in isUnhandled reactions\n    this._s = 0;              // <- state\n    this._d = false;          // <- done\n    this._v = undefined;      // <- value\n    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled\n    this._n = false;          // <- notify\n  };\n  Internal.prototype = require('./_redefine-all')($Promise.prototype, {\n    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)\n    then: function then(onFulfilled, onRejected) {\n      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      reaction.domain = isNode ? process.domain : undefined;\n      this._c.push(reaction);\n      if (this._a) this._a.push(reaction);\n      if (this._s) notify(this, false);\n      return reaction.promise;\n    },\n    // 25.4.5.1 Promise.prototype.catch(onRejected)\n    'catch': function (onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n  OwnPromiseCapability = function () {\n    var promise = new Internal();\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject = ctx($reject, promise, 1);\n  };\n  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {\n    return C === $Promise || C === Wrapper\n      ? new OwnPromiseCapability(C)\n      : newGenericPromiseCapability(C);\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });\nrequire('./_set-to-string-tag')($Promise, PROMISE);\nrequire('./_set-species')(PROMISE);\nWrapper = require('./_core')[PROMISE];\n\n// statics\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  // 25.4.4.5 Promise.reject(r)\n  reject: function reject(r) {\n    var capability = newPromiseCapability(this);\n    var $$reject = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\n  // 25.4.4.6 Promise.resolve(x)\n  resolve: function resolve(x) {\n    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && require('./_iter-detect')(function (iter) {\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  // 25.4.4.1 Promise.all(iterable)\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var values = [];\n      var index = 0;\n      var remaining = 1;\n      forOf(iterable, false, function (promise) {\n        var $index = index++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        C.resolve(promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[$index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  },\n  // 25.4.4.4 Promise.race(iterable)\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      forOf(iterable, false, function (promise) {\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  }\n});\n","'use strict';\n// 25.4.1.5 NewPromiseCapability(C)\nvar aFunction = require('./_a-function');\n\nfunction PromiseCapability(C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n}\n\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n","var anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar newPromiseCapability = require('./_new-promise-capability');\n\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n","'use strict';\nvar dP = require('./_object-dp').f;\nvar create = require('./_object-create');\nvar redefineAll = require('./_redefine-all');\nvar ctx = require('./_ctx');\nvar anInstance = require('./_an-instance');\nvar forOf = require('./_for-of');\nvar $iterDefine = require('./_iter-define');\nvar step = require('./_iter-step');\nvar setSpecies = require('./_set-species');\nvar DESCRIPTORS = require('./_descriptors');\nvar fastKey = require('./_meta').fastKey;\nvar validate = require('./_validate-collection');\nvar SIZE = DESCRIPTORS ? '_s' : 'size';\n\nvar getEntry = function (that, key) {\n  // fast case\n  var index = fastKey(key);\n  var entry;\n  if (index !== 'F') return that._i[index];\n  // frozen object case\n  for (entry = that._f; entry; entry = entry.n) {\n    if (entry.k == key) return entry;\n  }\n};\n\nmodule.exports = {\n  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {\n    var C = wrapper(function (that, iterable) {\n      anInstance(that, C, NAME, '_i');\n      that._t = NAME;         // collection type\n      that._i = create(null); // index\n      that._f = undefined;    // first entry\n      that._l = undefined;    // last entry\n      that[SIZE] = 0;         // size\n      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      // 23.1.3.1 Map.prototype.clear()\n      // 23.2.3.2 Set.prototype.clear()\n      clear: function clear() {\n        for (var that = validate(this, NAME), data = that._i, entry = that._f; entry; entry = entry.n) {\n          entry.r = true;\n          if (entry.p) entry.p = entry.p.n = undefined;\n          delete data[entry.i];\n        }\n        that._f = that._l = undefined;\n        that[SIZE] = 0;\n      },\n      // 23.1.3.3 Map.prototype.delete(key)\n      // 23.2.3.4 Set.prototype.delete(value)\n      'delete': function (key) {\n        var that = validate(this, NAME);\n        var entry = getEntry(that, key);\n        if (entry) {\n          var next = entry.n;\n          var prev = entry.p;\n          delete that._i[entry.i];\n          entry.r = true;\n          if (prev) prev.n = next;\n          if (next) next.p = prev;\n          if (that._f == entry) that._f = next;\n          if (that._l == entry) that._l = prev;\n          that[SIZE]--;\n        } return !!entry;\n      },\n      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\n      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\n      forEach: function forEach(callbackfn /* , that = undefined */) {\n        validate(this, NAME);\n        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\n        var entry;\n        while (entry = entry ? entry.n : this._f) {\n          f(entry.v, entry.k, this);\n          // revert to the last existing entry\n          while (entry && entry.r) entry = entry.p;\n        }\n      },\n      // 23.1.3.7 Map.prototype.has(key)\n      // 23.2.3.7 Set.prototype.has(value)\n      has: function has(key) {\n        return !!getEntry(validate(this, NAME), key);\n      }\n    });\n    if (DESCRIPTORS) dP(C.prototype, 'size', {\n      get: function () {\n        return validate(this, NAME)[SIZE];\n      }\n    });\n    return C;\n  },\n  def: function (that, key, value) {\n    var entry = getEntry(that, key);\n    var prev, index;\n    // change existing entry\n    if (entry) {\n      entry.v = value;\n    // create new entry\n    } else {\n      that._l = entry = {\n        i: index = fastKey(key, true), // <- index\n        k: key,                        // <- key\n        v: value,                      // <- value\n        p: prev = that._l,             // <- previous entry\n        n: undefined,                  // <- next entry\n        r: false                       // <- removed\n      };\n      if (!that._f) that._f = entry;\n      if (prev) prev.n = entry;\n      that[SIZE]++;\n      // add to index\n      if (index !== 'F') that._i[index] = entry;\n    } return that;\n  },\n  getEntry: getEntry,\n  setStrong: function (C, NAME, IS_MAP) {\n    // add .keys, .values, .entries, [@@iterator]\n    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\n    $iterDefine(C, NAME, function (iterated, kind) {\n      this._t = validate(iterated, NAME); // target\n      this._k = kind;                     // kind\n      this._l = undefined;                // previous\n    }, function () {\n      var that = this;\n      var kind = that._k;\n      var entry = that._l;\n      // revert to the last existing entry\n      while (entry && entry.r) entry = entry.p;\n      // get next entry\n      if (!that._t || !(that._l = entry = entry ? entry.n : that._t._f)) {\n        // or finish the iteration\n        that._t = undefined;\n        return step(1);\n      }\n      // return step by kind\n      if (kind == 'keys') return step(0, entry.k);\n      if (kind == 'values') return step(0, entry.v);\n      return step(0, [entry.k, entry.v]);\n    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);\n\n    // add [@@species], 23.1.2.2, 23.2.2.2\n    setSpecies(NAME);\n  }\n};\n","'use strict';\nvar redefineAll = require('./_redefine-all');\nvar getWeak = require('./_meta').getWeak;\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar anInstance = require('./_an-instance');\nvar forOf = require('./_for-of');\nvar createArrayMethod = require('./_array-methods');\nvar $has = require('./_has');\nvar validate = require('./_validate-collection');\nvar arrayFind = createArrayMethod(5);\nvar arrayFindIndex = createArrayMethod(6);\nvar id = 0;\n\n// fallback for uncaught frozen keys\nvar uncaughtFrozenStore = function (that) {\n  return that._l || (that._l = new UncaughtFrozenStore());\n};\nvar UncaughtFrozenStore = function () {\n  this.a = [];\n};\nvar findUncaughtFrozen = function (store, key) {\n  return arrayFind(store.a, function (it) {\n    return it[0] === key;\n  });\n};\nUncaughtFrozenStore.prototype = {\n  get: function (key) {\n    var entry = findUncaughtFrozen(this, key);\n    if (entry) return entry[1];\n  },\n  has: function (key) {\n    return !!findUncaughtFrozen(this, key);\n  },\n  set: function (key, value) {\n    var entry = findUncaughtFrozen(this, key);\n    if (entry) entry[1] = value;\n    else this.a.push([key, value]);\n  },\n  'delete': function (key) {\n    var index = arrayFindIndex(this.a, function (it) {\n      return it[0] === key;\n    });\n    if (~index) this.a.splice(index, 1);\n    return !!~index;\n  }\n};\n\nmodule.exports = {\n  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {\n    var C = wrapper(function (that, iterable) {\n      anInstance(that, C, NAME, '_i');\n      that._t = NAME;      // collection type\n      that._i = id++;      // collection id\n      that._l = undefined; // leak store for uncaught frozen objects\n      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      // 23.3.3.2 WeakMap.prototype.delete(key)\n      // 23.4.3.3 WeakSet.prototype.delete(value)\n      'delete': function (key) {\n        if (!isObject(key)) return false;\n        var data = getWeak(key);\n        if (data === true) return uncaughtFrozenStore(validate(this, NAME))['delete'](key);\n        return data && $has(data, this._i) && delete data[this._i];\n      },\n      // 23.3.3.4 WeakMap.prototype.has(key)\n      // 23.4.3.4 WeakSet.prototype.has(value)\n      has: function has(key) {\n        if (!isObject(key)) return false;\n        var data = getWeak(key);\n        if (data === true) return uncaughtFrozenStore(validate(this, NAME)).has(key);\n        return data && $has(data, this._i);\n      }\n    });\n    return C;\n  },\n  def: function (that, key, value) {\n    var data = getWeak(anObject(key), true);\n    if (data === true) uncaughtFrozenStore(that).set(key, value);\n    else data[that._i] = value;\n    return that;\n  },\n  ufstore: uncaughtFrozenStore\n};\n","// https://tc39.github.io/ecma262/#sec-toindex\nvar toInteger = require('./_to-integer');\nvar toLength = require('./_to-length');\nmodule.exports = function (it) {\n  if (it === undefined) return 0;\n  var number = toInteger(it);\n  var length = toLength(number);\n  if (number !== length) throw RangeError('Wrong length!');\n  return length;\n};\n","// all object keys, includes non-enumerable and symbols\nvar gOPN = require('./_object-gopn');\nvar gOPS = require('./_object-gops');\nvar anObject = require('./_an-object');\nvar Reflect = require('./_global').Reflect;\nmodule.exports = Reflect && Reflect.ownKeys || function ownKeys(it) {\n  var keys = gOPN.f(anObject(it));\n  var getSymbols = gOPS.f;\n  return getSymbols ? keys.concat(getSymbols(it)) : keys;\n};\n","// https://github.com/tc39/proposal-string-pad-start-end\nvar toLength = require('./_to-length');\nvar repeat = require('./_string-repeat');\nvar defined = require('./_defined');\n\nmodule.exports = function (that, maxLength, fillString, left) {\n  var S = String(defined(that));\n  var stringLength = S.length;\n  var fillStr = fillString === undefined ? ' ' : String(fillString);\n  var intMaxLength = toLength(maxLength);\n  if (intMaxLength <= stringLength || fillStr == '') return S;\n  var fillLen = intMaxLength - stringLength;\n  var stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));\n  if (stringFiller.length > fillLen) stringFiller = stringFiller.slice(0, fillLen);\n  return left ? stringFiller + S : S + stringFiller;\n};\n","var getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) if (isEnum.call(O, key = keys[i++])) {\n      result.push(isEntries ? [key, O[key]] : O[key]);\n    } return result;\n  };\n};\n","\"use strict\";\n\nrequire(\"core-js/es6\");\n\nrequire(\"core-js/fn/array/includes\");\n\nrequire(\"core-js/fn/string/pad-start\");\n\nrequire(\"core-js/fn/string/pad-end\");\n\nrequire(\"core-js/fn/symbol/async-iterator\");\n\nrequire(\"core-js/fn/object/get-own-property-descriptors\");\n\nrequire(\"core-js/fn/object/values\");\n\nrequire(\"core-js/fn/object/entries\");\n\nrequire(\"core-js/fn/promise/finally\");\n\nrequire(\"core-js/web\");\n\nrequire(\"regenerator-runtime/runtime\");\n\nif (global._babelPolyfill && typeof console !== \"undefined\" && console.warn) {\n  console.warn(\"@babel/polyfill is loaded more than once on this page. This is probably not desirable/intended \" + \"and may have consequences if different versions of the polyfills are applied sequentially. \" + \"If you do need to load the polyfill more than once, use @babel/polyfill/noConflict \" + \"instead to bypass the warning.\");\n}\n\nglobal._babelPolyfill = true;","require('../modules/es6.symbol');\nrequire('../modules/es6.object.create');\nrequire('../modules/es6.object.define-property');\nrequire('../modules/es6.object.define-properties');\nrequire('../modules/es6.object.get-own-property-descriptor');\nrequire('../modules/es6.object.get-prototype-of');\nrequire('../modules/es6.object.keys');\nrequire('../modules/es6.object.get-own-property-names');\nrequire('../modules/es6.object.freeze');\nrequire('../modules/es6.object.seal');\nrequire('../modules/es6.object.prevent-extensions');\nrequire('../modules/es6.object.is-frozen');\nrequire('../modules/es6.object.is-sealed');\nrequire('../modules/es6.object.is-extensible');\nrequire('../modules/es6.object.assign');\nrequire('../modules/es6.object.is');\nrequire('../modules/es6.object.set-prototype-of');\nrequire('../modules/es6.object.to-string');\nrequire('../modules/es6.function.bind');\nrequire('../modules/es6.function.name');\nrequire('../modules/es6.function.has-instance');\nrequire('../modules/es6.parse-int');\nrequire('../modules/es6.parse-float');\nrequire('../modules/es6.number.constructor');\nrequire('../modules/es6.number.to-fixed');\nrequire('../modules/es6.number.to-precision');\nrequire('../modules/es6.number.epsilon');\nrequire('../modules/es6.number.is-finite');\nrequire('../modules/es6.number.is-integer');\nrequire('../modules/es6.number.is-nan');\nrequire('../modules/es6.number.is-safe-integer');\nrequire('../modules/es6.number.max-safe-integer');\nrequire('../modules/es6.number.min-safe-integer');\nrequire('../modules/es6.number.parse-float');\nrequire('../modules/es6.number.parse-int');\nrequire('../modules/es6.math.acosh');\nrequire('../modules/es6.math.asinh');\nrequire('../modules/es6.math.atanh');\nrequire('../modules/es6.math.cbrt');\nrequire('../modules/es6.math.clz32');\nrequire('../modules/es6.math.cosh');\nrequire('../modules/es6.math.expm1');\nrequire('../modules/es6.math.fround');\nrequire('../modules/es6.math.hypot');\nrequire('../modules/es6.math.imul');\nrequire('../modules/es6.math.log10');\nrequire('../modules/es6.math.log1p');\nrequire('../modules/es6.math.log2');\nrequire('../modules/es6.math.sign');\nrequire('../modules/es6.math.sinh');\nrequire('../modules/es6.math.tanh');\nrequire('../modules/es6.math.trunc');\nrequire('../modules/es6.string.from-code-point');\nrequire('../modules/es6.string.raw');\nrequire('../modules/es6.string.trim');\nrequire('../modules/es6.string.iterator');\nrequire('../modules/es6.string.code-point-at');\nrequire('../modules/es6.string.ends-with');\nrequire('../modules/es6.string.includes');\nrequire('../modules/es6.string.repeat');\nrequire('../modules/es6.string.starts-with');\nrequire('../modules/es6.string.anchor');\nrequire('../modules/es6.string.big');\nrequire('../modules/es6.string.blink');\nrequire('../modules/es6.string.bold');\nrequire('../modules/es6.string.fixed');\nrequire('../modules/es6.string.fontcolor');\nrequire('../modules/es6.string.fontsize');\nrequire('../modules/es6.string.italics');\nrequire('../modules/es6.string.link');\nrequire('../modules/es6.string.small');\nrequire('../modules/es6.string.strike');\nrequire('../modules/es6.string.sub');\nrequire('../modules/es6.string.sup');\nrequire('../modules/es6.date.now');\nrequire('../modules/es6.date.to-json');\nrequire('../modules/es6.date.to-iso-string');\nrequire('../modules/es6.date.to-string');\nrequire('../modules/es6.date.to-primitive');\nrequire('../modules/es6.array.is-array');\nrequire('../modules/es6.array.from');\nrequire('../modules/es6.array.of');\nrequire('../modules/es6.array.join');\nrequire('../modules/es6.array.slice');\nrequire('../modules/es6.array.sort');\nrequire('../modules/es6.array.for-each');\nrequire('../modules/es6.array.map');\nrequire('../modules/es6.array.filter');\nrequire('../modules/es6.array.some');\nrequire('../modules/es6.array.every');\nrequire('../modules/es6.array.reduce');\nrequire('../modules/es6.array.reduce-right');\nrequire('../modules/es6.array.index-of');\nrequire('../modules/es6.array.last-index-of');\nrequire('../modules/es6.array.copy-within');\nrequire('../modules/es6.array.fill');\nrequire('../modules/es6.array.find');\nrequire('../modules/es6.array.find-index');\nrequire('../modules/es6.array.species');\nrequire('../modules/es6.array.iterator');\nrequire('../modules/es6.regexp.constructor');\nrequire('../modules/es6.regexp.to-string');\nrequire('../modules/es6.regexp.flags');\nrequire('../modules/es6.regexp.match');\nrequire('../modules/es6.regexp.replace');\nrequire('../modules/es6.regexp.search');\nrequire('../modules/es6.regexp.split');\nrequire('../modules/es6.promise');\nrequire('../modules/es6.map');\nrequire('../modules/es6.set');\nrequire('../modules/es6.weak-map');\nrequire('../modules/es6.weak-set');\nrequire('../modules/es6.typed.array-buffer');\nrequire('../modules/es6.typed.data-view');\nrequire('../modules/es6.typed.int8-array');\nrequire('../modules/es6.typed.uint8-array');\nrequire('../modules/es6.typed.uint8-clamped-array');\nrequire('../modules/es6.typed.int16-array');\nrequire('../modules/es6.typed.uint16-array');\nrequire('../modules/es6.typed.int32-array');\nrequire('../modules/es6.typed.uint32-array');\nrequire('../modules/es6.typed.float32-array');\nrequire('../modules/es6.typed.float64-array');\nrequire('../modules/es6.reflect.apply');\nrequire('../modules/es6.reflect.construct');\nrequire('../modules/es6.reflect.define-property');\nrequire('../modules/es6.reflect.delete-property');\nrequire('../modules/es6.reflect.enumerate');\nrequire('../modules/es6.reflect.get');\nrequire('../modules/es6.reflect.get-own-property-descriptor');\nrequire('../modules/es6.reflect.get-prototype-of');\nrequire('../modules/es6.reflect.has');\nrequire('../modules/es6.reflect.is-extensible');\nrequire('../modules/es6.reflect.own-keys');\nrequire('../modules/es6.reflect.prevent-extensions');\nrequire('../modules/es6.reflect.set');\nrequire('../modules/es6.reflect.set-prototype-of');\nmodule.exports = require('../modules/_core');\n","'use strict';\n// ECMAScript 6 symbols shim\nvar global = require('./_global');\nvar has = require('./_has');\nvar DESCRIPTORS = require('./_descriptors');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar META = require('./_meta').KEY;\nvar $fails = require('./_fails');\nvar shared = require('./_shared');\nvar setToStringTag = require('./_set-to-string-tag');\nvar uid = require('./_uid');\nvar wks = require('./_wks');\nvar wksExt = require('./_wks-ext');\nvar wksDefine = require('./_wks-define');\nvar enumKeys = require('./_enum-keys');\nvar isArray = require('./_is-array');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar createDesc = require('./_property-desc');\nvar _create = require('./_object-create');\nvar gOPNExt = require('./_object-gopn-ext');\nvar $GOPD = require('./_object-gopd');\nvar $DP = require('./_object-dp');\nvar $keys = require('./_object-keys');\nvar gOPD = $GOPD.f;\nvar dP = $DP.f;\nvar gOPN = gOPNExt.f;\nvar $Symbol = global.Symbol;\nvar $JSON = global.JSON;\nvar _stringify = $JSON && $JSON.stringify;\nvar PROTOTYPE = 'prototype';\nvar HIDDEN = wks('_hidden');\nvar TO_PRIMITIVE = wks('toPrimitive');\nvar isEnum = {}.propertyIsEnumerable;\nvar SymbolRegistry = shared('symbol-registry');\nvar AllSymbols = shared('symbols');\nvar OPSymbols = shared('op-symbols');\nvar ObjectProto = Object[PROTOTYPE];\nvar USE_NATIVE = typeof $Symbol == 'function';\nvar QObject = global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDesc = DESCRIPTORS && $fails(function () {\n  return _create(dP({}, 'a', {\n    get: function () { return dP(this, 'a', { value: 7 }).a; }\n  })).a != 7;\n}) ? function (it, key, D) {\n  var protoDesc = gOPD(ObjectProto, key);\n  if (protoDesc) delete ObjectProto[key];\n  dP(it, key, D);\n  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);\n} : dP;\n\nvar wrap = function (tag) {\n  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);\n  sym._k = tag;\n  return sym;\n};\n\nvar isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  return it instanceof $Symbol;\n};\n\nvar $defineProperty = function defineProperty(it, key, D) {\n  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);\n  anObject(it);\n  key = toPrimitive(key, true);\n  anObject(D);\n  if (has(AllSymbols, key)) {\n    if (!D.enumerable) {\n      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));\n      it[HIDDEN][key] = true;\n    } else {\n      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;\n      D = _create(D, { enumerable: createDesc(0, false) });\n    } return setSymbolDesc(it, key, D);\n  } return dP(it, key, D);\n};\nvar $defineProperties = function defineProperties(it, P) {\n  anObject(it);\n  var keys = enumKeys(P = toIObject(P));\n  var i = 0;\n  var l = keys.length;\n  var key;\n  while (l > i) $defineProperty(it, key = keys[i++], P[key]);\n  return it;\n};\nvar $create = function create(it, P) {\n  return P === undefined ? _create(it) : $defineProperties(_create(it), P);\n};\nvar $propertyIsEnumerable = function propertyIsEnumerable(key) {\n  var E = isEnum.call(this, key = toPrimitive(key, true));\n  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;\n  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;\n};\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {\n  it = toIObject(it);\n  key = toPrimitive(key, true);\n  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;\n  var D = gOPD(it, key);\n  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;\n  return D;\n};\nvar $getOwnPropertyNames = function getOwnPropertyNames(it) {\n  var names = gOPN(toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);\n  } return result;\n};\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(it) {\n  var IS_OP = it === ObjectProto;\n  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);\n  } return result;\n};\n\n// 19.4.1.1 Symbol([description])\nif (!USE_NATIVE) {\n  $Symbol = function Symbol() {\n    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');\n    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);\n    var $set = function (value) {\n      if (this === ObjectProto) $set.call(OPSymbols, value);\n      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      setSymbolDesc(this, tag, createDesc(1, value));\n    };\n    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });\n    return wrap(tag);\n  };\n  redefine($Symbol[PROTOTYPE], 'toString', function toString() {\n    return this._k;\n  });\n\n  $GOPD.f = $getOwnPropertyDescriptor;\n  $DP.f = $defineProperty;\n  require('./_object-gopn').f = gOPNExt.f = $getOwnPropertyNames;\n  require('./_object-pie').f = $propertyIsEnumerable;\n  require('./_object-gops').f = $getOwnPropertySymbols;\n\n  if (DESCRIPTORS && !require('./_library')) {\n    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);\n  }\n\n  wksExt.f = function (name) {\n    return wrap(wks(name));\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });\n\nfor (var es6Symbols = (\n  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14\n  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'\n).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);\n\nfor (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);\n\n$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {\n  // 19.4.2.1 Symbol.for(key)\n  'for': function (key) {\n    return has(SymbolRegistry, key += '')\n      ? SymbolRegistry[key]\n      : SymbolRegistry[key] = $Symbol(key);\n  },\n  // 19.4.2.5 Symbol.keyFor(sym)\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');\n    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;\n  },\n  useSetter: function () { setter = true; },\n  useSimple: function () { setter = false; }\n});\n\n$export($export.S + $export.F * !USE_NATIVE, 'Object', {\n  // 19.1.2.2 Object.create(O [, Properties])\n  create: $create,\n  // 19.1.2.4 Object.defineProperty(O, P, Attributes)\n  defineProperty: $defineProperty,\n  // 19.1.2.3 Object.defineProperties(O, Properties)\n  defineProperties: $defineProperties,\n  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,\n  // 19.1.2.7 Object.getOwnPropertyNames(O)\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // 19.1.2.8 Object.getOwnPropertySymbols(O)\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// 24.3.2 JSON.stringify(value [, replacer [, space]])\n$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {\n  var S = $Symbol();\n  // MS Edge converts symbol values to JSON as {}\n  // WebKit converts symbol values to JSON as null\n  // V8 throws on boxed symbols\n  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';\n})), 'JSON', {\n  stringify: function stringify(it) {\n    var args = [it];\n    var i = 1;\n    var replacer, $replacer;\n    while (arguments.length > i) args.push(arguments[i++]);\n    $replacer = replacer = args[1];\n    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n    if (!isArray(replacer)) replacer = function (key, value) {\n      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);\n      if (!isSymbol(value)) return value;\n    };\n    args[1] = replacer;\n    return _stringify.apply($JSON, args);\n  }\n});\n\n// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)\n$Symbol[PROTOTYPE][TO_PRIMITIVE] || require('./_hide')($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);\n// 19.4.3.5 Symbol.prototype[@@toStringTag]\nsetToStringTag($Symbol, 'Symbol');\n// 20.2.1.9 Math[@@toStringTag]\nsetToStringTag(Math, 'Math', true);\n// 24.3.3 JSON[@@toStringTag]\nsetToStringTag(global.JSON, 'JSON', true);\n","// all enumerable object keys, includes symbols\nvar getKeys = require('./_object-keys');\nvar gOPS = require('./_object-gops');\nvar pIE = require('./_object-pie');\nmodule.exports = function (it) {\n  var result = getKeys(it);\n  var getSymbols = gOPS.f;\n  if (getSymbols) {\n    var symbols = getSymbols(it);\n    var isEnum = pIE.f;\n    var i = 0;\n    var key;\n    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);\n  } return result;\n};\n","var $export = require('./_export');\n// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\n$export($export.S, 'Object', { create: require('./_object-create') });\n","var $export = require('./_export');\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperty: require('./_object-dp').f });\n","var $export = require('./_export');\n// 19.1.2.3 / 15.2.3.7 Object.defineProperties(O, Properties)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperties: require('./_object-dps') });\n","// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\nvar toIObject = require('./_to-iobject');\nvar $getOwnPropertyDescriptor = require('./_object-gopd').f;\n\nrequire('./_object-sap')('getOwnPropertyDescriptor', function () {\n  return function getOwnPropertyDescriptor(it, key) {\n    return $getOwnPropertyDescriptor(toIObject(it), key);\n  };\n});\n","// 19.1.2.9 Object.getPrototypeOf(O)\nvar toObject = require('./_to-object');\nvar $getPrototypeOf = require('./_object-gpo');\n\nrequire('./_object-sap')('getPrototypeOf', function () {\n  return function getPrototypeOf(it) {\n    return $getPrototypeOf(toObject(it));\n  };\n});\n","// 19.1.2.14 Object.keys(O)\nvar toObject = require('./_to-object');\nvar $keys = require('./_object-keys');\n\nrequire('./_object-sap')('keys', function () {\n  return function keys(it) {\n    return $keys(toObject(it));\n  };\n});\n","// 19.1.2.7 Object.getOwnPropertyNames(O)\nrequire('./_object-sap')('getOwnPropertyNames', function () {\n  return require('./_object-gopn-ext').f;\n});\n","// 19.1.2.5 Object.freeze(O)\nvar isObject = require('./_is-object');\nvar meta = require('./_meta').onFreeze;\n\nrequire('./_object-sap')('freeze', function ($freeze) {\n  return function freeze(it) {\n    return $freeze && isObject(it) ? $freeze(meta(it)) : it;\n  };\n});\n","// 19.1.2.17 Object.seal(O)\nvar isObject = require('./_is-object');\nvar meta = require('./_meta').onFreeze;\n\nrequire('./_object-sap')('seal', function ($seal) {\n  return function seal(it) {\n    return $seal && isObject(it) ? $seal(meta(it)) : it;\n  };\n});\n","// 19.1.2.15 Object.preventExtensions(O)\nvar isObject = require('./_is-object');\nvar meta = require('./_meta').onFreeze;\n\nrequire('./_object-sap')('preventExtensions', function ($preventExtensions) {\n  return function preventExtensions(it) {\n    return $preventExtensions && isObject(it) ? $preventExtensions(meta(it)) : it;\n  };\n});\n","// 19.1.2.12 Object.isFrozen(O)\nvar isObject = require('./_is-object');\n\nrequire('./_object-sap')('isFrozen', function ($isFrozen) {\n  return function isFrozen(it) {\n    return isObject(it) ? $isFrozen ? $isFrozen(it) : false : true;\n  };\n});\n","// 19.1.2.13 Object.isSealed(O)\nvar isObject = require('./_is-object');\n\nrequire('./_object-sap')('isSealed', function ($isSealed) {\n  return function isSealed(it) {\n    return isObject(it) ? $isSealed ? $isSealed(it) : false : true;\n  };\n});\n","// 19.1.2.11 Object.isExtensible(O)\nvar isObject = require('./_is-object');\n\nrequire('./_object-sap')('isExtensible', function ($isExtensible) {\n  return function isExtensible(it) {\n    return isObject(it) ? $isExtensible ? $isExtensible(it) : true : false;\n  };\n});\n","// 19.1.3.1 Object.assign(target, source)\nvar $export = require('./_export');\n\n$export($export.S + $export.F, 'Object', { assign: require('./_object-assign') });\n","// 19.1.3.10 Object.is(value1, value2)\nvar $export = require('./_export');\n$export($export.S, 'Object', { is: require('./_same-value') });\n","// 7.2.9 SameValue(x, y)\nmodule.exports = Object.is || function is(x, y) {\n  // eslint-disable-next-line no-self-compare\n  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;\n};\n","// 19.1.3.19 Object.setPrototypeOf(O, proto)\nvar $export = require('./_export');\n$export($export.S, 'Object', { setPrototypeOf: require('./_set-proto').set });\n","'use strict';\n// 19.1.3.6 Object.prototype.toString()\nvar classof = require('./_classof');\nvar test = {};\ntest[require('./_wks')('toStringTag')] = 'z';\nif (test + '' != '[object z]') {\n  require('./_redefine')(Object.prototype, 'toString', function toString() {\n    return '[object ' + classof(this) + ']';\n  }, true);\n}\n","// 19.2.3.2 / 15.3.4.5 Function.prototype.bind(thisArg, args...)\nvar $export = require('./_export');\n\n$export($export.P, 'Function', { bind: require('./_bind') });\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","'use strict';\nvar isObject = require('./_is-object');\nvar getPrototypeOf = require('./_object-gpo');\nvar HAS_INSTANCE = require('./_wks')('hasInstance');\nvar FunctionProto = Function.prototype;\n// 19.2.3.6 Function.prototype[@@hasInstance](V)\nif (!(HAS_INSTANCE in FunctionProto)) require('./_object-dp').f(FunctionProto, HAS_INSTANCE, { value: function (O) {\n  if (typeof this != 'function' || !isObject(O)) return false;\n  if (!isObject(this.prototype)) return O instanceof this;\n  // for environment w/o native `@@hasInstance` logic enough `instanceof`, but add this:\n  while (O = getPrototypeOf(O)) if (this.prototype === O) return true;\n  return false;\n} });\n","var $export = require('./_export');\nvar $parseInt = require('./_parse-int');\n// 18.2.5 parseInt(string, radix)\n$export($export.G + $export.F * (parseInt != $parseInt), { parseInt: $parseInt });\n","var $export = require('./_export');\nvar $parseFloat = require('./_parse-float');\n// 18.2.4 parseFloat(string)\n$export($export.G + $export.F * (parseFloat != $parseFloat), { parseFloat: $parseFloat });\n","'use strict';\nvar global = require('./_global');\nvar has = require('./_has');\nvar cof = require('./_cof');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar toPrimitive = require('./_to-primitive');\nvar fails = require('./_fails');\nvar gOPN = require('./_object-gopn').f;\nvar gOPD = require('./_object-gopd').f;\nvar dP = require('./_object-dp').f;\nvar $trim = require('./_string-trim').trim;\nvar NUMBER = 'Number';\nvar $Number = global[NUMBER];\nvar Base = $Number;\nvar proto = $Number.prototype;\n// Opera ~12 has broken Object#toString\nvar BROKEN_COF = cof(require('./_object-create')(proto)) == NUMBER;\nvar TRIM = 'trim' in String.prototype;\n\n// 7.1.3 ToNumber(argument)\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  if (typeof it == 'string' && it.length > 2) {\n    it = TRIM ? it.trim() : $trim(it, 3);\n    var first = it.charCodeAt(0);\n    var third, radix, maxCode;\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i\n        default: return +it;\n      }\n      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {\n        code = digits.charCodeAt(i);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\nif (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {\n  $Number = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var that = this;\n    return that instanceof $Number\n      // check on 1..constructor(foo) case\n      && (BROKEN_COF ? fails(function () { proto.valueOf.call(that); }) : cof(that) != NUMBER)\n        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);\n  };\n  for (var keys = require('./_descriptors') ? gOPN(Base) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES6 (in case, if modules with ES6 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(Base, key = keys[j]) && !has($Number, key)) {\n      dP($Number, key, gOPD(Base, key));\n    }\n  }\n  $Number.prototype = proto;\n  proto.constructor = $Number;\n  require('./_redefine')(global, NUMBER, $Number);\n}\n","'use strict';\nvar $export = require('./_export');\nvar toInteger = require('./_to-integer');\nvar aNumberValue = require('./_a-number-value');\nvar repeat = require('./_string-repeat');\nvar $toFixed = 1.0.toFixed;\nvar floor = Math.floor;\nvar data = [0, 0, 0, 0, 0, 0];\nvar ERROR = 'Number.toFixed: incorrect invocation!';\nvar ZERO = '0';\n\nvar multiply = function (n, c) {\n  var i = -1;\n  var c2 = c;\n  while (++i < 6) {\n    c2 += n * data[i];\n    data[i] = c2 % 1e7;\n    c2 = floor(c2 / 1e7);\n  }\n};\nvar divide = function (n) {\n  var i = 6;\n  var c = 0;\n  while (--i >= 0) {\n    c += data[i];\n    data[i] = floor(c / n);\n    c = (c % n) * 1e7;\n  }\n};\nvar numToString = function () {\n  var i = 6;\n  var s = '';\n  while (--i >= 0) {\n    if (s !== '' || i === 0 || data[i] !== 0) {\n      var t = String(data[i]);\n      s = s === '' ? t : s + repeat.call(ZERO, 7 - t.length) + t;\n    }\n  } return s;\n};\nvar pow = function (x, n, acc) {\n  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);\n};\nvar log = function (x) {\n  var n = 0;\n  var x2 = x;\n  while (x2 >= 4096) {\n    n += 12;\n    x2 /= 4096;\n  }\n  while (x2 >= 2) {\n    n += 1;\n    x2 /= 2;\n  } return n;\n};\n\n$export($export.P + $export.F * (!!$toFixed && (\n  0.00008.toFixed(3) !== '0.000' ||\n  0.9.toFixed(0) !== '1' ||\n  1.255.toFixed(2) !== '1.25' ||\n  1000000000000000128.0.toFixed(0) !== '1000000000000000128'\n) || !require('./_fails')(function () {\n  // V8 ~ Android 4.3-\n  $toFixed.call({});\n})), 'Number', {\n  toFixed: function toFixed(fractionDigits) {\n    var x = aNumberValue(this, ERROR);\n    var f = toInteger(fractionDigits);\n    var s = '';\n    var m = ZERO;\n    var e, z, j, k;\n    if (f < 0 || f > 20) throw RangeError(ERROR);\n    // eslint-disable-next-line no-self-compare\n    if (x != x) return 'NaN';\n    if (x <= -1e21 || x >= 1e21) return String(x);\n    if (x < 0) {\n      s = '-';\n      x = -x;\n    }\n    if (x > 1e-21) {\n      e = log(x * pow(2, 69, 1)) - 69;\n      z = e < 0 ? x * pow(2, -e, 1) : x / pow(2, e, 1);\n      z *= 0x10000000000000;\n      e = 52 - e;\n      if (e > 0) {\n        multiply(0, z);\n        j = f;\n        while (j >= 7) {\n          multiply(1e7, 0);\n          j -= 7;\n        }\n        multiply(pow(10, j, 1), 0);\n        j = e - 1;\n        while (j >= 23) {\n          divide(1 << 23);\n          j -= 23;\n        }\n        divide(1 << j);\n        multiply(1, 1);\n        divide(2);\n        m = numToString();\n      } else {\n        multiply(0, z);\n        multiply(1 << -e, 0);\n        m = numToString() + repeat.call(ZERO, f);\n      }\n    }\n    if (f > 0) {\n      k = m.length;\n      m = s + (k <= f ? '0.' + repeat.call(ZERO, f - k) + m : m.slice(0, k - f) + '.' + m.slice(k - f));\n    } else {\n      m = s + m;\n    } return m;\n  }\n});\n","'use strict';\nvar $export = require('./_export');\nvar $fails = require('./_fails');\nvar aNumberValue = require('./_a-number-value');\nvar $toPrecision = 1.0.toPrecision;\n\n$export($export.P + $export.F * ($fails(function () {\n  // IE7-\n  return $toPrecision.call(1, undefined) !== '1';\n}) || !$fails(function () {\n  // V8 ~ Android 4.3-\n  $toPrecision.call({});\n})), 'Number', {\n  toPrecision: function toPrecision(precision) {\n    var that = aNumberValue(this, 'Number#toPrecision: incorrect invocation!');\n    return precision === undefined ? $toPrecision.call(that) : $toPrecision.call(that, precision);\n  }\n});\n","// 20.1.2.1 Number.EPSILON\nvar $export = require('./_export');\n\n$export($export.S, 'Number', { EPSILON: Math.pow(2, -52) });\n","// 20.1.2.2 Number.isFinite(number)\nvar $export = require('./_export');\nvar _isFinite = require('./_global').isFinite;\n\n$export($export.S, 'Number', {\n  isFinite: function isFinite(it) {\n    return typeof it == 'number' && _isFinite(it);\n  }\n});\n","// 20.1.2.3 Number.isInteger(number)\nvar $export = require('./_export');\n\n$export($export.S, 'Number', { isInteger: require('./_is-integer') });\n","// 20.1.2.4 Number.isNaN(number)\nvar $export = require('./_export');\n\n$export($export.S, 'Number', {\n  isNaN: function isNaN(number) {\n    // eslint-disable-next-line no-self-compare\n    return number != number;\n  }\n});\n","// 20.1.2.5 Number.isSafeInteger(number)\nvar $export = require('./_export');\nvar isInteger = require('./_is-integer');\nvar abs = Math.abs;\n\n$export($export.S, 'Number', {\n  isSafeInteger: function isSafeInteger(number) {\n    return isInteger(number) && abs(number) <= 0x1fffffffffffff;\n  }\n});\n","// 20.1.2.6 Number.MAX_SAFE_INTEGER\nvar $export = require('./_export');\n\n$export($export.S, 'Number', { MAX_SAFE_INTEGER: 0x1fffffffffffff });\n","// 20.1.2.10 Number.MIN_SAFE_INTEGER\nvar $export = require('./_export');\n\n$export($export.S, 'Number', { MIN_SAFE_INTEGER: -0x1fffffffffffff });\n","var $export = require('./_export');\nvar $parseFloat = require('./_parse-float');\n// 20.1.2.12 Number.parseFloat(string)\n$export($export.S + $export.F * (Number.parseFloat != $parseFloat), 'Number', { parseFloat: $parseFloat });\n","var $export = require('./_export');\nvar $parseInt = require('./_parse-int');\n// 20.1.2.13 Number.parseInt(string, radix)\n$export($export.S + $export.F * (Number.parseInt != $parseInt), 'Number', { parseInt: $parseInt });\n","// 20.2.2.3 Math.acosh(x)\nvar $export = require('./_export');\nvar log1p = require('./_math-log1p');\nvar sqrt = Math.sqrt;\nvar $acosh = Math.acosh;\n\n$export($export.S + $export.F * !($acosh\n  // V8 bug: https://code.google.com/p/v8/issues/detail?id=3509\n  && Math.floor($acosh(Number.MAX_VALUE)) == 710\n  // Tor Browser bug: Math.acosh(Infinity) -> NaN\n  && $acosh(Infinity) == Infinity\n), 'Math', {\n  acosh: function acosh(x) {\n    return (x = +x) < 1 ? NaN : x > 94906265.62425156\n      ? Math.log(x) + Math.LN2\n      : log1p(x - 1 + sqrt(x - 1) * sqrt(x + 1));\n  }\n});\n","// 20.2.2.5 Math.asinh(x)\nvar $export = require('./_export');\nvar $asinh = Math.asinh;\n\nfunction asinh(x) {\n  return !isFinite(x = +x) || x == 0 ? x : x < 0 ? -asinh(-x) : Math.log(x + Math.sqrt(x * x + 1));\n}\n\n// Tor Browser bug: Math.asinh(0) -> -0\n$export($export.S + $export.F * !($asinh && 1 / $asinh(0) > 0), 'Math', { asinh: asinh });\n","// 20.2.2.7 Math.atanh(x)\nvar $export = require('./_export');\nvar $atanh = Math.atanh;\n\n// Tor Browser bug: Math.atanh(-0) -> 0\n$export($export.S + $export.F * !($atanh && 1 / $atanh(-0) < 0), 'Math', {\n  atanh: function atanh(x) {\n    return (x = +x) == 0 ? x : Math.log((1 + x) / (1 - x)) / 2;\n  }\n});\n","// 20.2.2.9 Math.cbrt(x)\nvar $export = require('./_export');\nvar sign = require('./_math-sign');\n\n$export($export.S, 'Math', {\n  cbrt: function cbrt(x) {\n    return sign(x = +x) * Math.pow(Math.abs(x), 1 / 3);\n  }\n});\n","// 20.2.2.11 Math.clz32(x)\nvar $export = require('./_export');\n\n$export($export.S, 'Math', {\n  clz32: function clz32(x) {\n    return (x >>>= 0) ? 31 - Math.floor(Math.log(x + 0.5) * Math.LOG2E) : 32;\n  }\n});\n","// 20.2.2.12 Math.cosh(x)\nvar $export = require('./_export');\nvar exp = Math.exp;\n\n$export($export.S, 'Math', {\n  cosh: function cosh(x) {\n    return (exp(x = +x) + exp(-x)) / 2;\n  }\n});\n","// 20.2.2.14 Math.expm1(x)\nvar $export = require('./_export');\nvar $expm1 = require('./_math-expm1');\n\n$export($export.S + $export.F * ($expm1 != Math.expm1), 'Math', { expm1: $expm1 });\n","// 20.2.2.16 Math.fround(x)\nvar $export = require('./_export');\n\n$export($export.S, 'Math', { fround: require('./_math-fround') });\n","// 20.2.2.16 Math.fround(x)\nvar sign = require('./_math-sign');\nvar pow = Math.pow;\nvar EPSILON = pow(2, -52);\nvar EPSILON32 = pow(2, -23);\nvar MAX32 = pow(2, 127) * (2 - EPSILON32);\nvar MIN32 = pow(2, -126);\n\nvar roundTiesToEven = function (n) {\n  return n + 1 / EPSILON - 1 / EPSILON;\n};\n\nmodule.exports = Math.fround || function fround(x) {\n  var $abs = Math.abs(x);\n  var $sign = sign(x);\n  var a, result;\n  if ($abs < MIN32) return $sign * roundTiesToEven($abs / MIN32 / EPSILON32) * MIN32 * EPSILON32;\n  a = (1 + EPSILON32 / EPSILON) * $abs;\n  result = a - (a - $abs);\n  // eslint-disable-next-line no-self-compare\n  if (result > MAX32 || result != result) return $sign * Infinity;\n  return $sign * result;\n};\n","// 20.2.2.17 Math.hypot([value1[, value2[, … ]]])\nvar $export = require('./_export');\nvar abs = Math.abs;\n\n$export($export.S, 'Math', {\n  hypot: function hypot(value1, value2) { // eslint-disable-line no-unused-vars\n    var sum = 0;\n    var i = 0;\n    var aLen = arguments.length;\n    var larg = 0;\n    var arg, div;\n    while (i < aLen) {\n      arg = abs(arguments[i++]);\n      if (larg < arg) {\n        div = larg / arg;\n        sum = sum * div * div + 1;\n        larg = arg;\n      } else if (arg > 0) {\n        div = arg / larg;\n        sum += div * div;\n      } else sum += arg;\n    }\n    return larg === Infinity ? Infinity : larg * Math.sqrt(sum);\n  }\n});\n","// 20.2.2.18 Math.imul(x, y)\nvar $export = require('./_export');\nvar $imul = Math.imul;\n\n// some WebKit versions fails with big numbers, some has wrong arity\n$export($export.S + $export.F * require('./_fails')(function () {\n  return $imul(0xffffffff, 5) != -5 || $imul.length != 2;\n}), 'Math', {\n  imul: function imul(x, y) {\n    var UINT16 = 0xffff;\n    var xn = +x;\n    var yn = +y;\n    var xl = UINT16 & xn;\n    var yl = UINT16 & yn;\n    return 0 | xl * yl + ((UINT16 & xn >>> 16) * yl + xl * (UINT16 & yn >>> 16) << 16 >>> 0);\n  }\n});\n","// 20.2.2.21 Math.log10(x)\nvar $export = require('./_export');\n\n$export($export.S, 'Math', {\n  log10: function log10(x) {\n    return Math.log(x) * Math.LOG10E;\n  }\n});\n","// 20.2.2.20 Math.log1p(x)\nvar $export = require('./_export');\n\n$export($export.S, 'Math', { log1p: require('./_math-log1p') });\n","// 20.2.2.22 Math.log2(x)\nvar $export = require('./_export');\n\n$export($export.S, 'Math', {\n  log2: function log2(x) {\n    return Math.log(x) / Math.LN2;\n  }\n});\n","// 20.2.2.28 Math.sign(x)\nvar $export = require('./_export');\n\n$export($export.S, 'Math', { sign: require('./_math-sign') });\n","// 20.2.2.30 Math.sinh(x)\nvar $export = require('./_export');\nvar expm1 = require('./_math-expm1');\nvar exp = Math.exp;\n\n// V8 near Chromium 38 has a problem with very small numbers\n$export($export.S + $export.F * require('./_fails')(function () {\n  return !Math.sinh(-2e-17) != -2e-17;\n}), 'Math', {\n  sinh: function sinh(x) {\n    return Math.abs(x = +x) < 1\n      ? (expm1(x) - expm1(-x)) / 2\n      : (exp(x - 1) - exp(-x - 1)) * (Math.E / 2);\n  }\n});\n","// 20.2.2.33 Math.tanh(x)\nvar $export = require('./_export');\nvar expm1 = require('./_math-expm1');\nvar exp = Math.exp;\n\n$export($export.S, 'Math', {\n  tanh: function tanh(x) {\n    var a = expm1(x = +x);\n    var b = expm1(-x);\n    return a == Infinity ? 1 : b == Infinity ? -1 : (a - b) / (exp(x) + exp(-x));\n  }\n});\n","// 20.2.2.34 Math.trunc(x)\nvar $export = require('./_export');\n\n$export($export.S, 'Math', {\n  trunc: function trunc(it) {\n    return (it > 0 ? Math.floor : Math.ceil)(it);\n  }\n});\n","var $export = require('./_export');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar fromCharCode = String.fromCharCode;\nvar $fromCodePoint = String.fromCodePoint;\n\n// length should be 1, old FF problem\n$export($export.S + $export.F * (!!$fromCodePoint && $fromCodePoint.length != 1), 'String', {\n  // 21.1.2.2 String.fromCodePoint(...codePoints)\n  fromCodePoint: function fromCodePoint(x) { // eslint-disable-line no-unused-vars\n    var res = [];\n    var aLen = arguments.length;\n    var i = 0;\n    var code;\n    while (aLen > i) {\n      code = +arguments[i++];\n      if (toAbsoluteIndex(code, 0x10ffff) !== code) throw RangeError(code + ' is not a valid code point');\n      res.push(code < 0x10000\n        ? fromCharCode(code)\n        : fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00)\n      );\n    } return res.join('');\n  }\n});\n","var $export = require('./_export');\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\n\n$export($export.S, 'String', {\n  // 21.1.2.4 String.raw(callSite, ...substitutions)\n  raw: function raw(callSite) {\n    var tpl = toIObject(callSite.raw);\n    var len = toLength(tpl.length);\n    var aLen = arguments.length;\n    var res = [];\n    var i = 0;\n    while (len > i) {\n      res.push(String(tpl[i++]));\n      if (i < aLen) res.push(String(arguments[i]));\n    } return res.join('');\n  }\n});\n","'use strict';\n// 21.1.3.25 String.prototype.trim()\nrequire('./_string-trim')('trim', function ($trim) {\n  return function trim() {\n    return $trim(this, 3);\n  };\n});\n","'use strict';\nvar $at = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n","'use strict';\nvar $export = require('./_export');\nvar $at = require('./_string-at')(false);\n$export($export.P, 'String', {\n  // 21.1.3.3 String.prototype.codePointAt(pos)\n  codePointAt: function codePointAt(pos) {\n    return $at(this, pos);\n  }\n});\n","// 21.1.3.6 String.prototype.endsWith(searchString [, endPosition])\n'use strict';\nvar $export = require('./_export');\nvar toLength = require('./_to-length');\nvar context = require('./_string-context');\nvar ENDS_WITH = 'endsWith';\nvar $endsWith = ''[ENDS_WITH];\n\n$export($export.P + $export.F * require('./_fails-is-regexp')(ENDS_WITH), 'String', {\n  endsWith: function endsWith(searchString /* , endPosition = @length */) {\n    var that = context(this, searchString, ENDS_WITH);\n    var endPosition = arguments.length > 1 ? arguments[1] : undefined;\n    var len = toLength(that.length);\n    var end = endPosition === undefined ? len : Math.min(toLength(endPosition), len);\n    var search = String(searchString);\n    return $endsWith\n      ? $endsWith.call(that, search, end)\n      : that.slice(end - search.length, end) === search;\n  }\n});\n","// 21.1.3.7 String.prototype.includes(searchString, position = 0)\n'use strict';\nvar $export = require('./_export');\nvar context = require('./_string-context');\nvar INCLUDES = 'includes';\n\n$export($export.P + $export.F * require('./_fails-is-regexp')(INCLUDES), 'String', {\n  includes: function includes(searchString /* , position = 0 */) {\n    return !!~context(this, searchString, INCLUDES)\n      .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","var $export = require('./_export');\n\n$export($export.P, 'String', {\n  // 21.1.3.13 String.prototype.repeat(count)\n  repeat: require('./_string-repeat')\n});\n","// 21.1.3.18 String.prototype.startsWith(searchString [, position ])\n'use strict';\nvar $export = require('./_export');\nvar toLength = require('./_to-length');\nvar context = require('./_string-context');\nvar STARTS_WITH = 'startsWith';\nvar $startsWith = ''[STARTS_WITH];\n\n$export($export.P + $export.F * require('./_fails-is-regexp')(STARTS_WITH), 'String', {\n  startsWith: function startsWith(searchString /* , position = 0 */) {\n    var that = context(this, searchString, STARTS_WITH);\n    var index = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length));\n    var search = String(searchString);\n    return $startsWith\n      ? $startsWith.call(that, search, index)\n      : that.slice(index, index + search.length) === search;\n  }\n});\n","'use strict';\n// B.2.3.2 String.prototype.anchor(name)\nrequire('./_string-html')('anchor', function (createHTML) {\n  return function anchor(name) {\n    return createHTML(this, 'a', 'name', name);\n  };\n});\n","'use strict';\n// B.2.3.3 String.prototype.big()\nrequire('./_string-html')('big', function (createHTML) {\n  return function big() {\n    return createHTML(this, 'big', '', '');\n  };\n});\n","'use strict';\n// B.2.3.4 String.prototype.blink()\nrequire('./_string-html')('blink', function (createHTML) {\n  return function blink() {\n    return createHTML(this, 'blink', '', '');\n  };\n});\n","'use strict';\n// B.2.3.5 String.prototype.bold()\nrequire('./_string-html')('bold', function (createHTML) {\n  return function bold() {\n    return createHTML(this, 'b', '', '');\n  };\n});\n","'use strict';\n// B.2.3.6 String.prototype.fixed()\nrequire('./_string-html')('fixed', function (createHTML) {\n  return function fixed() {\n    return createHTML(this, 'tt', '', '');\n  };\n});\n","'use strict';\n// B.2.3.7 String.prototype.fontcolor(color)\nrequire('./_string-html')('fontcolor', function (createHTML) {\n  return function fontcolor(color) {\n    return createHTML(this, 'font', 'color', color);\n  };\n});\n","'use strict';\n// B.2.3.8 String.prototype.fontsize(size)\nrequire('./_string-html')('fontsize', function (createHTML) {\n  return function fontsize(size) {\n    return createHTML(this, 'font', 'size', size);\n  };\n});\n","'use strict';\n// B.2.3.9 String.prototype.italics()\nrequire('./_string-html')('italics', function (createHTML) {\n  return function italics() {\n    return createHTML(this, 'i', '', '');\n  };\n});\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n","'use strict';\n// B.2.3.11 String.prototype.small()\nrequire('./_string-html')('small', function (createHTML) {\n  return function small() {\n    return createHTML(this, 'small', '', '');\n  };\n});\n","'use strict';\n// B.2.3.12 String.prototype.strike()\nrequire('./_string-html')('strike', function (createHTML) {\n  return function strike() {\n    return createHTML(this, 'strike', '', '');\n  };\n});\n","'use strict';\n// B.2.3.13 String.prototype.sub()\nrequire('./_string-html')('sub', function (createHTML) {\n  return function sub() {\n    return createHTML(this, 'sub', '', '');\n  };\n});\n","'use strict';\n// B.2.3.14 String.prototype.sup()\nrequire('./_string-html')('sup', function (createHTML) {\n  return function sup() {\n    return createHTML(this, 'sup', '', '');\n  };\n});\n","// 20.3.3.1 / 15.9.4.4 Date.now()\nvar $export = require('./_export');\n\n$export($export.S, 'Date', { now: function () { return new Date().getTime(); } });\n","'use strict';\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar toPrimitive = require('./_to-primitive');\n\n$export($export.P + $export.F * require('./_fails')(function () {\n  return new Date(NaN).toJSON() !== null\n    || Date.prototype.toJSON.call({ toISOString: function () { return 1; } }) !== 1;\n}), 'Date', {\n  // eslint-disable-next-line no-unused-vars\n  toJSON: function toJSON(key) {\n    var O = toObject(this);\n    var pv = toPrimitive(O);\n    return typeof pv == 'number' && !isFinite(pv) ? null : O.toISOString();\n  }\n});\n","// 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()\nvar $export = require('./_export');\nvar toISOString = require('./_date-to-iso-string');\n\n// PhantomJS / old WebKit has a broken implementations\n$export($export.P + $export.F * (Date.prototype.toISOString !== toISOString), 'Date', {\n  toISOString: toISOString\n});\n","'use strict';\n// 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()\nvar fails = require('./_fails');\nvar getTime = Date.prototype.getTime;\nvar $toISOString = Date.prototype.toISOString;\n\nvar lz = function (num) {\n  return num > 9 ? num : '0' + num;\n};\n\n// PhantomJS / old WebKit has a broken implementations\nmodule.exports = (fails(function () {\n  return $toISOString.call(new Date(-5e13 - 1)) != '0385-07-25T07:06:39.999Z';\n}) || !fails(function () {\n  $toISOString.call(new Date(NaN));\n})) ? function toISOString() {\n  if (!isFinite(getTime.call(this))) throw RangeError('Invalid time value');\n  var d = this;\n  var y = d.getUTCFullYear();\n  var m = d.getUTCMilliseconds();\n  var s = y < 0 ? '-' : y > 9999 ? '+' : '';\n  return s + ('00000' + Math.abs(y)).slice(s ? -6 : -4) +\n    '-' + lz(d.getUTCMonth() + 1) + '-' + lz(d.getUTCDate()) +\n    'T' + lz(d.getUTCHours()) + ':' + lz(d.getUTCMinutes()) +\n    ':' + lz(d.getUTCSeconds()) + '.' + (m > 99 ? m : '0' + lz(m)) + 'Z';\n} : $toISOString;\n","var DateProto = Date.prototype;\nvar INVALID_DATE = 'Invalid Date';\nvar TO_STRING = 'toString';\nvar $toString = DateProto[TO_STRING];\nvar getTime = DateProto.getTime;\nif (new Date(NaN) + '' != INVALID_DATE) {\n  require('./_redefine')(DateProto, TO_STRING, function toString() {\n    var value = getTime.call(this);\n    // eslint-disable-next-line no-self-compare\n    return value === value ? $toString.call(this) : INVALID_DATE;\n  });\n}\n","var TO_PRIMITIVE = require('./_wks')('toPrimitive');\nvar proto = Date.prototype;\n\nif (!(TO_PRIMITIVE in proto)) require('./_hide')(proto, TO_PRIMITIVE, require('./_date-to-primitive'));\n","'use strict';\nvar anObject = require('./_an-object');\nvar toPrimitive = require('./_to-primitive');\nvar NUMBER = 'number';\n\nmodule.exports = function (hint) {\n  if (hint !== 'string' && hint !== NUMBER && hint !== 'default') throw TypeError('Incorrect hint');\n  return toPrimitive(anObject(this), hint != NUMBER);\n};\n","// 22.1.2.2 / 15.4.3.2 Array.isArray(arg)\nvar $export = require('./_export');\n\n$export($export.S, 'Array', { isArray: require('./_is-array') });\n","'use strict';\nvar ctx = require('./_ctx');\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar toLength = require('./_to-length');\nvar createProperty = require('./_create-property');\nvar getIterFn = require('./core.get-iterator-method');\n\n$export($export.S + $export.F * !require('./_iter-detect')(function (iter) { Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n    var O = toObject(arrayLike);\n    var C = typeof this == 'function' ? this : Array;\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var index = 0;\n    var iterFn = getIterFn(O);\n    var length, result, step, iterator;\n    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {\n      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {\n        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = toLength(O.length);\n      for (result = new C(length); length > index; index++) {\n        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n","'use strict';\nvar $export = require('./_export');\nvar createProperty = require('./_create-property');\n\n// WebKit Array.of isn't generic\n$export($export.S + $export.F * require('./_fails')(function () {\n  function F() { /* empty */ }\n  return !(Array.of.call(F) instanceof F);\n}), 'Array', {\n  // 22.1.2.3 Array.of( ...items)\n  of: function of(/* ...args */) {\n    var index = 0;\n    var aLen = arguments.length;\n    var result = new (typeof this == 'function' ? this : Array)(aLen);\n    while (aLen > index) createProperty(result, index, arguments[index++]);\n    result.length = aLen;\n    return result;\n  }\n});\n","'use strict';\n// 22.1.3.13 Array.prototype.join(separator)\nvar $export = require('./_export');\nvar toIObject = require('./_to-iobject');\nvar arrayJoin = [].join;\n\n// fallback for not array-like strings\n$export($export.P + $export.F * (require('./_iobject') != Object || !require('./_strict-method')(arrayJoin)), 'Array', {\n  join: function join(separator) {\n    return arrayJoin.call(toIObject(this), separator === undefined ? ',' : separator);\n  }\n});\n","'use strict';\nvar $export = require('./_export');\nvar html = require('./_html');\nvar cof = require('./_cof');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nvar arraySlice = [].slice;\n\n// fallback for not array-like ES3 strings and DOM objects\n$export($export.P + $export.F * require('./_fails')(function () {\n  if (html) arraySlice.call(html);\n}), 'Array', {\n  slice: function slice(begin, end) {\n    var len = toLength(this.length);\n    var klass = cof(this);\n    end = end === undefined ? len : end;\n    if (klass == 'Array') return arraySlice.call(this, begin, end);\n    var start = toAbsoluteIndex(begin, len);\n    var upTo = toAbsoluteIndex(end, len);\n    var size = toLength(upTo - start);\n    var cloned = new Array(size);\n    var i = 0;\n    for (; i < size; i++) cloned[i] = klass == 'String'\n      ? this.charAt(start + i)\n      : this[start + i];\n    return cloned;\n  }\n});\n","'use strict';\nvar $export = require('./_export');\nvar aFunction = require('./_a-function');\nvar toObject = require('./_to-object');\nvar fails = require('./_fails');\nvar $sort = [].sort;\nvar test = [1, 2, 3];\n\n$export($export.P + $export.F * (fails(function () {\n  // IE8-\n  test.sort(undefined);\n}) || !fails(function () {\n  // V8 bug\n  test.sort(null);\n  // Old WebKit\n}) || !require('./_strict-method')($sort)), 'Array', {\n  // 22.1.3.25 Array.prototype.sort(comparefn)\n  sort: function sort(comparefn) {\n    return comparefn === undefined\n      ? $sort.call(toObject(this))\n      : $sort.call(toObject(this), aFunction(comparefn));\n  }\n});\n","'use strict';\nvar $export = require('./_export');\nvar $forEach = require('./_array-methods')(0);\nvar STRICT = require('./_strict-method')([].forEach, true);\n\n$export($export.P + $export.F * !STRICT, 'Array', {\n  // 22.1.3.10 / 15.4.4.18 Array.prototype.forEach(callbackfn [, thisArg])\n  forEach: function forEach(callbackfn /* , thisArg */) {\n    return $forEach(this, callbackfn, arguments[1]);\n  }\n});\n","// 9.4.2.3 ArraySpeciesCreate(originalArray, length)\nvar speciesConstructor = require('./_array-species-constructor');\n\nmodule.exports = function (original, length) {\n  return new (speciesConstructor(original))(length);\n};\n","var isObject = require('./_is-object');\nvar isArray = require('./_is-array');\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (original) {\n  var C;\n  if (isArray(original)) {\n    C = original.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return C === undefined ? Array : C;\n};\n","'use strict';\nvar $export = require('./_export');\nvar $map = require('./_array-methods')(1);\n\n$export($export.P + $export.F * !require('./_strict-method')([].map, true), 'Array', {\n  // 22.1.3.15 / 15.4.4.19 Array.prototype.map(callbackfn [, thisArg])\n  map: function map(callbackfn /* , thisArg */) {\n    return $map(this, callbackfn, arguments[1]);\n  }\n});\n","'use strict';\nvar $export = require('./_export');\nvar $filter = require('./_array-methods')(2);\n\n$export($export.P + $export.F * !require('./_strict-method')([].filter, true), 'Array', {\n  // 22.1.3.7 / 15.4.4.20 Array.prototype.filter(callbackfn [, thisArg])\n  filter: function filter(callbackfn /* , thisArg */) {\n    return $filter(this, callbackfn, arguments[1]);\n  }\n});\n","'use strict';\nvar $export = require('./_export');\nvar $some = require('./_array-methods')(3);\n\n$export($export.P + $export.F * !require('./_strict-method')([].some, true), 'Array', {\n  // 22.1.3.23 / 15.4.4.17 Array.prototype.some(callbackfn [, thisArg])\n  some: function some(callbackfn /* , thisArg */) {\n    return $some(this, callbackfn, arguments[1]);\n  }\n});\n","'use strict';\nvar $export = require('./_export');\nvar $every = require('./_array-methods')(4);\n\n$export($export.P + $export.F * !require('./_strict-method')([].every, true), 'Array', {\n  // 22.1.3.5 / 15.4.4.16 Array.prototype.every(callbackfn [, thisArg])\n  every: function every(callbackfn /* , thisArg */) {\n    return $every(this, callbackfn, arguments[1]);\n  }\n});\n","'use strict';\nvar $export = require('./_export');\nvar $reduce = require('./_array-reduce');\n\n$export($export.P + $export.F * !require('./_strict-method')([].reduce, true), 'Array', {\n  // 22.1.3.18 / 15.4.4.21 Array.prototype.reduce(callbackfn [, initialValue])\n  reduce: function reduce(callbackfn /* , initialValue */) {\n    return $reduce(this, callbackfn, arguments.length, arguments[1], false);\n  }\n});\n","'use strict';\nvar $export = require('./_export');\nvar $reduce = require('./_array-reduce');\n\n$export($export.P + $export.F * !require('./_strict-method')([].reduceRight, true), 'Array', {\n  // 22.1.3.19 / 15.4.4.22 Array.prototype.reduceRight(callbackfn [, initialValue])\n  reduceRight: function reduceRight(callbackfn /* , initialValue */) {\n    return $reduce(this, callbackfn, arguments.length, arguments[1], true);\n  }\n});\n","'use strict';\nvar $export = require('./_export');\nvar $indexOf = require('./_array-includes')(false);\nvar $native = [].indexOf;\nvar NEGATIVE_ZERO = !!$native && 1 / [1].indexOf(1, -0) < 0;\n\n$export($export.P + $export.F * (NEGATIVE_ZERO || !require('./_strict-method')($native)), 'Array', {\n  // 22.1.3.11 / 15.4.4.14 Array.prototype.indexOf(searchElement [, fromIndex])\n  indexOf: function indexOf(searchElement /* , fromIndex = 0 */) {\n    return NEGATIVE_ZERO\n      // convert -0 to +0\n      ? $native.apply(this, arguments) || 0\n      : $indexOf(this, searchElement, arguments[1]);\n  }\n});\n","'use strict';\nvar $export = require('./_export');\nvar toIObject = require('./_to-iobject');\nvar toInteger = require('./_to-integer');\nvar toLength = require('./_to-length');\nvar $native = [].lastIndexOf;\nvar NEGATIVE_ZERO = !!$native && 1 / [1].lastIndexOf(1, -0) < 0;\n\n$export($export.P + $export.F * (NEGATIVE_ZERO || !require('./_strict-method')($native)), 'Array', {\n  // 22.1.3.14 / 15.4.4.15 Array.prototype.lastIndexOf(searchElement [, fromIndex])\n  lastIndexOf: function lastIndexOf(searchElement /* , fromIndex = @[*-1] */) {\n    // convert -0 to +0\n    if (NEGATIVE_ZERO) return $native.apply(this, arguments) || 0;\n    var O = toIObject(this);\n    var length = toLength(O.length);\n    var index = length - 1;\n    if (arguments.length > 1) index = Math.min(index, toInteger(arguments[1]));\n    if (index < 0) index = length + index;\n    for (;index >= 0; index--) if (index in O) if (O[index] === searchElement) return index || 0;\n    return -1;\n  }\n});\n","// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', { copyWithin: require('./_array-copy-within') });\n\nrequire('./_add-to-unscopables')('copyWithin');\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', { fill: require('./_array-fill') });\n\nrequire('./_add-to-unscopables')('fill');\n","'use strict';\n// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)\nvar $export = require('./_export');\nvar $find = require('./_array-methods')(5);\nvar KEY = 'find';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n","'use strict';\n// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)\nvar $export = require('./_export');\nvar $find = require('./_array-methods')(6);\nvar KEY = 'findIndex';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  findIndex: function findIndex(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n","require('./_set-species')('Array');\n","var global = require('./_global');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar dP = require('./_object-dp').f;\nvar gOPN = require('./_object-gopn').f;\nvar isRegExp = require('./_is-regexp');\nvar $flags = require('./_flags');\nvar $RegExp = global.RegExp;\nvar Base = $RegExp;\nvar proto = $RegExp.prototype;\nvar re1 = /a/g;\nvar re2 = /a/g;\n// \"new\" creates a new object, old webkit buggy here\nvar CORRECT_NEW = new $RegExp(re1) !== re1;\n\nif (require('./_descriptors') && (!CORRECT_NEW || require('./_fails')(function () {\n  re2[require('./_wks')('match')] = false;\n  // RegExp constructor can alter flags and IsRegExp works correct with @@match\n  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';\n}))) {\n  $RegExp = function RegExp(p, f) {\n    var tiRE = this instanceof $RegExp;\n    var piRE = isRegExp(p);\n    var fiU = f === undefined;\n    return !tiRE && piRE && p.constructor === $RegExp && fiU ? p\n      : inheritIfRequired(CORRECT_NEW\n        ? new Base(piRE && !fiU ? p.source : p, f)\n        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f)\n      , tiRE ? this : proto, $RegExp);\n  };\n  var proxy = function (key) {\n    key in $RegExp || dP($RegExp, key, {\n      configurable: true,\n      get: function () { return Base[key]; },\n      set: function (it) { Base[key] = it; }\n    });\n  };\n  for (var keys = gOPN(Base), i = 0; keys.length > i;) proxy(keys[i++]);\n  proto.constructor = $RegExp;\n  $RegExp.prototype = proto;\n  require('./_redefine')(global, 'RegExp', $RegExp);\n}\n\nrequire('./_set-species')('RegExp');\n","'use strict';\nrequire('./es6.regexp.flags');\nvar anObject = require('./_an-object');\nvar $flags = require('./_flags');\nvar DESCRIPTORS = require('./_descriptors');\nvar TO_STRING = 'toString';\nvar $toString = /./[TO_STRING];\n\nvar define = function (fn) {\n  require('./_redefine')(RegExp.prototype, TO_STRING, fn, true);\n};\n\n// 21.2.5.14 RegExp.prototype.toString()\nif (require('./_fails')(function () { return $toString.call({ source: 'a', flags: 'b' }) != '/a/b'; })) {\n  define(function toString() {\n    var R = anObject(this);\n    return '/'.concat(R.source, '/',\n      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);\n  });\n// FF44- RegExp#toString has a wrong name\n} else if ($toString.name != TO_STRING) {\n  define(function toString() {\n    return $toString.call(this);\n  });\n}\n","// @@match logic\nrequire('./_fix-re-wks')('match', 1, function (defined, MATCH, $match) {\n  // 21.1.3.11 String.prototype.match(regexp)\n  return [function match(regexp) {\n    'use strict';\n    var O = defined(this);\n    var fn = regexp == undefined ? undefined : regexp[MATCH];\n    return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));\n  }, $match];\n});\n","// @@replace logic\nrequire('./_fix-re-wks')('replace', 2, function (defined, REPLACE, $replace) {\n  // 21.1.3.14 String.prototype.replace(searchValue, replaceValue)\n  return [function replace(searchValue, replaceValue) {\n    'use strict';\n    var O = defined(this);\n    var fn = searchValue == undefined ? undefined : searchValue[REPLACE];\n    return fn !== undefined\n      ? fn.call(searchValue, O, replaceValue)\n      : $replace.call(String(O), searchValue, replaceValue);\n  }, $replace];\n});\n","// @@search logic\nrequire('./_fix-re-wks')('search', 1, function (defined, SEARCH, $search) {\n  // 21.1.3.15 String.prototype.search(regexp)\n  return [function search(regexp) {\n    'use strict';\n    var O = defined(this);\n    var fn = regexp == undefined ? undefined : regexp[SEARCH];\n    return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));\n  }, $search];\n});\n","// @@split logic\nrequire('./_fix-re-wks')('split', 2, function (defined, SPLIT, $split) {\n  'use strict';\n  var isRegExp = require('./_is-regexp');\n  var _split = $split;\n  var $push = [].push;\n  var $SPLIT = 'split';\n  var LENGTH = 'length';\n  var LAST_INDEX = 'lastIndex';\n  if (\n    'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||\n    'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||\n    'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||\n    '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||\n    '.'[$SPLIT](/()()/)[LENGTH] > 1 ||\n    ''[$SPLIT](/.?/)[LENGTH]\n  ) {\n    var NPCG = /()??/.exec('')[1] === undefined; // nonparticipating capturing group\n    // based on es5-shim implementation, need to rework it\n    $split = function (separator, limit) {\n      var string = String(this);\n      if (separator === undefined && limit === 0) return [];\n      // If `separator` is not a regex, use native split\n      if (!isRegExp(separator)) return _split.call(string, separator, limit);\n      var output = [];\n      var flags = (separator.ignoreCase ? 'i' : '') +\n                  (separator.multiline ? 'm' : '') +\n                  (separator.unicode ? 'u' : '') +\n                  (separator.sticky ? 'y' : '');\n      var lastLastIndex = 0;\n      var splitLimit = limit === undefined ? 4294967295 : limit >>> 0;\n      // Make `global` and avoid `lastIndex` issues by working with a copy\n      var separatorCopy = new RegExp(separator.source, flags + 'g');\n      var separator2, match, lastIndex, lastLength, i;\n      // Doesn't need flags gy, but they don't hurt\n      if (!NPCG) separator2 = new RegExp('^' + separatorCopy.source + '$(?!\\\\s)', flags);\n      while (match = separatorCopy.exec(string)) {\n        // `separatorCopy.lastIndex` is not reliable cross-browser\n        lastIndex = match.index + match[0][LENGTH];\n        if (lastIndex > lastLastIndex) {\n          output.push(string.slice(lastLastIndex, match.index));\n          // Fix browsers whose `exec` methods don't consistently return `undefined` for NPCG\n          // eslint-disable-next-line no-loop-func\n          if (!NPCG && match[LENGTH] > 1) match[0].replace(separator2, function () {\n            for (i = 1; i < arguments[LENGTH] - 2; i++) if (arguments[i] === undefined) match[i] = undefined;\n          });\n          if (match[LENGTH] > 1 && match.index < string[LENGTH]) $push.apply(output, match.slice(1));\n          lastLength = match[0][LENGTH];\n          lastLastIndex = lastIndex;\n          if (output[LENGTH] >= splitLimit) break;\n        }\n        if (separatorCopy[LAST_INDEX] === match.index) separatorCopy[LAST_INDEX]++; // Avoid an infinite loop\n      }\n      if (lastLastIndex === string[LENGTH]) {\n        if (lastLength || !separatorCopy.test('')) output.push('');\n      } else output.push(string.slice(lastLastIndex));\n      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;\n    };\n  // Chakra, V8\n  } else if ('0'[$SPLIT](undefined, 0)[LENGTH]) {\n    $split = function (separator, limit) {\n      return separator === undefined && limit === 0 ? [] : _split.call(this, separator, limit);\n    };\n  }\n  // 21.1.3.17 String.prototype.split(separator, limit)\n  return [function split(separator, limit) {\n    var O = defined(this);\n    var fn = separator == undefined ? undefined : separator[SPLIT];\n    return fn !== undefined ? fn.call(separator, O, limit) : $split.call(String(O), separator, limit);\n  }, $split];\n});\n","var global = require('./_global');\nvar macrotask = require('./_task').set;\nvar Observer = global.MutationObserver || global.WebKitMutationObserver;\nvar process = global.process;\nvar Promise = global.Promise;\nvar isNode = require('./_cof')(process) == 'process';\n\nmodule.exports = function () {\n  var head, last, notify;\n\n  var flush = function () {\n    var parent, fn;\n    if (isNode && (parent = process.domain)) parent.exit();\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch (e) {\n        if (head) notify();\n        else last = undefined;\n        throw e;\n      }\n    } last = undefined;\n    if (parent) parent.enter();\n  };\n\n  // Node.js\n  if (isNode) {\n    notify = function () {\n      process.nextTick(flush);\n    };\n  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339\n  } else if (Observer && !(global.navigator && global.navigator.standalone)) {\n    var toggle = true;\n    var node = document.createTextNode('');\n    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new\n    notify = function () {\n      node.data = toggle = !toggle;\n    };\n  // environments with maybe non-completely correct, but existent Promise\n  } else if (Promise && Promise.resolve) {\n    // Promise.resolve without an argument throws an error in LG WebOS 2\n    var promise = Promise.resolve(undefined);\n    notify = function () {\n      promise.then(flush);\n    };\n  // for other environments - macrotask based on:\n  // - setImmediate\n  // - MessageChannel\n  // - window.postMessag\n  // - onreadystatechange\n  // - setTimeout\n  } else {\n    notify = function () {\n      // strange IE + webpack dev server bug - use .call(global)\n      macrotask.call(global, flush);\n    };\n  }\n\n  return function (fn) {\n    var task = { fn: fn, next: undefined };\n    if (last) last.next = task;\n    if (!head) {\n      head = task;\n      notify();\n    } last = task;\n  };\n};\n","module.exports = function (exec) {\n  try {\n    return { e: false, v: exec() };\n  } catch (e) {\n    return { e: true, v: e };\n  }\n};\n","'use strict';\nvar strong = require('./_collection-strong');\nvar validate = require('./_validate-collection');\nvar MAP = 'Map';\n\n// 23.1 Map Objects\nmodule.exports = require('./_collection')(MAP, function (get) {\n  return function Map() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.1.3.6 Map.prototype.get(key)\n  get: function get(key) {\n    var entry = strong.getEntry(validate(this, MAP), key);\n    return entry && entry.v;\n  },\n  // 23.1.3.9 Map.prototype.set(key, value)\n  set: function set(key, value) {\n    return strong.def(validate(this, MAP), key === 0 ? 0 : key, value);\n  }\n}, strong, true);\n","'use strict';\nvar strong = require('./_collection-strong');\nvar validate = require('./_validate-collection');\nvar SET = 'Set';\n\n// 23.2 Set Objects\nmodule.exports = require('./_collection')(SET, function (get) {\n  return function Set() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.2.3.1 Set.prototype.add(value)\n  add: function add(value) {\n    return strong.def(validate(this, SET), value = value === 0 ? 0 : value, value);\n  }\n}, strong);\n","'use strict';\nvar each = require('./_array-methods')(0);\nvar redefine = require('./_redefine');\nvar meta = require('./_meta');\nvar assign = require('./_object-assign');\nvar weak = require('./_collection-weak');\nvar isObject = require('./_is-object');\nvar fails = require('./_fails');\nvar validate = require('./_validate-collection');\nvar WEAK_MAP = 'WeakMap';\nvar getWeak = meta.getWeak;\nvar isExtensible = Object.isExtensible;\nvar uncaughtFrozenStore = weak.ufstore;\nvar tmp = {};\nvar InternalMap;\n\nvar wrapper = function (get) {\n  return function WeakMap() {\n    return get(this, arguments.length > 0 ? arguments[0] : undefined);\n  };\n};\n\nvar methods = {\n  // 23.3.3.3 WeakMap.prototype.get(key)\n  get: function get(key) {\n    if (isObject(key)) {\n      var data = getWeak(key);\n      if (data === true) return uncaughtFrozenStore(validate(this, WEAK_MAP)).get(key);\n      return data ? data[this._i] : undefined;\n    }\n  },\n  // 23.3.3.5 WeakMap.prototype.set(key, value)\n  set: function set(key, value) {\n    return weak.def(validate(this, WEAK_MAP), key, value);\n  }\n};\n\n// 23.3 WeakMap Objects\nvar $WeakMap = module.exports = require('./_collection')(WEAK_MAP, wrapper, methods, weak, true, true);\n\n// IE11 WeakMap frozen keys fix\nif (fails(function () { return new $WeakMap().set((Object.freeze || Object)(tmp), 7).get(tmp) != 7; })) {\n  InternalMap = weak.getConstructor(wrapper, WEAK_MAP);\n  assign(InternalMap.prototype, methods);\n  meta.NEED = true;\n  each(['delete', 'has', 'get', 'set'], function (key) {\n    var proto = $WeakMap.prototype;\n    var method = proto[key];\n    redefine(proto, key, function (a, b) {\n      // store frozen objects on internal weakmap shim\n      if (isObject(a) && !isExtensible(a)) {\n        if (!this._f) this._f = new InternalMap();\n        var result = this._f[key](a, b);\n        return key == 'set' ? this : result;\n      // store all the rest on native weakmap\n      } return method.call(this, a, b);\n    });\n  });\n}\n","'use strict';\nvar weak = require('./_collection-weak');\nvar validate = require('./_validate-collection');\nvar WEAK_SET = 'WeakSet';\n\n// 23.4 WeakSet Objects\nrequire('./_collection')(WEAK_SET, function (get) {\n  return function WeakSet() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.4.3.1 WeakSet.prototype.add(value)\n  add: function add(value) {\n    return weak.def(validate(this, WEAK_SET), value, true);\n  }\n}, weak, false, true);\n","'use strict';\nvar $export = require('./_export');\nvar $typed = require('./_typed');\nvar buffer = require('./_typed-buffer');\nvar anObject = require('./_an-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nvar isObject = require('./_is-object');\nvar ArrayBuffer = require('./_global').ArrayBuffer;\nvar speciesConstructor = require('./_species-constructor');\nvar $ArrayBuffer = buffer.ArrayBuffer;\nvar $DataView = buffer.DataView;\nvar $isView = $typed.ABV && ArrayBuffer.isView;\nvar $slice = $ArrayBuffer.prototype.slice;\nvar VIEW = $typed.VIEW;\nvar ARRAY_BUFFER = 'ArrayBuffer';\n\n$export($export.G + $export.W + $export.F * (ArrayBuffer !== $ArrayBuffer), { ArrayBuffer: $ArrayBuffer });\n\n$export($export.S + $export.F * !$typed.CONSTR, ARRAY_BUFFER, {\n  // 24.1.3.1 ArrayBuffer.isView(arg)\n  isView: function isView(it) {\n    return $isView && $isView(it) || isObject(it) && VIEW in it;\n  }\n});\n\n$export($export.P + $export.U + $export.F * require('./_fails')(function () {\n  return !new $ArrayBuffer(2).slice(1, undefined).byteLength;\n}), ARRAY_BUFFER, {\n  // 24.1.4.3 ArrayBuffer.prototype.slice(start, end)\n  slice: function slice(start, end) {\n    if ($slice !== undefined && end === undefined) return $slice.call(anObject(this), start); // FF fix\n    var len = anObject(this).byteLength;\n    var first = toAbsoluteIndex(start, len);\n    var fin = toAbsoluteIndex(end === undefined ? len : end, len);\n    var result = new (speciesConstructor(this, $ArrayBuffer))(toLength(fin - first));\n    var viewS = new $DataView(this);\n    var viewT = new $DataView(result);\n    var index = 0;\n    while (first < fin) {\n      viewT.setUint8(index++, viewS.getUint8(first++));\n    } return result;\n  }\n});\n\nrequire('./_set-species')(ARRAY_BUFFER);\n","var $export = require('./_export');\n$export($export.G + $export.W + $export.F * !require('./_typed').ABV, {\n  DataView: require('./_typed-buffer').DataView\n});\n","require('./_typed-array')('Int8', 1, function (init) {\n  return function Int8Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n","require('./_typed-array')('Uint8', 1, function (init) {\n  return function Uint8Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n","require('./_typed-array')('Uint8', 1, function (init) {\n  return function Uint8ClampedArray(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n}, true);\n","require('./_typed-array')('Int16', 2, function (init) {\n  return function Int16Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n","require('./_typed-array')('Uint16', 2, function (init) {\n  return function Uint16Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n","require('./_typed-array')('Int32', 4, function (init) {\n  return function Int32Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n","require('./_typed-array')('Uint32', 4, function (init) {\n  return function Uint32Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n","require('./_typed-array')('Float32', 4, function (init) {\n  return function Float32Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n","require('./_typed-array')('Float64', 8, function (init) {\n  return function Float64Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n","// 26.1.1 Reflect.apply(target, thisArgument, argumentsList)\nvar $export = require('./_export');\nvar aFunction = require('./_a-function');\nvar anObject = require('./_an-object');\nvar rApply = (require('./_global').Reflect || {}).apply;\nvar fApply = Function.apply;\n// MS Edge argumentsList argument is optional\n$export($export.S + $export.F * !require('./_fails')(function () {\n  rApply(function () { /* empty */ });\n}), 'Reflect', {\n  apply: function apply(target, thisArgument, argumentsList) {\n    var T = aFunction(target);\n    var L = anObject(argumentsList);\n    return rApply ? rApply(T, thisArgument, L) : fApply.call(T, thisArgument, L);\n  }\n});\n","// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])\nvar $export = require('./_export');\nvar create = require('./_object-create');\nvar aFunction = require('./_a-function');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar fails = require('./_fails');\nvar bind = require('./_bind');\nvar rConstruct = (require('./_global').Reflect || {}).construct;\n\n// MS Edge supports only 2 arguments and argumentsList argument is optional\n// FF Nightly sets third argument as `new.target`, but does not create `this` from it\nvar NEW_TARGET_BUG = fails(function () {\n  function F() { /* empty */ }\n  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);\n});\nvar ARGS_BUG = !fails(function () {\n  rConstruct(function () { /* empty */ });\n});\n\n$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {\n  construct: function construct(Target, args /* , newTarget */) {\n    aFunction(Target);\n    anObject(args);\n    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);\n    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);\n    if (Target == newTarget) {\n      // w/o altered newTarget, optimization for 0-4 arguments\n      switch (args.length) {\n        case 0: return new Target();\n        case 1: return new Target(args[0]);\n        case 2: return new Target(args[0], args[1]);\n        case 3: return new Target(args[0], args[1], args[2]);\n        case 4: return new Target(args[0], args[1], args[2], args[3]);\n      }\n      // w/o altered newTarget, lot of arguments case\n      var $args = [null];\n      $args.push.apply($args, args);\n      return new (bind.apply(Target, $args))();\n    }\n    // with altered newTarget, not support built-in constructors\n    var proto = newTarget.prototype;\n    var instance = create(isObject(proto) ? proto : Object.prototype);\n    var result = Function.apply.call(Target, instance, args);\n    return isObject(result) ? result : instance;\n  }\n});\n","// 26.1.3 Reflect.defineProperty(target, propertyKey, attributes)\nvar dP = require('./_object-dp');\nvar $export = require('./_export');\nvar anObject = require('./_an-object');\nvar toPrimitive = require('./_to-primitive');\n\n// MS Edge has broken Reflect.defineProperty - throwing instead of returning false\n$export($export.S + $export.F * require('./_fails')(function () {\n  // eslint-disable-next-line no-undef\n  Reflect.defineProperty(dP.f({}, 1, { value: 1 }), 1, { value: 2 });\n}), 'Reflect', {\n  defineProperty: function defineProperty(target, propertyKey, attributes) {\n    anObject(target);\n    propertyKey = toPrimitive(propertyKey, true);\n    anObject(attributes);\n    try {\n      dP.f(target, propertyKey, attributes);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n});\n","// 26.1.4 Reflect.deleteProperty(target, propertyKey)\nvar $export = require('./_export');\nvar gOPD = require('./_object-gopd').f;\nvar anObject = require('./_an-object');\n\n$export($export.S, 'Reflect', {\n  deleteProperty: function deleteProperty(target, propertyKey) {\n    var desc = gOPD(anObject(target), propertyKey);\n    return desc && !desc.configurable ? false : delete target[propertyKey];\n  }\n});\n","'use strict';\n// 26.1.5 Reflect.enumerate(target)\nvar $export = require('./_export');\nvar anObject = require('./_an-object');\nvar Enumerate = function (iterated) {\n  this._t = anObject(iterated); // target\n  this._i = 0;                  // next index\n  var keys = this._k = [];      // keys\n  var key;\n  for (key in iterated) keys.push(key);\n};\nrequire('./_iter-create')(Enumerate, 'Object', function () {\n  var that = this;\n  var keys = that._k;\n  var key;\n  do {\n    if (that._i >= keys.length) return { value: undefined, done: true };\n  } while (!((key = keys[that._i++]) in that._t));\n  return { value: key, done: false };\n});\n\n$export($export.S, 'Reflect', {\n  enumerate: function enumerate(target) {\n    return new Enumerate(target);\n  }\n});\n","// 26.1.6 Reflect.get(target, propertyKey [, receiver])\nvar gOPD = require('./_object-gopd');\nvar getPrototypeOf = require('./_object-gpo');\nvar has = require('./_has');\nvar $export = require('./_export');\nvar isObject = require('./_is-object');\nvar anObject = require('./_an-object');\n\nfunction get(target, propertyKey /* , receiver */) {\n  var receiver = arguments.length < 3 ? target : arguments[2];\n  var desc, proto;\n  if (anObject(target) === receiver) return target[propertyKey];\n  if (desc = gOPD.f(target, propertyKey)) return has(desc, 'value')\n    ? desc.value\n    : desc.get !== undefined\n      ? desc.get.call(receiver)\n      : undefined;\n  if (isObject(proto = getPrototypeOf(target))) return get(proto, propertyKey, receiver);\n}\n\n$export($export.S, 'Reflect', { get: get });\n","// 26.1.7 Reflect.getOwnPropertyDescriptor(target, propertyKey)\nvar gOPD = require('./_object-gopd');\nvar $export = require('./_export');\nvar anObject = require('./_an-object');\n\n$export($export.S, 'Reflect', {\n  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, propertyKey) {\n    return gOPD.f(anObject(target), propertyKey);\n  }\n});\n","// 26.1.8 Reflect.getPrototypeOf(target)\nvar $export = require('./_export');\nvar getProto = require('./_object-gpo');\nvar anObject = require('./_an-object');\n\n$export($export.S, 'Reflect', {\n  getPrototypeOf: function getPrototypeOf(target) {\n    return getProto(anObject(target));\n  }\n});\n","// 26.1.9 Reflect.has(target, propertyKey)\nvar $export = require('./_export');\n\n$export($export.S, 'Reflect', {\n  has: function has(target, propertyKey) {\n    return propertyKey in target;\n  }\n});\n","// 26.1.10 Reflect.isExtensible(target)\nvar $export = require('./_export');\nvar anObject = require('./_an-object');\nvar $isExtensible = Object.isExtensible;\n\n$export($export.S, 'Reflect', {\n  isExtensible: function isExtensible(target) {\n    anObject(target);\n    return $isExtensible ? $isExtensible(target) : true;\n  }\n});\n","// 26.1.11 Reflect.ownKeys(target)\nvar $export = require('./_export');\n\n$export($export.S, 'Reflect', { ownKeys: require('./_own-keys') });\n","// 26.1.12 Reflect.preventExtensions(target)\nvar $export = require('./_export');\nvar anObject = require('./_an-object');\nvar $preventExtensions = Object.preventExtensions;\n\n$export($export.S, 'Reflect', {\n  preventExtensions: function preventExtensions(target) {\n    anObject(target);\n    try {\n      if ($preventExtensions) $preventExtensions(target);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n});\n","// 26.1.13 Reflect.set(target, propertyKey, V [, receiver])\nvar dP = require('./_object-dp');\nvar gOPD = require('./_object-gopd');\nvar getPrototypeOf = require('./_object-gpo');\nvar has = require('./_has');\nvar $export = require('./_export');\nvar createDesc = require('./_property-desc');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\n\nfunction set(target, propertyKey, V /* , receiver */) {\n  var receiver = arguments.length < 4 ? target : arguments[3];\n  var ownDesc = gOPD.f(anObject(target), propertyKey);\n  var existingDescriptor, proto;\n  if (!ownDesc) {\n    if (isObject(proto = getPrototypeOf(target))) {\n      return set(proto, propertyKey, V, receiver);\n    }\n    ownDesc = createDesc(0);\n  }\n  if (has(ownDesc, 'value')) {\n    if (ownDesc.writable === false || !isObject(receiver)) return false;\n    if (existingDescriptor = gOPD.f(receiver, propertyKey)) {\n      if (existingDescriptor.get || existingDescriptor.set || existingDescriptor.writable === false) return false;\n      existingDescriptor.value = V;\n      dP.f(receiver, propertyKey, existingDescriptor);\n    } else dP.f(receiver, propertyKey, createDesc(0, V));\n    return true;\n  }\n  return ownDesc.set === undefined ? false : (ownDesc.set.call(receiver, V), true);\n}\n\n$export($export.S, 'Reflect', { set: set });\n","// 26.1.14 Reflect.setPrototypeOf(target, proto)\nvar $export = require('./_export');\nvar setProto = require('./_set-proto');\n\nif (setProto) $export($export.S, 'Reflect', {\n  setPrototypeOf: function setPrototypeOf(target, proto) {\n    setProto.check(target, proto);\n    try {\n      setProto.set(target, proto);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n});\n","require('../../modules/es7.array.includes');\nmodule.exports = require('../../modules/_core').Array.includes;\n","'use strict';\n// https://github.com/tc39/Array.prototype.includes\nvar $export = require('./_export');\nvar $includes = require('./_array-includes')(true);\n\n$export($export.P, 'Array', {\n  includes: function includes(el /* , fromIndex = 0 */) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\nrequire('./_add-to-unscopables')('includes');\n","require('../../modules/es7.string.pad-start');\nmodule.exports = require('../../modules/_core').String.padStart;\n","'use strict';\n// https://github.com/tc39/proposal-string-pad-start-end\nvar $export = require('./_export');\nvar $pad = require('./_string-pad');\nvar userAgent = require('./_user-agent');\n\n// https://github.com/zloirock/core-js/issues/280\n$export($export.P + $export.F * /Version\\/10\\.\\d+(\\.\\d+)? Safari\\//.test(userAgent), 'String', {\n  padStart: function padStart(maxLength /* , fillString = ' ' */) {\n    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);\n  }\n});\n","require('../../modules/es7.string.pad-end');\nmodule.exports = require('../../modules/_core').String.padEnd;\n","'use strict';\n// https://github.com/tc39/proposal-string-pad-start-end\nvar $export = require('./_export');\nvar $pad = require('./_string-pad');\nvar userAgent = require('./_user-agent');\n\n// https://github.com/zloirock/core-js/issues/280\n$export($export.P + $export.F * /Version\\/10\\.\\d+(\\.\\d+)? Safari\\//.test(userAgent), 'String', {\n  padEnd: function padEnd(maxLength /* , fillString = ' ' */) {\n    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, false);\n  }\n});\n","require('../../modules/es7.symbol.async-iterator');\nmodule.exports = require('../../modules/_wks-ext').f('asyncIterator');\n","require('./_wks-define')('asyncIterator');\n","require('../../modules/es7.object.get-own-property-descriptors');\nmodule.exports = require('../../modules/_core').Object.getOwnPropertyDescriptors;\n","// https://github.com/tc39/proposal-object-getownpropertydescriptors\nvar $export = require('./_export');\nvar ownKeys = require('./_own-keys');\nvar toIObject = require('./_to-iobject');\nvar gOPD = require('./_object-gopd');\nvar createProperty = require('./_create-property');\n\n$export($export.S, 'Object', {\n  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {\n    var O = toIObject(object);\n    var getDesc = gOPD.f;\n    var keys = ownKeys(O);\n    var result = {};\n    var i = 0;\n    var key, desc;\n    while (keys.length > i) {\n      desc = getDesc(O, key = keys[i++]);\n      if (desc !== undefined) createProperty(result, key, desc);\n    }\n    return result;\n  }\n});\n","require('../../modules/es7.object.values');\nmodule.exports = require('../../modules/_core').Object.values;\n","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $values = require('./_object-to-array')(false);\n\n$export($export.S, 'Object', {\n  values: function values(it) {\n    return $values(it);\n  }\n});\n","require('../../modules/es7.object.entries');\nmodule.exports = require('../../modules/_core').Object.entries;\n","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n","'use strict';\nrequire('../../modules/es6.promise');\nrequire('../../modules/es7.promise.finally');\nmodule.exports = require('../../modules/_core').Promise['finally'];\n","// https://github.com/tc39/proposal-promise-finally\n'use strict';\nvar $export = require('./_export');\nvar core = require('./_core');\nvar global = require('./_global');\nvar speciesConstructor = require('./_species-constructor');\nvar promiseResolve = require('./_promise-resolve');\n\n$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {\n  var C = speciesConstructor(this, core.Promise || global.Promise);\n  var isFunction = typeof onFinally == 'function';\n  return this.then(\n    isFunction ? function (x) {\n      return promiseResolve(C, onFinally()).then(function () { return x; });\n    } : onFinally,\n    isFunction ? function (e) {\n      return promiseResolve(C, onFinally()).then(function () { throw e; });\n    } : onFinally\n  );\n} });\n","require('../modules/web.timers');\nrequire('../modules/web.immediate');\nrequire('../modules/web.dom.iterable');\nmodule.exports = require('../modules/_core');\n","// ie9- setTimeout & setInterval additional parameters fix\nvar global = require('./_global');\nvar $export = require('./_export');\nvar userAgent = require('./_user-agent');\nvar slice = [].slice;\nvar MSIE = /MSIE .\\./.test(userAgent); // <- dirty ie9- check\nvar wrap = function (set) {\n  return function (fn, time /* , ...args */) {\n    var boundArgs = arguments.length > 2;\n    var args = boundArgs ? slice.call(arguments, 2) : false;\n    return set(boundArgs ? function () {\n      // eslint-disable-next-line no-new-func\n      (typeof fn == 'function' ? fn : Function(fn)).apply(this, args);\n    } : fn, time);\n  };\n};\n$export($export.G + $export.B + $export.F * MSIE, {\n  setTimeout: wrap(global.setTimeout),\n  setInterval: wrap(global.setInterval)\n});\n","var $export = require('./_export');\nvar $task = require('./_task');\n$export($export.G + $export.B, {\n  setImmediate: $task.set,\n  clearImmediate: $task.clear\n});\n","var $iterators = require('./es6.array.iterator');\nvar getKeys = require('./_object-keys');\nvar redefine = require('./_redefine');\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar wks = require('./_wks');\nvar ITERATOR = wks('iterator');\nvar TO_STRING_TAG = wks('toStringTag');\nvar ArrayValues = Iterators.Array;\n\nvar DOMIterables = {\n  CSSRuleList: true, // TODO: Not spec compliant, should be false.\n  CSSStyleDeclaration: false,\n  CSSValueList: false,\n  ClientRectList: false,\n  DOMRectList: false,\n  DOMStringList: false,\n  DOMTokenList: true,\n  DataTransferItemList: false,\n  FileList: false,\n  HTMLAllCollection: false,\n  HTMLCollection: false,\n  HTMLFormElement: false,\n  HTMLSelectElement: false,\n  MediaList: true, // TODO: Not spec compliant, should be false.\n  MimeTypeArray: false,\n  NamedNodeMap: false,\n  NodeList: true,\n  PaintRequestList: false,\n  Plugin: false,\n  PluginArray: false,\n  SVGLengthList: false,\n  SVGNumberList: false,\n  SVGPathSegList: false,\n  SVGPointList: false,\n  SVGStringList: false,\n  SVGTransformList: false,\n  SourceBufferList: false,\n  StyleSheetList: true, // TODO: Not spec compliant, should be false.\n  TextTrackCueList: false,\n  TextTrackList: false,\n  TouchList: false\n};\n\nfor (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {\n  var NAME = collections[i];\n  var explicit = DOMIterables[NAME];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  var key;\n  if (proto) {\n    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);\n    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n    Iterators[NAME] = ArrayValues;\n    if (explicit) for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() { return this })() || Function(\"return this\")()\n);\n","(function(global) {\r\n  /**\r\n   * Polyfill URLSearchParams\r\n   *\r\n   * Inspired from : https://github.com/WebReflection/url-search-params/blob/master/src/url-search-params.js\r\n   */\r\n\r\n  var checkIfIteratorIsSupported = function() {\r\n    try {\r\n      return !!Symbol.iterator;\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  };\r\n\r\n\r\n  var iteratorSupported = checkIfIteratorIsSupported();\r\n\r\n  var createIterator = function(items) {\r\n    var iterator = {\r\n      next: function() {\r\n        var value = items.shift();\r\n        return { done: value === void 0, value: value };\r\n      }\r\n    };\r\n\r\n    if (iteratorSupported) {\r\n      iterator[Symbol.iterator] = function() {\r\n        return iterator;\r\n      };\r\n    }\r\n\r\n    return iterator;\r\n  };\r\n\r\n  /**\r\n   * Search param name and values should be encoded according to https://url.spec.whatwg.org/#urlencoded-serializing\r\n   * encodeURIComponent() produces the same result except encoding spaces as `%20` instead of `+`.\r\n   */\r\n  var serializeParam = function(value) {\r\n    return encodeURIComponent(value).replace(/%20/g, '+');\r\n  };\r\n\r\n  var deserializeParam = function(value) {\r\n    return decodeURIComponent(value).replace(/\\+/g, ' ');\r\n  };\r\n\r\n  var polyfillURLSearchParams = function() {\r\n\r\n    var URLSearchParams = function(searchString) {\r\n      Object.defineProperty(this, '_entries', { writable: true, value: {} });\r\n\r\n      if (typeof searchString === 'string') {\r\n        if (searchString !== '') {\r\n          this._fromString(searchString);\r\n        }\r\n      } else if (searchString instanceof URLSearchParams) {\r\n        var _this = this;\r\n        searchString.forEach(function(value, name) {\r\n          _this.append(name, value);\r\n        });\r\n      }\r\n    };\r\n\r\n    var proto = URLSearchParams.prototype;\r\n\r\n    proto.append = function(name, value) {\r\n      if (name in this._entries) {\r\n        this._entries[name].push(value.toString());\r\n      } else {\r\n        this._entries[name] = [value.toString()];\r\n      }\r\n    };\r\n\r\n    proto.delete = function(name) {\r\n      delete this._entries[name];\r\n    };\r\n\r\n    proto.get = function(name) {\r\n      return (name in this._entries) ? this._entries[name][0] : null;\r\n    };\r\n\r\n    proto.getAll = function(name) {\r\n      return (name in this._entries) ? this._entries[name].slice(0) : [];\r\n    };\r\n\r\n    proto.has = function(name) {\r\n      return (name in this._entries);\r\n    };\r\n\r\n    proto.set = function(name, value) {\r\n      this._entries[name] = [value.toString()];\r\n    };\r\n\r\n    proto.forEach = function(callback, thisArg) {\r\n      var entries;\r\n      for (var name in this._entries) {\r\n        if (this._entries.hasOwnProperty(name)) {\r\n          entries = this._entries[name];\r\n          for (var i = 0; i < entries.length; i++) {\r\n            callback.call(thisArg, entries[i], name, this);\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    proto.keys = function() {\r\n      var items = [];\r\n      this.forEach(function(value, name) {\r\n        items.push(name);\r\n      });\r\n      return createIterator(items);\r\n    };\r\n\r\n    proto.values = function() {\r\n      var items = [];\r\n      this.forEach(function(value) {\r\n        items.push(value);\r\n      });\r\n      return createIterator(items);\r\n    };\r\n\r\n    proto.entries = function() {\r\n      var items = [];\r\n      this.forEach(function(value, name) {\r\n        items.push([name, value]);\r\n      });\r\n      return createIterator(items);\r\n    };\r\n\r\n    if (iteratorSupported) {\r\n      proto[Symbol.iterator] = proto.entries;\r\n    }\r\n\r\n    proto.toString = function() {\r\n      var searchArray = [];\r\n      this.forEach(function(value, name) {\r\n        searchArray.push(serializeParam(name) + '=' + serializeParam(value));\r\n      });\r\n      return searchArray.join('&');\r\n    };\r\n\r\n    Object.defineProperty(proto, '_fromString', {\r\n      enumerable: false,\r\n      configurable: false,\r\n      writable: false,\r\n      value: function(searchString) {\r\n        this._entries = {};\r\n        searchString = searchString.replace(/^\\?/, '');\r\n        var attributes = searchString.split('&');\r\n        var attribute;\r\n        for (var i = 0; i < attributes.length; i++) {\r\n          attribute = attributes[i].split('=');\r\n          this.append(\r\n            deserializeParam(attribute[0]),\r\n            (attribute.length > 1) ? deserializeParam(attribute[1]) : ''\r\n          );\r\n        }\r\n      }\r\n    });\r\n\r\n    global.URLSearchParams = URLSearchParams;\r\n  };\r\n\r\n  if (!('URLSearchParams' in global) || (new URLSearchParams('?a=1').toString() !== 'a=1')) {\r\n    polyfillURLSearchParams();\r\n  }\r\n\r\n  if (typeof URLSearchParams.prototype.sort !== 'function') {\r\n    URLSearchParams.prototype.sort = function() {\r\n      var _this = this;\r\n      var items = [];\r\n      this.forEach(function(value, name) {\r\n        items.push([name, value]);\r\n        if (!_this._entries) {\r\n          _this.delete(name);\r\n        }\r\n      });\r\n      items.sort(function(a, b) {\r\n        if (a[0] < b[0]) {\r\n          return -1;\r\n        } else if (a[0] > b[0]) {\r\n          return +1;\r\n        } else {\r\n          return 0;\r\n        }\r\n      });\r\n      if (_this._entries) { // force reset because IE keeps keys index\r\n        _this._entries = {};\r\n      }\r\n      for (var i = 0; i < items.length; i++) {\r\n        this.append(items[i][0], items[i][1]);\r\n      }\r\n    };\r\n  }\r\n\r\n  // HTMLAnchorElement\r\n\r\n})(\r\n  (typeof global !== 'undefined') ? global\r\n    : ((typeof window !== 'undefined') ? window\r\n    : ((typeof self !== 'undefined') ? self : this))\r\n);\r\n\r\n(function(global) {\r\n  /**\r\n   * Polyfill URL\r\n   *\r\n   * Inspired from : https://github.com/arv/DOM-URL-Polyfill/blob/master/src/url.js\r\n   */\r\n\r\n  var checkIfURLIsSupported = function() {\r\n    try {\r\n      var u = new URL('b', 'http://a');\r\n      u.pathname = 'c%20d';\r\n      return (u.href === 'http://a/c%20d') && u.searchParams;\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n  };\r\n\r\n\r\n  var polyfillURL = function() {\r\n    var _URL = global.URL;\r\n\r\n    var URL = function(url, base) {\r\n      if (typeof url !== 'string') url = String(url);\r\n\r\n      // Only create another document if the base is different from current location.\r\n      var doc = document, baseElement;\r\n      if (base && (global.location === void 0 || base !== global.location.href)) {\r\n        doc = document.implementation.createHTMLDocument('');\r\n        baseElement = doc.createElement('base');\r\n        baseElement.href = base;\r\n        doc.head.appendChild(baseElement);\r\n        try {\r\n          if (baseElement.href.indexOf(base) !== 0) throw new Error(baseElement.href);\r\n        } catch (err) {\r\n          throw new Error('URL unable to set base ' + base + ' due to ' + err);\r\n        }\r\n      }\r\n\r\n      var anchorElement = doc.createElement('a');\r\n      anchorElement.href = url;\r\n      if (baseElement) {\r\n        doc.body.appendChild(anchorElement);\r\n        anchorElement.href = anchorElement.href; // force href to refresh\r\n      }\r\n\r\n      if (anchorElement.protocol === ':' || !/:/.test(anchorElement.href)) {\r\n        throw new TypeError('Invalid URL');\r\n      }\r\n\r\n      Object.defineProperty(this, '_anchorElement', {\r\n        value: anchorElement\r\n      });\r\n\r\n\r\n      // create a linked searchParams which reflect its changes on URL\r\n      var searchParams = new URLSearchParams(this.search);\r\n      var enableSearchUpdate = true;\r\n      var enableSearchParamsUpdate = true;\r\n      var _this = this;\r\n      ['append', 'delete', 'set'].forEach(function(methodName) {\r\n        var method = searchParams[methodName];\r\n        searchParams[methodName] = function() {\r\n          method.apply(searchParams, arguments);\r\n          if (enableSearchUpdate) {\r\n            enableSearchParamsUpdate = false;\r\n            _this.search = searchParams.toString();\r\n            enableSearchParamsUpdate = true;\r\n          }\r\n        };\r\n      });\r\n\r\n      Object.defineProperty(this, 'searchParams', {\r\n        value: searchParams,\r\n        enumerable: true\r\n      });\r\n\r\n      var search = void 0;\r\n      Object.defineProperty(this, '_updateSearchParams', {\r\n        enumerable: false,\r\n        configurable: false,\r\n        writable: false,\r\n        value: function() {\r\n          if (this.search !== search) {\r\n            search = this.search;\r\n            if (enableSearchParamsUpdate) {\r\n              enableSearchUpdate = false;\r\n              this.searchParams._fromString(this.search);\r\n              enableSearchUpdate = true;\r\n            }\r\n          }\r\n        }\r\n      });\r\n    };\r\n\r\n    var proto = URL.prototype;\r\n\r\n    var linkURLWithAnchorAttribute = function(attributeName) {\r\n      Object.defineProperty(proto, attributeName, {\r\n        get: function() {\r\n          return this._anchorElement[attributeName];\r\n        },\r\n        set: function(value) {\r\n          this._anchorElement[attributeName] = value;\r\n        },\r\n        enumerable: true\r\n      });\r\n    };\r\n\r\n    ['hash', 'host', 'hostname', 'port', 'protocol']\r\n      .forEach(function(attributeName) {\r\n        linkURLWithAnchorAttribute(attributeName);\r\n      });\r\n\r\n    Object.defineProperty(proto, 'search', {\r\n      get: function() {\r\n        return this._anchorElement['search'];\r\n      },\r\n      set: function(value) {\r\n        this._anchorElement['search'] = value;\r\n        this._updateSearchParams();\r\n      },\r\n      enumerable: true\r\n    });\r\n\r\n    Object.defineProperties(proto, {\r\n\r\n      'toString': {\r\n        get: function() {\r\n          var _this = this;\r\n          return function() {\r\n            return _this.href;\r\n          };\r\n        }\r\n      },\r\n\r\n      'href': {\r\n        get: function() {\r\n          return this._anchorElement.href.replace(/\\?$/, '');\r\n        },\r\n        set: function(value) {\r\n          this._anchorElement.href = value;\r\n          this._updateSearchParams();\r\n        },\r\n        enumerable: true\r\n      },\r\n\r\n      'pathname': {\r\n        get: function() {\r\n          return this._anchorElement.pathname.replace(/(^\\/?)/, '/');\r\n        },\r\n        set: function(value) {\r\n          this._anchorElement.pathname = value;\r\n        },\r\n        enumerable: true\r\n      },\r\n\r\n      'origin': {\r\n        get: function() {\r\n          // get expected port from protocol\r\n          var expectedPort = { 'http:': 80, 'https:': 443, 'ftp:': 21 }[this._anchorElement.protocol];\r\n          // add port to origin if, expected port is different than actual port\r\n          // and it is not empty f.e http://foo:8080\r\n          // 8080 != 80 && 8080 != ''\r\n          var addPortToOrigin = this._anchorElement.port != expectedPort &&\r\n            this._anchorElement.port !== '';\r\n\r\n          return this._anchorElement.protocol +\r\n            '//' +\r\n            this._anchorElement.hostname +\r\n            (addPortToOrigin ? (':' + this._anchorElement.port) : '');\r\n        },\r\n        enumerable: true\r\n      },\r\n\r\n      'password': { // TODO\r\n        get: function() {\r\n          return '';\r\n        },\r\n        set: function(value) {\r\n        },\r\n        enumerable: true\r\n      },\r\n\r\n      'username': { // TODO\r\n        get: function() {\r\n          return '';\r\n        },\r\n        set: function(value) {\r\n        },\r\n        enumerable: true\r\n      },\r\n    });\r\n\r\n    URL.createObjectURL = function(blob) {\r\n      return _URL.createObjectURL.apply(_URL, arguments);\r\n    };\r\n\r\n    URL.revokeObjectURL = function(url) {\r\n      return _URL.revokeObjectURL.apply(_URL, arguments);\r\n    };\r\n\r\n    global.URL = URL;\r\n\r\n  };\r\n\r\n  if (!checkIfURLIsSupported()) {\r\n    polyfillURL();\r\n  }\r\n\r\n  if ((global.location !== void 0) && !('origin' in global.location)) {\r\n    var getOrigin = function() {\r\n      return global.location.protocol + '//' + global.location.hostname + (global.location.port ? (':' + global.location.port) : '');\r\n    };\r\n\r\n    try {\r\n      Object.defineProperty(global.location, 'origin', {\r\n        get: getOrigin,\r\n        enumerable: true\r\n      });\r\n    } catch (e) {\r\n      setInterval(function() {\r\n        global.location.origin = getOrigin();\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n})(\r\n  (typeof global !== 'undefined') ? global\r\n    : ((typeof window !== 'undefined') ? window\r\n    : ((typeof self !== 'undefined') ? self : this))\r\n);\r\n","var support = {\n  searchParams: 'URLSearchParams' in self,\n  iterable: 'Symbol' in self && 'iterator' in Symbol,\n  blob:\n    'FileReader' in self &&\n    'Blob' in self &&\n    (function() {\n      try {\n        new Blob()\n        return true\n      } catch (e) {\n        return false\n      }\n    })(),\n  formData: 'FormData' in self,\n  arrayBuffer: 'ArrayBuffer' in self\n}\n\nfunction isDataView(obj) {\n  return obj && DataView.prototype.isPrototypeOf(obj)\n}\n\nif (support.arrayBuffer) {\n  var viewClasses = [\n    '[object Int8Array]',\n    '[object Uint8Array]',\n    '[object Uint8ClampedArray]',\n    '[object Int16Array]',\n    '[object Uint16Array]',\n    '[object Int32Array]',\n    '[object Uint32Array]',\n    '[object Float32Array]',\n    '[object Float64Array]'\n  ]\n\n  var isArrayBufferView =\n    ArrayBuffer.isView ||\n    function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n}\n\nfunction normalizeName(name) {\n  if (typeof name !== 'string') {\n    name = String(name)\n  }\n  if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n    throw new TypeError('Invalid character in header field name')\n  }\n  return name.toLowerCase()\n}\n\nfunction normalizeValue(value) {\n  if (typeof value !== 'string') {\n    value = String(value)\n  }\n  return value\n}\n\n// Build a destructive iterator for the value list\nfunction iteratorFor(items) {\n  var iterator = {\n    next: function() {\n      var value = items.shift()\n      return {done: value === undefined, value: value}\n    }\n  }\n\n  if (support.iterable) {\n    iterator[Symbol.iterator] = function() {\n      return iterator\n    }\n  }\n\n  return iterator\n}\n\nexport function Headers(headers) {\n  this.map = {}\n\n  if (headers instanceof Headers) {\n    headers.forEach(function(value, name) {\n      this.append(name, value)\n    }, this)\n  } else if (Array.isArray(headers)) {\n    headers.forEach(function(header) {\n      this.append(header[0], header[1])\n    }, this)\n  } else if (headers) {\n    Object.getOwnPropertyNames(headers).forEach(function(name) {\n      this.append(name, headers[name])\n    }, this)\n  }\n}\n\nHeaders.prototype.append = function(name, value) {\n  name = normalizeName(name)\n  value = normalizeValue(value)\n  var oldValue = this.map[name]\n  this.map[name] = oldValue ? oldValue + ', ' + value : value\n}\n\nHeaders.prototype['delete'] = function(name) {\n  delete this.map[normalizeName(name)]\n}\n\nHeaders.prototype.get = function(name) {\n  name = normalizeName(name)\n  return this.has(name) ? this.map[name] : null\n}\n\nHeaders.prototype.has = function(name) {\n  return this.map.hasOwnProperty(normalizeName(name))\n}\n\nHeaders.prototype.set = function(name, value) {\n  this.map[normalizeName(name)] = normalizeValue(value)\n}\n\nHeaders.prototype.forEach = function(callback, thisArg) {\n  for (var name in this.map) {\n    if (this.map.hasOwnProperty(name)) {\n      callback.call(thisArg, this.map[name], name, this)\n    }\n  }\n}\n\nHeaders.prototype.keys = function() {\n  var items = []\n  this.forEach(function(value, name) {\n    items.push(name)\n  })\n  return iteratorFor(items)\n}\n\nHeaders.prototype.values = function() {\n  var items = []\n  this.forEach(function(value) {\n    items.push(value)\n  })\n  return iteratorFor(items)\n}\n\nHeaders.prototype.entries = function() {\n  var items = []\n  this.forEach(function(value, name) {\n    items.push([name, value])\n  })\n  return iteratorFor(items)\n}\n\nif (support.iterable) {\n  Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n}\n\nfunction consumed(body) {\n  if (body.bodyUsed) {\n    return Promise.reject(new TypeError('Already read'))\n  }\n  body.bodyUsed = true\n}\n\nfunction fileReaderReady(reader) {\n  return new Promise(function(resolve, reject) {\n    reader.onload = function() {\n      resolve(reader.result)\n    }\n    reader.onerror = function() {\n      reject(reader.error)\n    }\n  })\n}\n\nfunction readBlobAsArrayBuffer(blob) {\n  var reader = new FileReader()\n  var promise = fileReaderReady(reader)\n  reader.readAsArrayBuffer(blob)\n  return promise\n}\n\nfunction readBlobAsText(blob) {\n  var reader = new FileReader()\n  var promise = fileReaderReady(reader)\n  reader.readAsText(blob)\n  return promise\n}\n\nfunction readArrayBufferAsText(buf) {\n  var view = new Uint8Array(buf)\n  var chars = new Array(view.length)\n\n  for (var i = 0; i < view.length; i++) {\n    chars[i] = String.fromCharCode(view[i])\n  }\n  return chars.join('')\n}\n\nfunction bufferClone(buf) {\n  if (buf.slice) {\n    return buf.slice(0)\n  } else {\n    var view = new Uint8Array(buf.byteLength)\n    view.set(new Uint8Array(buf))\n    return view.buffer\n  }\n}\n\nfunction Body() {\n  this.bodyUsed = false\n\n  this._initBody = function(body) {\n    this._bodyInit = body\n    if (!body) {\n      this._bodyText = ''\n    } else if (typeof body === 'string') {\n      this._bodyText = body\n    } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n      this._bodyBlob = body\n    } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n      this._bodyFormData = body\n    } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n      this._bodyText = body.toString()\n    } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n      this._bodyArrayBuffer = bufferClone(body.buffer)\n      // IE 10-11 can't handle a DataView body.\n      this._bodyInit = new Blob([this._bodyArrayBuffer])\n    } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n      this._bodyArrayBuffer = bufferClone(body)\n    } else {\n      this._bodyText = body = Object.prototype.toString.call(body)\n    }\n\n    if (!this.headers.get('content-type')) {\n      if (typeof body === 'string') {\n        this.headers.set('content-type', 'text/plain;charset=UTF-8')\n      } else if (this._bodyBlob && this._bodyBlob.type) {\n        this.headers.set('content-type', this._bodyBlob.type)\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n      }\n    }\n  }\n\n  if (support.blob) {\n    this.blob = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return Promise.resolve(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as blob')\n      } else {\n        return Promise.resolve(new Blob([this._bodyText]))\n      }\n    }\n\n    this.arrayBuffer = function() {\n      if (this._bodyArrayBuffer) {\n        return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n      } else {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n    }\n  }\n\n  this.text = function() {\n    var rejected = consumed(this)\n    if (rejected) {\n      return rejected\n    }\n\n    if (this._bodyBlob) {\n      return readBlobAsText(this._bodyBlob)\n    } else if (this._bodyArrayBuffer) {\n      return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n    } else if (this._bodyFormData) {\n      throw new Error('could not read FormData body as text')\n    } else {\n      return Promise.resolve(this._bodyText)\n    }\n  }\n\n  if (support.formData) {\n    this.formData = function() {\n      return this.text().then(decode)\n    }\n  }\n\n  this.json = function() {\n    return this.text().then(JSON.parse)\n  }\n\n  return this\n}\n\n// HTTP methods whose capitalization should be normalized\nvar methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\nfunction normalizeMethod(method) {\n  var upcased = method.toUpperCase()\n  return methods.indexOf(upcased) > -1 ? upcased : method\n}\n\nexport function Request(input, options) {\n  options = options || {}\n  var body = options.body\n\n  if (input instanceof Request) {\n    if (input.bodyUsed) {\n      throw new TypeError('Already read')\n    }\n    this.url = input.url\n    this.credentials = input.credentials\n    if (!options.headers) {\n      this.headers = new Headers(input.headers)\n    }\n    this.method = input.method\n    this.mode = input.mode\n    this.signal = input.signal\n    if (!body && input._bodyInit != null) {\n      body = input._bodyInit\n      input.bodyUsed = true\n    }\n  } else {\n    this.url = String(input)\n  }\n\n  this.credentials = options.credentials || this.credentials || 'same-origin'\n  if (options.headers || !this.headers) {\n    this.headers = new Headers(options.headers)\n  }\n  this.method = normalizeMethod(options.method || this.method || 'GET')\n  this.mode = options.mode || this.mode || null\n  this.signal = options.signal || this.signal\n  this.referrer = null\n\n  if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n    throw new TypeError('Body not allowed for GET or HEAD requests')\n  }\n  this._initBody(body)\n}\n\nRequest.prototype.clone = function() {\n  return new Request(this, {body: this._bodyInit})\n}\n\nfunction decode(body) {\n  var form = new FormData()\n  body\n    .trim()\n    .split('&')\n    .forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n  return form\n}\n\nfunction parseHeaders(rawHeaders) {\n  var headers = new Headers()\n  // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n  // https://tools.ietf.org/html/rfc7230#section-3.2\n  var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ')\n  preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n    var parts = line.split(':')\n    var key = parts.shift().trim()\n    if (key) {\n      var value = parts.join(':').trim()\n      headers.append(key, value)\n    }\n  })\n  return headers\n}\n\nBody.call(Request.prototype)\n\nexport function Response(bodyInit, options) {\n  if (!options) {\n    options = {}\n  }\n\n  this.type = 'default'\n  this.status = options.status === undefined ? 200 : options.status\n  this.ok = this.status >= 200 && this.status < 300\n  this.statusText = 'statusText' in options ? options.statusText : 'OK'\n  this.headers = new Headers(options.headers)\n  this.url = options.url || ''\n  this._initBody(bodyInit)\n}\n\nBody.call(Response.prototype)\n\nResponse.prototype.clone = function() {\n  return new Response(this._bodyInit, {\n    status: this.status,\n    statusText: this.statusText,\n    headers: new Headers(this.headers),\n    url: this.url\n  })\n}\n\nResponse.error = function() {\n  var response = new Response(null, {status: 0, statusText: ''})\n  response.type = 'error'\n  return response\n}\n\nvar redirectStatuses = [301, 302, 303, 307, 308]\n\nResponse.redirect = function(url, status) {\n  if (redirectStatuses.indexOf(status) === -1) {\n    throw new RangeError('Invalid status code')\n  }\n\n  return new Response(null, {status: status, headers: {location: url}})\n}\n\nexport var DOMException = self.DOMException\ntry {\n  new DOMException()\n} catch (err) {\n  DOMException = function(message, name) {\n    this.message = message\n    this.name = name\n    var error = Error(message)\n    this.stack = error.stack\n  }\n  DOMException.prototype = Object.create(Error.prototype)\n  DOMException.prototype.constructor = DOMException\n}\n\nexport function fetch(input, init) {\n  return new Promise(function(resolve, reject) {\n    var request = new Request(input, init)\n\n    if (request.signal && request.signal.aborted) {\n      return reject(new DOMException('Aborted', 'AbortError'))\n    }\n\n    var xhr = new XMLHttpRequest()\n\n    function abortXhr() {\n      xhr.abort()\n    }\n\n    xhr.onload = function() {\n      var options = {\n        status: xhr.status,\n        statusText: xhr.statusText,\n        headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n      }\n      options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n      var body = 'response' in xhr ? xhr.response : xhr.responseText\n      resolve(new Response(body, options))\n    }\n\n    xhr.onerror = function() {\n      reject(new TypeError('Network request failed'))\n    }\n\n    xhr.ontimeout = function() {\n      reject(new TypeError('Network request failed'))\n    }\n\n    xhr.onabort = function() {\n      reject(new DOMException('Aborted', 'AbortError'))\n    }\n\n    xhr.open(request.method, request.url, true)\n\n    if (request.credentials === 'include') {\n      xhr.withCredentials = true\n    } else if (request.credentials === 'omit') {\n      xhr.withCredentials = false\n    }\n\n    if ('responseType' in xhr && support.blob) {\n      xhr.responseType = 'blob'\n    }\n\n    request.headers.forEach(function(value, name) {\n      xhr.setRequestHeader(name, value)\n    })\n\n    if (request.signal) {\n      request.signal.addEventListener('abort', abortXhr)\n\n      xhr.onreadystatechange = function() {\n        // DONE (success or failure)\n        if (xhr.readyState === 4) {\n          request.signal.removeEventListener('abort', abortXhr)\n        }\n      }\n    }\n\n    xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n  })\n}\n\nfetch.polyfill = true\n\nif (!self.fetch) {\n  self.fetch = fetch\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n}\n","import { ImageryLayers } from '../Layer/Layer';\n\nfunction updateLayersOrdering(geometryLayer, imageryLayers) {\n    var sequence = ImageryLayers.getColorLayersIdOrderedBySequence(imageryLayers);\n    var cO = function cO(object) {\n        if (object.changeSequenceLayers) {\n            object.changeSequenceLayers(sequence);\n        }\n    };\n\n    for (const node of geometryLayer.level0Nodes) {\n        node.traverse(cO);\n    }\n}\n\nexport const COLOR_LAYERS_ORDER_CHANGED = 'layers-order-changed';\n\nexport const ColorLayersOrdering = {\n    /**\n     * Moves up in the layer list. This function has no effect if the layer is moved to its current index.\n     * @function moveLayerUp\n     * @param      {View}  view the viewer\n     * @param      {string}  layerId   The layer's idendifiant\n     * @example\n     * itowns.ColorLayersOrdering.moveLayerUp(viewer, 'idLayerToUp');\n     */\n    moveLayerUp: function moveLayerUp(view, layerId) {\n        const imageryLayers = view.getLayers(l => l.type === 'color');\n        const layer = view.getLayers(l => l.id === layerId)[0];\n        if (layer) {\n            const previousSequence = ImageryLayers.getColorLayersIdOrderedBySequence(imageryLayers);\n            ImageryLayers.moveLayerUp(layer, imageryLayers);\n            updateLayersOrdering(view.tileLayer, imageryLayers);\n            view.dispatchEvent({ type: COLOR_LAYERS_ORDER_CHANGED,\n                previous: { sequence: previousSequence },\n                new: { sequence: ImageryLayers.getColorLayersIdOrderedBySequence(imageryLayers) },\n            });\n            view.notifyChange(view.tileLayer);\n        } else {\n            throw new Error(`${layerId} isn't color layer`);\n        }\n    },\n    /**\n     * Moves down in the layer list. This function has no effect if the layer is moved to its current index.\n     * @function moveLayerDown\n     * @param      {View}  view the viewer\n     * @param      {string}  layerId   The layer's idendifiant\n     * @example\n     * itowns.ColorLayersOrdering.moveLayerDown(viewer, 'idLayerToDown');\n     */\n    moveLayerDown: function moveLayerDown(view, layerId) {\n        const imageryLayers = view.getLayers(l => l.type === 'color');\n        const layer = view.getLayers(l => l.id === layerId)[0];\n        if (layer) {\n            const previousSequence = ImageryLayers.getColorLayersIdOrderedBySequence(imageryLayers);\n            ImageryLayers.moveLayerDown(layer, imageryLayers);\n            updateLayersOrdering(view.tileLayer, imageryLayers);\n            view.dispatchEvent({ type: COLOR_LAYERS_ORDER_CHANGED,\n                previous: { sequence: previousSequence },\n                new: { sequence: ImageryLayers.getColorLayersIdOrderedBySequence(imageryLayers) },\n            });\n            view.notifyChange(view.tileLayer);\n        } else {\n            throw new Error(`${layerId} isn't color layer`);\n        }\n    },\n    /**\n     * Moves a specific layer to a specific index in the layer list. This function has no effect if the layer is moved to its current index.\n     * @function moveLayerToIndex\n     * @param      {View}  view the viewer\n     * @param      {string}  layerId   The layer's idendifiant\n     * @param      {number}  newIndex   The new index\n     * @example\n     * itowns.ColorLayersOrdering.moveLayerToIndex(viewer, 'idLayerToChangeIndex', 2);\n     */\n    moveLayerToIndex: function moveLayerToIndex(view, layerId, newIndex) {\n        const imageryLayers = view.getLayers(l => l.type === 'color');\n        const layer = view.getLayers(l => l.id === layerId)[0];\n        if (layer) {\n            const previousSequence = ImageryLayers.getColorLayersIdOrderedBySequence(imageryLayers);\n            ImageryLayers.moveLayerToIndex(layer, newIndex, imageryLayers);\n            updateLayersOrdering(view.tileLayer, imageryLayers);\n            view.dispatchEvent({ type: COLOR_LAYERS_ORDER_CHANGED,\n                previous: { sequence: previousSequence },\n                new: { sequence: ImageryLayers.getColorLayersIdOrderedBySequence(imageryLayers) },\n            });\n            view.notifyChange(view.tileLayer);\n        } else {\n            throw new Error(`${layerId} isn't color layer`);\n        }\n    },\n};\n","import * as THREE from 'three';\n\nconst FRAMERATE = 60;\nconst FRAME_DURATION = 1000 / FRAMERATE;\n\n// player statut\nconst PLAYER_STATE = {\n    // player is stopped\n    STOP: 0,\n    // player plays animation\n    PLAY: 1,\n    // player is at the end of an animation\n    END: 2,\n    // player is paused\n    PAUSE: 3,\n};\n\n// Private functions\n// stop timer and re-init parameter\nconst resetTimer = function resetTimer(player) {\n    if (player.id) {\n        clearInterval(player.id);\n        player.id = undefined;\n    }\n    if (player.waitTimer) {\n        clearInterval(player.waitTimer);\n        player.waitTimer = undefined;\n    }\n    player.keyframe = 0;\n};\n\n// finish animation and re-init parameter\nconst finishAnimation = function finishAnimation(player) {\n    resetTimer(player);\n    if (player.isEnded()) {\n        player.dispatchEvent({\n            type: 'animation-ended',\n            animation: player.animation,\n        });\n    }\n    player.dispatchEvent({\n        type: 'animation-stopped',\n        animation: player.animation,\n    });\n    player.animation = null;\n    if (player.resolve) {\n        player.resolve();\n        player.resolve = null;\n        player.promise = null;\n    }\n};\n\n/**\n * It can play, pause or stop Animation or AnimationExpression (See below).\n * AnimationPlayer is needed to use Animation or AnimationExpression\n * AnimationPlayer emits events :\n *       - for each animation's frame;\n *       - when Animation is stopped\n *       - when Animation is ending\n */\nclass AnimationPlayer extends THREE.EventDispatcher {\n    constructor() {\n        super();\n        this.id = null;\n        this.keyframe = 0;\n        this.animation = null;\n        this.resolve = null;\n        this.promise = null;\n        this.state = PLAYER_STATE.STOP;\n        this.waitTimer = null;\n    }\n\n    isPlaying() {\n        return this.state === PLAYER_STATE.PLAY;\n    }\n\n    isStopped() {\n        return this.state === PLAYER_STATE.STOP;\n    }\n\n    isEnded() {\n        return this.state === PLAYER_STATE.END;\n    }\n\n    // Public functions\n\n    /**\n     * Play one animation.\n     * If another animation is playing, it's stopped and the new animation is played.\n     *\n     * @param {Animation} animation - The animation to play\n     * @return {Promise<void>} - Promise is resolved when animation is stopped or finished\n     */\n    play(animation) {\n        this.animation = animation;\n        this.dispatchEvent({\n            type: 'animation-started',\n            animation });\n        this.state = PLAYER_STATE.PLAY;\n        resetTimer(this);\n        this.id = setInterval(this.frame.bind(this), FRAME_DURATION);\n        this.promise = new Promise((r) => { this.resolve = r; });\n        return this.promise;\n    }\n\n    /**\n     * Play an animation after a number of frames.\n     *\n     * @param      {Animation}  animation    The animation to play\n     * @param      {number}  waitingFrame    The waiting time before start animation (time in frame)\n     * @return     {Promise<void>} Promise is resolved when animation is stopped or finished\n     */\n    playLater(animation, waitingFrame) {\n        this.resolveWait = null;\n        const promise = new Promise((r) => { this.resolveWait = r; });\n        const timew = Math.floor(FRAME_DURATION * waitingFrame);\n        window.clearInterval(this.waitTimer);\n        this.waitTimer = window.setTimeout(() => { this.play(animation).then(() => this.resolveWait()); }, timew);\n        return promise;\n    }\n\n    /**\n     * Stop the current animation.\n     *\n     * @return  {Promise<void>}  Promise is resolved when animation is stopped or finished\n     */\n    stop() {\n        this.state = PLAYER_STATE.STOP;\n        finishAnimation(this);\n        // needed to return promise to wait sync\n        return Promise.resolve();\n    }\n\n    /**\n     * Executed for each frame.\n     *\n     * @private\n     */\n    frame() {\n        if (this.keyframe < this.animation.duration) {\n            if (this.animation.animate) {\n                this.animation.animate(this.keyframe);\n            }\n            this.keyframe++;\n            this.dispatchEvent({\n                type: 'animation-frame',\n            });\n        } else {\n            this.state = PLAYER_STATE.END;\n            finishAnimation(this);\n        }\n    }\n}\n\n/**\n * Animation is played by the AnimationPlayer during the time of duration\n * During playback, the AnimationPlayer emits events for each frame\n * Animation is used to execute a callback to each frame\n */\nclass Animation {\n    /**\n     * @param {Object}  params\n     * @param {?number} params.duration - The animation's duration in number of frames. {@link FRAMERATE} is number of frames in one seconde.\n     * @param {string}  params.name     - The animation's name. It's used for debug message.\n     */\n    constructor(params) {\n        this.duration = params.duration || FRAMERATE;\n        this.name = params.name;\n    }\n}\n\n/**\n * AnimatedExpression is played by the AnimationPlayer during the time of duration\n * During playback, the AnimationPlayer emits event for each frame and\n * it applies expression on root.\n * AnimatedExpression is used to change object's values for each frame\n */\nclass AnimatedExpression extends Animation {\n    /**\n     * @param {Object}   params\n     * @param {?number}  params.duration   - Duration in number of frames. {@link FRAMERATE} is number of frames in one seconde.\n     * @param {Object}   params.root       - Object in scene to animate\n     * @param {function(Object,number):void} params.expression - Function applied to root for each frame, arguments are the root object and the ratio of completion.\n     * @param {string}   params.name       - The animation's name. It's used for debug message\n     */\n    constructor(params) {\n        super(params);\n        this.root = params.root;\n        this.expression = params.expression;\n    }\n    animate(keyFrame) {\n        this.expression(this.root, keyFrame / (this.duration - 1));\n    }\n}\n\nexport { Animation, AnimatedExpression };\nexport default AnimationPlayer;\n","import * as THREE from 'three';\n\nconst CONTROL_KEYS = {\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    BOTTOM: 40,\n    SPACE: 32,\n    SHIFT: 16,\n    CTRL: 17,\n    S: 83,\n};\n\n\n/**\n * @typedef {Object} state\n * @property {boolean} enable=true indicate whether the state is enable or not\n * @property {Number} [mouseButton] the mouse button to enter this state\n * @property {Number} [keyboard] the keyboard to enter this state\n * @property {Number} [finger] the number of fingers on the pad to enter this state\n */\n\n/**\n * It represents the control's states.\n * Each {@link state} is a control mode of the camera and how to interact with\n * the interface to activate this mode.\n * @class StateControl\n *\n */\nclass StateControl {\n    constructor() {\n        this.NONE = {};\n        /**\n         * The camera loot at target and moves at a constant distance from it\n         */\n        this.ORBIT = {\n            mouseButton: THREE.MOUSE.LEFT,\n            keyboard: CONTROL_KEYS.CTRL,\n            enable: true,\n            finger: 2,\n        };\n        /**\n         * The camera loot at target and moves forward and backward from this point\n         */\n        this.DOLLY = {\n            mouseButton: THREE.MOUSE.MIDDLE,\n            enable: true,\n        };\n        /**\n         * the camera moves parallel to the current view plane\n         */\n        this.PAN = {\n            mouseButton: THREE.MOUSE.RIGHT,\n            up: CONTROL_KEYS.UP,\n            bottom: CONTROL_KEYS.BOTTOM,\n            left: CONTROL_KEYS.LEFT,\n            right: CONTROL_KEYS.RIGHT,\n            enable: true,\n            finger: 3,\n        };\n        this.MOVE_GLOBE = {\n            mouseButton: THREE.MOUSE.LEFT,\n            enable: true,\n            finger: 1,\n        };\n        /**\n         * the camera and target camera rotate around the globe\n         */\n        this.PANORAMIC = {\n            mouseButton: THREE.MOUSE.LEFT,\n            keyboard: CONTROL_KEYS.SHIFT,\n            enable: true,\n        };\n        /**\n         * object selection\n         */\n        this.SELECT = {\n            mouseButton: THREE.MOUSE.LEFT,\n            keyboard: CONTROL_KEYS.S,\n            enable: true,\n        };\n    }\n\n    /**\n     * get the state corresponding to the mouse button and the keyboard key\n     * @param      {Number}  mouseButton  The mouse button\n     * @param      {Number}  keyboard     The keyboard\n     * @return     {state}  the state corresponding\n     */\n    inputToState(mouseButton, keyboard) {\n        for (const key of Object.keys(this)) {\n            const state = this[key];\n            if (state.enable && state.mouseButton === mouseButton && state.keyboard === keyboard) {\n                return state;\n            }\n        }\n        return this.NONE;\n    }\n\n    /**\n     * get the state corresponding to the number of finger on the pad\n     *\n     * @param      {Number}  finger  The number of finger\n     * @return     {state}  the state corresponding\n     */\n    touchToState(finger) {\n        for (const key of Object.keys(this)) {\n            const state = this[key];\n            if (state.enable && finger == state.finger) {\n                return state;\n            }\n        }\n        return this.NONE;\n    }\n}\n\nexport default StateControl;\n","import * as THREE from 'three';\nimport TWEEN from '@tweenjs/tween.js';\nimport DEMUtils from './DEMUtils';\nimport { MAIN_LOOP_EVENTS } from '../Core/MainLoop';\nimport Coordinates, { ellipsoidSizes } from '../Core/Geographic/Coordinates';\nimport Ellipsoid from '../Core/Math/Ellipsoid';\n\nTHREE.Object3D.DefaultUp.set(0, 0, 1);\nconst targetPosition = new THREE.Vector3();\nconst targetCoord = new Coordinates('EPSG:4326', 0, 0, 0);\nconst ellipsoid = new Ellipsoid(ellipsoidSizes);\nconst rigs = [];\n\nconst deferred = () => {\n    let resolve;\n    let reject;\n    return { promise: new Promise((re, rej) => { resolve = re; reject = rej; }), resolve, reject };\n};\n\n// Wrap angle in degrees to [-180 180]\nfunction wrapTo180(angle) {\n    return angle - Math.floor((angle + 180.0) / 360) * 360;\n}\n\nfunction tileLayer(view) {\n    return view.getLayers(l => l.protocol == 'tile')[0];\n}\n\nfunction getLookAtFromMath(view, camera) {\n    const direction = new THREE.Vector3(0, 0, 0.5);\n    direction.unproject(camera);\n    direction.sub(camera.position).normalize();\n    if (view.referenceCrs == 'EPSG:4978') {\n        // Intersect Ellispoid\n        return ellipsoid.intersection({ direction, origin: camera.position });\n    } else {\n        // Intersect plane\n        const distance = camera.position.z / direction.z;\n        return direction.multiplyScalar(distance).add(camera.position);\n    }\n}\n\nfunction getGroundTargetFromCamera(view, camera, target) {\n    camera.updateMatrixWorld(true);\n    const pickedPosition = view.getPickingPositionFromDepth() || getLookAtFromMath(view, camera);\n    const range = pickedPosition && !isNaN(pickedPosition.x) ? camera.position.distanceTo(pickedPosition) : 100;\n    camera.localToWorld(target.set(0, 0, -range));\n}\n\nfunction proxyProperty(view, camera, rig, key) {\n    rig.proxy.position[key] = camera.position[key];\n    Object.defineProperty(camera.position, key, {\n        get: () => rig.proxy.position[key],\n        set: (newValue) => {\n            rig.removeProxy(view, camera);\n            camera.position[key] = newValue;\n        },\n    });\n}\n\n// the rig is used to manipulate the camera\n// It consists of a tree of 3D objects, each element is assigned a task\n//\n//                      Transformation\n//\n// rig                  position on Coordinate  (for the globe is rotation)\n// |\n// └── sealevel         position on altitude zero\n//     |\n//     └── target       position on DEM, and rotation (pitch and heading)\n//         |\n//         └── camera   distance to target\n//\n// When all transformations are calculated,\n// this.camera's transformation is applied to view.camera.camera\nclass CameraRig extends THREE.Object3D {\n    constructor() {\n        super();\n        // seaLevel is on rig's z axis, it's at altitude zero\n        this.seaLevel = new THREE.Object3D();\n        // target is on seaLevel's z axis and target.position.z is the DEM altitude\n        this.target = new THREE.Object3D();\n        this.target.rotation.order = 'ZXY';\n        // camera look at target\n        this.camera = new THREE.Camera();\n        this.add(this.seaLevel);\n        this.seaLevel.add(this.target);\n        this.target.add(this.camera);\n        // sea level's geograohic coordinate\n        this.coord = new Coordinates('EPSG:4978', 0, 0);\n        // sea level's worldPoistion\n        this.targetWorldPosition = new THREE.Vector3();\n        this.removeAll = () => {};\n    }\n\n    // apply rig.camera's transformation to camera\n    applyTransformToCamera(view, camera) {\n        if (this.proxy) {\n            camera.quaternion.onChange(() => {});\n            this.camera.matrixWorld.decompose(this.proxy.position, camera.quaternion, camera.scale);\n            camera.quaternion.onChange(() => this.removeProxy(view, camera));\n        } else {\n            this.camera.matrixWorld.decompose(camera.position, camera.quaternion, camera.scale);\n        }\n    }\n\n    setProxy(view, camera) {\n        if (!this.proxy && view && camera) {\n            this.proxy = { position: new THREE.Vector3() };\n            Object.keys(camera.position).forEach(key => proxyProperty(view, camera, this, key));\n            camera.quaternion.onChange(() => this.removeProxy(view, camera));\n        }\n    }\n\n    removeProxy(view, camera) {\n        this.stop(view);\n        if (this.proxy && view && camera) {\n            Object.keys(camera.position).forEach(key => Object.defineProperty(camera.position, key, { value: this.proxy.position[key], writable: true }));\n            camera.quaternion.onChange(() => {});\n            this.proxy = null;\n        }\n    }\n\n    setTargetFromCoordinate(view, coord) {\n        // clamp altitude to seaLevel\n        coord.as(tileLayer(view).extent.crs(), this.coord);\n        const altitude = Math.max(0, this.coord._values[2]);\n        this.coord._values[2] = altitude;\n        // adjust target's position with clamped altitude\n        this.coord.as(view.referenceCrs).xyz(targetPosition);\n        if (view.referenceCrs == 'EPSG:4978') {\n            // ellipsoid geocentric projection\n            this.lookAt(targetPosition);\n            this.seaLevel.position.set(0, 0, targetPosition.length() - altitude);\n        } else {\n            // planar projection\n            this.position.set(targetPosition.x, targetPosition.y, 0);\n            this.seaLevel.position.set(0, 0, 0);\n        }\n        // place camera's target\n        this.target.position.set(0, 0, altitude);\n    }\n\n    // set rig's objects transformation from camera's position and target's position\n    setFromPositions(view, cameraPosition, targetPosition) {\n        this.setTargetFromCoordinate(view, new Coordinates(view.referenceCrs, targetPosition));\n        this.target.rotation.set(0, 0, 0);\n        this.updateMatrixWorld(true);\n        this.camera.position.copy(cameraPosition);\n        this.target.worldToLocal(this.camera.position);\n        const range = this.camera.position.length();\n        this.target.rotation.x = Math.asin(this.camera.position.z / range);\n        const cosPlanXY = THREE.Math.clamp(this.camera.position.y / (Math.cos(this.target.rotation.x) * range), -1, 1);\n        this.target.rotation.z = Math.sign(-this.camera.position.x) * Math.acos(cosPlanXY);\n        this.camera.position.set(0, range, 0);\n    }\n\n    // set from target's coordinate, rotation and range between target and camera\n    applyParams(view, params) {\n        if (params.coord) {\n            this.setTargetFromCoordinate(view, params.coord);\n        }\n        if (params.tilt != undefined) {\n            this.target.rotation.x = THREE.Math.degToRad(params.tilt);\n        }\n        if (params.heading != undefined) {\n            this.target.rotation.z = THREE.Math.degToRad(wrapTo180(params.heading + 180));\n        }\n        if (params.range) {\n            this.camera.position.set(0, params.range, 0);\n        }\n        this.camera.rotation.set(-Math.PI * 0.5, 0, Math.PI);\n        this.updateMatrixWorld(true);\n        this.targetWorldPosition.setFromMatrixPosition(this.seaLevel.matrixWorld);\n    }\n\n    getParams() {\n        return {\n            coord: this.coord.clone(),\n            tilt: this.tilt,\n            heading: this.heading,\n            range: this.range,\n            targetWorldPosition: this.targetWorldPosition,\n        };\n    }\n\n    setfromCamera(view, camera) {\n        getGroundTargetFromCamera(view, camera, targetPosition);\n        this.setFromPositions(view, camera.position, targetPosition);\n    }\n\n    copyObject3D(rig) {\n        this.copy(rig, false);\n        this.seaLevel.copy(rig.seaLevel, false);\n        this.target.copy(rig.target, false);\n        this.camera.copy(rig.camera);\n        return this;\n    }\n\n    animateCameraToLookAtTarget(view, camera, params) {\n        params.easing = params.easing || TWEEN.Easing.Quartic.InOut;\n        this.setfromCamera(view, camera);\n        const tweenGroup = new TWEEN.Group();\n        this.start = (this.start || new CameraRig()).copyObject3D(this);\n        this.end = (this.end || new CameraRig()).copyObject3D(this);\n        const time = params.time || 2500;\n        const factor = { t: 0 };\n        const animations = [];\n        const def = deferred();\n\n        this.addPlaceTargetOnGround(view, camera, params.coord, factor);\n        this.end.applyParams(view, params);\n\n        animations.push(new TWEEN.Tween(factor, tweenGroup).to({ t: 1 }, time)\n            .easing(params.easing)\n            .onUpdate((d) => {\n                // rotate to coord destination in geocentric projection\n                if (view.referenceCrs == 'EPSG:4978') {\n                    THREE.Quaternion.slerp(this.start.quaternion, this.end.quaternion, this.quaternion, d.t);\n                }\n                // camera rotation\n                THREE.Quaternion.slerp(this.start.camera.quaternion, this.end.camera.quaternion, this.camera.quaternion, d.t);\n                // camera's target rotation\n                this.target.rotation.set(0, 0, 0);\n                this.target.rotateZ(THREE.Math.lerp(this.start.target.rotation.z, this.end.target.rotation.z, d.t));\n                this.target.rotateX(THREE.Math.lerp(this.start.target.rotation.x, this.end.target.rotation.x, d.t));\n            }));\n\n        // translate to coordinate destination in planar projection\n        if (view.referenceCrs != 'EPSG:4978') {\n            animations.push(new TWEEN.Tween(this.position, tweenGroup)\n                .to(this.end.position, time)\n                .easing(params.easing));\n        }\n\n        // translate to altitude zero\n        animations.push(new TWEEN.Tween(this.seaLevel.position, tweenGroup)\n            .to(this.end.seaLevel.position, time)\n            .easing(params.easing));\n\n        // translate camera position\n        animations.push(new TWEEN.Tween(this.camera.position, tweenGroup)\n            .to(this.end.camera.position, time)\n            .easing(params.easing));\n\n        // update animations, transformation and view\n        this.animationFrameRequester = () => {\n            tweenGroup.update();\n            this.updateMatrixWorld(true);\n            this.applyTransformToCamera(view, camera);\n            this.targetWorldPosition.setFromMatrixPosition(this.seaLevel.matrixWorld);\n            if (params.callback) {\n                params.callback(this);\n            }\n            targetCoord.set(view.referenceCrs, this.targetWorldPosition).as(tileLayer(view).extent.crs(), this.coord);\n            view.notifyChange(camera);\n        };\n\n        this.removeAll = function removeAll(o) {\n            this.removeAll = () => {};\n            tweenGroup.removeAll();\n            if (this.animationFrameRequester) {\n                view.removeFrameRequester(MAIN_LOOP_EVENTS.BEFORE_RENDER, this.animationFrameRequester);\n            }\n            def.resolve(o !== undefined);\n            this.animationFrameRequester = null;\n        };\n\n        // Waiting last animation complete,\n        // we assume that the animation that completes last is the one that was started last\n        animations[animations.length - 1].onComplete(this.removeAll);\n        animations.forEach(anim => anim.start());\n\n        view.addFrameRequester(MAIN_LOOP_EVENTS.BEFORE_RENDER, this.animationFrameRequester);\n        view.notifyChange(camera);\n\n        return def;\n    }\n\n    stop(view) {\n        this.removePlaceTargetOnGround(view);\n        this.removeAll();\n    }\n\n    // update target position to coordinate's altitude\n    addPlaceTargetOnGround(view, camera, coord, options = { t: 1.0 }) {\n        this.removePlaceTargetOnGround(view);\n        if (view && camera) {\n            const startAltitude = this.target.position.z;\n            this.placeTargetOnGround = () => {\n                const result = DEMUtils.getElevationValueAt(tileLayer(view), coord || this.coord, DEMUtils.PRECISE_READ_Z);\n                const altitude = Math.max(0, result ? result.z : 0);\n                this.target.position.z = startAltitude * (1.0 - options.t) + altitude * options.t;\n                this.target.updateMatrixWorld(true);\n                this.applyTransformToCamera(view, camera);\n            };\n            this.placeTargetOnGround();\n            view.addFrameRequester(MAIN_LOOP_EVENTS.BEFORE_RENDER, this.placeTargetOnGround);\n        }\n    }\n\n    removePlaceTargetOnGround(view) {\n        if (view && this.placeTargetOnGround) {\n            view.removeFrameRequester(MAIN_LOOP_EVENTS.BEFORE_RENDER, this.placeTargetOnGround);\n            this.placeTargetOnGround = null;\n        }\n    }\n\n    get tilt() { return THREE.Math.radToDeg(this.target.rotation.x); }\n\n    get heading() { return wrapTo180((THREE.Math.radToDeg(this.target.rotation.z) + 180)); }\n\n    get range() { return this.camera.position.y; }\n}\n\nfunction getRig(camera) {\n    rigs[camera.uuid] = rigs[camera.uuid] || new CameraRig(camera);\n    return rigs[camera.uuid];\n}\n\n/**\n * @typedef {Object} cameraTransformOptions\n * @property {Coordinate} [coord=currentCoordinate] Camera look at geographic coordinate\n * @property {Number} [tilt=currentTilt] camera's tilt, in degree\n * @property {Number} [heading=currentHeading] camera's heading, in degree\n * @property {Number} [range=currentRange] camera distance to target coordinate, in meter\n * @property {Number} [time=2500] duration of the animation, in ms\n * @property {boolean} [proxy=true] use proxy to handling camera's transformation. if proxy == true, other camera's transformation stops rig's transformation\n * @property {Number} [easing=TWEEN.Easing.Quartic.InOut] in and out easing animation\n * @property {function} [callback] callback call each animation's frame (params are current cameraTransform and worldTargetPosition)\n * @property {boolean} [stopPlaceOnGroundAtEnd=defaultStopPlaceOnGroundAtEnd] stop place target on the ground at animation ending\n */\n/**\n * @module CameraUtils\n */\nexport default {\n    /**\n     * Default value for option to stop place target\n     * on the ground at animation ending.\n     * Default value is false.\n     */\n    defaultStopPlaceOnGroundAtEnd: false,\n    Easing: TWEEN.Easing,\n    /**\n     * Stop camera's animation\n     *\n     * @param      {View}  view    The camera view\n     * @param      {Camera}  camera  The camera to stop animation\n     */\n    stop(view, camera) {\n        getRig(camera).stop(view);\n    },\n    /**\n     * Gets the current parameters transform camera looking at target.\n     *\n     * @param      {View}  view    The camera view\n     * @param      {Camera}  camera  The camera to get transform\n     * @return     {cameraTransformOptions}  The transform camera looking at target\n     */\n    getTransformCameraLookingAtTarget(view, camera) {\n        const rig = getRig(camera);\n        rig.setfromCamera(view, camera);\n        return rig.getParams();\n    },\n    /**\n     * Apply transform to camera\n     *\n     * @param      {View}  view    The camera view\n     * @param      {Camera}  camera  The camera to transform\n     * @param      {cameraTransformOptions}  params  The parameters\n     * @return     {Promise} promise with resolve final cameraTransformOptions\n     */\n    transformCameraToLookAtTarget(view, camera, params = {}) {\n        params.proxy = params.proxy === undefined || params.proxy;\n        const rig = getRig(camera);\n        rig.stop(view);\n        rig.setfromCamera(view, camera);\n        if (params.proxy) {\n            rig.setProxy(view, camera);\n        }\n        rig.applyParams(view, params);\n        rig.addPlaceTargetOnGround(view, camera, params.coord);\n        rig.applyTransformToCamera(view, camera);\n        view.notifyChange(camera);\n        return Promise.resolve(rig.getParams());\n    },\n    /**\n     * Apply transform to camera with animation\n     *\n     * @param      {View}  view    The camera view\n     * @param      {Camera}  camera  The camera to animate\n     * @param      {cameraTransformOptions}  params  The parameters\n     * @return     {Promise} promise with resolve final cameraTransformOptions\n     */\n    animateCameraToLookAtTarget(view, camera, params = {}) {\n        params.proxy = params.proxy === undefined || params.proxy;\n        const rig = getRig(camera);\n        rig.stop(view);\n        if (params.proxy) {\n            rig.setProxy(view, camera);\n        }\n        return rig.animateCameraToLookAtTarget(view, camera, params).promise.then((finished) => {\n            const params = rig.getParams();\n            const stopPlaceOnGround = params.stopPlaceOnGroundAtEnd === undefined ?\n                this.defaultStopPlaceOnGroundAtEnd : params.stopPlaceOnGroundAtEnd;\n            if (stopPlaceOnGround) {\n                rig.stop(view);\n            }\n            params.finished = finished;\n            return params;\n        });\n    },\n\n    /**\n     * chain animation transform to camera\n     *\n     * @param      {View}  view    The camera view\n     * @param      {Camera}  camera  The camera to animate\n     * @param      {cameraTransformOptions[]}  params  array parameters, each parameters transforms are apply to camera, in serial\n     * @return     {Promise} promise with resolve final cameraTransformOptions\n     */\n    sequenceAnimationsToLookAtTarget(view, camera, params = [{}]) {\n        const promiseSerial = funcs =>\n            funcs.reduce((promise, func) => promise.then((result) => {\n                const finished = result.length ? result[result.length - 1].finished : true;\n                if (finished) {\n                    return func().then(Array.prototype.concat.bind(result));\n                } else {\n                    return Promise.resolve([{ finished: false }]);\n                }\n            }),\n            Promise.resolve([]));\n\n        // convert each param to a function\n        const funcs = params.map(param => () => this.animateCameraToLookAtTarget(view, camera, param));\n\n        // execute Promises in serial\n        return promiseSerial(funcs);\n    },\n\n    /**\n     * Gets the difference camera transformation\n     *\n     * @param      {cameraTransformOptions}  first  param to compare with the second\n     * @param      {cameraTransformOptions}  second param to compare with the first\n     * @return     {object} The difference parameters\n     */\n    getDiffParams(first, second) {\n        if (!first || !second) {\n            return;\n        }\n        let diff;\n        if (Math.abs(first.range - second.range) / first.range > 0.001) {\n            diff = diff || {};\n            diff.range = {\n                previous: first.range,\n                new: second.range,\n            };\n        }\n        if (Math.abs(first.tilt - second.tilt) > 0.1) {\n            diff = diff || {};\n            diff.tilt = {\n                previous: first.tilt,\n                new: second.tilt,\n            };\n        }\n        if (Math.abs(first.heading - second.heading) > 0.1) {\n            diff = diff || {};\n            diff.heading = {\n                previous: first.heading,\n                new: second.heading,\n            };\n        }\n\n        if (Math.abs(first.coord._values[0] - second.coord._values[0]) > 0.1 ||\n            Math.abs(first.coord._values[1] - second.coord._values[1] > 0.1)) {\n            diff = diff || {};\n            diff.coord = {\n                previous: first.coord,\n                new: second.coord,\n            };\n        }\n        return diff;\n    },\n};\n","/* globals window */\nimport * as THREE from 'three';\nimport AnimationPlayer, { Animation } from '../../Core/AnimationPlayer';\nimport Coordinates, { ellipsoidSizes } from '../../Core/Geographic/Coordinates';\nimport StateControl from './StateControl';\nimport CameraUtils from '../../utils/CameraUtils';\n\n// private members\nconst EPS = 0.000001;\n\n// Orbit\nconst rotateStart = new THREE.Vector2();\nconst rotateEnd = new THREE.Vector2();\nconst rotateDelta = new THREE.Vector2();\nconst spherical = new THREE.Spherical(1.0, 0.01, 0);\nconst sphericalDelta = new THREE.Spherical(1.0, 0, 0);\nlet orbitScale = 1.0;\n\n// Pan\nconst panStart = new THREE.Vector2();\nconst panEnd = new THREE.Vector2();\nconst panDelta = new THREE.Vector2();\nconst panOffset = new THREE.Vector3();\n\n// Dolly\nconst dollyStart = new THREE.Vector2();\nconst dollyEnd = new THREE.Vector2();\nconst dollyDelta = new THREE.Vector2();\n\n// Globe move\nconst moveAroundGlobe = new THREE.Quaternion();\nconst cameraTarget = new THREE.Object3D();\ncameraTarget.matrixWorldInverse = new THREE.Matrix4();\n\nconst xyz = new Coordinates('EPSG:4978', 0, 0, 0);\nconst c = new Coordinates('EPSG:4326', 0, 0, 0);\n// Position object on globe\nfunction positionObject(newPosition, object) {\n    xyz.set('EPSG:4978', newPosition).as('EPSG:4326', c);\n    object.position.copy(newPosition);\n    object.lookAt(c.geodesicNormal.add(newPosition));\n    object.rotateX(Math.PI * 0.5);\n    object.updateMatrixWorld(true);\n}\n\n// Save the last time of mouse move for damping\nlet lastTimeMouseMove = 0;\n\n// Animations and damping\nlet enableAnimation = true;\nlet player = null;\nconst dampingFactor = 0.25;\nconst dampingMove = new THREE.Quaternion(0, 0, 0, 1);\nconst animationDampingMove = new Animation({ duration: 120, name: 'damping-move' });\nconst animationDampingOrbital = new Animation({ duration: 60, name: 'damping-orbit' });\n\n// Pan Move\nconst panVector = new THREE.Vector3();\n\n// Save last transformation\nconst lastPosition = new THREE.Vector3();\nconst lastQuaternion = new THREE.Quaternion();\n\n// Tangent sphere to ellipsoid\nconst pickSphere = new THREE.Sphere();\nconst pickingPoint = new THREE.Vector3();\n\n// Sphere intersection\nconst intersection = new THREE.Vector3();\n\n// Set to true to enable target helper\nconst enableTargetHelper = false;\nconst helpers = {};\n\nif (enableTargetHelper) {\n    helpers.picking = new THREE.AxesHelper(500000);\n    helpers.target = new THREE.AxesHelper(500000);\n}\n\n// Handle function\nlet _handlerMouseMove;\nlet _handlerMouseUp;\n// current downed key\nlet currentKey;\n\n/**\n * Globe control pan event. Fires after camera pan\n * @event GlobeControls#pan-changed\n * @property target {GlobeControls} dispatched on controls\n * @property type {string} orientation-changed\n */\n/**\n * Globe control orientation event. Fires when camera's orientation change\n * @event GlobeControls#orientation-changed\n * @property new {object}\n * @property new.tilt {number} the new value of the tilt of the camera\n * @property new.heading {number} the new value of the heading of the camera\n * @property previous {object}\n * @property previous.tilt {number} the previous value of the tilt of the camera\n * @property previous.heading {number} the previous value of the heading of the camera\n * @property target {GlobeControls} dispatched on controls\n * @property type {string} orientation-changed\n */\n/**\n * Globe control range event. Fires when camera's range to target change\n * @event GlobeControls#range-changed\n * @property new {number} the new value of the range\n * @property previous {number} the previous value of the range\n * @property target {GlobeControls} dispatched on controls\n * @property type {string} range-changed\n */\n/**\n * Globe control camera's target event. Fires when camera's target change\n * @event GlobeControls#camera-target-changed\n * @property new {object}\n * @property new {Coordinates} the new camera's target coordinates\n * @property previous {Coordinates} the previous camera's target coordinates\n * @property target {GlobeControls} dispatched on controls\n * @property type {string} camera-target-changed\n */\n\n/**\n * globe controls events\n * @property PAN_CHANGED {string} Fires after camera pan\n * @property ORIENTATION_CHANGED {string} Fires when camera's orientation change\n * @property RANGE_CHANGED {string} Fires when camera's range to target change\n * @property CAMERA_TARGET_CHANGED {string} Fires when camera's target change\n */\n\nexport const CONTROL_EVENTS = {\n    PAN_CHANGED: 'pan-changed',\n    ORIENTATION_CHANGED: 'orientation-changed',\n    RANGE_CHANGED: 'range-changed',\n    CAMERA_TARGET_CHANGED: 'camera-target-changed',\n};\n\nlet previous;\n\n/**\n * GlobeControls is a camera controller\n *\n * @class      GlobeControls\n * @param      {GlobeView}  view the view where the control will be used\n * @param      {Coordinates}  targetCoordinate the target looked by camera, at initialization\n * @param      {number}  range distance between the target looked and camera, at initialization\n * @param      {number}  globeRadius The globe's radius\n * @param      {object}  options\n * @param      {number}  options.zoomSpeed Speed zoom with mouse\n * @param      {number}  options.rotateSpeed Speed camera rotation in orbit and panoramic mode\n * @param      {number}  options.minDistance Minimum distance between ground and camera\n * @param      {number}  options.maxDistance Maximum distance between ground and camera\n * @param      {bool}  options.handleCollision enable collision camera with ground\n * @property   {bool} enabled enable control\n * @property   {number} minDistance Minimum distance between ground and camera\n * @property   {number} maxDistance Maximum distance between ground and camera\n * @property   {number} zoomSpeed Speed zoom with mouse\n * @property   {number} rotateSpeed Speed camera rotation in orbit and panoramic mode\n * @property   {number} minDistanceCollision Minimum distance collision between ground and camera\n * @property   {bool} enableDamping enable camera damping, if it's disabled the camera immediately when the mouse button is released.\n * If it's enabled, the camera movement is decelerate.\n */\nfunction GlobeControls(view, targetCoordinate, range, globeRadius, options = {}) {\n    player = new AnimationPlayer();\n    this._view = view;\n    this.camera = view.camera.camera3D;\n    this.domElement = view.mainLoop.gfxEngine.renderer.domElement;\n\n    // State control\n    let state;\n    const states = new StateControl();\n    state = states.NONE;\n\n    this.getStates = () => states;\n    this.isPaused = () => state == states.NONE;\n\n    // Set to false to disable this control\n    this.enabled = true;\n\n    // This option actually enables dollying in and out; left as \"zoom\" for\n    // backwards compatibility\n    this.zoomSpeed = options.zoomSpeed || 2.0;\n\n    // Limits to how far you can dolly in and out ( PerspectiveCamera only )\n    this.minDistance = options.minDistance || 300;\n    this.maxDistance = options.maxDistance || globeRadius * 8.0;\n\n    // Limits to how far you can zoom in and out ( OrthographicCamera only )\n    this.minZoom = 0;\n    this.maxZoom = Infinity;\n\n    // Set to true to disable this control\n    this.rotateSpeed = options.rotateSpeed || 0.25;\n\n    // Set to true to disable this control\n    this.keyPanSpeed = 7.0; // pixels moved per arrow key push\n\n    // How far you can orbit vertically, upper and lower limits.\n    // Range is 0 to Math.PI radians.\n    // TODO Warning minPolarAngle = 0.01 -> it isn't possible to be perpendicular on Globe\n    this.minPolarAngle = THREE.Math.degToRad(0.5); // radians\n    this.maxPolarAngle = THREE.Math.degToRad(86); // radians\n\n    // How far you can orbit horizontally, upper and lower limits.\n    // If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n    this.minAzimuthAngle = -Infinity; // radians\n    this.maxAzimuthAngle = Infinity; // radians\n\n    // Set collision options\n    this.handleCollision = typeof (options.handleCollision) !== 'undefined' ? options.handleCollision : true;\n    this.minDistanceCollision = 60;\n\n    // Set to true to disable use of the keys\n    this.enableKeys = true;\n\n    // Enable Damping\n    this.enableDamping = true;\n\n    this.startEvent = {\n        type: 'start',\n    };\n    this.endEvent = {\n        type: 'end',\n    };\n\n    this.getDollyScale = function getDollyScale() {\n        return Math.pow(0.95, this.zoomSpeed);\n    };\n\n    this.rotateLeft = function rotateLeft(angle = 0) {\n        sphericalDelta.theta -= angle;\n    };\n\n    this.rotateUp = function rotateUp(angle = 0) {\n        sphericalDelta.phi -= angle;\n    };\n\n    // pass in distance in world space to move left\n    this.panLeft = function panLeft(distance) {\n        const te = this.camera.matrix.elements;\n        // get X column of matrix\n        panOffset.fromArray(te);\n        panOffset.multiplyScalar(-distance);\n        panVector.add(panOffset);\n    };\n\n    // pass in distance in world space to move up\n    this.panUp = function panUp(distance) {\n        const te = this.camera.matrix.elements;\n        // get Y column of matrix\n        panOffset.fromArray(te, 4);\n        panOffset.multiplyScalar(distance);\n        panVector.add(panOffset);\n    };\n\n    // pass in x,y of change desired in pixel space,\n    // right and down are positive\n    this._mouseToPan = function _mouseToPan(deltaX, deltaY) {\n        const gfx = view.mainLoop.gfxEngine;\n        state = states.PAN;\n        if (this.camera instanceof THREE.PerspectiveCamera) {\n            let targetDistance = this.camera.position.distanceTo(this.getCameraTargetPosition());\n            // half of the fov is center to top of screen\n            targetDistance *= 2 * Math.tan(THREE.Math.degToRad(this.camera.fov * 0.5));\n\n            // we actually don't use screenWidth, since perspective camera is fixed to screen height\n            this.panLeft(deltaX * targetDistance / gfx.width * this.camera.aspect);\n            this.panUp(deltaY * targetDistance / gfx.height);\n        } else if (this.camera instanceof THREE.OrthographicCamera) {\n            // orthographic\n            this.panLeft(deltaX * (this.camera.right - this.camera.left) / gfx.width);\n            this.panUp(deltaY * (this.camera.top - this.camera.bottom) / gfx.height);\n        }\n    };\n\n    this.dollyIn = function dollyIn(dollyScale) {\n        if (dollyScale === undefined) {\n            dollyScale = this.getDollyScale();\n        }\n\n        if (this.camera instanceof THREE.PerspectiveCamera) {\n            orbitScale /= dollyScale;\n        } else if (this.camera instanceof THREE.OrthographicCamera) {\n            this.camera.zoom = THREE.Math.clamp(this.camera.zoom * dollyScale, this.minZoom, this.maxZoom);\n            this.camera.updateProjectionMatrix();\n            view.notifyChange(this.camera);\n        }\n    };\n\n    this.dollyOut = function dollyOut(dollyScale) {\n        if (dollyScale === undefined) {\n            dollyScale = this.getDollyScale();\n        }\n\n        if (this.camera instanceof THREE.PerspectiveCamera) {\n            orbitScale *= dollyScale;\n        } else if (this.camera instanceof THREE.OrthographicCamera) {\n            this.camera.zoom = THREE.Math.clamp(this.camera.zoom / dollyScale, this.minZoom, this.maxZoom);\n            this.camera.updateProjectionMatrix();\n            view.notifyChange(this.camera);\n        }\n    };\n\n    const quaterPano = new THREE.Quaternion();\n    const quaterAxis = new THREE.Quaternion();\n    const axisX = new THREE.Vector3(1, 0, 0);\n    let minDistanceZ = Infinity;\n    const getMinDistanceCameraBoundingSphereObbsUp = (tile) => {\n        if (tile.level > 10 && tile.children.length == 1 && tile.geometry) {\n            const obb = tile.obb;\n            const sphereCamera = { position: this.camera.position.clone(), radius: this.minDistanceCollision };\n            if (obb.isSphereAboveXYBox(sphereCamera)) {\n                minDistanceZ = Math.min(sphereCamera.position.z - obb.box3D.max.z, minDistanceZ);\n            }\n        }\n    };\n\n    const lastNormalizedIntersection = new THREE.Vector3();\n    const normalizedIntersection = new THREE.Vector3();\n\n    const update = () => {\n        // We compute distance between camera's bounding sphere and geometry's obb up face\n        if (this.handleCollision) { // We check distance to the ground/surface geometry\n            // add minDistanceZ between camera's bounding and tiles's oriented bounding box (up face only)\n            // Depending on the distance of the camera with obbs, we add a slowdown or constrain to the movement.\n            // this constraint or deceleration is suitable for two types of movement MOVE_GLOBE and ORBIT.\n            // This constraint or deceleration inversely proportional to the camera/obb distance\n            if (view.tileLayer) {\n                minDistanceZ = Infinity;\n                for (const tile of view.tileLayer.level0Nodes) {\n                    tile.traverse(getMinDistanceCameraBoundingSphereObbsUp);\n                }\n            }\n        }\n        switch (state) {\n            // MOVE_GLOBE Rotate globe with mouse\n            case states.MOVE_GLOBE:\n                if (minDistanceZ < 0) {\n                    cameraTarget.translateY(-minDistanceZ);\n                    this.camera.position.setLength(this.camera.position.length() - minDistanceZ);\n                } else if (minDistanceZ < this.minDistanceCollision) {\n                    const translate = this.minDistanceCollision * (1.0 - minDistanceZ / this.minDistanceCollision);\n                    cameraTarget.translateY(translate);\n                    this.camera.position.setLength(this.camera.position.length() + translate);\n                }\n                lastNormalizedIntersection.copy(normalizedIntersection).applyQuaternion(moveAroundGlobe);\n                cameraTarget.position.applyQuaternion(moveAroundGlobe);\n                this.camera.position.applyQuaternion(moveAroundGlobe);\n                break;\n            // PAN Move camera in projection plan\n            case states.PAN:\n                this.camera.position.add(panVector);\n                cameraTarget.position.add(panVector);\n                break;\n            // PANORAMIC Move target camera\n            case states.PANORAMIC: {\n                this.camera.worldToLocal(cameraTarget.position);\n                const normal = this.camera.position.clone().normalize().applyQuaternion(this.camera.quaternion.clone().inverse());\n                quaterPano.setFromAxisAngle(normal, sphericalDelta.theta).multiply(quaterAxis.setFromAxisAngle(axisX, sphericalDelta.phi));\n                cameraTarget.position.applyQuaternion(quaterPano);\n                this.camera.localToWorld(cameraTarget.position);\n                break; }\n            // ZOOM/ORBIT Move Camera around the target camera\n            default: {\n                // get camera position in local space of target\n                this.camera.position.applyMatrix4(cameraTarget.matrixWorldInverse);\n\n                // angle from z-axis around y-axis\n                if (sphericalDelta.theta || sphericalDelta.phi) {\n                    spherical.setFromVector3(this.camera.position);\n                }\n                // far underground\n                const dynamicRadius = spherical.radius * Math.sin(this.minPolarAngle);\n                const slowdownLimit = dynamicRadius * 8;\n                const contraryLimit = dynamicRadius * 2;\n                const minContraintPhi = -0.01;\n\n                if (minDistanceZ < slowdownLimit && minDistanceZ > contraryLimit && sphericalDelta.phi > 0) {\n                    // slowdown zone : slowdown sphericalDelta.phi\n                    const slowdownZone = slowdownLimit - contraryLimit;\n                    // the deeper the camera is in this zone, the bigger the factor is\n                    const slowdownFactor = 1 - (slowdownZone - (minDistanceZ - contraryLimit)) / slowdownZone;\n                    // apply slowdown factor on tilt mouvement\n                    sphericalDelta.phi *= slowdownFactor * slowdownFactor;\n                } else if (minDistanceZ < contraryLimit && minDistanceZ > -contraryLimit && sphericalDelta.phi > minContraintPhi) {\n                    // contraint zone : contraint sphericalDelta.phi\n                    const contraryZone = 2 * contraryLimit;\n                    // calculation of the angle of rotation which allows to leave this zone\n                    let contraryPhi = -Math.asin((contraryLimit - minDistanceZ) * 0.25 / spherical.radius);\n                    // clamp contraryPhi to make a less brutal exit\n                    contraryPhi = THREE.Math.clamp(contraryPhi, minContraintPhi, 0);\n                    // the deeper the camera is in this zone, the bigger the factor is\n                    const contraryFactor = 1 - (contraryLimit - minDistanceZ) / contraryZone;\n                    sphericalDelta.phi = THREE.Math.lerp(sphericalDelta.phi, contraryPhi, contraryFactor);\n                    minDistanceZ -= Math.sin(sphericalDelta.phi) * spherical.radius;\n                }\n                spherical.theta += sphericalDelta.theta;\n                spherical.phi += sphericalDelta.phi;\n\n                // restrict spherical.theta to be between desired limits\n                spherical.theta = Math.max(this.minAzimuthAngle, Math.min(this.maxAzimuthAngle, spherical.theta));\n\n                // restrict spherical.phi to be between desired limits\n                spherical.phi = Math.max(this.minPolarAngle, Math.min(this.maxPolarAngle, spherical.phi));\n                spherical.radius = this.camera.position.length() * orbitScale;\n\n                // restrict spherical.phi to be betwee EPS and PI-EPS\n                spherical.makeSafe();\n\n                // restrict radius to be between desired limits\n                spherical.radius = Math.max(this.minDistance, Math.min(this.maxDistance, spherical.radius));\n\n                this.camera.position.setFromSpherical(spherical);\n\n                // if camera is underground, so move up camera\n                if (minDistanceZ < 0) {\n                    this.camera.position.y -= minDistanceZ;\n                    spherical.setFromVector3(this.camera.position);\n                    sphericalDelta.phi = 0;\n                }\n\n                cameraTarget.localToWorld(this.camera.position);\n            }\n        }\n\n        this.camera.up.copy(cameraTarget.position).normalize();\n        this.camera.lookAt(cameraTarget.position);\n\n        if (!this.enableDamping) {\n            sphericalDelta.theta = 0;\n            sphericalDelta.phi = 0;\n            moveAroundGlobe.set(0, 0, 0, 1);\n        } else {\n            sphericalDelta.theta *= (1 - dampingFactor);\n            sphericalDelta.phi *= (1 - dampingFactor);\n            moveAroundGlobe.slerp(dampingMove, dampingFactor * 0.2);\n        }\n\n        orbitScale = 1;\n        panVector.set(0, 0, 0);\n\n        // update condition is:\n        // min(camera displacement, camera rotation in radians)^2 > EPS\n        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n        if (lastPosition.distanceToSquared(this.camera.position) > EPS || 8 * (1 - lastQuaternion.dot(this.camera.quaternion)) > EPS) {\n            view.notifyChange(this.camera);\n\n            lastPosition.copy(this.camera.position);\n            lastQuaternion.copy(this.camera.quaternion);\n        }\n        // Launch animationdamping if mouse stops these movements\n        if (this.enableDamping && state === states.ORBIT && player.isStopped() && (sphericalDelta.theta > EPS || sphericalDelta.phi > EPS)) {\n            player.playLater(animationDampingOrbital, 2);\n        }\n    };\n\n    this.update = update;\n\n    // Update helper\n    const updateHelper = enableTargetHelper ? function updateHelper(position, helper) {\n        positionObject(position, helper);\n        view.notifyChange(this.camera);\n    } : function empty() {};\n\n    const raycaster = new THREE.Raycaster();\n    function onMouseMove(event) {\n        if (player.isPlaying()) {\n            player.stop();\n        }\n        if (this.enabled === false) { return; }\n\n        event.preventDefault();\n        const coords = view.eventToViewCoords(event);\n\n        switch (state) {\n            case states.ORBIT:\n            case states.PANORAMIC: {\n                rotateEnd.copy(coords);\n                rotateDelta.subVectors(rotateEnd, rotateStart);\n\n                const gfx = view.mainLoop.gfxEngine;\n                this.rotateLeft(2 * Math.PI * rotateDelta.x / gfx.width * this.rotateSpeed);\n                // rotating up and down along whole screen attempts to go 360, but limited to 180\n                this.rotateUp(2 * Math.PI * rotateDelta.y / gfx.height * this.rotateSpeed);\n\n                rotateStart.copy(rotateEnd);\n                break; }\n            case states.DOLLY:\n                dollyEnd.copy(coords);\n                dollyDelta.subVectors(dollyEnd, dollyStart);\n\n                if (dollyDelta.y > 0) {\n                    this.dollyIn();\n                } else if (dollyDelta.y < 0) {\n                    this.dollyOut();\n                }\n                dollyStart.copy(dollyEnd);\n                break;\n            case states.PAN:\n                panEnd.copy(coords);\n                panDelta.subVectors(panEnd, panStart);\n\n                this._mouseToPan(panDelta.x, panDelta.y);\n\n                panStart.copy(panEnd);\n                break;\n            case states.MOVE_GLOBE: {\n                const normalized = view.viewToNormalizedCoords(coords);\n                raycaster.setFromCamera(normalized, this.camera);\n                raycaster.ray.intersectSphere(pickSphere, intersection);\n                // If there's intersection then move globe else we stop the move\n                if (intersection) {\n                    normalizedIntersection.copy(intersection).normalize();\n                    moveAroundGlobe.setFromUnitVectors(normalizedIntersection, lastNormalizedIntersection);\n                    lastTimeMouseMove = Date.now();\n                } else {\n                    onMouseUp.bind(this)();\n                }\n                break; }\n            default:\n        }\n\n        if (state !== states.NONE) {\n            update();\n        }\n    }\n\n    const targetPosition = new THREE.Vector3();\n    const pickedPosition = new THREE.Vector3();\n    const updateTarget = () => {\n        // Update camera's target position\n        view.getPickingPositionFromDepth(null, pickedPosition);\n        const distance = !isNaN(pickedPosition.x) ? this.camera.position.distanceTo(pickedPosition) : 100;\n        targetPosition.set(0, 0, -distance);\n        this.camera.localToWorld(targetPosition);\n\n        // set new camera target on globe\n        positionObject(targetPosition, cameraTarget);\n        cameraTarget.matrixWorldInverse.getInverse(cameraTarget.matrixWorld);\n        targetPosition.copy(this.camera.position);\n        targetPosition.applyMatrix4(cameraTarget.matrixWorldInverse);\n        spherical.setFromVector3(targetPosition);\n    };\n\n    function onMouseDown(event) {\n        CameraUtils.stop(view, this.camera);\n        player.stop().then(() => {\n            if (this.enabled === false) { return; }\n            event.preventDefault();\n\n            updateTarget();\n            previous = CameraUtils.getTransformCameraLookingAtTarget(view, this.camera);\n            state = states.inputToState(event.button, currentKey);\n\n            const coords = view.eventToViewCoords(event);\n\n            switch (state) {\n                case states.ORBIT:\n                case states.PANORAMIC:\n                    rotateStart.copy(coords);\n                    break;\n                case states.SELECT:\n                    // If the key 'S' is down, the view selects node under mouse\n                    view.selectNodeAt(coords);\n                    break;\n                case states.MOVE_GLOBE: {\n                    // update picking on sphere\n                    if (view.getPickingPositionFromDepth(coords, pickingPoint)) {\n                        pickSphere.radius = pickingPoint.length();\n                        lastNormalizedIntersection.copy(pickingPoint).normalize();\n                        updateHelper.bind(this)(pickingPoint, helpers.picking);\n                    } else {\n                        state = states.NONE;\n                    }\n                    break;\n                }\n                case states.DOLLY:\n                    dollyStart.copy(coords);\n                    break;\n                case states.PAN:\n                    panStart.copy(coords);\n                    break;\n                default:\n            }\n            if (state != states.NONE) {\n                this.domElement.addEventListener('mousemove', _handlerMouseMove, false);\n                this.domElement.addEventListener('mouseup', _handlerMouseUp, false);\n                this.domElement.addEventListener('mouseleave', _handlerMouseUp, false);\n                this.dispatchEvent(this.startEvent);\n            }\n        });\n    }\n\n    function ondblclick(event) {\n        if (this.enabled === false || currentKey) { return; }\n        player.stop().then(() => {\n            const point = view.getPickingPositionFromDepth(view.eventToViewCoords(event));\n            const range = this.getRange();\n            if (point && range > this.minDistance) {\n                this.lookAtCoordinate({\n                    coord: new Coordinates('EPSG:4978', point),\n                    range: range * 0.6,\n                    time: 1500,\n                });\n            }\n        });\n    }\n\n    this._handlingEvent = (current) => {\n        current = current || CameraUtils.getTransformCameraLookingAtTarget(view, this.camera);\n        const diff = CameraUtils.getDiffParams(previous, current);\n        if (diff) {\n            if (diff.range) {\n                this.dispatchEvent({\n                    type: CONTROL_EVENTS.RANGE_CHANGED,\n                    previous: diff.range.previous,\n                    new: diff.range.new,\n                });\n            }\n            if (diff.coord) {\n                this.dispatchEvent({\n                    type: CONTROL_EVENTS.CAMERA_TARGET_CHANGED,\n                    previous: diff.coord.previous,\n                    new: diff.coord.new,\n                });\n            }\n            if (diff.tilt || diff.heading) {\n                const event = {\n                    type: CONTROL_EVENTS.ORIENTATION_CHANGED,\n                };\n                if (diff.tilt) {\n                    event.previous = { tilt: diff.tilt.previous };\n                    event.new = { tilt: diff.tilt.new };\n                }\n\n                if (diff.heading) {\n                    event.previous = event.previous || {};\n                    event.new = event.new || {};\n                    event.new.heading = diff.heading.new;\n                    event.previous.heading = diff.heading.previous;\n                }\n\n                this.dispatchEvent(event);\n            }\n        }\n    };\n\n    this._onEndingMove = (current) => {\n        state = states.NONE;\n        this._handlingEvent(current);\n    };\n\n    function onMouseUp() {\n        if (this.enabled === false) { return; }\n\n        this.domElement.removeEventListener('mousemove', _handlerMouseMove, false);\n        this.domElement.removeEventListener('mouseup', _handlerMouseUp, false);\n        this.domElement.removeEventListener('mouseleave', _handlerMouseUp, false);\n        this.dispatchEvent(this.endEvent);\n\n        player.stop();\n\n        // Launch damping movement for :\n        //      * states.ORBIT\n        //      * states.MOVE_GLOBE\n        if (this.enableDamping) {\n            if (state === states.ORBIT && (sphericalDelta.theta > EPS || sphericalDelta.phi > EPS)) {\n                player.play(animationDampingOrbital).then(this._onEndingMove);\n            } else if (state === states.MOVE_GLOBE && (Date.now() - lastTimeMouseMove < 50)) {\n                // animation since mouse up event occurs less than 50ms after the last mouse move\n                player.play(animationDampingMove).then(this._onEndingMove);\n            } else {\n                this._onEndingMove();\n            }\n        } else {\n            this._onEndingMove();\n        }\n    }\n\n    function onMouseWheel(event) {\n        player.stop().then(() => {\n            if (!this.enabled || !states.DOLLY.enable) { return; }\n            CameraUtils.stop(view, this.camera);\n            event.preventDefault();\n            event.stopPropagation();\n\n            updateTarget();\n            let delta = 0;\n\n            // WebKit / Opera / Explorer 9\n            if (event.wheelDelta !== undefined) {\n                delta = event.wheelDelta;\n            // Firefox\n            } else if (event.detail !== undefined) {\n                delta = -event.detail;\n            }\n\n            if (delta > 0) {\n                this.dollyOut();\n            } else if (delta < 0) {\n                this.dollyIn();\n            }\n\n            const previousRange = this.getRange();\n            update();\n            const newRange = this.getRange();\n            if (Math.abs(newRange - previousRange) / previousRange > 0.001) {\n                this.dispatchEvent({\n                    type: CONTROL_EVENTS.RANGE_CHANGED,\n                    previous: previousRange,\n                    new: newRange,\n                });\n            }\n            this.dispatchEvent(this.startEvent);\n            this.dispatchEvent(this.endEvent);\n        });\n    }\n\n    function onKeyUp() {\n        if (this.enabled === false || this.enableKeys === false) { return; }\n        currentKey = undefined;\n    }\n\n    function onKeyDown(event) {\n        player.stop().then(() => {\n            if (this.enabled === false || this.enableKeys === false) { return; }\n            currentKey = event.keyCode;\n            switch (event.keyCode) {\n                case states.PAN.up:\n                    this._mouseToPan(0, this.keyPanSpeed);\n                    state = states.PAN;\n                    update();\n                    break;\n                case states.PAN.bottom:\n                    this._mouseToPan(0, -this.keyPanSpeed);\n                    state = states.PAN;\n                    update();\n                    break;\n                case states.PAN.left:\n                    this._mouseToPan(this.keyPanSpeed, 0);\n                    state = states.PAN;\n                    update();\n                    break;\n                case states.PAN.right:\n                    this._mouseToPan(-this.keyPanSpeed, 0);\n                    state = states.PAN;\n                    update();\n                    break;\n                default:\n            }\n        });\n    }\n\n    function onTouchStart(event) {\n        // CameraUtils.stop(view);\n        player.stop().then(() => {\n            if (this.enabled === false) { return; }\n\n            state = states.touchToState(event.touches.length);\n\n            updateTarget();\n\n            if (state !== states.NONE) {\n                switch (state) {\n                    case states.MOVE_GLOBE: {\n                        const coords = view.eventToViewCoords(event);\n                        if (view.getPickingPositionFromDepth(coords, pickingPoint)) {\n                            pickSphere.radius = pickingPoint.length();\n                            lastNormalizedIntersection.copy(pickingPoint).normalize();\n                            updateHelper.bind(this)(pickingPoint, helpers.picking);\n                        } else {\n                            state = states.NONE;\n                        }\n                        break; }\n                    case states.DOLLY: {\n                        const dx = event.touches[0].pageX - event.touches[1].pageX;\n                        const dy = event.touches[0].pageY - event.touches[1].pageY;\n                        const distance = Math.sqrt(dx * dx + dy * dy);\n                        dollyStart.set(0, distance);\n                        break; }\n                    case states.PAN:\n                        panStart.set(event.touches[0].pageX, event.touches[0].pageY);\n                        break;\n                    default:\n                }\n\n                this.dispatchEvent(this.startEvent);\n            }\n        });\n    }\n\n    function onTouchMove(event) {\n        if (player.isPlaying()) {\n            player.stop();\n        }\n        if (this.enabled === false) { return; }\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        switch (event.touches.length) {\n            case states.MOVE_GLOBE.finger: {\n                const coords = view.eventToViewCoords(event);\n                const normalized = view.viewToNormalizedCoords(coords);\n                raycaster.setFromCamera(normalized, this.camera);\n                raycaster.ray.intersectSphere(pickSphere, intersection);\n                // If there's intersection then move globe else we stop the move\n                if (intersection) {\n                    normalizedIntersection.copy(intersection).normalize();\n                    moveAroundGlobe.setFromUnitVectors(normalizedIntersection, lastNormalizedIntersection);\n                    lastTimeMouseMove = Date.now();\n                } else {\n                    onMouseUp.bind(this)();\n                }\n                break; }\n            case states.ORBIT.finger:\n            case states.DOLLY.finger: {\n                const gfx = view.mainLoop.gfxEngine;\n                rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n                rotateDelta.subVectors(rotateEnd, rotateStart);\n\n                // rotating across whole screen goes 360 degrees around\n                this.rotateLeft(2 * Math.PI * rotateDelta.x / gfx.width * this.rotateSpeed);\n                // rotating up and down along whole screen attempts to go 360, but limited to 180\n                this.rotateUp(2 * Math.PI * rotateDelta.y / gfx.height * this.rotateSpeed);\n\n                rotateStart.copy(rotateEnd);\n                const dx = event.touches[0].pageX - event.touches[1].pageX;\n                const dy = event.touches[0].pageY - event.touches[1].pageY;\n                const distance = Math.sqrt(dx * dx + dy * dy);\n\n                dollyEnd.set(0, distance);\n                dollyDelta.subVectors(dollyEnd, dollyStart);\n\n                if (dollyDelta.y > 0) {\n                    this.dollyOut();\n                } else if (dollyDelta.y < 0) {\n                    this.dollyIn();\n                }\n\n                dollyStart.copy(dollyEnd);\n\n                break; }\n            case states.PAN.finger:\n                panEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n                panDelta.subVectors(panEnd, panStart);\n\n                this._mouseToPan(panDelta.x, panDelta.y);\n\n                panStart.copy(panEnd);\n                break;\n            default:\n                state = states.NONE;\n        }\n\n        if (state !== states.NONE) {\n            update();\n        }\n    }\n\n    function onTouchEnd(/* event */) {\n        onMouseUp.bind(this)();\n    }\n\n    this.dispose = function dispose() {\n        // this.domElement.removeEventListener( 'contextmenu', onContextMenu, false );\n        this.domElement.removeEventListener('mousedown', onMouseDown, false);\n        this.domElement.removeEventListener('mousewheel', onMouseWheel, false);\n        this.domElement.removeEventListener('DOMMouseScroll', onMouseWheel, false); // firefox\n\n        this.domElement.removeEventListener('touchstart', onTouchStart, false);\n        this.domElement.removeEventListener('touchend', onTouchEnd, false);\n        this.domElement.removeEventListener('touchmove', onTouchMove, false);\n\n        this.domElement.removeEventListener('mousemove', onMouseMove, false);\n        this.domElement.removeEventListener('mouseup', onMouseUp, false);\n\n        window.removeEventListener('keydown', onKeyDown, false);\n\n        this.dispatchEvent({ type: 'dispose' });\n    };\n\n    // Instance all\n    this.domElement.addEventListener('contextmenu', (event) => {\n        event.preventDefault();\n    }, false);\n    this.domElement.addEventListener('mousedown', onMouseDown.bind(this), false);\n    this.domElement.addEventListener('mousewheel', onMouseWheel.bind(this), false);\n    this.domElement.addEventListener('dblclick', ondblclick.bind(this), false);\n    this.domElement.addEventListener('DOMMouseScroll', onMouseWheel.bind(this), false); // firefox\n\n    this.domElement.addEventListener('touchstart', onTouchStart.bind(this), false);\n    this.domElement.addEventListener('touchend', onTouchEnd.bind(this), false);\n    this.domElement.addEventListener('touchmove', onTouchMove.bind(this), false);\n\n    // refresh control for each animation's frame\n    player.addEventListener('animation-frame', this.update);\n\n    // TODO: Why windows\n    window.addEventListener('keydown', onKeyDown.bind(this), false);\n    window.addEventListener('keyup', onKeyUp.bind(this), false);\n\n    // Reset key/mouse when window loose focus\n    window.addEventListener('blur', () => {\n        onKeyUp.bind(this)();\n        onMouseUp.bind(this)();\n    });\n\n    view.scene.add(cameraTarget);\n    if (enableTargetHelper) {\n        cameraTarget.add(helpers.target);\n        view.scene.add(helpers.picking);\n        const layerTHREEjs = view.mainLoop.gfxEngine.getUniqueThreejsLayer();\n        helpers.target.layers.set(layerTHREEjs);\n        helpers.picking.layers.set(layerTHREEjs);\n        this.camera.layers.enable(layerTHREEjs);\n    }\n\n    _handlerMouseMove = onMouseMove.bind(this);\n    _handlerMouseUp = onMouseUp.bind(this);\n\n    positionObject(targetCoordinate.as('EPSG:4978').xyz(), cameraTarget);\n\n    this.lookAtCoordinate({\n        coord: targetCoordinate,\n        tilt: 89.5,\n        heading: 0,\n        range }, false);\n}\n\nGlobeControls.prototype = Object.create(THREE.EventDispatcher.prototype);\nGlobeControls.prototype.constructor = GlobeControls;\n\nfunction getRangeFromScale(scale, pitch, fov, height) {\n    // Screen pitch, in millimeters\n    pitch = (pitch || 0.28) / 1000;\n    fov = THREE.Math.degToRad(fov);\n    // Invert one unit projection (see getDollyScale)\n    const range = pitch * height / (scale * 2 * Math.tan(fov * 0.5));\n\n    return range;\n}\n\n/**\n * Changes the tilt of the current camera, in degrees.\n * @param {number}  tilt\n * @param {boolean} isAnimated\n * @return {Promise<void>}\n */\nGlobeControls.prototype.setTilt = function setTilt(tilt, isAnimated) {\n    return this.lookAtCoordinate({ tilt }, isAnimated);\n};\n\n/**\n * Changes the heading of the current camera, in degrees.\n * @param {number} heading\n * @param {boolean} isAnimated\n * @return {Promise<void>}\n */\nGlobeControls.prototype.setHeading = function setHeading(heading, isAnimated) {\n    return this.lookAtCoordinate({ heading }, isAnimated);\n};\n\n/**\n * Sets the \"range\": the distance in meters between the camera and the current central point on the screen.\n * @param {number} range\n * @param {boolean} isAnimated\n * @return {Promise<void>}\n */\nGlobeControls.prototype.setRange = function setRange(range, isAnimated) {\n    return this.lookAtCoordinate({ range }, isAnimated);\n};\n\n/**\n * Returns the {@linkcode Coordinates} of the globe point targeted by the camera in EPSG:4978 projection. See {@linkcode Coordinates} for conversion\n * @return {THREE.Vector3} position\n */\nGlobeControls.prototype.getCameraTargetPosition = function getCameraTargetPosition() {\n    return cameraTarget.position;\n};\n\n/**\n * Returns the \"range\": the distance in meters between the camera and the current central point on the screen.\n * @return {number} number\n */\nGlobeControls.prototype.getRange = function getRange() {\n    return CameraUtils.getTransformCameraLookingAtTarget(this._view, this.camera).range;\n};\n\n/**\n * Returns the tilt of the current camera in degrees.\n * @return {Angle} number - The angle of the rotation in degrees.\n */\nGlobeControls.prototype.getTilt = function getTilt() {\n    return CameraUtils.getTransformCameraLookingAtTarget(this._view, this.camera).tilt;\n};\n\n/**\n * Returns the heading of the current camera in degrees.\n * @return {Angle} number - The angle of the rotation in degrees.\n */\nGlobeControls.prototype.getHeading = function getHeading() {\n    return CameraUtils.getTransformCameraLookingAtTarget(this._view, this.camera).heading;\n};\n\n/**\n * Displaces the central point to a specific amount of pixels from its current position.\n * The view flies to the desired coordinate, i.e.is not teleported instantly. Note : The results can be strange in some cases, if ever possible, when e.g.the camera looks horizontally or if the displaced center would not pick the ground once displaced.\n * @param      {vector}  pVector  The vector\n * @return {Promise}\n */\nGlobeControls.prototype.pan = function pan(pVector) {\n    this._mouseToPan(pVector.x, pVector.y);\n    this.update();\n    return Promise.resolve();\n};\n\n/**\n * Returns the orientation angles of the current camera, in degrees.\n * @return {Array<number>}\n */\nGlobeControls.prototype.getCameraOrientation = function getCameraOrientation() {\n    return [this.getTilt(), this.getHeading()];\n};\n\n/**\n * Returns the camera location projected on the ground in lat,lon. See {@linkcode Coordinates} for conversion.\n * @return {Coordinates} position\n */\n\nGlobeControls.prototype.getCameraCoordinate = function _getCameraCoordinate() {\n    return new Coordinates('EPSG:4978', this.camera.position).as('EPSG:4326');\n};\n\n/**\n * @deprecated\n * Returns the {@linkcode Coordinates} of the central point on screen in lat,lon. See {@linkcode Coordinates} for conversion.\n * @return {Position} position\n */\nGlobeControls.prototype.getCameraTargetGeoPosition = function getCameraTargetGeoPosition() {\n    console.warn('getCameraTargetGeoPosition has been deprecated, use getLookAtCoordinate');\n    return this.getLookAtCoordinate();\n};\n\n/**\n * Returns the {@linkcode Coordinates} of the central point on screen in lat,lon. See {@linkcode Coordinates} for conversion.\n * @return {Coordinates} coordinate\n */\nGlobeControls.prototype.getLookAtCoordinate = function _getLookAtCoordinate() {\n    return CameraUtils.getTransformCameraLookingAtTarget(this._view, this.camera).coord;\n};\n\n/**\n * Sets the animation enabled.\n * @param      {boolean}  enable  enable\n */\nGlobeControls.prototype.setAnimationEnabled = function setAnimationEnabled(enable) {\n    enableAnimation = enable;\n};\n\n/**\n * Determines if animation enabled.\n * @return     {boolean}  True if animation enabled, False otherwise.\n */\nGlobeControls.prototype.isAnimationEnabled = function isAnimationEnabled() {\n    return enableAnimation;\n};\n\n/**\n * Returns the actual zoom. The zoom will always be between the [getMinZoom(), getMaxZoom()].\n * @return     {number}  The zoom .\n */\nGlobeControls.prototype.getZoom = function getZoom() {\n    return this._view.tileLayer.computeTileZoomFromDistanceCamera(this.getRange(), this._view.camera);\n};\n\n/**\n * Sets the current zoom, which is an index in the logical scales predefined for the application.\n * The higher the zoom, the closer to the ground.\n * The zoom is always in the [getMinZoom(), getMaxZoom()] range.\n * @param      {number}  zoom    The zoom\n * @param      {boolean}  isAnimated  Indicates if animated\n * @return     {Promise}\n */\nGlobeControls.prototype.setZoom = function setZoom(zoom, isAnimated) {\n    return this.lookAtCoordinate({ zoom }, isAnimated);\n};\n\n/**\n * Return the current zoom scale at the central point of the view.\n * This function compute the scale of a map\n * @param      {number}  pitch   Screen pitch, in millimeters ; 0.28 by default\n * @return     {number}  The zoom scale.\n */\nGlobeControls.prototype.getScale = function getScale(pitch) {\n    // TODO: Why error div size height in Chrome?\n    // Screen pitch, in millimeters\n    pitch = (pitch || 0.28) / 1000;\n    const fov = THREE.Math.degToRad(this.camera.fov);\n    // projection one unit on screen\n    const gfx = this._view.mainLoop.gfxEngine;\n    const unitProjection = gfx.height / (2 * this.getRange() * Math.tan(fov * 0.5));\n    return pitch * unitProjection;\n};\n\n/**\n * To convert the projection in meters on the globe of a number of pixels of screen\n * @param      {number} pixels count pixels to project\n * @param      {number} pixelPitch Screen pixel pitch, in millimeters (default = 0.28 mm / standard pixel size of 0.28 millimeters as defined by the OGC)\n * @return     {number} projection in meters on globe\n */\nGlobeControls.prototype.pixelsToMeters = function pixelsToMeters(pixels, pixelPitch = 0.28) {\n    const scaled = this.getScale(pixelPitch);\n    const size = pixels * pixelPitch;\n    return size / scaled / 1000;\n};\n\n/**\n * To convert the projection a number of horizontal pixels of screen to longitude degree WGS84 on the globe\n * @param      {number} pixels count pixels to project\n * @param      {number} pixelPitch Screen pixel pitch, in millimeters (default = 0.28 mm / standard pixel size of 0.28 millimeters as defined by the OGC)\n * @return     {number} projection in degree on globe\n */\n\nGlobeControls.prototype.pixelsToDegrees = function pixelsToDegrees(pixels, pixelPitch = 0.28) {\n    const chord = this.pixelsToMeters(pixels, pixelPitch);\n    return THREE.Math.radToDeg(2 * Math.asin(chord / (2 * ellipsoidSizes.x)));\n};\n\n/**\n * Projection on screen in pixels of length in meter on globe\n * @param      {number}  value Length in meter on globe\n * @param      {number}  pixelPitch Screen pixel pitch, in millimeters (default = 0.28 mm / standard pixel size of 0.28 millimeters as defined by the OGC)\n * @return     {number}  projection in pixels on screen\n */\nGlobeControls.prototype.metersToPixels = function metersToPixels(value, pixelPitch = 0.28) {\n    const scaled = this.getScale(pixelPitch);\n    pixelPitch /= 1000;\n    return value * scaled / pixelPitch;\n};\n\n/**\n * Changes the zoom of the central point of screen so that screen acts as a map with a specified scale.\n *  The view flies to the desired zoom scale;\n * @param      {number}  scale  The scale\n * @param      {number}  pitch  The pitch\n * @param      {boolean}  isAnimated  Indicates if animated\n * @return     {Promise}\n */\n\nGlobeControls.prototype.setScale = function setScale(scale, pitch, isAnimated) {\n    return this.lookAtCoordinate({ scale, pitch }, isAnimated);\n};\n\n/**\n * @deprecated\n * Changes the center of the scene on screen to the specified in lat, lon. See {@linkcode Coordinates} for conversion.\n * @function\n * @memberOf GlobeControls\n * @param {Object} coordinates - The globe coordinates in EPSG_4326 projection to aim to\n * @param {number} coordinates.latitude\n * @param {number} coordinates.longitude\n * @param {number} coordinates.range\n * @param {boolean}  isAnimated - if the movement should be animated\n * @return {Promise} A promise that resolves when the next 'globe initilazed' event fires.\n */\nGlobeControls.prototype.setCameraTargetGeoPosition = function setCameraTargetGeoPosition(coordinates, isAnimated) {\n    console.warn('setCameraTargetGeoPosition has been deprecated, use lookAtCoordinate');\n    return this.lookAtCoordinate(new Coordinates('EPSG:4326', coordinates.longitude, coordinates.latitude, 0), isAnimated);\n};\n\n/**\n * Changes the center of the scene on screen to the specified in lat, lon. See {@linkcode Coordinates} for conversion.\n * This function allows to change the central position, the zoom, the range, the scale and the camera orientation at the same time.\n * The zoom has to be between the [getMinZoom(), getMaxZoom()].\n * Zoom parameter is ignored if range is set\n * The tilt's interval is between 4 and 89.5 degree\n *\n * @param      {cameraTransformOptions}   params camera transformation to apply\n * @param      {number}   [params.zoom]   zoom\n * @param      {number}   [params.scale]   scale\n * @param      {boolean}  isAnimated  Indicates if animated\n * @return     {Promise}  A promise that resolves when transformation is oppered\n */\nGlobeControls.prototype.lookAtCoordinate = function _lookAtCoordinate(params = {}, isAnimated = this.isAnimationEnabled()) {\n    if (params.zoom) {\n        params.range = this._view.tileLayer.computeDistanceCameraFromTileZoom(params.zoom, this._view.camera);\n    } else if (params.scale) {\n        const gfx = this._view.mainLoop.gfxEngine;\n        params.range = getRangeFromScale(params.scale, params.pitch, this.camera.fov, gfx.height);\n        if (params.range < this.minDistance || params.range > this.maxDistance) {\n            // eslint-disable-next-line no-console\n            console.warn(`This scale ${params.scale} can not be reached`);\n            params.range = THREE.Math.clamp(params.range, this.minDistance, this.maxDistance);\n        }\n    }\n\n    if (params.tilt !== undefined) {\n        const minTilt = 90 - THREE.Math.radToDeg(this.maxPolarAngle);\n        const maxTilt = 90 - THREE.Math.radToDeg(this.minPolarAngle);\n        if (params.tilt < minTilt || params.tilt > maxTilt) {\n            params.tilt = THREE.Math.clamp(params.tilt, minTilt, maxTilt);\n            // eslint-disable-next-line no-console\n            console.warn('Tilt was clamped to ', params.tilt, ` the interval is between ${minTilt} and ${maxTilt} degree`);\n        }\n    }\n\n    previous = CameraUtils.getTransformCameraLookingAtTarget(this._view, this.camera);\n    if (isAnimated) {\n        params.callback = r => cameraTarget.position.copy(r.targetWorldPosition);\n        this.dispatchEvent({ type: 'animation-started' });\n        return CameraUtils.animateCameraToLookAtTarget(this._view, this.camera, params)\n            .then((result) => {\n                this.dispatchEvent({ type: 'animation-ended' });\n                this._handlingEvent(result);\n                return result;\n            });\n    } else {\n        return CameraUtils.transformCameraToLookAtTarget(this._view, this.camera, params).then((result) => {\n            cameraTarget.position.copy(result.targetWorldPosition);\n            this._handlingEvent(result);\n            return result;\n        });\n    }\n};\n\n/**\n * @deprecated\n * Changes the center of the scene on screen to the specified in lat, lon. See {@linkcode Coordinates} for conversion.\n * This function allows to change the central position, the zoom, the range, the scale and the camera orientation at the same time.\n * The zoom has to be between the [getMinZoom(), getMaxZoom()].\n * Zoom parameter is ignored if range is set\n * @param {Position} position\n * @param {number}  position.longitude  Coordinate longitude WGS84 in degree\n * @param {number}  position.latitude  Coordinate latitude WGS84 in degree\n * @param {number}  [position.tilt]  Camera tilt in degree\n * @param {number}  [position.heading]  Camera heading in degree\n * @param {number}  [position.range]  The camera distance to the target center\n * @param {number}  [position.zoom]  zoom,  ignored if range is set\n * @param {number}  [position.scale]  scale,  ignored if the zoom or range is set. For a scale of 1/500 it is necessary to write 0,002.\n * @param {boolean}  isAnimated  Indicates if animated\n * @return {Promise}\n */\n\nGlobeControls.prototype.setCameraTargetGeoPositionAdvanced = function setCameraTargetGeoPositionAdvanced(position, isAnimated) {\n    console.warn('setCameraTargetGeoPositionAdvanced has been deprecated, use lookAtCoordinate');\n    position.coord = new Coordinates('EPSG:4326', position.longitude, position.latitude, 0);\n    return this.lookAtCoordinate(position, isAnimated);\n};\n\n/**\n * @deprecated\n * Sets orientation angles of the current camera, in degrees.\n * <iframe width=\"100%\" height=\"400\" src=\"http://jsfiddle.net/iTownsIGN/9qr2mogh/embedded/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n * @param {{tilt:number,heading:number,range:number}} position\n * @param {boolean}  isAnimated\n * @return {Promise} A promise that resolves when transformation is oppered\n */\nGlobeControls.prototype.setOrbitalPosition = function setOrbitalPosition(position, isAnimated) {\n    console.warn('setOrbitalPosition has been deprecated, use lookAtCoordinate');\n    return this.lookAtCoordinate(position, isAnimated);\n};\n\n/**\n * Pick a position on the globe at the given position in lat,lon. See {@linkcode Coordinates} for conversion.\n * @param {Vector2} windowCoords - window coordinates\n * @param {number=} y - The y-position inside the Globe element.\n * @return {Coordinates} position\n */\nGlobeControls.prototype.pickGeoPosition = function pickGeoPosition(windowCoords) {\n    const pickedPosition = this._view.getPickingPositionFromDepth(windowCoords);\n\n    if (!pickedPosition) {\n        return;\n    }\n\n    return new Coordinates('EPSG:4978', pickedPosition).as('EPSG:4326');\n};\n\nexport default GlobeControls;\n","import * as THREE from 'three';\n\nimport TiledGeometryLayer from '../../../Layer/TiledGeometryLayer';\nimport { ellipsoidSizes } from '../../Geographic/Coordinates';\nimport Extent from '../../Geographic/Extent';\nimport BuilderEllipsoidTile from './BuilderEllipsoidTile';\nimport { l_ELEVATION } from '../../../Renderer/LayeredMaterialConstants';\nimport { SIZE_TEXTURE_TILE } from '../../../Provider/OGCWebServiceHelper';\n\n// matrix to convert sphere to ellipsoid\nconst worldToScaledEllipsoid = new THREE.Matrix4();\n// camera's position in worldToScaledEllipsoid system\nconst cameraPosition = new THREE.Vector3();\nlet magnitudeSquared = 0.0;\n\n// vectors for operation purpose\nconst cullingVector = new THREE.Vector3();\nconst subdivisionVector = new THREE.Vector3();\nconst boundingSphereCenter = new THREE.Vector3();\n\n// subdivison ratio\nlet subdivisionRatio = 0;\n\nclass GlobeLayer extends TiledGeometryLayer {\n    /**\n     * A {@link TiledGeometryLayer} to use with a {@link GlobeView}. It has\n     * specific method for updating and subdivising its grid.\n     *\n     * @constructor\n     * @extends TiledGeometryLayer\n     *\n     * @param {string} id - The id of the layer, that should be unique. It is\n     * not mandatory, but an error will be emitted if this layer is added a\n     * {@link View} that already has a layer going by that id.\n     * @param {THREE.Object3d} [object3d=THREE.Group] - The object3d used to\n     * contain the geometry of the TiledGeometryLayer. It is usually a\n     * <code>THREE.Group</code>, but it can be anything inheriting from a\n     * <code>THREE.Object3d</code>.\n     * @param {Object} [config] - Optional configuration, all elements in it\n     * will be merged as is in the layer. For example, if the configuration\n     * contains three elements <code>name, protocol, extent</code>, these\n     * elements will be available using <code>layer.name</code> or something\n     * else depending on the property name.\n     * @param {number} [config.minSubdivisionLevel=2] - Minimum subdivision\n     * level for this tiled layer.\n     * @param {number} [config.maxSubdivisionLevel=18] - Maximum subdivision\n     * level for this tiled layer.\n     * @param {number} [config.sseSubdivisionThreshold=1] - Threshold level for\n     * the SSE.\n     * @param {number} [config.maxDeltaElevationLevel=4] - Maximum delta between\n     * two elevations tile.\n     *\n     * @throws {Error} <code>object3d</code> must be a valid\n     * <code>THREE.Object3d</code>.\n     */\n    constructor(id, object3d, config = {}) {\n        // Configure tiles\n        const schemeTile = [\n            new Extent('EPSG:4326', -180, 0, -90, 90),\n            new Extent('EPSG:4326', 0, 180, -90, 90)];\n        const builder = new BuilderEllipsoidTile();\n\n        super(id, object3d || new THREE.Group(), schemeTile, builder, config);\n\n        this.options.defaultPickingRadius = 5;\n        this.minSubdivisionLevel = this.minSubdivisionLevel || 2.0;\n        this.maxSubdivisionLevel = this.maxSubdivisionLevel || 18.0;\n        this.sseSubdivisionThreshold = this.sseSubdivisionThreshold || 1.0;\n        this.maxDeltaElevation = this.maxDeltaElevation || 4.0;\n\n        this.extent = this.schemeTile[0].clone();\n\n        for (let i = 1; i < this.schemeTile.length; i++) {\n            this.extent.union(this.schemeTile[i]);\n        }\n\n        // We're going to use the method described here:\n        //    https://cesiumjs.org/2013/04/25/Horizon-culling/\n        // This method assumes that the globe is a unit sphere at 0,0,0 so\n        // we setup a world-to-scaled-ellipsoid matrix4\n        worldToScaledEllipsoid.getInverse(this.object3d.matrixWorld);\n        worldToScaledEllipsoid.premultiply(\n            new THREE.Matrix4().makeScale(\n                1 / ellipsoidSizes.x,\n                1 / ellipsoidSizes.y,\n                1 / ellipsoidSizes.z));\n\n        subdivisionRatio = 1 / Math.pow(2, this.maxDeltaElevationLevel);\n    }\n\n    preUpdate(context, changeSources) {\n        // pre-horizon culling\n        cameraPosition.copy(context.camera.camera3D.position).applyMatrix4(worldToScaledEllipsoid);\n        magnitudeSquared = cameraPosition.lengthSq() - 1.0;\n\n        // pre-sse\n        const canvasSize = context.view.mainLoop.gfxEngine.getWindowSize();\n        const hypothenuse = canvasSize.length();\n        const radAngle = context.view.camera.camera3D.fov * Math.PI / 180;\n        const HYFOV = 2.0 * Math.atan(Math.tan(radAngle * 0.5) * hypothenuse / canvasSize.x);\n        context.camera.preSSE = hypothenuse * (2.0 * Math.tan(HYFOV * 0.5));\n\n        // Leaving the correct SSE below to be added later, as it is too heavy for now.\n        // const FOV = THREE.Math.degToRad(context.camera.camera3D.fov);\n        // context.camera.preSSE = context.camera.height / (2.0 * Math.tan(FOV * 0.5));\n\n        return super.preUpdate(context, changeSources);\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    countColorLayersTextures(...layers) {\n        let occupancy = 0;\n        for (const layer of layers) {\n            const projection = layer.projection || layer.source.projection;\n            // 'EPSG:3857' occupies the maximum 3 textures on tiles\n            // 'EPSG:4326' occupies 1 textures on tile\n            occupancy += projection == 'EPSG:3857' ? 3 : 1;\n        }\n        return occupancy;\n    }\n\n    // eslint-disable-next-line\n    culling(node, camera) {\n        if (!camera.isBox3Visible(node.obb.box3D, node.obb.matrixWorld)) {\n            return true;\n        }\n\n        if (node.level < this.minSubdivisionLevel) {\n            return false;\n        }\n\n        const points = node.obb.topPointsWorld;\n\n        for (const point of points) {\n            // see https://cesiumjs.org/2013/04/25/Horizon-culling/\n            cullingVector.copy(point);\n            cullingVector.applyMatrix4(worldToScaledEllipsoid).sub(cameraPosition);\n\n            const vtMagnitudeSquared = cullingVector.lengthSq();\n            const dot = -cullingVector.dot(cameraPosition);\n            const isOccluded = magnitudeSquared < dot && magnitudeSquared < ((dot * dot) / vtMagnitudeSquared);\n\n            if (!isOccluded) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    /**\n     * Test the subdvision of a node, compared to this layer.\n     *\n     * @param {Object} context - The context of the update; see the {@link\n     * MainLoop} for more informations.\n     * @param {GlobeLayer} layer - This layer, parameter to be removed.\n     * @param {TileMesh} node - The node to test.\n     *\n     * @return {boolean} - True if the node is subdivisable, otherwise false.\n     */\n    subdivision(context, layer, node) {\n        if (node.level < this.minSubdivisionLevel) {\n            return true;\n        }\n\n        if (this.maxSubdivisionLevel <= node.level) {\n            return false;\n        }\n\n        // Prevent to subdivise the node if the current elevation level\n        // we must avoid a tile, with level 20, inherits a level 3 elevation texture.\n        // The induced geometric error is much too large and distorts the SSE\n        const currentTexture = node.material.textures[l_ELEVATION][0];\n        if (currentTexture.extent) {\n            const offsetScale = node.material.offsetScale[l_ELEVATION][0];\n            const ratio = offsetScale.z;\n            // ratio is node size / texture size\n            if (ratio < subdivisionRatio) {\n                return false;\n            }\n        }\n\n        subdivisionVector.setFromMatrixScale(node.matrixWorld);\n        boundingSphereCenter.copy(node.boundingSphere.center).applyMatrix4(node.matrixWorld);\n        const distance = Math.max(\n            0.0,\n            context.camera.camera3D.position.distanceTo(boundingSphereCenter) - node.boundingSphere.radius * subdivisionVector.x);\n\n        // TODO: node.geometricError is computed using a hardcoded 18 level\n        // The computation of node.geometricError is surely false\n        const sse = context.camera.preSSE * (node.geometricError * subdivisionVector.x) / distance;\n\n        return this.sseSubdivisionThreshold < sse;\n    }\n\n    computeTileZoomFromDistanceCamera(distance, camera) {\n        const preSinus =\n            SIZE_TEXTURE_TILE * (this.sseSubdivisionThreshold * 0.5) / camera.preSSE / ellipsoidSizes.x;\n\n        let sinus = distance * preSinus;\n        let zoom = Math.log(Math.PI / (2.0 * Math.asin(sinus))) / Math.log(2);\n\n        const delta = Math.PI / Math.pow(2, zoom);\n        const circleChord = 2.0 * ellipsoidSizes.x * Math.sin(delta * 0.5);\n        const radius = circleChord * 0.5;\n\n        // adjust with bounding sphere rayon\n        sinus = (distance - radius) * preSinus;\n        zoom = Math.log(Math.PI / (2.0 * Math.asin(sinus))) / Math.log(2);\n\n        return isNaN(zoom) ? 0 : Math.round(zoom);\n    }\n\n    computeDistanceCameraFromTileZoom(zoom, camera) {\n        const delta = Math.PI / Math.pow(2, zoom);\n        const circleChord = 2.0 * ellipsoidSizes.x * Math.sin(delta * 0.5);\n        const radius = circleChord * 0.5;\n        const error = radius / SIZE_TEXTURE_TILE;\n\n        return camera.preSSE * error / (this.sseSubdivisionThreshold * 0.5) + radius;\n    }\n}\n\nexport default GlobeLayer;\n","/**\n * @author zz85 / https://github.com/zz85\n *\n * Based on \"A Practical Analytic Model for Daylight\"\n * aka The Preetham Model, the de facto standard analytic skydome model\n * http://www.cs.utah.edu/~shirley/papers/sunsky/sunsky.pdf\n *\n * First implemented by Simon Wallner\n * http://www.simonwallner.at/projects/atmospheric-scattering\n *\n * Improved by Martin Upitis\n * http://blenderartists.org/forum/showthread.php?245954-preethams-sky-impementation-HDR\n *\n * Three.js integration by zz85 http://twitter.com/blurspline\n */\n\nimport * as THREE from 'three';\n\nvar skyShader = {\n\n    uniforms: {\n\n        luminance: {\n            type: 'f',\n            value: 1,\n        },\n        turbidity: {\n            type: 'f',\n            value: 2,\n        },\n        reileigh: {\n            type: 'f',\n            value: 1,\n        },\n        mieCoefficient: {\n            type: 'f',\n            value: 0.005,\n        },\n        mieDirectionalG: {\n            type: 'f',\n            value: 0.8,\n        },\n        sunPosition: {\n            type: 'v3',\n            value: new THREE.Vector3(),\n        },\n        up: {\n            type: 'v3',\n            value: new THREE.Vector3(0.0, 1.0, 0.0),\n        },\n\n    },\n\n    vertexShader: [\n\n        'varying vec3 vWorldPosition;',\n\n        'void main() {',\n\n        'vec4 worldPosition = modelMatrix *  vec4( cameraPosition + position, 1.0 );',\n        'vWorldPosition = worldPosition.xyz;',\n\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( cameraPosition + position, 1.0 );',\n\n        '}',\n\n    ].join('\\n'),\n\n    fragmentShader: [\n\n        'uniform sampler2D skySampler;',\n        'uniform vec3 sunPosition;',\n        'uniform vec3 up;',\n        'varying vec3 vWorldPosition;',\n\n        // \"vec3 cameraPos = cameraPosition; //vec3(0., 0., 0.);\",\n        '// uniform sampler2D sDiffuse;',\n        '// const float turbidity = 10.0; //',\n        '// const float reileigh = 2.; //',\n        '// const float luminance = 1.0; //',\n        '// const float mieCoefficient = 0.005;',\n        '// const float mieDirectionalG = 0.8;',\n\n        'uniform float luminance;',\n        'uniform float turbidity;',\n        'uniform float reileigh;',\n        'uniform float mieCoefficient;',\n        'uniform float mieDirectionalG;',\n\n        '// constants for atmospheric scattering',\n        'const float e = 2.71828182845904523536028747135266249775724709369995957;',\n        'const float pi = 3.141592653589793238462643383279502884197169;',\n\n        'const float n = 1.0003; // refractive index of air',\n        'const float N = 2.545E25; // number of molecules per unit volume for air at',\n        '// 288.15K and 1013mb (sea level -45 celsius)',\n        'const float pn = 0.035; // depolatization factor for standard air',\n\n        '// wavelength of used primaries, according to preetham',\n        'const vec3 lambda = vec3(680E-9, 550E-9, 450E-9);',\n\n        '// mie stuff',\n        '// K coefficient for the primaries',\n        'const vec3 K = vec3(0.686, 0.678, 0.666);',\n        'const float v = 4.0;',\n\n        '// optical length at zenith for molecules',\n        'const float rayleighZenithLength = 8.4E3;',\n        'const float mieZenithLength = 1.25E3;',\n        // \"const vec3 up = vec3(0.0, 1.0, 0.0);\",\n\n\n        'const float EE = 1000.0;',\n        'const float sunAngularDiameterCos = 0.999956676946448443553574619906976478926848692873900859324;',\n        '// 66 arc seconds -> degrees, and the cosine of that',\n\n        '// earth shadow hack',\n        'const float cutoffAngle = pi/1.95;',\n        'const float steepness = 1.5;',\n\n\n        'vec3 totalRayleigh(vec3 lambda)',\n        '{',\n        'return (8.0 * pow(pi, 3.0) * pow(pow(n, 2.0) - 1.0, 2.0) * (6.0 + 3.0 * pn)) / (3.0 * N * pow(lambda, vec3(4.0)) * (6.0 - 7.0 * pn));',\n        '}',\n\n        // see http://blenderartists.org/forum/showthread.php?321110-Shaders-and-Skybox-madness\n        '// A simplied version of the total Reayleigh scattering to works on browsers that use ANGLE',\n        'vec3 simplifiedRayleigh()',\n        '{',\n        'return 0.0005 / vec3(94, 40, 18);',\n        // return 0.00054532832366 / (3.0 * 2.545E25 * pow(vec3(680E-9, 550E-9, 450E-9), vec3(4.0)) * 6.245);\n        '}',\n\n        'float rayleighPhase(float cosTheta)',\n        '{ ',\n        'return (3.0 / (16.0*pi)) * (1.0 + pow(cosTheta, 2.0));',\n        '// return (1.0 / (3.0*pi)) * (1.0 + pow(cosTheta, 2.0));',\n        '// return (3.0 / 4.0) * (1.0 + pow(cosTheta, 2.0));',\n        '}',\n\n        'vec3 totalMie(vec3 lambda, vec3 K, float T)',\n        '{',\n        'float c = (0.2 * T ) * 10E-18;',\n        'return 0.434 * c * pi * pow((2.0 * pi) / lambda, vec3(v - 2.0)) * K;',\n        '}',\n\n        'float hgPhase(float cosTheta, float g)',\n        '{',\n        'return (1.0 / (4.0*pi)) * ((1.0 - pow(g, 2.0)) / pow(1.0 - 2.0*g*cosTheta + pow(g, 2.0), 1.5));',\n        '}',\n\n        'float sunIntensity(float zenithAngleCos)',\n        '{',\n        'return EE * max(0.0, 1.0 - exp(-((cutoffAngle - acos(zenithAngleCos))/steepness)));',\n        '}',\n\n        '// float logLuminance(vec3 c)',\n        '// {',\n        '//     return log(c.r * 0.2126 + c.g * 0.7152 + c.b * 0.0722);',\n        '// }',\n\n        '// Filmic ToneMapping http://filmicgames.com/archives/75',\n        'float A = 0.15;',\n        'float B = 0.50;',\n        'float C = 0.10;',\n        'float D = 0.20;',\n        'float E = 0.02;',\n        'float F = 0.30;',\n        'float W = 1000.0;',\n\n        'vec3 Uncharted2Tonemap(vec3 x)',\n        '{',\n        'return ((x*(A*x+C*B)+D*E)/(x*(A*x+B)+D*F))-E/F;',\n        '}',\n\n\n        'void main() ',\n        '{',\n        'vec3 up2 = normalize(cameraPosition.xyz);',\n\n        'float sunfade = 1.0-clamp(1.0-exp((sunPosition.y/450000.0)),0.0,1.0);',\n\n        'float reileighCoefficient = reileigh - (1.0* (1.0-sunfade));',\n\n        'vec3 sunDirection = normalize(sunPosition);',\n\n        'float sunE = sunIntensity(dot(sunDirection, up2));',\n\n        '// extinction (absorbtion + out scattering) ',\n        '// rayleigh coefficients',\n\n        // \"vec3 betaR = totalRayleigh(lambda) * reileighCoefficient;\",\n        'vec3 betaR = simplifiedRayleigh() * reileighCoefficient;',\n\n        '// mie coefficients',\n        'vec3 betaM = totalMie(lambda, K, turbidity) * mieCoefficient;',\n\n        '// optical length',\n        '// cutoff angle at 90 to avoid singularity in next formula.',\n        'float zenithAngle = acos(max(0.0, dot(up2, normalize(vWorldPosition - cameraPosition))));',\n        'float sR = rayleighZenithLength / (cos(zenithAngle) + 0.15 * pow(93.885 - ((zenithAngle * 180.0) / pi), -1.253));',\n        'float sM = mieZenithLength / (cos(zenithAngle) + 0.15 * pow(93.885 - ((zenithAngle * 180.0) / pi), -1.253));',\n\n\n        '// combined extinction factor',\n        'vec3 Fex = exp(-(betaR * sR + betaM * sM));',\n\n        '// in scattering',\n        'float cosTheta = dot(normalize(vWorldPosition - cameraPosition), sunDirection);',\n\n        'float rPhase = rayleighPhase(cosTheta*0.5+0.5);',\n        'vec3 betaRTheta = betaR * rPhase;',\n\n        'float mPhase = hgPhase(cosTheta, mieDirectionalG);',\n        'vec3 betaMTheta = betaM * mPhase;',\n\n\n        'vec3 Lin = pow(sunE * ((betaRTheta + betaMTheta) / (betaR + betaM)) * (1.0 - Fex),vec3(1.5));',\n        'Lin *= mix(vec3(1.0),pow(sunE * ((betaRTheta + betaMTheta) / (betaR + betaM)) * Fex,vec3(1.0/2.0)),clamp(pow(1.0-dot(up2, sunDirection),5.0),0.0,1.0));',\n\n        '//nightsky',\n        'vec3 direction = normalize(vWorldPosition - cameraPosition);',\n        'float theta = acos(direction.y); // elevation --> y-axis, [-pi/2, pi/2]',\n        'float phi = atan(direction.z, direction.x); // azimuth --> x-axis [-pi/2, pi/2]',\n        'vec2 uv = vec2(phi, theta) / vec2(2.0*pi, pi) + vec2(0.5, 0.0);',\n        '// vec3 L0 = texture2D(skySampler, uv).rgb+0.1 * Fex;',\n        'vec3 L0 = vec3(0.1) * Fex;',\n\n        '// composition + solar disc',\n        '//if (cosTheta > sunAngularDiameterCos)',\n        'float sundisk = smoothstep(sunAngularDiameterCos,sunAngularDiameterCos+0.00002,cosTheta);',\n        '// if (normalize(vWorldPosition - cameraPosition).y>0.0)',\n        'L0 += (sunE * 19000.0 * Fex)*sundisk;',\n\n\n        'vec3 whiteScale = 1.0/Uncharted2Tonemap(vec3(W));',\n\n        'vec3 texColor = (Lin+L0);   ',\n        'texColor *= 0.04 ;',\n        'texColor += vec3(0.0,0.001,0.0025)*0.3;',\n\n        'float g_fMaxLuminance = 1.0;',\n        'float fLumScaled = 0.1 / luminance;     ',\n        'float fLumCompressed = (fLumScaled * (1.0 + (fLumScaled / (g_fMaxLuminance * g_fMaxLuminance)))) / (1.0 + fLumScaled); ',\n\n        'float ExposureBias = fLumCompressed;',\n\n        'vec3 curr = Uncharted2Tonemap((log2(2.0/pow(luminance,4.0)))*texColor);',\n        'vec3 color = curr*whiteScale;',\n\n        'vec3 retColor = pow(color,vec3(1.0/(1.2+(1.2*sunfade))));',\n\n\n        'gl_FragColor.rgb = retColor;',\n\n        'gl_FragColor.a = 1. - ( (length(cameraPosition) - 6400000.) / 1000.);',\n        '}',\n\n    ].join('\\n'),\n\n};\n\nfunction Sky() {\n    var skyUniforms = THREE.UniformsUtils.clone(skyShader.uniforms);\n\n    var skyMat = new THREE.ShaderMaterial({\n        fragmentShader: skyShader.fragmentShader,\n        vertexShader: skyShader.vertexShader,\n        uniforms: skyUniforms,\n        side: THREE.BackSide,\n    });\n\n    var skyGeo = new THREE.SphereBufferGeometry(40000, 32, 15);\n    var skyMesh = new THREE.Mesh(skyGeo, skyMat);\n\n\n    // Expose variables\n    this.mesh = skyMesh;\n    this.uniforms = skyUniforms;\n}\n// Sky.prototype = Object.create(THREE.EventDispatcher.prototype);\nSky.prototype.constructor = Sky;\n\nexport default Sky;\n","/*\n * To change this license header, choose License Headers in Project Properties.\n * To change this template file, choose Tools | Templates\n * and open the template in the editor.\n */\n\n\nimport * as THREE from 'three';\nimport Sky from './SkyShader';\nimport skyFS from './Shaders/skyFS.glsl';\nimport skyVS from './Shaders/skyVS.glsl';\nimport groundFS from './Shaders/groundFS.glsl';\nimport groundVS from './Shaders/groundVS.glsl';\nimport GlowFS from './Shaders/GlowFS.glsl';\nimport GlowVS from './Shaders/GlowVS.glsl';\nimport { ellipsoidSizes } from '../../Geographic/Coordinates';\n\nexport const LIGHTING_POSITION = new THREE.Vector3(1, 0, 0);\n\nfunction Atmosphere() {\n    // default to non-realistic lightning\n    this.realistic = false;\n\n    this.uniformsOut = {\n        atmoIN: {\n            type: 'i',\n            value: 0,\n        },\n        screenSize: {\n            type: 'v2',\n            value: new THREE.Vector2(window.innerWidth, window.innerHeight),\n        }, // Should be updated on screen resize...\n    };\n\n    var material = new THREE.ShaderMaterial({\n        uniforms: this.uniformsOut,\n        vertexShader: GlowVS,\n        fragmentShader: GlowFS,\n        side: THREE.BackSide,\n        blending: THREE.AdditiveBlending,\n        transparent: true,\n        wireframe: false,\n    });\n\n    var geometry = (new THREE.SphereGeometry(1.14, 64, 64)).scale(ellipsoidSizes.x, ellipsoidSizes.y, ellipsoidSizes.z);\n\n    THREE.Mesh.call(this, geometry, material);\n\n    this.uniformsIn = {\n        atmoIN: {\n            type: 'i',\n            value: 1,\n        },\n        screenSize: {\n            type: 'v2',\n            value: new THREE.Vector2(window.innerWidth, window.innerHeight),\n        }, // Should be updated on screen resize...\n    };\n\n    var materialAtmoIn = new THREE.ShaderMaterial({\n        uniforms: this.uniformsIn,\n        vertexShader: GlowVS,\n        fragmentShader: GlowFS,\n        side: THREE.FrontSide,\n        blending: THREE.AdditiveBlending,\n        transparent: true,\n        depthWrite: false,\n    });\n\n    this.atmosphereIN = new THREE.Mesh((new THREE.SphereGeometry(1.002, 64, 64)).scale(ellipsoidSizes.x, ellipsoidSizes.y, ellipsoidSizes.z), materialAtmoIn);\n\n    this.add(this.atmosphereIN);\n}\n\nAtmosphere.prototype = Object.create(THREE.Mesh.prototype);\nAtmosphere.prototype.constructor = Atmosphere;\n\nAtmosphere.prototype._initRealisticLighning = function _initRealisticLighning() {\n    var atmosphere = {\n        Kr: 0.0025,\n        Km: 0.0010,\n        ESun: 20.0,\n        g: -0.950,\n        innerRadius: 6400000,\n        outerRadius: 6700000,\n        wavelength: [0.650, 0.570, 0.475],\n        scaleDepth: 0.25,\n        mieScaleDepth: 0.1,\n    };\n\n    var uniformsSky = {\n        v3LightPosition: { value: LIGHTING_POSITION.clone().normalize() },\n        v3InvWavelength: { value: new THREE.Vector3(1 / Math.pow(atmosphere.wavelength[0], 4), 1 / Math.pow(atmosphere.wavelength[1], 4), 1 / Math.pow(atmosphere.wavelength[2], 4)) },\n        fCameraHeight: { value: 0.0 },\n        fCameraHeight2: { value: 0.0 },\n        fInnerRadius: { value: atmosphere.innerRadius },\n        fInnerRadius2: { value: atmosphere.innerRadius * atmosphere.innerRadius },\n        fOuterRadius: { value: atmosphere.outerRadius },\n        fOuterRadius2: { value: atmosphere.outerRadius * atmosphere.outerRadius },\n        fKrESun: { value: atmosphere.Kr * atmosphere.ESun },\n        fKmESun: { value: atmosphere.Km * atmosphere.ESun },\n        fKr4PI: { value: atmosphere.Kr * 4.0 * Math.PI },\n        fKm4PI: { value: atmosphere.Km * 4.0 * Math.PI },\n        fScale: { value: 1 / (atmosphere.outerRadius - atmosphere.innerRadius) },\n        fScaleDepth: { value: atmosphere.scaleDepth },\n        fScaleOverScaleDepth: { value: 1 / (atmosphere.outerRadius - atmosphere.innerRadius) / atmosphere.scaleDepth },\n        g: { value: atmosphere.g },\n        g2: { value: atmosphere.g * atmosphere.g },\n        nSamples: { value: 3 },\n        fSamples: { value: 3.0 },\n        tDisplacement: { value: new THREE.Texture() },\n        tSkyboxDiffuse: { value: new THREE.Texture() },\n        fNightScale: { value: 1.0 },\n    };\n\n    this.ground = {\n        geometry: new THREE.SphereGeometry(atmosphere.innerRadius, 50, 50),\n        material: new THREE.ShaderMaterial({\n            uniforms: uniformsSky,\n            vertexShader: groundVS,\n            fragmentShader: groundFS,\n            blending: THREE.AdditiveBlending,\n            transparent: true,\n            depthTest: false,\n            depthWrite: false,\n        }),\n    };\n\n    this.ground.mesh = new THREE.Mesh(this.ground.geometry, this.ground.material);\n\n    this.sky = {\n        geometry: new THREE.SphereGeometry(atmosphere.outerRadius, 196, 196),\n        material: new THREE.ShaderMaterial({\n            uniforms: uniformsSky,\n            vertexShader: skyVS,\n            fragmentShader: skyFS,\n        }),\n    };\n\n    this.sky.mesh = new THREE.Mesh(this.sky.geometry, this.sky.material);\n    this.sky.material.side = THREE.BackSide;\n    this.sky.material.transparent = true;\n\n    this.ground.mesh.visible = false;\n    this.sky.mesh.visible = false;\n\n    this.skyDome = new Sky();\n    this.skyDome.mesh.frustumCulled = false;\n    this.skyDome.mesh.material.transparent = true;\n    this.skyDome.mesh.visible = false;\n    this.skyDome.mesh.material.depthWrite = false;\n\n    this.ground.mesh.layers.mask = this.layers.mask;\n    this.sky.mesh.layers.mask = this.layers.mask;\n    this.skyDome.mesh.layers.mask = this.layers.mask;\n    this.add(this.ground.mesh);\n    this.add(this.sky.mesh);\n    this.add(this.skyDome.mesh);\n\n    var effectController = {\n        turbidity: 10,\n        reileigh: 2,\n        mieCoefficient: 0.005,\n        mieDirectionalG: 0.8,\n        luminance: 1,\n        inclination: 0.49, // elevation / inclination\n        azimuth: 0.25, // Facing front,\n        sun: !true,\n    };\n\n    var uniforms = this.skyDome.uniforms;\n    uniforms.turbidity.value = effectController.turbidity;\n    uniforms.reileigh.value = effectController.reileigh;\n    uniforms.luminance.value = effectController.luminance;\n    uniforms.mieCoefficient.value = effectController.mieCoefficient;\n    uniforms.mieDirectionalG.value = effectController.mieDirectionalG;\n    uniforms.up.value = new THREE.Vector3(); // no more necessary, estimate normal from cam..\n};\n\nAtmosphere.prototype.setRealisticOn = function setRealisticOn(bool) {\n    if (bool && !this.sky) {\n        this._initRealisticLighning();\n    }\n    this.realistic = bool;\n    this.material.visible = !this.realistic;\n    this.atmosphereIN.visible = !this.realistic;\n    this.ground.mesh.visible = this.realistic;\n    this.sky.mesh.visible = this.realistic;\n    this.skyDome.mesh.visible = this.realistic;\n};\n\nAtmosphere.prototype.updateLightingPos = function updateLightingPos(pos) {\n    if (this.realistic) {\n        this.ground.material.uniforms.v3LightPosition.value = pos.clone().normalize();\n        this.sky.material.uniforms.v3LightPosition.value = pos.clone().normalize();\n        this.skyDome.uniforms.sunPosition.value.copy(pos);\n    }\n};\n\nexport default Atmosphere;\n","/**\n * Generated On: 2016-02-25\n * Class: CoordStars\n * Description: get coord of stars like earth...\n */\nimport Coordinates from './Coordinates';\n\nconst CoordStars = {\n\n    getSunPosition() {\n        const m = Math;\n        const PI = m.PI;\n        const sin = m.sin;\n        const cos = m.cos;\n        const tan = m.tan;\n        const asin = m.asin;\n        const atan = m.atan2;\n\n        const rad = PI / 180;\n        const dayMs = 1000 * 60 * 60 * 24;\n        const J1970 = 2440588;\n        const J2000 = 2451545;\n        const e = rad * 23.4397; // obliquity of the Earth\n\n        function toJulian(date) {\n            return date.valueOf() / dayMs - 0.5 + J1970;\n        }\n\n        function toDays(date) {\n            return toJulian(date) - J2000;\n        }\n\n        function getRightAscension(l, b) {\n            return atan(sin(l) * cos(e) - tan(b) * sin(e), cos(l));\n        }\n\n        function getDeclination(l, b) {\n            return asin(sin(b) * cos(e) + cos(b) * sin(e) * sin(l));\n        }\n\n        function getAzimuth(H, phi, dec) {\n            return atan(sin(H), cos(H) * sin(phi) - tan(dec) * cos(phi));\n        }\n\n        function getAltitude(H, phi, dec) {\n            return asin(sin(phi) * sin(dec) + cos(phi) * cos(dec) * cos(H));\n        }\n\n        function getSiderealTime(d, lw) {\n            return rad * (280.16 + 360.9856235 * d) - lw;\n        }\n\n        function getSolarMeanAnomaly(d) {\n            return rad * (357.5291 + 0.98560028 * d);\n        }\n\n        function getEquationOfCenter(M) {\n            return rad * (1.9148 * sin(M) + 0.0200 * sin(2 * M) + 0.0003 * sin(3 * M));\n        }\n\n        function getEclipticLongitude(M, C) {\n            var P = rad * 102.9372; // perihelion of the Earth\n            return M + C + P + PI;\n        }\n\n        return function getSunPosition(date, lat, lon) {\n            const lw = rad * -lon;\n            const phi = rad * lat;\n            const d = toDays(date);\n            const M = getSolarMeanAnomaly(d);\n            const C = getEquationOfCenter(M);\n            const L = getEclipticLongitude(M, C);\n            const D = getDeclination(L, 0);\n            const A = getRightAscension(L, 0);\n            const t = getSiderealTime(d, lw);\n            const H = t - A;\n\n            return {\n                EclipticLongitude: L,\n                declinaison: D,\n                ascension: A,\n                H,\n                SiderealTime: t,\n                altitude: getAltitude(H, phi, D),\n                azimuth: getAzimuth(H, phi, D) + PI / 2, // + PI// - PI/2 // origin: north !!! not like original Mourner code but more classical ref\n            };\n        };\n    },\n\n    // Return scene coordinate ({x,y,z}) of sun\n    getSunPositionInScene(date, lat, lon) {\n        var sun = CoordStars.getSunPosition()(date, lat, lon);\n        var dayMilliSec = 24 * 3600000;\n        var longitude = sun.ascension + ((date % dayMilliSec) / dayMilliSec) * -360 + 180; // cause midday\n        var coSunCarto = new Coordinates('EPSG:4326', longitude, lat, 50000000)\n            .as('EPSG:4978').xyz();\n\n        return coSunCarto;\n    },\n\n\n};\n\nexport default CoordStars;\n","import * as THREE from 'three';\n\nimport View, { VIEW_EVENTS } from '../View';\nimport { MAIN_LOOP_EVENTS } from '../MainLoop';\nimport { COLOR_LAYERS_ORDER_CHANGED } from '../../Renderer/ColorLayersOrdering';\nimport RendererConstant from '../../Renderer/RendererConstant';\nimport GlobeControls from '../../Renderer/ThreeExtended/GlobeControls';\n\nimport GlobeLayer from './Globe/GlobeLayer';\nimport Atmosphere from './Globe/Atmosphere';\nimport CoordStars from '../Geographic/CoordStars';\n\nimport Coordinates, { C, ellipsoidSizes } from '../Geographic/Coordinates';\n\n/**\n * Fires when the view is completely loaded. Controls and view's functions can be called then.\n * @event GlobeView#initialized\n * @property target {view} dispatched on view\n * @property type {string} initialized\n */\n/**\n * Fires when a layer is added\n * @event GlobeView#layer-added\n * @property layerId {string} the id of the layer\n * @property target {view} dispatched on view\n * @property type {string} layers-added\n */\n/**\n * Fires when a layer is removed\n * @event GlobeView#layer-removed\n * @property layerId {string} the id of the layer\n * @property target {view} dispatched on view\n * @property type {string} layers-added\n */\n/**\n * Fires when the layers oder has changed\n * @event GlobeView#layers-order-changed\n * @property new {object}\n * @property new.sequence {array}\n * @property new.sequence.0 {number} the new layer at position 0\n * @property new.sequence.1 {number} the new layer at position 1\n * @property new.sequence.2 {number} the new layer at position 2\n * @property previous {object}\n * @property previous.sequence {array}\n * @property previous.sequence.0 {number} the previous layer at position 0\n * @property previous.sequence.1 {number} the previous layer at position 1\n * @property previous.sequence.2 {number} the previous layer at position 2\n * @property target {view} dispatched on view\n * @property type {string} layers-order-changed\n */\n\n\n/**\n * Globe's EVENT\n * @property GLOBE_INITIALIZED {string} emit one time when globe is initialized\n * @property LAYER_ADDED {string} emit when layer id added in viewer\n * @property LAYER_REMOVED {string} emit when layer id removed in viewer\n * @property COLOR_LAYERS_ORDER_CHANGED {string} emit when  color layers order change\n */\n\nexport const GLOBE_VIEW_EVENTS = {\n    GLOBE_INITIALIZED: 'initialized',\n    LAYER_ADDED: 'layer-added',\n    LAYER_REMOVED: 'layer-removed',\n    COLOR_LAYERS_ORDER_CHANGED,\n};\n\nexport function createGlobeLayer(id, options = {}) {\n    console.warn('createGlobeLayer is deprecated, use the GlobeLayer class instead.');\n    return new GlobeLayer(id, options.object3d, options);\n}\n\n/**\n * Creates the viewer Globe (the globe of iTowns).\n * The first parameter is the coordinates on wich the globe will be centered at the initialization.\n * The second one is the HTML div in wich the scene will be created.\n * @constructor\n * @example view = new GlobeView(viewer, positionOnGlobe);\n * // positionOnGlobe in latitude, longitude and altitude\n * @augments View\n * @param {HTMLDivElement} viewerDiv - Where to instanciate the Three.js scene in the DOM\n * @param {object} coordCarto\n * @param {object=} options - see {@link View}\n */\nfunction GlobeView(viewerDiv, coordCarto, options = {}) {\n    THREE.Object3D.DefaultUp.set(0, 0, 1);\n    // Setup View\n    View.call(this, 'EPSG:4978', viewerDiv, options);\n\n    // Configure camera\n    const positionCamera = new C.EPSG_4326(\n        coordCarto.longitude,\n        coordCarto.latitude,\n        coordCarto.altitude);\n\n    this.camera.camera3D.near = Math.max(15.0, 0.000002352 * ellipsoidSizes.x);\n    this.camera.camera3D.far = ellipsoidSizes.x * 10;\n\n    const tileLayer = new GlobeLayer('globe', options.object3d, options);\n\n    const sun = new THREE.DirectionalLight();\n    sun.position.set(-0.5, 0, 1);\n    sun.updateMatrixWorld(true);\n    tileLayer.object3d.add(sun);\n\n    this.addLayer(tileLayer);\n\n    // Atmosphere\n    this.atmosphere = new Atmosphere();\n\n    const atmosphereLayer = this.mainLoop.gfxEngine.getUniqueThreejsLayer();\n    this.atmosphere.traverse((obj) => { obj.layers.set(atmosphereLayer); });\n    this.camera.camera3D.layers.enable(atmosphereLayer);\n\n    tileLayer.object3d.add(this.atmosphere);\n    this.atmosphere.updateMatrixWorld(true);\n\n\n    // Configure controls\n    const positionTargetCamera = positionCamera.clone();\n    positionTargetCamera.setAltitude(0);\n\n    if (options.noControls) {\n        this.camera.setPosition(positionCamera);\n        this.camera.camera3D.lookAt(positionTargetCamera.as('EPSG:4978').xyz());\n    } else {\n        this.controls = new GlobeControls(this, positionTargetCamera, coordCarto.altitude, ellipsoidSizes.x);\n        this.controls.handleCollision = typeof (options.handleCollision) !== 'undefined' ? options.handleCollision : true;\n    }\n\n    const mfogDistance = ellipsoidSizes.x * 160.0;\n    this._renderState = RendererConstant.FINAL;\n    this._fullSizeDepthBuffer = null;\n\n    const renderer = this.mainLoop.gfxEngine.renderer;\n\n    const coordCam = new Coordinates(this.referenceCrs, 0, 0, 0);\n    const coordGeoCam = new C.EPSG_4326();\n    const skyBaseColor = new THREE.Color(0x93d5f8);\n    const colorSky = new THREE.Color();\n    const spaceColor = new THREE.Color(0x030508);\n    const limitAlti = 600000;\n\n    this.addFrameRequester(MAIN_LOOP_EVENTS.BEFORE_RENDER, () => {\n        if (this._fullSizeDepthBuffer != null) {\n            // clean depth buffer\n            this._fullSizeDepthBuffer = null;\n        }\n    });\n\n    this.addFrameRequester(MAIN_LOOP_EVENTS.AFTER_CAMERA_UPDATE, () => {\n        const v = new THREE.Vector3();\n        v.setFromMatrixPosition(tileLayer.object3d.matrixWorld);\n        var len = v.distanceTo(this.camera.camera3D.position);\n        v.setFromMatrixScale(tileLayer.object3d.matrixWorld);\n\n        // Compute fog distance, this function makes it possible to have a shorter distance\n        // when the camera approaches the ground\n        this.fogDistance = mfogDistance * Math.pow((len - ellipsoidSizes.x * 0.99) * 0.25 / ellipsoidSizes.x, 1.5);\n\n        // get altitude camera\n        coordCam.set(this.referenceCrs, this.camera.camera3D.position).as('EPSG:4326', coordGeoCam);\n        const altitude = coordGeoCam.altitude();\n\n        // If the camera altitude is below limitAlti,\n        // we interpolate between the sky color and the space color\n        if (altitude < limitAlti) {\n            const t = (limitAlti - altitude) / limitAlti;\n            colorSky.copy(spaceColor).lerp(skyBaseColor, t);\n            renderer.setClearColor(colorSky, renderer.getClearAlpha());\n        } else {\n            renderer.setClearColor(spaceColor, renderer.getClearAlpha());\n        }\n    });\n\n    this.tileLayer = tileLayer;\n\n    const fn = () => {\n        this.removeEventListener(VIEW_EVENTS.LAYERS_INITIALIZED, fn);\n        this.dispatchEvent({ type: GLOBE_VIEW_EVENTS.GLOBE_INITIALIZED });\n    };\n\n    this.addEventListener(VIEW_EVENTS.LAYERS_INITIALIZED, fn);\n}\n\nGlobeView.prototype = Object.create(View.prototype);\nGlobeView.prototype.constructor = GlobeView;\n\nGlobeView.prototype.addLayer = function addLayer(layer) {\n    if (!layer) {\n        return new Promise((resolve, reject) => reject(new Error('layer is undefined')));\n    }\n    if (layer.type == 'color') {\n        const colorLayerCount = this.getLayers(l => l.type === 'color').length;\n        layer.sequence = colorLayerCount;\n    } else if (layer.type == 'elevation') {\n        if (layer.source.protocol === 'wmts' && layer.source.tileMatrixSet !== 'WGS84G') {\n            throw new Error('Only WGS84G tileMatrixSet is currently supported for WMTS elevation layers');\n        }\n    }\n    const layerId = layer.id;\n    const layerPromise = View.prototype.addLayer.call(this, layer, this.tileLayer);\n    this.dispatchEvent({\n        type: GLOBE_VIEW_EVENTS.LAYER_ADDED,\n        layerId,\n    });\n\n    return layerPromise;\n};\n\n/**\n * Removes a specific imagery layer from the current layer list. This removes layers inserted with attach().\n * @example\n * view.removeLayer('layerId');\n * @param      {string}   layerId      The identifier\n * @return     {boolean}\n */\nGlobeView.prototype.removeLayer = function removeImageryLayer(layerId) {\n    const layer = this.getLayers(l => l.id === layerId)[0];\n    if (layer && layer.type === 'color' && this.tileLayer.detach(layer)) {\n        var cO = function cO(object) {\n            if (object.removeColorLayer) {\n                object.removeColorLayer(layerId);\n            }\n        };\n\n        for (const root of this.tileLayer.level0Nodes) {\n            root.traverse(cO);\n        }\n        const imageryLayers = this.getLayers(l => l.type === 'color');\n        for (const color of imageryLayers) {\n            if (color.sequence > layer.sequence) {\n                color.sequence--;\n            }\n        }\n\n        this.notifyChange(this.tileLayer);\n        this.dispatchEvent({\n            type: GLOBE_VIEW_EVENTS.LAYER_REMOVED,\n            layerId,\n        });\n\n        return true;\n    } else {\n        throw new Error(`${layerId} isn't color layer`);\n    }\n};\n\nGlobeView.prototype.selectNodeAt = function selectNodeAt(mouse) {\n    const picked = this.tileLayer.pickObjectsAt(this, mouse);\n    const selectedId = picked.length ? picked[0].object.id : undefined;\n\n    for (const n of this.tileLayer.level0Nodes) {\n        n.traverse((node) => {\n            // only take of selectable nodes\n            if (node.setSelected) {\n                node.setSelected(node.id === selectedId);\n\n                if (node.id === selectedId) {\n                    // eslint-disable-next-line no-console\n                    console.info(node);\n                }\n            }\n        });\n    }\n\n    this.notifyChange();\n};\n\nGlobeView.prototype.setRealisticLightingOn = function setRealisticLightingOn(value) {\n    const coSun = CoordStars.getSunPositionInScene(new Date().getTime(), 48.85, 2.35).normalize();\n\n    this.lightingPos = coSun.normalize();\n\n    const lighting = this.tileLayer.lighting;\n    lighting.enable = value;\n    lighting.position = coSun;\n\n    this.atmosphere.setRealisticOn(value);\n    this.atmosphere.updateLightingPos(coSun);\n\n    this.updateMaterialUniform('lightingEnabled', value);\n    this.updateMaterialUniform('lightPosition', coSun);\n    this.notifyChange(this.tileLayer);\n};\n\nGlobeView.prototype.setLightingPos = function setLightingPos(pos) {\n    const lightingPos = pos || CoordStars.getSunPositionInScene(this.ellipsoid, new Date().getTime(), 48.85, 2.35);\n\n    this.updateMaterialUniform('lightPosition', lightingPos.clone().normalize());\n    this.notifyChange(this.tileLayer);\n};\n\nGlobeView.prototype.updateMaterialUniform = function updateMaterialUniform(uniformName, value) {\n    for (const n of this.tileLayer.level0Nodes) {\n        n.traverse((obj) => {\n            if (!obj.material || !obj.material.uniforms) {\n                return;\n            }\n            if (uniformName in obj.material.uniforms) {\n                obj.material.uniforms[uniformName].value = value;\n            }\n        });\n    }\n};\n\nexport default GlobeView;\n","import * as THREE from 'three';\nimport OBB from '../../../Renderer/ThreeExtended/OBB';\nimport Coordinates from '../../Geographic/Coordinates';\nimport Extent from '../../Geographic/Extent';\n\nfunction PlanarTileBuilder() {\n    this.tmp = {\n        coords: new Coordinates('EPSG:4326', 0, 0),\n        position: new THREE.Vector3(),\n        normal: new THREE.Vector3(0, 0, 1),\n    };\n\n    this.type = 'p';\n}\n\nPlanarTileBuilder.prototype.constructor = PlanarTileBuilder;\n\n// prepare params\n// init projected object -> params.projected\nPlanarTileBuilder.prototype.Prepare = function Prepare(params) {\n    params.nbRow = Math.pow(2.0, params.zoom + 1.0);\n    params.projected = new THREE.Vector3();\n};\n\n\n// get center tile in cartesian 3D\nconst center = new THREE.Vector3();\nPlanarTileBuilder.prototype.Center = function Center(extent) {\n    extent.center(this.tmp.coords);\n    center.set(this.tmp.coords.x(), this.tmp.coords.y(), 0);\n    return center;\n};\n\n// get position 3D cartesian\nPlanarTileBuilder.prototype.VertexPosition = function VertexPosition(params) {\n    this.tmp.position.set(params.projected.x, params.projected.y, 0);\n    return this.tmp.position;\n};\n\n// get normal for last vertex\nPlanarTileBuilder.prototype.VertexNormal = function VertexNormal() {\n    return this.tmp.normal;\n};\n\n// coord u tile to projected\nPlanarTileBuilder.prototype.uProjecte = function uProjecte(u, params) {\n    params.projected.x = params.extent.west() + u * (params.extent.east() - params.extent.west());\n};\n\n// coord v tile to projected\nPlanarTileBuilder.prototype.vProjecte = function vProjecte(v, params) {\n    params.projected.y = params.extent.south() + v * (params.extent.north() - params.extent.south());\n};\n\n// get oriented bounding box of tile\nPlanarTileBuilder.prototype.OBB = function OBBFn(boundingBox) {\n    return new OBB(boundingBox.min, boundingBox.max);\n};\n\nconst quaternion = new THREE.Quaternion();\nPlanarTileBuilder.prototype.computeSharableExtent = function fnComputeSharableExtent(extent) {\n    // compute sharable extent to pool the geometries\n    // the geometry in common extent is identical to the existing input\n    // with a translation\n    const sharableExtent = new Extent(extent.crs(), 0, Math.abs(extent.west() - extent.east()), 0, Math.abs(extent.north() - extent.south()));\n    return {\n        sharableExtent,\n        quaternion,\n        position: this.Center(extent).clone(),\n    };\n};\n\nexport default PlanarTileBuilder;\n","import * as THREE from 'three';\n\nimport { l_ELEVATION } from '../../../Renderer/LayeredMaterialConstants';\nimport TiledGeometryLayer from '../../../Layer/TiledGeometryLayer';\nimport PlanarTileBuilder from './PlanarTileBuilder';\n\nclass PlanarLayer extends TiledGeometryLayer {\n    /**\n     * A {@link TiledGeometryLayer} to use with a {@link PlanarView}. It has\n     * specific method for updating and subdivising its grid.\n     *\n     * @constructor\n     * @extends TiledGeometryLayer\n     *\n     * @param {string} id - The id of the layer, that should be unique. It is\n     * not mandatory, but an error will be emitted if this layer is added a\n     * {@link View} that already has a layer going by that id.\n     * @param {Extent} extent - The extent to define the layer within.\n     * @param {THREE.Object3d} [object3d=THREE.Group] - The object3d used to\n     * contain the geometry of the TiledGeometryLayer. It is usually a\n     * <code>THREE.Group</code>, but it can be anything inheriting from a\n     * <code>THREE.Object3d</code>.\n     * @param {Object} [config] - Optional configuration, all elements in it\n     * will be merged as is in the layer. For example, if the configuration\n     * contains three elements <code>name, protocol, extent</code>, these\n     * elements will be available using <code>layer.name</code> or something\n     * else depending on the property name.\n     * @param {number} [config.maxSubdivisionLevel=5] - Maximum subdivision\n     * level for this tiled layer.\n     * @param {number} [config.maxDeltaElevationLevel=4] - Maximum delta between\n     * two elevations tile.\n     *\n     * @throws {Error} <code>object3d</code> must be a valid\n     * <code>THREE.Object3d</code>.\n     */\n    constructor(id, extent, object3d, config = {}) {\n        super(id, object3d || new THREE.Group(), [extent], new PlanarTileBuilder(), config);\n        this.extent = extent;\n    }\n\n    // eslint-disable-next-line\n    culling(node, camera) {\n        return !camera.isBox3Visible(node.obb.box3D, node.obb.matrixWorld);\n    }\n\n    /**\n     * Test the subdvision of a node, compared to this layer.\n     *\n     * @param {Object} context - The context of the update; see the {@link\n     * MainLoop} for more informations.\n     * @param {PlanarLayer} layer - This layer, parameter to be removed.\n     * @param {TileMesh} node - The node to test.\n     *\n     * @return {boolean} - True if the node is subdivisable, otherwise false.\n     */\n    subdivision(context, layer, node) {\n        const maxLevel = this.maxSubdivisionLevel || 5;\n        const maxDeltaElevationLevel = this.maxDeltaElevationLevel || 4;\n\n        if (maxLevel <= node.level) {\n            return false;\n        }\n\n        // Prevent to subdivise the node if the current elevation level\n        // we must avoid a tile, with level 20, inherits a level 3 elevation texture.\n        // The induced geometric error is much too large and distorts the SSE\n        const currentTexture = node.material.textures[l_ELEVATION][0];\n        if (currentTexture.extent) {\n            const offsetScale = node.material.offsetScale[l_ELEVATION][0];\n            const ratio = offsetScale.z;\n            // ratio is node size / texture size\n            if (ratio < 1 / Math.pow(2, maxDeltaElevationLevel)) {\n                return false;\n            }\n        }\n\n        const onScreen = context.camera.box3SizeOnScreen(node.obb.box3D, node.matrixWorld);\n\n        // onScreen.x/y/z are [-1, 1] so divide by 2\n        // (so x = 0.4 means the object width on screen is 40% of the total screen width)\n        const dim = {\n            x: 0.5 * (onScreen.max.x - onScreen.min.x) * context.camera.width,\n            y: 0.5 * (onScreen.max.y - onScreen.min.y) * context.camera.height,\n        };\n\n        // subdivide if on-screen width (and resp. height) is bigger than 30% of the screen width (resp. height)\n        // TODO: the 30% value is arbitrary and needs to be configurable by the user\n        // TODO: we might want to use texture resolution here as well\n        return (dim.x >= 256 && dim.y >= 256);\n    }\n}\n\nexport default PlanarLayer;\n","import * as THREE from 'three';\n\nimport View from '../View';\nimport { MAIN_LOOP_EVENTS } from '../MainLoop';\nimport RendererConstant from '../../Renderer/RendererConstant';\nimport CameraUtils from '../../utils/CameraUtils';\n\nimport PlanarLayer from './Planar/PlanarLayer';\n\nexport function createPlanarLayer(id, extent, options) {\n    console.warn('createPlanarLayer is deprecated, use the PlanarLayer class instead.');\n    return new PlanarLayer(id, extent, options.object3d, options);\n}\n\nfunction PlanarView(viewerDiv, extent, options = {}) {\n    THREE.Object3D.DefaultUp.set(0, 0, 1);\n\n    // Setup View\n    View.call(this, extent.crs(), viewerDiv, options);\n\n    // Configure camera\n    const dim = extent.dimensions();\n    const max = Math.max(dim.x, dim.y);\n    const camera3D = this.camera.camera3D;\n    camera3D.near = 0.1;\n    camera3D.far = 2 * max;\n    this.camera.camera3D.updateProjectionMatrix();\n\n    const tileLayer = new PlanarLayer('planar', extent, options.object3d, options);\n\n    this.addLayer(tileLayer);\n\n    const p = { coord: extent.center(), range: max, tilt: 20, heading: 0 };\n    CameraUtils.transformCameraToLookAtTarget(this, camera3D, p);\n\n    this._renderState = RendererConstant.FINAL;\n    this._fullSizeDepthBuffer = null;\n    this.addFrameRequester(MAIN_LOOP_EVENTS.BEFORE_RENDER, () => {\n        if (this._fullSizeDepthBuffer != null) {\n            // clean depth buffer\n            this._fullSizeDepthBuffer = null;\n        }\n    });\n\n    this.tileLayer = tileLayer;\n}\n\nPlanarView.prototype = Object.create(View.prototype);\nPlanarView.prototype.constructor = PlanarView;\n\nPlanarView.prototype.addLayer = function addLayer(layer) {\n    return View.prototype.addLayer.call(this, layer, this.tileLayer);\n};\n\nPlanarView.prototype.selectNodeAt = function selectNodeAt(mouse) {\n    const picked = this.tileLayer.pickObjectsAt(this, mouse);\n    const selectedId = picked.length ? picked[0].object.id : undefined;\n\n    for (const n of this.tileLayer.level0Nodes) {\n        n.traverse((node) => {\n            // only take of selectable nodes\n            if (node.setSelected) {\n                node.setSelected(node.id === selectedId);\n\n                if (node.id === selectedId) {\n                    // eslint-disable-next-line no-console\n                    console.info(node);\n                }\n            }\n        });\n    }\n\n    this.notifyChange();\n};\n\nexport default PlanarView;\n","/**\n * Generated On: 2016-07-07\n * Class: GpxParser\n * Description: Parse Gpx file to get [lat, lon, alt]\n */\n\nimport * as THREE from 'three';\nimport Line from 'three.meshline';\nimport Coordinates from '../Core/Geographic/Coordinates';\n\nfunction _gpxToWayPointsArray(gpxXML) {\n    return gpxXML.getElementsByTagName('wpt');\n}\n\nfunction _gGpxToWTrackPointsArray(gpxXML) {\n    return gpxXML.getElementsByTagName('trkpt');\n}\n\nfunction _gGpxToWTrackSegmentsArray(gpxXML) {\n    return gpxXML.getElementsByTagName('trkseg');\n}\n\nfunction _gpxPtToCartesian(pt, crs) {\n    var longitude = Number(pt.attributes.lon.nodeValue);\n    var latitude = Number(pt.attributes.lat.nodeValue);\n    // TODO: get elevation with terrain\n    const elem = pt.getElementsByTagName('ele')[0];\n    const elevation = elem ? Number(elem.childNodes[0].nodeValue) : 0;\n\n    return new Coordinates('EPSG:4326', longitude, latitude, elevation).as(crs).xyz();\n}\n\nconst geometryPoint = new THREE.BoxGeometry(1, 1, 80);\nconst materialPoint = new THREE.MeshBasicMaterial({ color: 0xffffff });\nconst positionCamera = new THREE.Vector3();\n\nfunction getDistance(object, camera) {\n    const point = object.geometry.boundingSphere.center.clone().applyMatrix4(object.matrixWorld);\n    positionCamera.setFromMatrixPosition(camera.matrixWorld);\n    return positionCamera.distanceTo(point);\n}\n\nfunction updatePointScale(renderer, scene, camera) {\n    const distance = getDistance(this, camera);\n    const scale = Math.max(2, Math.min(100, distance / renderer.getSize().height));\n    this.scale.set(scale, scale, scale);\n    this.updateMatrixWorld();\n}\n\nfunction _gpxToWayPointsMesh(gpxXML, crs) {\n    var wayPts = _gpxToWayPointsArray(gpxXML);\n\n    if (wayPts.length) {\n        const points = new THREE.Group();\n\n        gpxXML.center = gpxXML.center || _gpxPtToCartesian(wayPts[0], crs);\n\n        const lookAt = gpxXML.center.clone().negate();\n\n        for (const wayPt of wayPts) {\n            const position = _gpxPtToCartesian(wayPt, crs).sub(gpxXML.center);\n            // use Pin to make it more visible\n            const mesh = new THREE.Mesh(geometryPoint, materialPoint);\n            mesh.position.copy(position);\n            mesh.lookAt(lookAt);\n\n            // Scale pin in function of distance\n            mesh.onBeforeRender = updatePointScale;\n\n            points.add(mesh);\n        }\n        return points;\n    } else {\n        return null;\n    }\n}\n\nfunction updatePath(renderer, scene, camera) {\n    const distance = getDistance(this, camera);\n    this.material.depthTest = distance < this.geometry.boundingSphere.radius * 2;\n    const size = renderer.getSize();\n    this.material.uniforms.resolution.value.set(size.width, size.height);\n}\n\nfunction _gpxToWTrackPointsMesh(gpxXML, options) {\n    var trackSegs = _gGpxToWTrackSegmentsArray(gpxXML);\n    var masterObject = new THREE.Object3D();\n\n    if (trackSegs.length) {\n        for (const trackSeg of trackSegs) {\n            var trackPts = _gGpxToWTrackPointsArray(trackSeg);\n\n            if (trackPts.length) {\n                gpxXML.center = gpxXML.center || _gpxPtToCartesian(trackPts[0], options.crs);\n\n                var geometry = new THREE.Geometry();\n\n                for (const trackPt of trackPts) {\n                    const point = _gpxPtToCartesian(trackPt, options.crs).sub(gpxXML.center);\n                    geometry.vertices.push(point);\n                }\n\n                var line = new Line.MeshLine();\n                line.setGeometry(geometry);\n                // Due to limitations in the ANGLE layer,\n                // with the WebGL renderer on Windows platforms\n                // lineWidth will always be 1 regardless of the set value\n                // Use MeshLine to fix it\n                var material = new Line.MeshLineMaterial({\n                    lineWidth: options.lineWidth || 12,\n                    sizeAttenuation: 0,\n                    color: new THREE.Color(0xFF0000),\n                });\n\n                const pathMesh = new THREE.Mesh(line.geometry, material);\n                // update size screen uniform\n                // update depth test for visibilty path, because of the proximity of the terrain and gpx mesh\n                pathMesh.onBeforeRender = updatePath;\n                masterObject.add(pathMesh);\n            }\n        }\n        return masterObject;\n    } else {\n        return null;\n    }\n}\n\nfunction _gpxToMesh(gpxXML, options = {}) {\n    if (!gpxXML) {\n        return undefined;\n    }\n\n    if (options.enablePin == undefined) {\n        options.enablePin = true;\n    }\n\n    var gpxMesh = new THREE.Object3D();\n\n    // Getting the track points\n    var trackPts = _gpxToWTrackPointsMesh(gpxXML, options);\n\n    if (trackPts) {\n        gpxMesh.add(trackPts);\n    }\n\n    if (options.enablePin) {\n        // Getting the waypoint points\n        var wayPts = _gpxToWayPointsMesh(gpxXML, options.crs);\n\n        if (wayPts) {\n            gpxMesh.add(wayPts);\n        }\n    }\n\n    gpxMesh.position.copy(gpxXML.center);\n    gpxMesh.updateMatrixWorld();\n    // gpxMesh is static data, it doens't need matrix update\n    gpxMesh.matrixAutoUpdate = false;\n\n    return gpxMesh;\n}\n\nexport default {\n    /** @module GpxParser */\n    /** Parse gpx file and convert to THREE.Mesh\n     * @function parse\n     * @param {string} xml - the gpx file or xml.\n     * @param {Object=} options - additional properties.\n     * @param {string} options.crs - the default CRS of Three.js coordinates. Should be a cartesian CRS.\n     * @param {boolean=} [options.enablePin=true] - draw pin for way points.\n     * @param {NetworkOptions=} options.networkOptions - options for fetching resources over network.\n     * @param {number=} [options.lineWidth=12] - set line width to track line.\n     * @return {THREE.Mesh} - a promise that resolves with a Three.js Mesh (see {@link https://threejs.org/docs/#api/objects/Mesh}).\n     * @example\n     * // How to add a gpx object\n     * itowns.GpxParser.parse(file, { crs: viewer.referenceCrs }).then((gpx) => {\n     *      if (gpx) {\n     *         viewer.scene.add(gpx);\n     *         viewer.notifyChange();\n     *      }\n     * });\n     *\n     */\n    parse(xml, options = {}) {\n        if (!(xml instanceof XMLDocument)) {\n            xml = new window.DOMParser().parseFromString(xml, 'text/xml');\n        }\n        return Promise.resolve(_gpxToMesh(xml, options));\n    },\n};\n","import * as THREE from 'three';\n\n/**\n * @classdesc OrientedImageCamera is a ThreeJs camera adapted to photogrammetric description.\n * So we can build a ThreeJs perspective camera from size and focal information.\n */\nclass OrientedImageCamera extends THREE.PerspectiveCamera {\n    /**\n     * @constructor\n     * @param {number|Vector2} size - image size in pixels (default: x=1024, y=x)\n     * @param {number|Vector2} focal - focal length in pixels (default: x=1024, y=x)\n     * @param {Vector2} center - principal point in pixels (default: size/2)\n     * @param {number} near - Camera frustum near plane (default: see THREE.PerspectiveCamera).\n     * @param {number} far - Camera frustum far plane (default: see THREE.PerspectiveCamera).\n     * @param {number} skew - shear transform parameter (default: 0)\n     * @param {number} aspect - aspect ratio of the camera (default: size.x/size.y).\n     */\n    constructor(size = 1024, focal = 1024, center, near = 0.1, far = 1000, skew, aspect) {\n        size = size.isVector2 ? size : new THREE.Vector2(size, size);\n        aspect = aspect || size.x / size.y;\n        super(undefined, aspect, near, far);\n        this.size = size;\n        this.focal = focal.isVector2 ? focal : new THREE.Vector2(focal, focal);\n        this.center = center || size.clone().multiplyScalar(0.5);\n        this.skew = skew || 0;\n        Object.defineProperty(this, 'fov', {\n            get: () => Math.atan2(this.size.y, 2 * this.focal.y) * 360 / Math.PI,\n            // setting the fov overwrites focal.x and focal.y\n            set: (fov) => {\n                var focal = 0.5 * this.size.y / Math.tan(fov * Math.PI / 360);\n                this.focal.x = focal;\n                this.focal.y = focal;\n            },\n        });\n        this.updateProjectionMatrix();\n    }\n\n    // we override PerspectiveCamera.updateProjectionMatrix to\n    // update the projection matrix depending on other variables\n    // focal, center and size...\n    updateProjectionMatrix() {\n        if (!this.focal) {\n            return;\n        }\n        const near = this.near;\n        const sx = near / this.focal.x;\n        const sy = near / this.focal.y;\n        const left = -sx * this.center.x;\n        const bottom = -sy * this.center.y;\n        const right = left + sx * this.size.x;\n        const top = bottom + sy * this.size.y;\n        this.projectionMatrix.makePerspective(left, right, top, bottom, near, this.far);\n        this.projectionMatrix.elements[4] = 2 * this.skew / this.size.x;\n\n        // take zoom and aspect into account\n        const textureAspect = this.size.x / this.size.y;\n        const aspectRatio = this.aspect / textureAspect;\n        const zoom = new THREE.Vector3(this.zoom, this.zoom, 1);\n        if (aspectRatio > 1) {\n            zoom.x /= aspectRatio;\n        } else {\n            zoom.y *= aspectRatio;\n        }\n        this.projectionMatrix.scale(zoom);\n    }\n\n    copy(source, recursive) {\n        super.copy(source, recursive);\n        this.size = source.size.clone();\n        this.focal = source.focal.clone();\n        this.center = source.center.clone();\n        this.skew = source.skew;\n        return this;\n    }\n}\n\nexport default OrientedImageCamera;\n","import * as THREE from 'three';\nimport OrientedImageCamera from '../Renderer/OrientedImageCamera';\n\n/**\n * The CameraCalibrationParser module provide a [parse]{@link module:CameraCalibrationParser.parse}\n * method that takes a JSON array of camera calibrations in and yields an array of {@link OrientedImageCamera}\n *\n * @module CameraCalibrationParser\n */\n\nTHREE.Matrix4.prototype.setMatrix3 = function setMatrix3(m) {\n    this.elements[0] = m.elements[0];\n    this.elements[1] = m.elements[1];\n    this.elements[2] = m.elements[2];\n    this.elements[4] = m.elements[3];\n    this.elements[5] = m.elements[4];\n    this.elements[6] = m.elements[5];\n    this.elements[8] = m.elements[6];\n    this.elements[9] = m.elements[7];\n    this.elements[10] = m.elements[8];\n    return this;\n};\n\nconst matrix3 = new THREE.Matrix3();\n// the json format encodes the following transformation:\n// extrinsics: p_local = rotation * (p_world - position)\n// intrinsics: p_pixel = projection * p_local\n// distortion: p_raw = distortion(p_pixel)\nfunction parseCalibration(calibration, options) {\n    // parse intrinsics\n    const proj = calibration.projection;\n    const size = new THREE.Vector2().fromArray(calibration.size);\n    const focal = new THREE.Vector2(proj[0], proj[4]);\n    const center = new THREE.Vector2(proj[2], proj[5]);\n    const skew = proj[1];\n    const camera = new OrientedImageCamera(size, focal, center, options.near, options.far, skew);\n\n    // parse extrinsics: Object3d.matrix is from local to world\n    // p_world = position + transpose(rotation) * p_local\n    camera.position.fromArray(calibration.position);\n    // calibration.rotation is row-major but fromArray expects a column-major array, yielding the transposed matrix\n    const rotationInverse = matrix3.fromArray(calibration.rotation);\n    camera.matrix.setMatrix3(rotationInverse);\n    // local axes for cameras is (X right, Y up, Z back) rather than (X right, Y down, Z front)\n    camera.scale.set(1, -1, -1);\n    camera.quaternion.setFromRotationMatrix(camera.matrix);\n    camera.matrix.compose(camera.position, camera.quaternion, camera.scale);\n\n    // parse distortion\n    if (calibration.distortion) {\n        camera.distortion = {\n            pps: new THREE.Vector2().fromArray(calibration.distortion.pps),\n            polynom: new THREE.Vector4().fromArray(calibration.distortion.poly357),\n            l1l2: new THREE.Vector3().set(0, 0, 0),\n        };\n        camera.distortion.polynom.w = calibration.distortion.limit * calibration.distortion.limit;\n        if (calibration.distortion.l1l2) {\n            camera.distortion.l1l2.fromArray(calibration.distortion.l1l2);\n            camera.distortion.l1l2.z = calibration.distortion.etats;\n        }\n    }\n\n    camera.name = calibration.id;\n    return camera;\n}\n\nexport default {\n    /**\n     * Description of a camera calibration in a JSON file.\n     *\n     * @typedef CameraCalibrationJson\n     * @type {Object}\n     *\n     * @property {number[]} projection - projection matrix,\n     * @property {number[]} size - image size in pixel.\n     * @property {number[]} position - position of the camera.\n     * @property {number[]} rotation - rotation matrix\n     * @property {Object} [distorsion={}] - distorsion\n     * @property {number[]} [distorsion.pps]\n     * @property {number[]} [distorsion.poly357]\n     * @property {number[]} [distorsion.limit]\n     * @property {number[]} [distorsion.l1l2]\n     * @property {number[]} [distorsion.etat]\n     */\n    /**\n     * Parser a JSON array of camera calibrations and return an array of {@link OrientedImageCamera}.\n     * @param {string|JSON} json - the json content of the calibration file.\n     * @param {Object} [options={}] - Options controlling the parsing.\n     * @param {string} [options.near=0.1] - Near of the created cameras. Default value comes from created {@link OrientedImageCamera}\n     * @param {string} [options.far=1000] - Far of the created cameras. Default value comes from created {@link OrientedImageCamera}\n     * @return {Promise} - A promise resolving with an array of {@link OrientedImageCamera}.\n     */\n    parse(json, options = {}) {\n        if (typeof (json) === 'string') {\n            json = JSON.parse(json);\n        }\n        return Promise.resolve(json.map(calibration => parseCalibration(calibration, options)));\n    },\n};\n","import * as THREE from 'three';\nimport LayerUpdateState from '../Layer/LayerUpdateState';\nimport CancelledCommandException from '../Core/Scheduler/CancelledCommandException';\nimport ObjectRemovalHelper from './ObjectRemovalHelper';\n\n\nconst vector = new THREE.Vector3();\nfunction applyOffset(obj, offset, quaternion, offsetAltitude = 0) {\n    if (obj.geometry) {\n        if (obj.geometry instanceof THREE.BufferGeometry) {\n            const count = obj.geometry.attributes.position.count * 3;\n            for (let i = 0; i < count; i += 3) {\n                vector.fromArray(obj.geometry.attributes.position.array, i);\n                vector.add(offset).applyQuaternion(quaternion);\n                vector.z -= offsetAltitude;\n                vector.toArray(obj.geometry.attributes.position.array, i);\n            }\n            obj.geometry.attributes.position.needsUpdate = true;\n        } else {\n            for (const v of obj.geometry.vertices) {\n                v.add(offset).applyQuaternion(quaternion);\n                v.z -= offsetAltitude;\n            }\n            obj.geometry.verticesNeedUpdate = true;\n        }\n    }\n    obj.children.forEach(c => applyOffset(c, offset, quaternion, offsetAltitude));\n}\n\nfunction assignLayer(object, layer) {\n    if (object) {\n        object.layer = layer;\n        if (object.material) {\n            object.material.transparent = layer.opacity < 1.0;\n            object.material.opacity = layer.opacity;\n            object.material.wireframe = layer.wireframe;\n\n            if (layer.size) {\n                object.material.size = layer.size;\n            }\n            if (layer.linewidth) {\n                object.material.linewidth = layer.linewidth;\n            }\n        }\n        object.layers.set(layer.threejsLayer);\n        for (const c of object.children) {\n            assignLayer(c, layer);\n        }\n        return object;\n    }\n}\n\nconst quaternion = new THREE.Quaternion();\nexport default {\n    update(context, layer, node) {\n        if (!node.parent && node.children.length) {\n            // if node has been removed dispose three.js resource\n            ObjectRemovalHelper.removeChildrenAndCleanupRecursively(layer, node);\n            return;\n        }\n        if (!node.visible) {\n            return;\n        }\n\n        const features = node.children.filter(n => n.layer == layer);\n\n        if (features.length > 0) {\n            return features;\n        }\n\n        const extentsDestination = node.getCoordsForSource(layer.source);\n        extentsDestination.forEach((e) => { e.zoom = node.level; });\n\n        const extentsSource = [];\n        for (const extentDest of extentsDestination) {\n            if (!layer.source.extentInsideLimit(extentDest) || (layer.source.parsedData &&\n                !layer.source.parsedData.extent.isPointInside(extentDest.center()))) {\n                return;\n            }\n            extentsSource.push(extentDest);\n        }\n\n        if (node.layerUpdateState[layer.id] === undefined) {\n            node.layerUpdateState[layer.id] = new LayerUpdateState();\n        }\n\n        const ts = Date.now();\n\n        if (!node.layerUpdateState[layer.id].canTryUpdate(ts)) {\n            return;\n        }\n\n        node.layerUpdateState[layer.id].newTry();\n\n        const command = {\n            layer,\n            extentsSource,\n            view: context.view,\n            threejsLayer: layer.threejsLayer,\n            requester: node,\n        };\n\n        context.scheduler.execute(command).then((result) => {\n            // if request return empty json, WFSProvider.getFeatures return undefined\n            result = result[0];\n            if (result) {\n                const isApplied = !result.layer;\n                result.minAltitude = isNaN(result.minAltitude) ? 0 : result.minAltitude;\n                assignLayer(result, layer);\n                // call onMeshCreated callback if needed\n                if (layer.onMeshCreated) {\n                    layer.onMeshCreated(result);\n                }\n                node.layerUpdateState[layer.id].success();\n                if (!node.parent) {\n                    ObjectRemovalHelper.removeChildrenAndCleanupRecursively(layer, result);\n                    return;\n                }\n                // We don't use node.matrixWorld here, because feature coordinates are\n                // expressed in crs coordinates (which may be different than world coordinates,\n                // if node's layer is attached to an Object with a non-identity transformation)\n                if (isApplied) {\n                    // NOTE: now data source provider use cache on Mesh\n                    // TODO move transform in feature2Mesh\n                    const tmp = node.extent.center().as(context.view.referenceCrs).xyz().negate();\n                    quaternion.setFromRotationMatrix(node.matrixWorld).inverse();\n                    // const quaternion = new THREE.Quaternion().setFromUnitVectors(new THREE.Vector3(0, 0, 1), node.extent.center().geodesicNormal).inverse();\n                    applyOffset(result, tmp, quaternion, result.minAltitude);\n                }\n\n                if (result.minAltitude) {\n                    result.position.z = result.minAltitude;\n                }\n                result.layer = layer;\n                node.add(result);\n                node.updateMatrixWorld();\n            } else {\n                node.layerUpdateState[layer.id].failure(1, true);\n            }\n        },\n        (err) => {\n            if (err instanceof CancelledCommandException) {\n                node.layerUpdateState[layer.id].success();\n            } else if (err instanceof SyntaxError) {\n                node.layerUpdateState[layer.id].failure(0, true);\n            } else {\n                node.layerUpdateState[layer.id].failure(Date.now());\n                setTimeout(node.layerUpdateState[layer.id].secondsUntilNextTry() * 1000,\n                    () => {\n                        context.view.notifyChange(layer, false);\n                    });\n            }\n        });\n    },\n};\n","import * as THREE from 'three';\nimport Earcut from 'earcut';\nimport Coordinates from '../../Core/Geographic/Coordinates';\n\nfunction getProperty(name, options, defaultValue, ...args) {\n    const property = options[name];\n\n    if (property) {\n        if (typeof property === 'function') {\n            const p = property(...args);\n            if (p) {\n                return p;\n            }\n        } else {\n            return property;\n        }\n    }\n\n    if (typeof defaultValue === 'function') {\n        return defaultValue(...args);\n    }\n\n    return defaultValue;\n}\n\nfunction randomColor() {\n    return new THREE.Color(Math.random() * 0xffffff);\n}\n\nfunction fillColorArray(colors, length, color, offset = 0) {\n    offset *= 3;\n    const len = offset + length * 3;\n    for (let i = offset; i < len; i += 3) {\n        colors[i] = color.r * 255;\n        colors[i + 1] = color.g * 255;\n        colors[i + 2] = color.b * 255;\n    }\n}\n\n/**\n * Convert coordinates to vertices positionned at a given altitude\n *\n * @param      {number[]} ptsIn - Coordinates of a feature.\n * @param      {number[]} normals - Coordinates of a feature.\n * @param      {number[]} target - Target to copy result.\n * @param      {(Function|number)}  altitude - Altitude of feature or function to get altitude.\n * @param      {number} extrude - The extrude amount to apply at each point\n * @param      {number} offsetOut - The offset array value to copy on target\n * @param      {number} countIn - The count of coordinates to read in ptsIn\n * @param      {number} startIn - The offser array to strat reading in ptsIn\n */\nconst coord = new Coordinates('EPSG:4326', 0, 0);\nfunction coordinatesToVertices(ptsIn, normals, target, altitude = 0, extrude = 0, offsetOut = 0, countIn = ptsIn.length / 3, startIn = offsetOut) {\n    startIn *= 3;\n    countIn *= 3;\n    offsetOut *= 3;\n    const endIn = startIn + countIn;\n    let fnAltitude;\n    if (!isNaN(altitude)) {\n        fnAltitude = () => altitude;\n    } else if (Array.isArray(altitude)) {\n        fnAltitude = id => altitude[(id - startIn) / 3];\n    } else {\n        fnAltitude = id => altitude({}, coord.set(ptsIn.crs, ptsIn[id], ptsIn[id + 1], ptsIn[id + 2]));\n    }\n\n    for (let i = startIn, j = offsetOut; i < endIn; i += 3, j += 3) {\n        // move the vertex following the normal, to put the point on the good altitude\n        const t = fnAltitude(i) + (Array.isArray(extrude) ? extrude[(i - startIn) / 3] : extrude);\n        if (target.minAltitude) {\n            target.minAltitude = Math.min(t, target.minAltitude);\n        }\n        // fill the vertices array at the offset position\n        target[j] = ptsIn[i] + normals[i] * t;\n        target[j + 1] = ptsIn[i + 1] + normals[i + 1] * t;\n        target[j + 2] = ptsIn[i + 2] + normals[i + 2] * t;\n    }\n}\n\n/*\n * Add indices for the side faces.\n * We loop over the contour and create a side face made of two triangles.\n *\n * For a ring made of (n) coordinates, there are (n*2) vertices.\n * The (n) first vertices are on the roof, the (n) other vertices are on the floor.\n *\n * If index (i) is on the roof, index (i+length) is on the floor.\n *\n * @param {number[]} indices - Array of indices to push to\n * @param {number} length - Total vertices count in the geom (excluding the extrusion ones)\n * @param {number} offset\n * @param {number} count\n * @param {boolean} isClockWise - Wrapping direction\n */\nfunction addExtrudedPolygonSideFaces(indices, length, offset, count, isClockWise) {\n    // loop over contour length, and for each point of the contour,\n    // add indices to make two triangle, that make the side face\n    const startIndice = indices.length;\n    indices.length += (count - 1) * 6;\n    for (let i = offset, j = startIndice; i < offset + count - 1; ++i, ++j) {\n        if (isClockWise) {\n            // first triangle indices\n            indices[j] = i;\n            indices[++j] = i + length;\n            indices[++j] = i + 1;\n            // second triangle indices\n            indices[++j] = i + 1;\n            indices[++j] = i + length;\n            indices[++j] = i + length + 1;\n        } else {\n            // first triangle indices\n            indices[j] = i + length;\n            indices[++j] = i;\n            indices[++j] = i + length + 1;\n            // second triangle indices\n            indices[++j] = i + length + 1;\n            indices[++j] = i;\n            indices[++j] = i + 1;\n        }\n    }\n}\n\nconst pointMaterial = new THREE.PointsMaterial();\nfunction featureToPoint(feature, options) {\n    const ptsIn = feature.vertices;\n    const normals = feature.normals;\n    const vertices = new Float32Array(ptsIn.length);\n    const colors = new Uint8Array(ptsIn.length);\n\n    coordinatesToVertices(ptsIn, normals, vertices, options.altitude);\n\n    for (const geometry of feature.geometry) {\n        const color = getProperty('color', options, randomColor, geometry.properties);\n        const start = geometry.indices[0].offset;\n        const count = geometry.indices[0].count;\n        fillColorArray(colors, count, color, start);\n    }\n\n    const geom = new THREE.BufferGeometry();\n    geom.addAttribute('position', new THREE.BufferAttribute(vertices, 3));\n    geom.addAttribute('color', new THREE.BufferAttribute(colors, 3, true));\n\n    return new THREE.Points(geom, pointMaterial);\n}\n\nvar lineMaterial = new THREE.LineBasicMaterial({ vertexColors: THREE.VertexColors });\nfunction featureToLine(feature, options) {\n    const ptsIn = feature.vertices;\n    const normals = feature.normals;\n    const vertices = new Float32Array(ptsIn.length);\n    const colors = new Uint8Array(ptsIn.length);\n    const count = ptsIn.length / 3;\n\n    coordinatesToVertices(ptsIn, normals, vertices, options.altitude);\n    const geom = new THREE.BufferGeometry();\n    geom.addAttribute('position', new THREE.BufferAttribute(vertices, 3));\n\n    if (feature.geometry.length > 1) {\n        const countIndices = (count - feature.geometry.length) * 2;\n        const indices = new Uint16Array(countIndices);\n        let i = 0;\n        // Multi line case\n        for (const geometry of feature.geometry) {\n            const color = getProperty('color', options, randomColor, geometry.properties);\n            const start = geometry.indices[0].offset;\n            // To avoid integer overflow with indice value (16 bits)\n            if (start > 0xffff) {\n                console.warn('Feature to Line: integer overflow, too many points in lines');\n                break;\n            }\n            const count = geometry.indices[0].count;\n            const end = start + count;\n            fillColorArray(colors, count, color, start);\n            for (let j = start; j < end - 1; j++) {\n                if (j < 0xffff) {\n                    indices[i++] = j;\n                    indices[i++] = j + 1;\n                } else {\n                    break;\n                }\n            }\n        }\n        geom.addAttribute('color', new THREE.BufferAttribute(colors, 3, true));\n        geom.setIndex(new THREE.BufferAttribute(indices, 1));\n        return new THREE.LineSegments(geom, lineMaterial);\n    } else {\n        const color = getProperty('color', options, randomColor, feature.geometry.properties);\n        fillColorArray(colors, count, color);\n        geom.addAttribute('color', new THREE.BufferAttribute(colors, 3, true));\n        return new THREE.Line(geom, lineMaterial);\n    }\n}\n\nconst color = new THREE.Color();\nconst material = new THREE.MeshBasicMaterial();\nfunction featureToPolygon(feature, options) {\n    const ptsIn = feature.vertices;\n    const normals = feature.normals;\n    const vertices = new Float32Array(ptsIn.length);\n    const colors = new Uint8Array(ptsIn.length);\n    const indices = [];\n    vertices.minAltitude = Infinity;\n\n    for (const geometry of feature.geometry) {\n        const altitude = getProperty('altitude', options, 0, geometry.properties);\n        const color = getProperty('color', options, randomColor, geometry.properties);\n\n        const start = geometry.indices[0].offset;\n        // To avoid integer overflow with indice value (16 bits)\n        if (start > 0xffff) {\n            console.warn('Feature to Polygon: integer overflow, too many points in polygons');\n            break;\n        }\n\n        const lastIndice = geometry.indices.slice(-1)[0];\n        const end = lastIndice.offset + lastIndice.count;\n        const count = end - start;\n\n        coordinatesToVertices(ptsIn, normals, vertices, altitude, 0, start, count);\n        fillColorArray(colors, count, color, start);\n\n        const geomVertices = vertices.slice(start * 3, end * 3);\n        const holesOffsets = geometry.indices.map(i => i.offset - start).slice(1);\n        const triangles = Earcut(geomVertices, holesOffsets, 3);\n\n        const startIndice = indices.length;\n        indices.length += triangles.length;\n\n        for (let i = 0; i < triangles.length; i++) {\n            indices[startIndice + i] = triangles[i] + start;\n        }\n    }\n\n    const geom = new THREE.BufferGeometry();\n    geom.addAttribute('position', new THREE.BufferAttribute(vertices, 3));\n    geom.addAttribute('color', new THREE.BufferAttribute(colors, 3, true));\n\n    geom.setIndex(new THREE.BufferAttribute(new Uint16Array(indices), 1));\n\n    const mesh = new THREE.Mesh(geom, material);\n    mesh.minAltitude = vertices.minAltitude;\n    return mesh;\n}\n\nfunction area(contour, offset, count) {\n    offset *= 3;\n    const n = count * 3;\n    let a = 0.0;\n\n    for (let p = n + offset - 3, q = offset; q < n; p = q, q += 3) {\n        a += contour[p] * contour[q + 1] - contour[q] * contour[p + 1];\n    }\n\n    return a * 0.5;\n}\n\nfunction featureToExtrudedPolygon(feature, options) {\n    // console.log(feature);\n    // ptsIn = Tableau de toutes les coordonnées individualisées (identique a chaque feature)\n    const ptsIn = feature.vertices;\n\n    // normals = Tableau de toutes les normales (identique a chaque feature)\n    // ptsIn.length = normals.length\n    const normals = feature.normals;\n\n    // offset = détermine le début des coordonnées dans ptsIn et normals\n    const offset = feature.geometry[0].indices[0].offset;\n\n    // count = détermine le nombre coordonnées dans ptsIn ou normals\n    // a prendre en compte à partir de l'index offset\n    const count = feature.geometry[0].indices[0].count;\n\n    // TODO comprendre la ligne\n    const isClockWise = area(ptsIn, offset, count) < 0;\n\n    // Tableau initialisé a nul\n    // dont la taille correspond au double du nombre de coordonnées\n    const vertices = new Float32Array(ptsIn.length * 2);\n    // Tableau de couleurs initialisé a nul\n    // dont la taille correspond au double du nombre de coordonnées\n    const colors = new Uint8Array(ptsIn.length * 2);\n    const indices = [];\n\n    const totalVertices = ptsIn.length / 3;\n\n    vertices.minAltitude = Infinity;\n\n    for (const geometry of feature.geometry) {\n        // console.log(geometry)\n        const start = geometry.indices[0].offset;\n        const lastIndice = geometry.indices.slice(-1)[0];\n        const end = lastIndice.offset + lastIndice.count;\n        const count = end - start;\n\n        const altitude = getProperty('altitude', options, 0, geometry.properties, ptsIn.slice(start, start + count));\n        const extrude = getProperty('extrude', options, 0, geometry.properties);\n        const colorTop = getProperty('color', options, randomColor, geometry.properties);\n        color.copy(colorTop);\n        color.multiplyScalar(0.6);\n        coordinatesToVertices(ptsIn, normals, vertices, altitude, 0, start, count);\n        fillColorArray(colors, count, color, start);\n\n        const startTop = start + totalVertices;\n        const endTop = end + totalVertices;\n        coordinatesToVertices(ptsIn, normals, vertices, altitude, extrude, startTop, count, start);\n        fillColorArray(colors, count, colorTop, startTop);\n\n        const geomVertices = vertices.slice(startTop * 3, endTop * 3);\n        const holesOffsets = geometry.indices.map(i => i.offset - start).slice(1);\n        const triangles = Earcut(geomVertices, holesOffsets, 3);\n\n        const startIndice = indices.length;\n        indices.length += triangles.length;\n\n        for (let i = 0; i < triangles.length; i++) {\n            indices[startIndice + i] = triangles[i] + startTop;\n        }\n\n        for (const indice of geometry.indices) {\n            addExtrudedPolygonSideFaces(\n                indices,\n                totalVertices,\n                indice.offset,\n                indice.count,\n                isClockWise);\n        }\n    }\n\n    const geom = new THREE.BufferGeometry();\n    geom.addAttribute('position', new THREE.BufferAttribute(vertices, 3));\n    geom.addAttribute('color', new THREE.BufferAttribute(colors, 3, true));\n\n    geom.setIndex(new THREE.BufferAttribute(new Uint32Array(indices), 1));\n\n    const mesh = new THREE.Mesh(geom, material);\n    mesh.minAltitude = vertices.minAltitude;\n    return mesh;\n}\n\n/**\n * Convert a [Feature]{@link Feature#geometry}'s geometry to a Mesh\n *\n * @param {Object} feature - a Feature's geometry\n * @param {Object} options - options controlling the conversion\n * @param {number|function} options.altitude - define the base altitude of the mesh\n * @param {number|function} options.extrude - if defined, polygons will be extruded by the specified amount\n * @param {object|function} options.color - define per feature color\n * @return {THREE.Mesh} mesh\n */\nfunction featureToMesh(feature, options) {\n    if (!feature.vertices) {\n        return;\n    }\n\n    var mesh;\n    switch (feature.type) {\n        case 'point':\n        case 'multipoint': {\n            mesh = featureToPoint(feature, options);\n            break;\n        }\n        case 'linestring':\n        case 'multilinestring': {\n            mesh = featureToLine(feature, options);\n            break;\n        }\n        case 'polygon':\n        case 'multipolygon': {\n            if (options.extrude) {\n                mesh = featureToExtrudedPolygon(feature, options);\n            } else {\n                mesh = featureToPolygon(feature, options);\n            }\n            break;\n        }\n        default:\n    }\n\n    // set mesh material\n    mesh.material.vertexColors = THREE.VertexColors;\n    mesh.material.color = new THREE.Color(0xffffff);\n\n    mesh.feature = feature;\n    return mesh;\n}\n\nfunction featuresToThree(features, options) {\n    if (!features || features.length == 0) { return; }\n\n    if (features.length == 1) {\n        return featureToMesh(features[0], options);\n    }\n    const group = new THREE.Group();\n    group.minAltitude = Infinity;\n\n    for (const feature of features) {\n        const mesh = featureToMesh(feature, options);\n        group.add(mesh);\n        group.minAltitude = Math.min(mesh.minAltitude, group.minAltitude);\n    }\n\n    return group;\n}\n\n/**\n * @module Feature2Mesh\n */\nexport default {\n    /**\n     * Return a function that converts [Features]{@link module:GeoJsonParser} to Meshes. Feature collection will be converted to a\n     * a THREE.Group.\n     *\n     * @param {Object} options - options controlling the conversion\n     * @param {number|function} options.altitude - define the base altitude of the mesh\n     * @param {number|function} options.extrude - if defined, polygons will be extruded by the specified amount\n     * @param {object|function} options.color - define per feature color\n     * @return {function}\n     */\n    convert(options = {}) {\n        return function _convert(collection) {\n            if (!collection) { return; }\n\n            return featuresToThree(collection.features, options);\n        };\n    },\n};\n","import * as THREE from 'three';\nimport { MAIN_LOOP_EVENTS } from '../../Core/MainLoop';\n\nconst MOVEMENTS = {\n    38: { method: 'translateZ', sign: -1 }, // FORWARD: up key\n    40: { method: 'translateZ', sign: 1 }, // BACKWARD: down key\n    37: { method: 'translateX', sign: -1 }, // STRAFE_LEFT: left key\n    39: { method: 'translateX', sign: 1 }, // STRAFE_RIGHT: right key\n    33: { method: 'rotateZ', sign: 1, noSpeed: true }, // UP: PageUp key\n    34: { method: 'rotateZ', sign: -1, noSpeed: true }, // DOWN: PageDown key\n    wheelup: { method: 'translateZ', sign: 1, oneshot: true }, // WHEEL up\n    wheeldown: { method: 'translateZ', sign: -1, oneshot: true }, // WHEEL down\n};\n\nfunction onDocumentMouseDown(event) {\n    event.preventDefault();\n    this._isMouseDown = true;\n\n    const coords = this.view.eventToViewCoords(event);\n    this._onMouseDownMouseX = coords.x;\n    this._onMouseDownMouseY = coords.y;\n}\n\nfunction onTouchStart(event) {\n    event.preventDefault();\n    this._isMouseDown = true;\n\n    this._onMouseDownMouseX = event.touches[0].pageX;\n    this._onMouseDownMouseY = event.touches[0].pageY;\n}\n\n\nfunction onPointerMove(event) {\n    if (this._isMouseDown === true) {\n        const coords = this.view.eventToViewCoords(event);\n\n        // in rigor we have tan(theta) = tan(cameraFOV) * deltaH / H\n        // (where deltaH is the vertical amount we moved, and H the renderer height)\n        // we loosely approximate tan(x) by x\n        const pxToAngleRatio = THREE.Math.degToRad(this._camera3D.fov) / this.view.mainLoop.gfxEngine.height;\n        this._camera3D.rotateY((coords.x - this._onMouseDownMouseX) * pxToAngleRatio);\n        this._camera3D.rotateX((coords.y - this._onMouseDownMouseY) * pxToAngleRatio);\n        this._onMouseDownMouseX = coords.x;\n        this._onMouseDownMouseY = coords.y;\n        this.view.notifyChange(this._camera3D, false);\n    }\n}\n\nfunction onDocumentMouseUp() {\n    this._isMouseDown = false;\n}\n\nfunction onKeyUp(e) {\n    const move = MOVEMENTS[e.keyCode];\n    if (move) {\n        this.moves.delete(move);\n        e.preventDefault();\n    }\n}\n\nfunction onKeyDown(e) {\n    const move = MOVEMENTS[e.keyCode];\n    if (move) {\n        this.moves.add(move);\n        this.view.notifyChange(this._camera3D, false);\n        e.preventDefault();\n    }\n}\n\nfunction onDocumentMouseWheel(event) {\n    let delta = 0;\n    if (event.wheelDelta !== undefined) {\n        delta = event.wheelDelta;\n    // Firefox\n    } else if (event.detail !== undefined) {\n        delta = -event.detail;\n    }\n    if (delta < 0) {\n        this.moves.add(MOVEMENTS.wheelup);\n    } else {\n        this.moves.add(MOVEMENTS.wheeldown);\n    }\n\n    this.view.notifyChange(this._camera3D, false);\n}\n\n/**\n * First-Person controls (at least a possible declination of it).\n *\n * Bindings:\n * - up + down keys: forward/backward\n * - left + right keys: strafing movements\n * - PageUp + PageDown: roll movement\n * - mouse click+drag: pitch and yaw movements (as looking at a panorama, not as in FPS games for instance)\n */\nclass FlyControls extends THREE.EventDispatcher {\n    /**\n     * @Constructor\n     * @param {View} view\n     * @param {object} options\n     * @param {boolean} options.focusOnClick - whether or not to focus the renderer domElement on click\n     * @param {boolean} options.focusOnMouseOver - whether or not to focus when the mouse is over the domElement\n     */\n    constructor(view, options = {}) {\n        super();\n        const domElement = view.mainLoop.gfxEngine.renderer.domElement;\n        this.view = view;\n        this.options = options;\n        this._camera3D = view.camera.camera3D;\n        this.moves = new Set();\n        this.moveSpeed = 10; // backward or forward move speed in m/s\n\n        this._onMouseDownMouseX = 0;\n        this._onMouseDownMouseY = 0;\n\n        this._isMouseDown = false;\n\n        domElement.addEventListener('mousedown', onDocumentMouseDown.bind(this), false);\n        domElement.addEventListener('touchstart', onTouchStart.bind(this), false);\n        const bindedPM = onPointerMove.bind(this);\n        domElement.addEventListener('mousemove', bindedPM, false);\n        domElement.addEventListener('touchmove', bindedPM, false);\n        domElement.addEventListener('mouseup', onDocumentMouseUp.bind(this), false);\n        domElement.addEventListener('touchend', onDocumentMouseUp.bind(this), false);\n        domElement.addEventListener('mousewheel', onDocumentMouseWheel.bind(this), false);\n        domElement.addEventListener('DOMMouseScroll', onDocumentMouseWheel.bind(this), false); // firefox\n        domElement.addEventListener('keyup', onKeyUp.bind(this), true);\n        domElement.addEventListener('keydown', onKeyDown.bind(this), true);\n\n        this.view.addFrameRequester(MAIN_LOOP_EVENTS.AFTER_CAMERA_UPDATE, this.update.bind(this));\n\n        // focus policy\n        if (options.focusOnMouseOver) {\n            domElement.addEventListener('mouseover', () => domElement.focus());\n        }\n        if (options.focusOnClick) {\n            domElement.addEventListener('click', () => domElement.focus());\n        }\n    }\n\n    isUserInteracting() {\n        return this.moves.size !== 0 || this._isMouseDown;\n    }\n\n    update(dt, updateLoopRestarted) {\n        // if we are in a keypressed state, then update position\n\n        // dt will not be relevant when we just started rendering, we consider a 1-frame move in this case\n        if (updateLoopRestarted) {\n            dt = 16;\n        }\n\n        for (const move of this.moves) {\n            this._camera3D[move.method](move.sign * (move.noSpeed ? 1 : this.moveSpeed) * dt / 1000);\n        }\n\n        if (this.moves.size > 0 || this._isMouseDown) {\n            this.view.notifyChange(this._camera3D);\n\n            for (const move of this.moves) {\n                if (move.oneshot) {\n                    this.moves.delete(move);\n                }\n            }\n        }\n    }\n}\n\nexport default FlyControls;\n","import * as THREE from 'three';\nimport { MAIN_LOOP_EVENTS } from '../../Core/MainLoop';\n\n// Note: we could use existing three.js controls (like https://github.com/mrdoob/three.js/blob/dev/examples/js/controls/FirstPersonControls.js)\n// but including these controls in itowns allows use to integrate them tightly with itowns.\n// Especially the existing controls are expecting a continuous update loop while we have a pausable one (so our controls use .notifyChange when needed)\n\nfunction limitRotation(camera3D, rot, verticalFOV) {\n    // Limit vertical rotation (look up/down) to make sure the user cannot see\n    // outside of the cone defined by verticalFOV\n    const limit = THREE.Math.degToRad(verticalFOV - camera3D.fov) * 0.5;\n    return THREE.Math.clamp(rot, -limit, limit);\n}\n\nfunction applyRotation(view, camera3D, state) {\n    camera3D.quaternion.setFromUnitVectors(\n        new THREE.Vector3(0, 1, 0), camera3D.up);\n\n    camera3D.rotateY(state.rotateY);\n    camera3D.rotateX(state.rotateX);\n\n    view.notifyChange(view.camera.camera3D);\n}\n\nconst MOVEMENTS = {\n    38: { method: 'translateZ', sign: -1 }, // FORWARD: up key\n    40: { method: 'translateZ', sign: 1 }, // BACKWARD: down key\n    37: { method: 'translateX', sign: -1 }, // STRAFE_LEFT: left key\n    39: { method: 'translateX', sign: 1 }, // STRAFE_RIGHT: right key\n    33: { method: 'translateY', sign: 1 }, // UP: PageUp key\n    34: { method: 'translateY', sign: -1 }, // DOWN: PageDown key\n};\n\nfunction moveCameraVerticalPlanar(value) {\n    this.camera.position.z += value;\n}\n\nconst normal = new THREE.Vector3();\nfunction moveCameraVerticalGlobe(value) {\n    // compute geodesic normale\n    normal.copy(this.camera.position);\n    normal.normalize();\n    this.camera.position.add(normal.multiplyScalar(value));\n}\n\nclass FirstPersonControls extends THREE.EventDispatcher {\n    /**\n     * @Constructor\n     * @param {View} view\n     * @param {object} options\n     * @param {boolean} options.focusOnClick - whether or not to focus the renderer domElement on click\n     * @param {boolean} options.focusOnMouseOver - whether or not to focus when the mouse is over the domElement\n     * @param {boolean} options.moveSpeed - if > 0, pressing the arrow keys will move the camera\n     * @param {number} options.verticalFOV - define the max visible vertical angle of the scene in degrees (default 180)\n     * @param {number} options.panoramaRatio - alternative way to specify the max vertical angle when using a panorama.\n     * You can specify the panorama width/height ratio and the verticalFOV will be computed automatically\n     * @param {boolean} options.disableEventListeners - if true, the controls will not self listen to mouse/key events.\n     * You'll have to manually forward the events to the appropriate functions: onMouseDown, onMouseMove, onMouseUp,\n     * onKeyUp, onKeyDown and onMouseWheel.\n     */\n    constructor(view, options = {}) {\n        super();\n        this.camera = view.camera.camera3D;\n        this.view = view;\n        this.moves = new Set();\n        if (options.panoramaRatio) {\n            const radius = (options.panoramaRatio * 200) / (2 * Math.PI);\n            options.verticalFOV =\n                options.panoramaRatio == 2 ? 180 : THREE.Math.radToDeg(2 * Math.atan(200 / (2 * radius)));\n        }\n        options.verticalFOV = options.verticalFOV || 180;\n        options.moveSpeed = options.moveSpeed === undefined ? 10 : options.moveSpeed; // backward or forward move speed in m/s\n        this.options = options;\n\n        this._isMouseDown = false;\n        this._onMouseDownMouseX = 0;\n        this._onMouseDownMouseY = 0;\n\n        this._state = {\n            rotateX: 0,\n            rotateY: 0,\n            snapshot() {\n                return {\n                    rotateX: this.rotateX,\n                    rotateY: this.rotateY,\n                };\n            },\n        };\n        this.reset();\n\n        const domElement = view.mainLoop.gfxEngine.renderer.domElement;\n        if (!options.disableEventListeners) {\n            domElement.addEventListener('mousedown', this.onMouseDown.bind(this), false);\n            domElement.addEventListener('touchstart', this.onMouseDown.bind(this), false);\n            domElement.addEventListener('mousemove', this.onMouseMove.bind(this), false);\n            domElement.addEventListener('touchmove', this.onMouseMove.bind(this), false);\n            domElement.addEventListener('mouseup', this.onMouseUp.bind(this), false);\n            domElement.addEventListener('touchend', this.onMouseUp.bind(this), false);\n            domElement.addEventListener('keyup', this.onKeyUp.bind(this), true);\n            domElement.addEventListener('keydown', this.onKeyDown.bind(this), true);\n            domElement.addEventListener('mousewheel', this.onMouseWheel.bind(this), false);\n            domElement.addEventListener('DOMMouseScroll', this.onMouseWheel.bind(this), false); // firefox\n        }\n\n        this.view.addFrameRequester(MAIN_LOOP_EVENTS.AFTER_CAMERA_UPDATE, this.update.bind(this));\n\n        // focus policy\n        if (options.focusOnMouseOver) {\n            domElement.addEventListener('mouseover', () => domElement.focus());\n        }\n        if (options.focusOnClick) {\n            domElement.addEventListener('click', () => domElement.focus());\n        }\n\n        if (view.referenceCrs == 'EPSG:4978') {\n            this.moveCameraVertical = moveCameraVerticalGlobe;\n        } else {\n            this.moveCameraVertical = moveCameraVerticalPlanar;\n        }\n    }\n\n    isUserInteracting() {\n        return this.moves.size !== 0 && !this._isMouseDown;\n    }\n\n    /**\n     * Resets the controls internal state to match the camera' state.\n     * This must be called when manually modifying the camera's position or rotation.\n     * @param {boolean} preserveRotationOnX - if true, the look up/down rotation will\n     * not be copied from the camera\n     */\n    reset(preserveRotationOnX = false) {\n        // Compute the correct init state, given the calculus in applyRotation:\n        // cam.quaternion = q * r\n        // => r = inverse(q) * cam.quaterion\n        // q is the quaternion derived from the up vector\n        const q = new THREE.Quaternion().setFromUnitVectors(\n            new THREE.Vector3(0, 1, 0), this.camera.up);\n        q.inverse();\n        // compute r\n        const r = this.camera.quaternion.clone().premultiply(q);\n        // tranform it to euler\n        const e = new THREE.Euler(0, 0, 0, 'YXZ').setFromQuaternion(r);\n\n        if (!preserveRotationOnX) {\n            this._state.rotateX = e.x;\n        }\n        this._state.rotateY = e.y;\n    }\n\n    /**\n     * Updates the camera position / rotation based on occured input events.\n     * This is done automatically when needed but can also be done if needed.\n     * @param {number} dt - ellpased time since last update in seconds\n     * @param {boolean} updateLoopRestarted - true if itowns' update loop just restarted\n     * @param {boolean} force - set to true if you want to force the update, even if it\n     * appears unneeded.\n     */\n    update(dt, updateLoopRestarted, force) {\n        // dt will not be relevant when we just started rendering, we consider a 1-frame move in this case\n        if (updateLoopRestarted) {\n            dt = 16;\n        }\n\n        for (const move of this.moves) {\n            if (move.method === 'translateY') {\n                this.moveCameraVertical(move.sign * this.options.moveSpeed * dt / 1000);\n            } else {\n                this.camera[move.method](move.sign * this.options.moveSpeed * dt / 1000);\n            }\n        }\n\n        if (this._isMouseDown === true || force === true) {\n            applyRotation(this.view, this.camera, this._state);\n        }\n\n        if (this.moves.size) {\n            this.view.notifyChange(this.view.camera.camera3D);\n        }\n    }\n\n    // Event callback functions\n    // Mouse movement handling\n    onMouseDown(event) {\n        event.preventDefault();\n        this._isMouseDown = true;\n\n        const coords = this.view.eventToViewCoords(event);\n        this._onMouseDownMouseX = coords.x;\n        this._onMouseDownMouseY = coords.y;\n\n        this._stateOnMouseDown = this._state.snapshot();\n    }\n\n    onMouseUp() {\n        this._isMouseDown = false;\n    }\n\n    onMouseMove(event) {\n        if (this._isMouseDown === true) {\n            // in rigor we have tan(theta) = tan(cameraFOV) * deltaH / H\n            // (where deltaH is the vertical amount we moved, and H the renderer height)\n            // we loosely approximate tan(x) by x\n            const pxToAngleRatio = THREE.Math.degToRad(this.camera.fov) / this.view.mainLoop.gfxEngine.height;\n\n            const coords = this.view.eventToViewCoords(event);\n\n            // update state based on pointer movement\n            this._state.rotateY = ((coords.x - this._onMouseDownMouseX) * pxToAngleRatio) + this._stateOnMouseDown.rotateY;\n            this._state.rotateX = limitRotation(\n                this.camera,\n                ((coords.y - this._onMouseDownMouseY) * pxToAngleRatio) + this._stateOnMouseDown.rotateX,\n                this.options.verticalFOV);\n\n            applyRotation(this.view, this.camera, this._state);\n        }\n    }\n\n    // Mouse wheel\n    onMouseWheel(event) {\n        let delta = 0;\n        if (event.wheelDelta !== undefined) {\n            delta = -event.wheelDelta;\n        // Firefox\n        } else if (event.detail !== undefined) {\n            delta = event.detail;\n        }\n\n        this.camera.fov =\n            THREE.Math.clamp(this.camera.fov + Math.sign(delta),\n                10,\n                Math.min(100, this.options.verticalFOV));\n\n        this.camera.updateProjectionMatrix();\n\n        this._state.rotateX = limitRotation(\n            this.camera,\n            this._state.rotateX,\n            this.options.verticalFOV);\n\n        applyRotation(this.view, this.camera, this._state);\n    }\n\n    // Keyboard handling\n    onKeyUp(e) {\n        const move = MOVEMENTS[e.keyCode];\n        if (move) {\n            this.moves.delete(move);\n            this.view.notifyChange(undefined, false);\n            e.preventDefault();\n        }\n    }\n\n    onKeyDown(e) {\n        const move = MOVEMENTS[e.keyCode];\n        if (move) {\n            this.moves.add(move);\n            this.view.notifyChange(undefined, false);\n            e.preventDefault();\n        }\n    }\n}\n\nexport default FirstPersonControls;\n","import * as THREE from 'three';\nimport { MAIN_LOOP_EVENTS } from '../../Core/MainLoop';\n\n// event keycode\nconst keys = {\n    CTRL: 17,\n    SPACE: 32,\n    T: 84,\n    Y: 89,\n};\n\nconst mouseButtons = {\n    LEFTCLICK: THREE.MOUSE.LEFT,\n    MIDDLECLICK: THREE.MOUSE.MIDDLE,\n    RIGHTCLICK: THREE.MOUSE.RIGHT,\n};\n\n// control state\nconst STATE = {\n    NONE: -1,\n    DRAG: 0,\n    PAN: 1,\n    ROTATE: 2,\n    TRAVEL: 3,\n};\n\nconst vectorZero = new THREE.Vector3();\n\n/**\n * Options for the instantiation of a {@link PlanarControls}.\n *\n * @typedef {Object} PlanarControls~PlanarControlsOptions\n *\n * @property {boolean} [enableRotation=true] Enable the rotation with the\n * <code>CTRL + Left mouse button</code> and in animations, like the smart zoom.\n * @property {number} [rotateSpeed=2.0] Rotate speed.\n * @property {number} [maxPanSpeed=15] Pan speed when close to maxAltitude.\n * @property {number} [minPanSpeed=0.05] Pan speed when close to the ground.\n * @property {number} [zoomTravelTime=0.2] Animation time when zooming.\n * @property {number} [zoomInFactor=0.25] Zoom movement is equal to the distance\n * to the zoom target, multiplied by this factor when zooming in.\n * @property {number} [zoomOutFactor=0.4] Zoom movement is equal to the distance\n * to the zoom target, multiplied by this factor when zooming out.\n * @property {number} [maxAltitude=12000] Maximum altitude reachable when panning.\n * @property {number} [groundLevel=200] Minimum altitude reachable when panning.\n * @property {number} [autoTravelTimeMin=1.5] Minimum duration for animated\n * travels with the <code>auto</code> parameter.\n * @property {number} [autoTravelTimeMax=4]  Maximum duration for animated\n * travels with the <code>auto</code> parameter.\n * @property {number} [autoTravelTimeDist=20000] Maximum travel distance for\n * animated travel with the <code>auto</code> parameter.\n * @property {number} [smartZoomHeightMin=75] Minimum height above ground\n * reachable after a smart zoom.\n * @property {number} [smartZoomHeightMax=500] Maximum height above ground\n * reachable after a smart zoom.\n * @property {boolean} [instantTravel=false] If set to true, animated travels\n * will have no duration.\n * @property {number} [minZenithAngle=0] The minimum reachable zenith angle for\n * a camera rotation, in degrees.\n * @property {number} [maxZenithAngle=82.5] The maximum reachable zenith angle\n * for a camera rotation, in degrees.\n * @property {boolean} [focusOnMouseOver=true] Set the focus on the canvas if\n * hovered.\n * @property {boolean} [focusOnMouseClick=true] Set the focus on the canvas if\n * clicked.\n * @property {boolean} [handleCollision=true]\n */\n\n/**\n * Camera controls adapted for a planar view, with animated movements.\n * Usage is as follow:\n * <ul>\n *  <li><b>Left mouse button:</b> drag the camera (translation on the (xy) world\n *  plane).</li>\n *  <li><b>Right mouse button:</b> pan the camera (translation on the vertical\n *  (z) axis of the world plane).</li>\n *  <li><b>CTRL + Left mouse button:</b> rotate the camera around the focus point.</li>\n *  <li><b>Wheel scrolling:</b> zoom toward the cursor position.</li>\n *  <li><b>Wheel clicking:</b> smart zoom toward the cursor position (animated).</li>\n *  <li><b>Y key:</b> go to the starting view (animated).</li>\n *  <li><b>T key:</b> go to the top view (animated).</li>\n * </ul>\n *\n * This controls needs to be instantiated after the camera setup.\n *\n * @constructor\n *\n * @param {PlanarView} view\n * @param {PlanarControls~PlanarControlsOptions} [options]\n *\n * @example\n * // From the orthographic example\n * new itowns.PlanarControls(view, {\n *     // We do not want the user to zoom out too much\n *     maxAltitude: 40000000,\n *     // We want to keep the rotation disabled, to only have a view from the top\n *     enableRotation: false,\n *     // Faster zoom in/out speed\n *     zoomInFactor: 0.5,\n *     zoomOutFactor: 0.5,\n *     // Don't zoom too much on smart zoom\n *     smartZoomHeightMax: 100000,\n * });\n */\nfunction PlanarControls(view, options = {}) {\n    this.view = view;\n    this.camera = view.camera.camera3D;\n    this.domElement = view.mainLoop.gfxEngine.renderer.domElement;\n\n    this.enableRotation = typeof (options.enableRotation) !== 'undefined' ? options.enableRotation : true;\n    this.rotateSpeed = options.rotateSpeed || 2.0;\n\n    // minPanSpeed when close to the ground, maxPanSpeed when close to maxAltitude\n    this.maxPanSpeed = options.maxPanSpeed || 15;\n    this.minPanSpeed = options.minPanSpeed || 0.05;\n\n    // animation duration for the zoom\n    this.zoomTravelTime = options.zoomTravelTime || 0.2;\n\n    // zoom movement is equal to the distance to the zoom target, multiplied by zoomFactor\n    this.zoomInFactor = options.zoomInFactor || 0.25;\n    this.zoomOutFactor = options.zoomOutFactor || 0.4;\n\n    // pan movement is clamped between maxAltitude and groundLevel\n    this.maxAltitude = options.maxAltitude || 12000;\n\n    // approximate ground altitude value\n    this.groundLevel = options.groundLevel || 200;\n\n    // min and max duration in seconds, for animated travels with 'auto' parameter\n    this.autoTravelTimeMin = options.autoTravelTimeMin || 1.5;\n    this.autoTravelTimeMax = options.autoTravelTimeMax || 4;\n\n    // max travel duration is reached for this travel distance (empirical smoothing value)\n    this.autoTravelTimeDist = options.autoTravelTimeDist || 20000;\n\n    // after a smartZoom, camera height above ground will be between these two values\n    this.smartZoomHeightMin = options.smartZoomHeightMin || 75;\n    this.smartZoomHeightMax = options.smartZoomHeightMax || 500;\n\n    // if set to true, animated travels have 0 duration\n    this.instantTravel = options.instantTravel || false;\n\n    this.minZenithAngle = options.minZenithAngle || 0 * Math.PI / 180;\n\n    // should be less than 90 deg (90 = parallel to the ground)\n    this.maxZenithAngle = (options.maxZenithAngle || 82.5) * Math.PI / 180;\n\n    // focus policy options\n    this.focusOnMouseOver = options.focusOnMouseOver || true;\n    this.focusOnMouseClick = options.focusOnMouseClick || true;\n\n    // Set collision options\n    this.handleCollision = typeof (options.handleCollision) !== 'undefined' ? options.handleCollision : true;\n    this.minDistanceCollision = 30;\n\n    // starting camera position and orientation target are setup before instanciating PlanarControls\n    // using: view.camera.setPosition() and view.camera.lookAt()\n    // startPosition and startQuaternion are stored to be able to return to the start view\n    const startPosition = this.camera.position.clone();\n    const startQuaternion = this.camera.quaternion.clone();\n\n    // control state\n    this.state = STATE.NONE;\n\n    // mouse movement\n    const mousePosition = new THREE.Vector2();\n    const lastMousePosition = new THREE.Vector2();\n    const deltaMousePosition = new THREE.Vector2(0, 0);\n\n    // drag movement\n    const dragStart = new THREE.Vector3();\n    const dragEnd = new THREE.Vector3();\n    const dragDelta = new THREE.Vector3();\n\n    // camera focus point : ground point at screen center\n    const centerPoint = new THREE.Vector3(0, 0, 0);\n\n    // camera rotation\n    let phi = 0.0;\n\n    // animated travel\n    const travelEndPos = new THREE.Vector3();\n    const travelStartPos = new THREE.Vector3();\n    const travelStartRot = new THREE.Quaternion();\n    const travelEndRot = new THREE.Quaternion();\n    let travelAlpha = 0;\n    let travelDuration = 0;\n    let travelUseRotation = false;\n    let travelUseSmooth = false;\n\n    // eventListeners handlers\n    const _handlerOnKeyDown = onKeyDown.bind(this);\n    const _handlerOnMouseDown = onMouseDown.bind(this);\n    const _handlerOnMouseUp = onMouseUp.bind(this);\n    const _handlerOnMouseMove = onMouseMove.bind(this);\n    const _handlerOnMouseWheel = onMouseWheel.bind(this);\n\n    // focus policy\n    if (this.focusOnMouseOver) {\n        this.domElement.addEventListener('mouseover', () => this.domElement.focus());\n    }\n    if (this.focusOnMouseClick) {\n        this.domElement.addEventListener('click', () => this.domElement.focus());\n    }\n\n    // prevent the default contextmenu from appearing when right-clicking\n    // this allows to use right-click for input without the menu appearing\n    this.domElement.addEventListener('contextmenu', onContextMenu.bind(this), false);\n\n    // Updates the view and camera if needed, and handles the animated travel\n    this.update = function update(dt, updateLoopRestarted) {\n        // We test if camera collide to geometry layer or too close to ground and ajust it's altitude in case\n        if (this.handleCollision) { // We check distance to the ground/surface geometry. (Could be another geometry layer)\n            this.view.camera.adjustAltitudeToAvoidCollisionWithLayer(this.view, this.view.tileLayer, this.minDistanceCollision);\n        }\n        // dt will not be relevant when we just started rendering, we consider a 1-frame move in this case\n        if (updateLoopRestarted) {\n            dt = 16;\n        }\n        if (this.state === STATE.TRAVEL) {\n            this.handleTravel(dt);\n            this.view.notifyChange(this.camera);\n        }\n        if (this.state === STATE.DRAG) {\n            this.handleDragMovement();\n            this.view.notifyChange(this.camera);\n        }\n        if (this.state === STATE.ROTATE && this.enableRotation) {\n            this.handleRotation();\n            this.view.notifyChange(this.camera);\n        }\n        if (this.state === STATE.PAN) {\n            this.handlePanMovement();\n            this.view.notifyChange(this.camera);\n        }\n        deltaMousePosition.set(0, 0);\n    };\n\n    // add this PlanarControl instance to the view's framerequesters\n    // with this, PlanarControl.update() will be called each frame\n    this.view.addFrameRequester(MAIN_LOOP_EVENTS.AFTER_CAMERA_UPDATE, this.update.bind(this));\n\n    /**\n     * Initiate a drag movement (translation on xy plane). The movement value\n     * is derived from the actual world point under the mouse cursor. This\n     * allows the user to 'grab' a world point and drag it to move.\n     *\n     * @ignore\n     */\n    this.initiateDrag = function initiateDrag() {\n        this.state = STATE.DRAG;\n\n        // the world point under mouse cursor when the drag movement is started\n        dragStart.copy(this.getWorldPointAtScreenXY(mousePosition));\n\n        // the difference between start and end cursor position\n        dragDelta.set(0, 0, 0);\n    };\n\n    /**\n     * Handle the drag movement (translation on xy plane) when user moves the\n     * mouse while in STATE.DRAG. The drag movement is previously initiated by\n     * [initiateDrag]{@link PlanarControls#initiateDrag}. Compute the drag value\n     * and update the camera controls. The movement value is derived from the\n     * actual world point under the mouse cursor. This allows the user to 'grab'\n     * a world point and drag it to move.\n     *\n     * @ignore\n     */\n    this.handleDragMovement = function handleDragMovement() {\n        // the world point under the current mouse cursor position, at same altitude than dragStart\n        dragEnd.copy(this.getWorldPointFromMathPlaneAtScreenXY(mousePosition, dragStart.z));\n\n        // the difference between start and end cursor position\n        dragDelta.subVectors(dragStart, dragEnd);\n\n        this.camera.position.add(dragDelta);\n\n        dragDelta.set(0, 0, 0);\n    };\n\n    /**\n     * Initiate a pan movement (local translation on xz plane).\n     *\n     * @ignore\n     */\n    this.initiatePan = function initiatePan() {\n        this.state = STATE.PAN;\n    };\n\n    /**\n     * Handle the pan movement (translation on local x / world z plane) when\n     * user moves the mouse while in STATE.PAN. The drag movement is previously\n     * initiated by [initiatePan]{@link PlanarControls#initiatePan}. Compute the\n     * pan value and update the camera controls.\n     *\n     * @function\n     * @ignore\n     */\n    this.handlePanMovement = (() => {\n        const vec = new THREE.Vector3();\n\n        return () => {\n            // normalized (betwwen 0 and 1) distance between groundLevel and maxAltitude\n            const distToGround = THREE.Math.clamp((this.camera.position.z - this.groundLevel) / this.maxAltitude, 0, 1);\n\n            // pan movement speed, adujsted according to altitude\n            const panSpeed = THREE.Math.lerp(this.minPanSpeed, this.maxPanSpeed, distToGround);\n\n            // lateral movement (local x axis)\n            vec.set(panSpeed * -1 * deltaMousePosition.x, 0, 0);\n            this.camera.position.copy(this.camera.localToWorld(vec));\n\n            // vertical movement (world z axis)\n            const newAltitude = this.camera.position.z + panSpeed * deltaMousePosition.y;\n\n            // check if altitude is valid\n            if (newAltitude < this.maxAltitude && newAltitude > this.groundLevel) {\n                this.camera.position.z = newAltitude;\n            }\n        };\n    })();\n\n    /**\n     * Initiate a rotate (orbit) movement.\n     *\n     * @ignore\n     */\n    this.initiateRotation = function initiateRotation() {\n        this.state = STATE.ROTATE;\n\n        centerPoint.copy(this.getWorldPointAtScreenXY({ x: 0.5 * this.domElement.clientWidth, y: 0.5 * this.domElement.clientHeight }));\n\n        const r = this.camera.position.distanceTo(centerPoint);\n        phi = Math.acos((this.camera.position.z - centerPoint.z) / r);\n    };\n\n    /**\n     * Handle the rotate movement (orbit) when user moves the mouse while in\n     * STATE.ROTATE. The movement is an orbit around 'centerPoint', the camera\n     * focus point (ground point at screen center). The rotate movement is\n     * previously initiated in [initiateRotation]{@link PlanarControls#initiateRotation}.\n     * Compute the new position value and update the camera controls.\n     *\n     * @function\n     * @ignore\n     */\n    this.handleRotation = (() => {\n        const vec = new THREE.Vector3();\n        const quat = new THREE.Quaternion();\n\n        return () => {\n            // angle deltas\n            // deltaMousePosition is computed in onMouseMove / onMouseDown s\n            const thetaDelta = -this.rotateSpeed * deltaMousePosition.x / this.domElement.clientWidth;\n            const phiDelta = -this.rotateSpeed * deltaMousePosition.y / this.domElement.clientHeight;\n\n            // the vector from centerPoint (focus point) to camera position\n            const offset = this.camera.position.clone().sub(centerPoint);\n\n            if (thetaDelta !== 0 || phiDelta !== 0) {\n                if ((phi + phiDelta >= this.minZenithAngle)\n                && (phi + phiDelta <= this.maxZenithAngle)\n                && phiDelta !== 0) {\n                    // rotation around X (altitude)\n                    phi += phiDelta;\n\n                    vec.set(0, 0, 1);\n                    quat.setFromUnitVectors(this.camera.up, vec);\n                    offset.applyQuaternion(quat);\n\n                    vec.setFromMatrixColumn(this.camera.matrix, 0);\n                    quat.setFromAxisAngle(vec, phiDelta);\n                    offset.applyQuaternion(quat);\n\n                    vec.set(0, 0, 1);\n                    quat.setFromUnitVectors(this.camera.up, vec).inverse();\n                    offset.applyQuaternion(quat);\n                }\n                if (thetaDelta !== 0) {\n                    // rotation around Z (azimuth)\n                    vec.set(0, 0, 1);\n                    quat.setFromAxisAngle(vec, thetaDelta);\n                    offset.applyQuaternion(quat);\n                }\n            }\n\n            this.camera.position.copy(offset);\n            this.camera.lookAt(vectorZero);\n            this.camera.position.add(centerPoint);\n            this.camera.updateMatrixWorld();\n        };\n    })();\n\n    /**\n     * Triggers a Zoom animated movement (travel) toward / away from the world\n     * point under the mouse cursor. The zoom intensity varies according to the\n     * distance between the camera and the point. The closer to the ground, the\n     * lower the intensity. Orientation will not change (null parameter in the\n     * call to [initiateTravel]{@link PlanarControls#initiateTravel} function).\n     *\n     * @param {Event} event - the mouse wheel event.\n     *\n     * @ignore\n     */\n    this.initiateZoom = function initiateZoom(event) {\n        let delta;\n\n        // mousewheel delta\n        if (event.wheelDelta !== undefined) {\n            delta = event.wheelDelta;\n        } else if (event.detail !== undefined) {\n            delta = -event.detail;\n        }\n\n        const pointUnderCursor = this.getWorldPointAtScreenXY(mousePosition);\n        const newPos = new THREE.Vector3();\n\n        // Zoom IN\n        if (delta > 0) {\n            // target position\n            newPos.lerpVectors(this.camera.position, pointUnderCursor, this.zoomInFactor);\n            // initiate travel\n            this.initiateTravel(newPos, this.zoomTravelTime, null, false);\n        // Zoom OUT\n        } else if (delta < 0 && this.camera.position.z < this.maxAltitude) {\n            // target position\n            newPos.lerpVectors(this.camera.position, pointUnderCursor, -1 * this.zoomOutFactor);\n            // initiate travel\n            this.initiateTravel(newPos, this.zoomTravelTime, null, false);\n        }\n    };\n\n    /**\n     * Triggers a 'smart zoom' animated movement (travel) toward the point under\n     * mouse cursor. The camera will be smoothly moved and oriented close to\n     * the target, at a determined height and distance.\n     *\n     * @ignore\n     */\n    this.initiateSmartZoom = function initiateSmartZoom() {\n        const pointUnderCursor = this.getWorldPointAtScreenXY(mousePosition);\n\n        // direction of the movement, projected on xy plane and normalized\n        const dir = new THREE.Vector3();\n        dir.copy(pointUnderCursor).sub(this.camera.position);\n        dir.z = 0;\n        dir.normalize();\n\n        const distanceToPoint = this.camera.position.distanceTo(pointUnderCursor);\n\n        // camera height (altitude above ground) at the end of the travel, 5000 is an empirical smoothing distance\n        const targetHeight = THREE.Math.lerp(this.smartZoomHeightMin, this.smartZoomHeightMax, Math.min(distanceToPoint / 5000, 1));\n\n        // camera position at the end of the travel\n        const moveTarget = new THREE.Vector3();\n\n        moveTarget.copy(pointUnderCursor).add(dir.multiplyScalar(-targetHeight * 2));\n        moveTarget.z = pointUnderCursor.z + targetHeight;\n\n        // initiate the travel\n        this.initiateTravel(moveTarget, 'auto', pointUnderCursor, true);\n    };\n\n\n    /**\n     * Triggers an animated movement & rotation for the camera.\n     *\n     * @param {THREE.Vector3} targetPos - The target position of the camera\n     * (reached at the end).\n     * @param {number} travelTime - Set to <code>auto</code>, or set to a\n     * duration in seconds. If set to <code>auto</code> : travel time will be\n     * set to a duration between <code>autoTravelTimeMin</code> and\n     * <code>autoTravelTimeMax</code> according to the distance and the angular\n     * difference between start and finish.\n     * @param {(string|THREE.Vector3|THREE.Quaternion)} targetOrientation -\n     * Define the target rotation of the camera:\n     * <ul>\n     *  <li>if targetOrientation is a world point (Vector3) : the camera will\n     *  lookAt() this point</li>\n     *  <li>if targetOrientation is a quaternion : this quaternion will define\n     *  the final camera orientation</li>\n     *  <li>if targetOrientation is neither a quaternion nor a world point : the\n     *  camera will keep its starting orientation</li>\n     * </ul>\n     * @param {boolean} useSmooth - Animation is smoothed using the\n     * 'smooth(value)' function (slower at start and finish)\n     *\n     * @ignore\n     */\n    this.initiateTravel = function initiateTravel(targetPos, travelTime, targetOrientation, useSmooth) {\n        this.state = STATE.TRAVEL;\n        this.view.notifyChange(this.camera);\n        // the progress of the travel (animation alpha)\n        travelAlpha = 0;\n        // update cursor\n        this.updateMouseCursorType();\n\n        travelUseRotation = this.enableRotation && (targetOrientation instanceof THREE.Quaternion || targetOrientation instanceof THREE.Vector3);\n        travelUseSmooth = useSmooth;\n\n        // start position (current camera position)\n        travelStartPos.copy(this.camera.position);\n\n        // start rotation (current camera rotation)\n        travelStartRot.copy(this.camera.quaternion);\n\n        // setup the end rotation :\n\n        // case where targetOrientation is a quaternion\n        if (targetOrientation instanceof THREE.Quaternion) {\n            travelEndRot.copy(targetOrientation);\n        } else if (targetOrientation instanceof THREE.Vector3) {\n            // case where targetOrientation is a vector3\n            if (targetPos === targetOrientation) {\n                this.camera.lookAt(targetOrientation);\n                travelEndRot.copy(this.camera.quaternion);\n                this.camera.quaternion.copy(travelStartRot);\n            } else {\n                this.camera.position.copy(targetPos);\n                this.camera.lookAt(targetOrientation);\n                travelEndRot.copy(this.camera.quaternion);\n                this.camera.quaternion.copy(travelStartRot);\n                this.camera.position.copy(travelStartPos);\n            }\n        }\n\n        // end position\n        travelEndPos.copy(targetPos);\n\n        // beginning of the travel duration setup\n\n        if (this.instantTravel) {\n            travelDuration = 0;\n        } else if (travelTime === 'auto') {\n            // case where travelTime is set to 'auto' : travelDuration will be a value between autoTravelTimeMin and autoTravelTimeMax\n            // depending on travel distance and travel angular difference\n\n            // a value between 0 and 1 according to the travel distance. Adjusted by autoTravelTimeDist parameter\n            const normalizedDistance = Math.min(1, targetPos.distanceTo(this.camera.position) / this.autoTravelTimeDist);\n\n            travelDuration = THREE.Math.lerp(this.autoTravelTimeMin, this.autoTravelTimeMax, normalizedDistance);\n\n            // if travel changes camera orientation, travel duration is adjusted according to angularDifference\n            // this allows for a smoother travel (more time for the camera to rotate)\n            // final duration will not excede autoTravelTimeMax\n            if (travelUseRotation) {\n                // value is normalized between 0 and 1\n                const angularDifference = 0.5 - 0.5 * (travelEndRot.normalize().dot(this.camera.quaternion.normalize()));\n\n                travelDuration *= 1 + 2 * angularDifference;\n                travelDuration = Math.min(travelDuration, this.autoTravelTimeMax);\n            }\n        } else {\n            // case where traveltime !== 'auto' : travelTime is a duration in seconds given as parameter\n            travelDuration = travelTime;\n        }\n    };\n\n    /**\n     * Resume normal behavior after a travel is completed\n     *\n     * @ignore\n     */\n    this.endTravel = function endTravel() {\n        this.camera.position.copy(travelEndPos);\n\n        if (travelUseRotation) {\n            this.camera.quaternion.copy(travelEndRot);\n        }\n\n        this.state = STATE.NONE;\n\n        this.updateMouseCursorType();\n    };\n\n    /**\n     * Handle the animated movement and rotation of the camera in 'travel'\n     * state.\n     * @param {number} dt - The deltatime between two updates in milliseconds.\n     *\n     * @ignore\n     */\n    this.handleTravel = function handleTravel(dt) {\n        travelAlpha += (dt / 1000) / travelDuration;\n\n        // the animation alpha, between 0 (start) and 1 (finish)\n        const alpha = (travelUseSmooth) ? smooth(travelAlpha) : travelAlpha;\n\n        // new position\n        this.camera.position.lerpVectors(travelStartPos, travelEndPos, alpha);\n\n        // new rotation\n        if (travelUseRotation === true) {\n            THREE.Quaternion.slerp(travelStartRot, travelEndRot, this.camera.quaternion, alpha);\n        }\n        // completion test\n        if (travelAlpha > 1) {\n            this.endTravel();\n        }\n    };\n\n    /**\n     * Triggers an animated movement (travel) to set the camera to top view,\n     * above the focus point, at altitude=distanceToFocusPoint.\n     *\n     * @ignore\n     */\n    this.goToTopView = function goToTopView() {\n        const topViewPos = new THREE.Vector3();\n        const targetQuat = new THREE.Quaternion();\n\n        // the top view position is above the camera focus point, at an altitude = distanceToPoint\n        topViewPos.copy(this.getWorldPointAtScreenXY({ x: 0.5 * this.domElement.clientWidth, y: 0.5 * this.domElement.clientHeight }));\n        topViewPos.z += Math.min(this.maxAltitude, this.camera.position.distanceTo(topViewPos));\n\n        targetQuat.setFromAxisAngle(new THREE.Vector3(1, 0, 0), 0);\n\n        // initiate the travel\n        this.initiateTravel(topViewPos, 'auto', targetQuat, true);\n    };\n\n    /**\n     * Triggers an animated movement (travel) to set the camera to starting view\n     *\n     * @ignore\n     */\n    this.goToStartView = function goToStartView() {\n        this.initiateTravel(startPosition, 'auto', startQuaternion, true);\n    };\n\n    /**\n     * Returns the world point (xyz) under the posXY screen point. The point\n     * belong to an abstract mathematical plane of specified altitude (doesn't\n     * use actual geometry).\n     *\n     * @param {THREE.Vector2} posXY - the mouse position in screen space (unit : pixel)\n     * @param {number} altitude - the altitude (z) of the mathematical plane\n     * @return {THREE.Vector3}\n     *\n     * @ignore\n     */\n    this.getWorldPointFromMathPlaneAtScreenXY = (() => {\n        const vector = new THREE.Vector3();\n        return (posXY, altitude) => {\n            vector.set((posXY.x / this.domElement.clientWidth) * 2 - 1, -(posXY.y / this.domElement.clientHeight) * 2 + 1, 0.5);\n            vector.unproject(this.camera);\n            // dir = direction toward the point on the plane\n            const dir = vector.sub(this.camera.position).normalize();\n            // distance from camera to point on the plane\n            const distance = (altitude - this.camera.position.z) / dir.z;\n\n            return this.camera.position.clone().add(dir.multiplyScalar(distance));\n        };\n    })();\n\n    // point under mouse cursor\n    const pointUnderCursor = new THREE.Vector3();\n    /**\n     * Returns the world point (xyz) under the posXY screen point. If geometry\n     * is under the cursor, the point in obtained with\n     * getPickingPositionFromDepth. If no geometry is under the cursor, the\n     * point is obtained with getWorldPointFromMathPlaneAtScreenXY.\n     *\n     * @param {THREE.Vector2} posXY - the mouse position in screen space (unit : pixel)\n     * @return {THREE.Vector3}\n     *\n     * @ignore\n     */\n    this.getWorldPointAtScreenXY = function getWorldPointAtScreenXY(posXY) {\n        this.view.getPickingPositionFromDepth(posXY, pointUnderCursor);\n        // check if there is valid geometry under cursor\n        if (pointUnderCursor) {\n            return pointUnderCursor;\n        } else {\n            // if not, we use the mathematical plane at altitude = groundLevel\n            return this.getWorldPointFromMathPlaneAtScreenXY(posXY, this.groundLevel);\n        }\n    };\n\n    this.updateMousePositionAndDelta = function updateMousePositionAndDelta(event) {\n        mousePosition.set(event.clientX, event.clientY);\n\n        deltaMousePosition.copy(mousePosition).sub(lastMousePosition);\n\n        lastMousePosition.copy(mousePosition);\n    };\n\n    /**\n     * Adds all the input event listeners (activate the controls).\n     *\n     * @ignore\n     */\n    this.addInputListeners = function addInputListeners() {\n        this.domElement.addEventListener('keydown', _handlerOnKeyDown, true);\n        this.domElement.addEventListener('mousedown', _handlerOnMouseDown, false);\n        this.domElement.addEventListener('mouseup', _handlerOnMouseUp, false);\n        this.domElement.addEventListener('mousemove', _handlerOnMouseMove, false);\n        this.domElement.addEventListener('mousewheel', _handlerOnMouseWheel, false);\n        // For firefox\n        this.domElement.addEventListener('MozMousePixelScroll', _handlerOnMouseWheel, false);\n    };\n\n    /**\n     * Removes all the input event listeners (desactivate the controls).\n     *\n     * @ignore\n     */\n    this.removeInputListeners = function removeInputListeners() {\n        this.domElement.removeEventListener('keydown', _handlerOnKeyDown, true);\n        this.domElement.removeEventListener('mousedown', _handlerOnMouseDown, false);\n        this.domElement.removeEventListener('mouseup', _handlerOnMouseUp, false);\n        this.domElement.removeEventListener('mousemove', _handlerOnMouseMove, false);\n        this.domElement.removeEventListener('mousewheel', _handlerOnMouseWheel, false);\n        // For firefox\n        this.domElement.removeEventListener('MozMousePixelScroll', _handlerOnMouseWheel, false);\n    };\n\n    /**\n     * Update the cursor image according to the control state.\n     *\n     * @ignore\n     */\n    this.updateMouseCursorType = function updateMouseCursorType() {\n        switch (this.state) {\n            case STATE.NONE:\n                this.domElement.style.cursor = 'auto';\n                break;\n            case STATE.DRAG:\n                this.domElement.style.cursor = 'move';\n                break;\n            case STATE.PAN:\n                this.domElement.style.cursor = 'cell';\n                break;\n            case STATE.TRAVEL:\n                this.domElement.style.cursor = 'wait';\n                break;\n            case STATE.ROTATE:\n                this.domElement.style.cursor = 'move';\n                break;\n            default:\n                break;\n        }\n    };\n\n    // event listeners for user input (to activate the controls)\n    this.addInputListeners();\n}\n\n/**\n * Catch and manage the event when a touch on the mouse is down.\n * @param {event} event : the current event (mouse left button clicked or mouse wheel button actionned)\n * @ignore\n */\nfunction onMouseDown(event) {\n    event.preventDefault();\n\n    if (this.state === STATE.TRAVEL) {\n        return;\n    }\n\n    this.updateMousePositionAndDelta(event);\n\n    if (event.button === mouseButtons.LEFTCLICK) {\n        if (event.ctrlKey) {\n            this.initiateRotation();\n        } else {\n            this.initiateDrag();\n        }\n    } else if (event.button === mouseButtons.MIDDLECLICK) {\n        this.initiateSmartZoom(event);\n    } else if (event.button === mouseButtons.RIGHTCLICK) {\n        this.initiatePan();\n    }\n\n    this.updateMouseCursorType();\n}\n\n/**\n * Catch the event when a touch on the mouse is uped.\n *\n * @param {Event} event - the current event\n * @ignore\n */\nfunction onMouseUp(event) {\n    event.preventDefault();\n\n    if (this.state !== STATE.TRAVEL) {\n        this.state = STATE.NONE;\n    }\n\n    this.updateMouseCursorType();\n}\n\n/**\n * Catch and manage the event when the mouse is moved.\n *\n * @param {Event} event - the current event\n * @ignore\n */\nfunction onMouseMove(event) {\n    event.preventDefault();\n\n    this.updateMousePositionAndDelta(event);\n\n    // notify change if moving\n    if (this.state !== STATE.NONE) {\n        this.view.notifyChange();\n    }\n}\n\n/**\n * Catch and manage the event when a key is down.\n *\n * @param {Event} event - the current event\n * @ignore\n */\nfunction onKeyDown(event) {\n    if (this.state === STATE.TRAVEL) {\n        return;\n    }\n    if (event.keyCode === keys.T) {\n        this.goToTopView();\n    }\n    if (event.keyCode === keys.Y) {\n        this.goToStartView();\n    }\n    if (event.keyCode === keys.SPACE) {\n        this.initiateSmartZoom(event);\n    }\n}\n\n/**\n * Catch and manage the event when the mouse wheel is rolled.\n *\n * @param {Event} event - the current event\n * @ignore\n */\nfunction onMouseWheel(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (this.state === STATE.NONE) {\n        this.initiateZoom(event);\n    }\n}\n\n/**\n * Catch and manage the event when the context menu is called (by a right click\n * on the window).  We use this to prevent the context menu from appearing, so\n * we can use right click for other inputs.\n *\n * @param {Event} event - the current event\n * @ignore\n */\nfunction onContextMenu(event) {\n    event.preventDefault();\n}\n\n/**\n * Smoothing function (sigmoid) : based on h01 Hermite function.\n *\n * @param {number} value - The value to be smoothed, between 0 and 1\n * @return {number} A value between 0 and 1.\n * @ignore\n */\nfunction smooth(value) {\n    // p between 1.0 and 1.5 (empirical)\n    const p = 1.20;\n    return Math.pow((value * value * (3 - 2 * value)), p);\n}\n\nexport default PlanarControls;\n","function pointIsOverLine(point, linePoints, epsilon, offset, count) {\n    const x0 = point._values[0];\n    const y0 = point._values[1];\n    // for each segment of the line (j is i -1)\n    for (var i = offset + 2, j = offset; i < offset + count; j = i, i += 2) {\n        /* **********************************************************\n            norm     : norm of vector P1P2\n            distance : distance point P0 to line P1P2\n            scalar   : dot product of P1P0 and P1P2 divide by norm, it represents the projection of P0 on the line\n\n            Point is over segment P1P2 if :\n                * if the distance, , is inferior to epsilon\n                * and if :  -epsilon ≤ scalar ≤ (||P1P2|| +  epsilon)\n\n                            + (P0) _\n                            |      |\n                            |      |\n             <---scalar---->|    distance\n                            |      |\n                            |      v\n             +-------------------------------+\n            (P1)                            (P2)\n        *********************************************************** */\n\n        const x1 = linePoints[i];\n        const y1 = linePoints[i + 1];\n        const x2 = linePoints[j];\n        const y2 = linePoints[j + 1];\n\n        const Xp = x0 - x1;\n        const Yp = y0 - y1;\n\n        const x21 = x2 - x1;\n        const y21 = y2 - y1;\n        const norm = Math.sqrt(x21 * x21 + y21 * y21);\n        const scalar = (Xp * x21 + Yp * y21) / norm;\n\n        if (scalar >= -epsilon && scalar <= norm + epsilon) {\n            const distance = Math.abs(y21 * x0 - x21 * y0 + x2 * y1 - y2 * x1) / norm;\n            if (distance <= epsilon) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction getClosestPoint(point, points, epsilon, offset, count) {\n    const x0 = point._values[0];\n    const y0 = point._values[1];\n    let squaredEpsilon = epsilon * epsilon;\n    let closestPoint;\n    for (var i = offset; i < offset + count; i += 2) {\n        const x1 = points[i];\n        const y1 = points[i + 1];\n        const xP = x0 - x1;\n        const yP = y0 - y1;\n        const n = xP * xP + yP * yP;\n        if (n < squaredEpsilon) {\n            closestPoint = [points[i], points[i + 1]];\n            squaredEpsilon = n;\n        }\n    }\n    return closestPoint;\n}\n\nfunction pointIsInsidePolygon(point, polygonPoints, offset, count) {\n    // ray-casting algorithm based on\n    // http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\n\n    const x = point._values[0];\n    const y = point._values[1];\n\n    let inside = false;\n    // in first j is last point of polygon\n    // for each segment of the polygon (j is i -1)\n    // debugger;\n    for (let i = offset, j = offset + count - 2; i < offset + count; j = i, i += 2) {\n        const xi = polygonPoints[i];\n        const yi = polygonPoints[i + 1];\n        const xj = polygonPoints[j];\n        const yj = polygonPoints[j + 1];\n\n        // isIntersect semi-infinite ray horizontally with polygon's edge\n        const isIntersect = ((yi > y) != (yj > y))\n            && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n        if (isIntersect) {\n            inside = !inside;\n        }\n    }\n\n    return inside;\n}\n\nfunction isFeatureSingleGeometryUnderCoordinate(coordinate, type, coordinates, epsilon, offset, count) {\n    if ((type == 'linestring' || type == 'multilinestring') && pointIsOverLine(coordinate, coordinates, epsilon, offset, count)) {\n        return true;\n    } else if ((type == 'polygon' || type == 'multipolygon') && pointIsInsidePolygon(coordinate, coordinates, offset, count)) {\n        return true;\n    } else if (type == 'point' || type == 'multipoint') {\n        // debugger;\n        const closestPoint = getClosestPoint(coordinate, coordinates, epsilon, offset, count);\n        if (closestPoint) {\n            return { coordinates: closestPoint };\n        }\n    }\n}\n\nfunction isFeatureUnderCoordinate(coordinate, feature, epsilon, result) {\n    const featCoord = coordinate.as(feature.crs);\n    for (const geometry of feature.geometry) {\n        if (geometry.extent == undefined || geometry.extent.isPointInside(featCoord, epsilon)) {\n            const offset = geometry.indices[0].offset * 2;\n            const count = geometry.indices[0].count * 2;\n            const under = isFeatureSingleGeometryUnderCoordinate(featCoord, feature.type, feature.vertices, epsilon, offset, count);\n            if (under) {\n                result.push({\n                    type: feature.type,\n                    geometry,\n                    coordinates: under.coordinates /* || coordinates */,\n                });\n            }\n        }\n    }\n}\n\nexport default {\n    /**\n     * Filter from a list of features, features that are under a coordinate.\n     *\n     * @param {Coordinates} coordinate - The coordinate for the filter\n     * condition.\n     * @param {Feature|FeatureCollection} features - A single feature or a\n     * collection of them, to filter given the previous coordinate.\n     * @param {number} [epsilon=0.1] Tolerance around the coordinate (in\n     * coordinate's unit).\n     *\n     * @return {Feature[]} Array of filtered features.\n     */\n    filterFeaturesUnderCoordinate(coordinate, features, epsilon = 0.1) {\n        const result = [];\n\n        // We can take this shortcut because either Feature and\n        // FeatureCollection have an extent property\n        if (features.extent && !features.extent.isPointInside(coordinate, epsilon)) {\n            return result;\n        }\n        if (Array.isArray(features.features)) {\n            for (const feature of features.features) {\n                if (feature.extent && !feature.extent.isPointInside(coordinate, epsilon)) {\n                    continue;\n                }\n\n                isFeatureUnderCoordinate(coordinate, feature, epsilon, result);\n            }\n        } else if (features.geometry) {\n            isFeatureUnderCoordinate(coordinate, features, epsilon, result);\n        }\n\n        return result;\n    },\n};\n","import * as THREE from 'three';\n\n/** @module OrientationUtils */\n\nconst DEG2RAD = THREE.Math.DEG2RAD;\n\n// The transform from world to local is  RotationZ(heading).RotationX(pitch).RotationY(roll)\n// The transform from local to world is (RotationZ(heading).RotationX(pitch).RotationY(roll)).transpose()\nfunction quaternionFromRollPitchHeading(roll = 0, pitch = 0, heading = 0, target) {\n    roll *= DEG2RAD;\n    pitch *= DEG2RAD;\n    heading *= DEG2RAD;\n    // return this.setFromEuler(new THREE.Euler(pitch, roll, heading , 'ZXY')).conjugate();\n    return target.setFromEuler(new THREE.Euler(-pitch, -roll, -heading, 'YXZ')); // optimized version of above\n}\n\n// From DocMicMac, the transform from local to world is:\n// RotationX(omega).RotationY(phi).RotationZ(kappa).RotationX(PI)\n// RotationX(PI) = Scale(1, -1, -1) converts between the 2 conventions for the camera local frame:\n//  X right, Y bottom, Z front : convention in webGL, threejs and computer vision\n//  X right, Y top,    Z back  : convention in photogrammetry\nfunction quaternionFromOmegaPhiKappa(omega = 0, phi = 0, kappa = 0, target) {\n    omega *= DEG2RAD;\n    phi *= DEG2RAD;\n    kappa *= DEG2RAD;\n    target.setFromEuler(new THREE.Euler(omega, phi, kappa, 'XYZ'));\n    // target.setFromRotationMatrix(new THREE.Matrix4().makeRotationFromQuaternion(target).scale(new THREE.Vector3(1, -1, -1)));\n    target.set(target.w, target.z, -target.y, -target.x); // optimized version of above\n    return target;\n}\n\n// Set East North Up Orientation from geodesic normal\n// target - the quaternion to set\n// up - the normalized geodetic normal to the ellipsoid (given by Coordinates.geodeticNormal)\nvar quaternionENUFromGeodesicNormal = (() => {\n    const matrix = new THREE.Matrix4();\n    const elements = matrix.elements;\n    const north = new THREE.Vector3();\n    const east = new THREE.Vector3();\n    return function setENUFromGeodesicNormal(up, target = new THREE.Quaternion()) {\n        // this is an optimized version of matrix.lookAt(up, new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, 0, 1));\n        east.set(-up.y, up.x, 0);\n        east.normalize();\n        north.crossVectors(up, east);\n        elements[0] = east.x; elements[4] = north.x; elements[8] = up.x;\n        elements[1] = east.y; elements[5] = north.y; elements[9] = up.y;\n        elements[2] = east.z; elements[6] = north.z; elements[10] = up.z;\n        return target.setFromRotationMatrix(matrix);\n    };\n})();\n\n/**\n *\n * @typedef Attitude\n * @type {Object}\n *\n * @property {Number} omega - angle in degrees\n * @property {Number} phi - angle in degrees\n * @property {Number} kappa - angle in degrees\n * @property {Number} roll - angle in degrees\n * @property {Number} pitch - angle in degrees\n * @property {Number} heading - angle in degrees\n */\n\n\nconst ENUQuat = new THREE.Quaternion();\n\nexport default {\n\n    /**\n     * @function localQuaternionFromAttitude\n     * @param {Attitude} attitude - [Attitude]{@link module:OrientationParser~Attitude}\n     * with properties: (omega, phi, kappa), (roll, pitch, heading) or none.\n     * Note that convergence of the meridians is not taken into account.\n     * @param {THREE.Quaternion} target Quaternion to set\n     * @returns {THREE.Quaternion} Quaternion representing the rotation\n     */\n    localQuaternionFromAttitude(attitude, target = new THREE.Quaternion()) {\n        if ((attitude.roll !== undefined) || (attitude.pitch !== undefined) || (attitude.heading !== undefined)) {\n            return quaternionFromRollPitchHeading(attitude.roll, attitude.pitch, attitude.heading, target);\n        }\n        if ((attitude.omega !== undefined) || (attitude.phi !== undefined) || (attitude.kappa !== undefined)) {\n            return quaternionFromOmegaPhiKappa(attitude.omega, attitude.phi, attitude.kappa, target);\n        }\n        return target.set(0, 0, 0, 1);\n    },\n\n    /**\n     * @function globeQuaternionFromAttitude\n     * @param {Attitude} attitude - [Attitude]{@link module:OrientationParser~Attitude}\n     * with properties: (omega, phi, kappa), (roll, pitch, heading) or none.\n     * @param {Coordinates} coordinate position on the globe\n     * @param {THREE.Quaternion} target Quaternion to set\n     * @returns {THREE.Quaternion} Quaternion representing the rotation\n     */\n    globeQuaternionFromAttitude(attitude, coordinate, target = new THREE.Quaternion()) {\n        quaternionENUFromGeodesicNormal(coordinate.geodesicNormal, ENUQuat);\n        this.localQuaternionFromAttitude(attitude, target);\n        target.premultiply(ENUQuat);\n        return target;\n    },\n\n    /** Read rotation information (roll pitch heading or omega phi kappa),\n     * Create a ThreeJs quaternion representing a rotation.\n     *\n     * @function quaternionFromAttitude\n     * @param {Attitude} attitude - [Attitude]{@link module:OrientationParser~Attitude}\n     * @param {Coordinates} coordinate position the oject (used to apply another rotation on Globe CRS)\n     * @param {Boolean} needsENUFromGeodesicNormal should be true on globe CRS.\n     * If true, we will apply another rotation : The rotation use to create ENU local space at coordinate parameter position.\n     * @param {THREE.Quaternion} target Quaternion to set\n     * @returns {THREE.Quaternion} Quaternion representing the rotation\n     */\n    quaternionFromAttitude(attitude, coordinate, needsENUFromGeodesicNormal, target = new THREE.Quaternion()) {\n        if (needsENUFromGeodesicNormal) {\n            return this.globeQuaternionFromAttitude(attitude, coordinate, target);\n        } else {\n            return this.localQuaternionFromAttitude(attitude, target);\n        }\n    },\n};\n","import * as THREE from 'three';\n\nimport pitUV from './Chunk/pitUV.glsl';\nimport precision_qualifier from './Chunk/precision_qualifier.glsl';\n\nconst ShaderChunk = {\n    pitUV,\n    precision_qualifier,\n};\n\n/**\n * Install chunks in a target, for example THREE.ShaderChunk, with adding an\n * optional path.\n *\n * @param {Object} target - The target to install the chunks into.\n * @param {Object} chunks - The chunks to install. The key of each chunk will be\n * the name of installation of the chunk in the target (plus an optional path).\n * @param {string} [path] - A path to add before a chunk name as a prefix.\n *\n * @return {Object} The target with installed chunks.\n */\nShaderChunk.install = function install(target, chunks, path) {\n    if (!path) { return Object.assign(target, this); }\n    Object.keys(chunks).forEach((key) => {\n        if (key == 'install') { return; }\n        target[path + key] = chunks[key];\n    });\n\n    return target;\n};\n\n// Install all default shaders under the itowns\nShaderChunk.install(THREE.ShaderChunk, ShaderChunk, 'itowns/');\n\nexport default ShaderChunk;\n","import * as THREE from 'three';\n\nexport { THREE };\nexport { default as proj4 } from 'proj4';\n\nexport * from './Main.js';\n\n"],"sourceRoot":""}